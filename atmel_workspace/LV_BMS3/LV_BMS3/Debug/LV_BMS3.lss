
LV_BMS3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000624c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000160  20000000  0000624c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000248  20000160  000063ac  00020160  2**2
                  ALLOC
  3 .stack        00002000  200003a8  000065f4  00020160  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020160  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020188  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002f11b  00000000  00000000  000201e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004142  00000000  00000000  0004f2fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0001148f  00000000  00000000  0005343e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000ef0  00000000  00000000  000648cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000014c0  00000000  00000000  000657bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00022717  00000000  00000000  00066c7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00018462  00000000  00000000  00089394  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0009fd08  00000000  00000000  000a17f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002fd8  00000000  00000000  00141500  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	a8 23 00 20 2d 01 00 00 29 01 00 00 29 01 00 00     .#. -...)...)...
	...
      2c:	29 01 00 00 00 00 00 00 00 00 00 00 29 01 00 00     )...........)...
      3c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      4c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      5c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      6c:	29 01 00 00 29 01 00 00 fd 14 00 00 29 01 00 00     )...).......)...
      7c:	c5 10 00 00 29 01 00 00 29 01 00 00 29 01 00 00     ....)...)...)...
      8c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      9c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      ac:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...

000000bc <__do_global_dtors_aux>:
      bc:	b510      	push	{r4, lr}
      be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
      c0:	7823      	ldrb	r3, [r4, #0]
      c2:	2b00      	cmp	r3, #0
      c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
      c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
      c8:	2b00      	cmp	r3, #0
      ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
      cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
      ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
      d0:	bf00      	nop
      d2:	2301      	movs	r3, #1
      d4:	7023      	strb	r3, [r4, #0]
      d6:	bd10      	pop	{r4, pc}
      d8:	20000160 	.word	0x20000160
      dc:	00000000 	.word	0x00000000
      e0:	0000624c 	.word	0x0000624c

000000e4 <frame_dummy>:
      e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
      e6:	b510      	push	{r4, lr}
      e8:	2b00      	cmp	r3, #0
      ea:	d003      	beq.n	f4 <frame_dummy+0x10>
      ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
      ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
      f0:	e000      	b.n	f4 <frame_dummy+0x10>
      f2:	bf00      	nop
      f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
      f6:	6803      	ldr	r3, [r0, #0]
      f8:	2b00      	cmp	r3, #0
      fa:	d100      	bne.n	fe <frame_dummy+0x1a>
      fc:	bd10      	pop	{r4, pc}
      fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
     100:	2b00      	cmp	r3, #0
     102:	d0fb      	beq.n	fc <frame_dummy+0x18>
     104:	4798      	blx	r3
     106:	e7f9      	b.n	fc <frame_dummy+0x18>
     108:	00000000 	.word	0x00000000
     10c:	20000164 	.word	0x20000164
     110:	0000624c 	.word	0x0000624c
     114:	0000624c 	.word	0x0000624c
     118:	00000000 	.word	0x00000000

0000011c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     11c:	b510      	push	{r4, lr}
	system_init();
     11e:	4b01      	ldr	r3, [pc, #4]	; (124 <atmel_start_init+0x8>)
     120:	4798      	blx	r3
}
     122:	bd10      	pop	{r4, pc}
     124:	00000495 	.word	0x00000495

00000128 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     128:	e7fe      	b.n	128 <Dummy_Handler>
	...

0000012c <Reset_Handler>:
{
     12c:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     12e:	4a17      	ldr	r2, [pc, #92]	; (18c <Reset_Handler+0x60>)
     130:	4b17      	ldr	r3, [pc, #92]	; (190 <Reset_Handler+0x64>)
     132:	429a      	cmp	r2, r3
     134:	d011      	beq.n	15a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     136:	001a      	movs	r2, r3
     138:	4b16      	ldr	r3, [pc, #88]	; (194 <Reset_Handler+0x68>)
     13a:	429a      	cmp	r2, r3
     13c:	d20d      	bcs.n	15a <Reset_Handler+0x2e>
     13e:	4a16      	ldr	r2, [pc, #88]	; (198 <Reset_Handler+0x6c>)
     140:	3303      	adds	r3, #3
     142:	1a9b      	subs	r3, r3, r2
     144:	089b      	lsrs	r3, r3, #2
     146:	3301      	adds	r3, #1
     148:	009b      	lsls	r3, r3, #2
     14a:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     14c:	4810      	ldr	r0, [pc, #64]	; (190 <Reset_Handler+0x64>)
     14e:	490f      	ldr	r1, [pc, #60]	; (18c <Reset_Handler+0x60>)
     150:	588c      	ldr	r4, [r1, r2]
     152:	5084      	str	r4, [r0, r2]
     154:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     156:	429a      	cmp	r2, r3
     158:	d1fa      	bne.n	150 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     15a:	4a10      	ldr	r2, [pc, #64]	; (19c <Reset_Handler+0x70>)
     15c:	4b10      	ldr	r3, [pc, #64]	; (1a0 <Reset_Handler+0x74>)
     15e:	429a      	cmp	r2, r3
     160:	d20a      	bcs.n	178 <Reset_Handler+0x4c>
     162:	43d3      	mvns	r3, r2
     164:	490e      	ldr	r1, [pc, #56]	; (1a0 <Reset_Handler+0x74>)
     166:	185b      	adds	r3, r3, r1
     168:	2103      	movs	r1, #3
     16a:	438b      	bics	r3, r1
     16c:	3304      	adds	r3, #4
     16e:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     170:	2100      	movs	r1, #0
     172:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     174:	4293      	cmp	r3, r2
     176:	d1fc      	bne.n	172 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     178:	4a0a      	ldr	r2, [pc, #40]	; (1a4 <Reset_Handler+0x78>)
     17a:	21ff      	movs	r1, #255	; 0xff
     17c:	4b0a      	ldr	r3, [pc, #40]	; (1a8 <Reset_Handler+0x7c>)
     17e:	438b      	bics	r3, r1
     180:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     182:	4b0a      	ldr	r3, [pc, #40]	; (1ac <Reset_Handler+0x80>)
     184:	4798      	blx	r3
        main();
     186:	4b0a      	ldr	r3, [pc, #40]	; (1b0 <Reset_Handler+0x84>)
     188:	4798      	blx	r3
     18a:	e7fe      	b.n	18a <Reset_Handler+0x5e>
     18c:	0000624c 	.word	0x0000624c
     190:	20000000 	.word	0x20000000
     194:	20000160 	.word	0x20000160
     198:	20000004 	.word	0x20000004
     19c:	20000160 	.word	0x20000160
     1a0:	200003a8 	.word	0x200003a8
     1a4:	e000ed00 	.word	0xe000ed00
     1a8:	00000000 	.word	0x00000000
     1ac:	00003f0d 	.word	0x00003f0d
     1b0:	00001859 	.word	0x00001859

000001b4 <ADC_0_PORT_init>:
struct adc_sync_descriptor ADC_0;

struct temp_sync_descriptor TEMPERATURE_SENSOR_0;

void ADC_0_PORT_init(void)
{
     1b4:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = ~data;
}

static inline void hri_port_clear_DIR_reg(const void *const hw, uint8_t submodule_index, hri_port_dir_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     1b6:	2204      	movs	r2, #4
     1b8:	23c0      	movs	r3, #192	; 0xc0
     1ba:	05db      	lsls	r3, r3, #23
     1bc:	605a      	str	r2, [r3, #4]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     1be:	2182      	movs	r1, #130	; 0x82
     1c0:	05c9      	lsls	r1, r1, #23
     1c2:	4b0a      	ldr	r3, [pc, #40]	; (1ec <ADC_0_PORT_init+0x38>)
     1c4:	628b      	str	r3, [r1, #40]	; 0x28
     1c6:	23c0      	movs	r3, #192	; 0xc0
     1c8:	061b      	lsls	r3, r3, #24
     1ca:	628b      	str	r3, [r1, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     1cc:	2342      	movs	r3, #66	; 0x42
     1ce:	5cca      	ldrb	r2, [r1, r3]
	tmp &= ~PORT_PINCFG_PMUXEN;
     1d0:	2001      	movs	r0, #1
     1d2:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     1d4:	4302      	orrs	r2, r0
     1d6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     1d8:	54ca      	strb	r2, [r1, r3]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     1da:	2231      	movs	r2, #49	; 0x31
     1dc:	5c8b      	ldrb	r3, [r1, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     1de:	240f      	movs	r4, #15
     1e0:	43a3      	bics	r3, r4
	tmp |= PORT_PMUX_PMUXE(data);
     1e2:	4303      	orrs	r3, r0
     1e4:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     1e6:	548b      	strb	r3, [r1, r2]

	// Disable digital pin circuitry
	gpio_set_pin_direction(v_sense, GPIO_DIRECTION_OFF);

	gpio_set_pin_function(v_sense, PINMUX_PA02B_ADC0_AIN0);
}
     1e8:	bd10      	pop	{r4, pc}
     1ea:	46c0      	nop			; (mov r8, r8)
     1ec:	40000004 	.word	0x40000004

000001f0 <ADC_0_CLOCK_init>:
}

static inline void hri_mclk_set_APBCMASK_ADC0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_ADC0;
     1f0:	4a05      	ldr	r2, [pc, #20]	; (208 <ADC_0_CLOCK_init+0x18>)
     1f2:	69d1      	ldr	r1, [r2, #28]
     1f4:	2380      	movs	r3, #128	; 0x80
     1f6:	029b      	lsls	r3, r3, #10
     1f8:	430b      	orrs	r3, r1
     1fa:	61d3      	str	r3, [r2, #28]
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     1fc:	2141      	movs	r1, #65	; 0x41
     1fe:	2382      	movs	r3, #130	; 0x82
     200:	005b      	lsls	r3, r3, #1
     202:	4a02      	ldr	r2, [pc, #8]	; (20c <ADC_0_CLOCK_init+0x1c>)
     204:	50d1      	str	r1, [r2, r3]

void ADC_0_CLOCK_init(void)
{
	hri_mclk_set_APBCMASK_ADC0_bit(MCLK);
	hri_gclk_write_PCHCTRL_reg(GCLK, ADC0_GCLK_ID, CONF_GCLK_ADC0_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
}
     206:	4770      	bx	lr
     208:	40000800 	.word	0x40000800
     20c:	40001c00 	.word	0x40001c00

00000210 <ADC_0_init>:

void ADC_0_init(void)
{
     210:	b510      	push	{r4, lr}
	ADC_0_CLOCK_init();
     212:	4b06      	ldr	r3, [pc, #24]	; (22c <ADC_0_init+0x1c>)
     214:	4798      	blx	r3
	ADC_0_PORT_init();
     216:	4b06      	ldr	r3, [pc, #24]	; (230 <ADC_0_init+0x20>)
     218:	4798      	blx	r3
	adc_sync_init(&ADC_0, ADC0, _adc_get_adc_sync());
     21a:	4b06      	ldr	r3, [pc, #24]	; (234 <ADC_0_init+0x24>)
     21c:	4798      	blx	r3
     21e:	0002      	movs	r2, r0
     220:	4905      	ldr	r1, [pc, #20]	; (238 <ADC_0_init+0x28>)
     222:	4806      	ldr	r0, [pc, #24]	; (23c <ADC_0_init+0x2c>)
     224:	4b06      	ldr	r3, [pc, #24]	; (240 <ADC_0_init+0x30>)
     226:	4798      	blx	r3
}
     228:	bd10      	pop	{r4, pc}
     22a:	46c0      	nop			; (mov r8, r8)
     22c:	000001f1 	.word	0x000001f1
     230:	000001b5 	.word	0x000001b5
     234:	00000faf 	.word	0x00000faf
     238:	42004400 	.word	0x42004400
     23c:	200002f4 	.word	0x200002f4
     240:	000005d5 	.word	0x000005d5

00000244 <SPI_0_PORT_init>:

void SPI_0_PORT_init(void)
{
     244:	b5f0      	push	{r4, r5, r6, r7, lr}
     246:	46c6      	mov	lr, r8
     248:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     24a:	24c0      	movs	r4, #192	; 0xc0
     24c:	05e4      	lsls	r4, r4, #23
     24e:	2380      	movs	r3, #128	; 0x80
     250:	005b      	lsls	r3, r3, #1
     252:	6063      	str	r3, [r4, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     254:	2382      	movs	r3, #130	; 0x82
     256:	05db      	lsls	r3, r3, #23
     258:	4a23      	ldr	r2, [pc, #140]	; (2e8 <SPI_0_PORT_init+0xa4>)
     25a:	629a      	str	r2, [r3, #40]	; 0x28
     25c:	4a23      	ldr	r2, [pc, #140]	; (2ec <SPI_0_PORT_init+0xa8>)
     25e:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     260:	2148      	movs	r1, #72	; 0x48
     262:	5c5a      	ldrb	r2, [r3, r1]
     264:	2004      	movs	r0, #4
     266:	4382      	bics	r2, r0
     268:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     26a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     26c:	2601      	movs	r6, #1
     26e:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     270:	2501      	movs	r5, #1
     272:	432a      	orrs	r2, r5
     274:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     276:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     278:	3914      	subs	r1, #20
     27a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     27c:	300b      	adds	r0, #11
     27e:	4684      	mov	ip, r0
     280:	4382      	bics	r2, r0
	tmp |= PORT_PMUX_PMUXE(data);
     282:	2703      	movs	r7, #3
     284:	433a      	orrs	r2, r7
     286:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     288:	545a      	strb	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     28a:	2280      	movs	r2, #128	; 0x80
     28c:	00d2      	lsls	r2, r2, #3
     28e:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     290:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     292:	4a17      	ldr	r2, [pc, #92]	; (2f0 <SPI_0_PORT_init+0xac>)
     294:	629a      	str	r2, [r3, #40]	; 0x28
     296:	22c0      	movs	r2, #192	; 0xc0
     298:	0612      	lsls	r2, r2, #24
     29a:	4690      	mov	r8, r2
     29c:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     29e:	3116      	adds	r1, #22
     2a0:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2a2:	43b0      	bics	r0, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2a4:	4328      	orrs	r0, r5
     2a6:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2a8:	5458      	strb	r0, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2aa:	2035      	movs	r0, #53	; 0x35
     2ac:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     2ae:	4662      	mov	r2, ip
     2b0:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     2b2:	4339      	orrs	r1, r7
     2b4:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2b6:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     2b8:	2180      	movs	r1, #128	; 0x80
     2ba:	0109      	lsls	r1, r1, #4
     2bc:	6161      	str	r1, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     2be:	60a1      	str	r1, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     2c0:	490c      	ldr	r1, [pc, #48]	; (2f4 <SPI_0_PORT_init+0xb0>)
     2c2:	6299      	str	r1, [r3, #40]	; 0x28
     2c4:	4642      	mov	r2, r8
     2c6:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2c8:	214b      	movs	r1, #75	; 0x4b
     2ca:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2cc:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2ce:	432a      	orrs	r2, r5
     2d0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2d2:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2d4:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     2d6:	393c      	subs	r1, #60	; 0x3c
     2d8:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     2da:	3121      	adds	r1, #33	; 0x21
     2dc:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2de:	541a      	strb	r2, [r3, r0]

	// Set pin direction to output
	gpio_set_pin_direction(spi_sck, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(spi_sck, PINMUX_PA11D_SERCOM2_PAD3);
}
     2e0:	bc04      	pop	{r2}
     2e2:	4690      	mov	r8, r2
     2e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	40020100 	.word	0x40020100
     2ec:	c0020000 	.word	0xc0020000
     2f0:	40000400 	.word	0x40000400
     2f4:	40000800 	.word	0x40000800

000002f8 <SPI_0_CLOCK_init>:
     2f8:	4b05      	ldr	r3, [pc, #20]	; (310 <SPI_0_CLOCK_init+0x18>)
     2fa:	2241      	movs	r2, #65	; 0x41
     2fc:	21d4      	movs	r1, #212	; 0xd4
     2fe:	505a      	str	r2, [r3, r1]
     300:	390c      	subs	r1, #12
     302:	505a      	str	r2, [r3, r1]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM2;
     304:	4a03      	ldr	r2, [pc, #12]	; (314 <SPI_0_CLOCK_init+0x1c>)
     306:	69d3      	ldr	r3, [r2, #28]
     308:	39c0      	subs	r1, #192	; 0xc0
     30a:	430b      	orrs	r3, r1
     30c:	61d3      	str	r3, [r2, #28]
void SPI_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM2_GCLK_ID_CORE, CONF_GCLK_SERCOM2_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM2_GCLK_ID_SLOW, CONF_GCLK_SERCOM2_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM2_bit(MCLK);
}
     30e:	4770      	bx	lr
     310:	40001c00 	.word	0x40001c00
     314:	40000800 	.word	0x40000800

00000318 <SPI_0_init>:

void SPI_0_init(void)
{
     318:	b510      	push	{r4, lr}
	SPI_0_CLOCK_init();
     31a:	4b04      	ldr	r3, [pc, #16]	; (32c <SPI_0_init+0x14>)
     31c:	4798      	blx	r3
	spi_m_sync_init(&SPI_0, SERCOM2);
     31e:	4904      	ldr	r1, [pc, #16]	; (330 <SPI_0_init+0x18>)
     320:	4804      	ldr	r0, [pc, #16]	; (334 <SPI_0_init+0x1c>)
     322:	4b05      	ldr	r3, [pc, #20]	; (338 <SPI_0_init+0x20>)
     324:	4798      	blx	r3
	SPI_0_PORT_init();
     326:	4b05      	ldr	r3, [pc, #20]	; (33c <SPI_0_init+0x24>)
     328:	4798      	blx	r3
}
     32a:	bd10      	pop	{r4, pc}
     32c:	000002f9 	.word	0x000002f9
     330:	42000c00 	.word	0x42000c00
     334:	200002f8 	.word	0x200002f8
     338:	0000080d 	.word	0x0000080d
     33c:	00000245 	.word	0x00000245

00000340 <USART_0_CLOCK_init>:
     340:	4b05      	ldr	r3, [pc, #20]	; (358 <USART_0_CLOCK_init+0x18>)
     342:	2241      	movs	r2, #65	; 0x41
     344:	21dc      	movs	r1, #220	; 0xdc
     346:	505a      	str	r2, [r3, r1]
     348:	3914      	subs	r1, #20
     34a:	505a      	str	r2, [r3, r1]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM4;
     34c:	4a03      	ldr	r2, [pc, #12]	; (35c <USART_0_CLOCK_init+0x1c>)
     34e:	69d3      	ldr	r3, [r2, #28]
     350:	39a8      	subs	r1, #168	; 0xa8
     352:	430b      	orrs	r3, r1
     354:	61d3      	str	r3, [r2, #28]
{

	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM4_GCLK_ID_CORE, CONF_GCLK_SERCOM4_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM4_GCLK_ID_SLOW, CONF_GCLK_SERCOM4_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM4_bit(MCLK);
}
     356:	4770      	bx	lr
     358:	40001c00 	.word	0x40001c00
     35c:	40000800 	.word	0x40000800

00000360 <USART_0_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void USART_0_PORT_init()
{
     360:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     362:	2382      	movs	r3, #130	; 0x82
     364:	05db      	lsls	r3, r3, #23
     366:	22c8      	movs	r2, #200	; 0xc8
     368:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     36a:	2501      	movs	r5, #1
     36c:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     36e:	2401      	movs	r4, #1
     370:	4321      	orrs	r1, r4
     372:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     374:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     376:	20b4      	movs	r0, #180	; 0xb4
     378:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     37a:	3ab9      	subs	r2, #185	; 0xb9
     37c:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     37e:	3a0c      	subs	r2, #12
     380:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     382:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     384:	21c9      	movs	r1, #201	; 0xc9
     386:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     388:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     38a:	4322      	orrs	r2, r4
     38c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     38e:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     390:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     392:	39ba      	subs	r1, #186	; 0xba
     394:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     396:	3121      	adds	r1, #33	; 0x21
     398:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     39a:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(usb_tx, PINMUX_PB08D_SERCOM4_PAD0);

	gpio_set_pin_function(usb_rx, PINMUX_PB09D_SERCOM4_PAD1);
}
     39c:	bd30      	pop	{r4, r5, pc}
	...

000003a0 <USART_0_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void USART_0_init(void)
{
     3a0:	b510      	push	{r4, lr}
     3a2:	b082      	sub	sp, #8
	USART_0_CLOCK_init();
     3a4:	4b06      	ldr	r3, [pc, #24]	; (3c0 <USART_0_init+0x20>)
     3a6:	4798      	blx	r3
	usart_async_init(&USART_0, SERCOM4, USART_0_buffer, USART_0_BUFFER_SIZE, (void *)NULL);
     3a8:	2300      	movs	r3, #0
     3aa:	9300      	str	r3, [sp, #0]
     3ac:	3310      	adds	r3, #16
     3ae:	4a05      	ldr	r2, [pc, #20]	; (3c4 <USART_0_init+0x24>)
     3b0:	4905      	ldr	r1, [pc, #20]	; (3c8 <USART_0_init+0x28>)
     3b2:	4806      	ldr	r0, [pc, #24]	; (3cc <USART_0_init+0x2c>)
     3b4:	4c06      	ldr	r4, [pc, #24]	; (3d0 <USART_0_init+0x30>)
     3b6:	47a0      	blx	r4
	USART_0_PORT_init();
     3b8:	4b06      	ldr	r3, [pc, #24]	; (3d4 <USART_0_init+0x34>)
     3ba:	4798      	blx	r3
}
     3bc:	b002      	add	sp, #8
     3be:	bd10      	pop	{r4, pc}
     3c0:	00000341 	.word	0x00000341
     3c4:	2000017c 	.word	0x2000017c
     3c8:	42001400 	.word	0x42001400
     3cc:	20000310 	.word	0x20000310
     3d0:	00000b71 	.word	0x00000b71
     3d4:	00000361 	.word	0x00000361

000003d8 <CAN_0_PORT_init>:

void CAN_0_PORT_init(void)
{
     3d8:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3da:	2382      	movs	r3, #130	; 0x82
     3dc:	05db      	lsls	r3, r3, #23
     3de:	2259      	movs	r2, #89	; 0x59
     3e0:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3e2:	2501      	movs	r5, #1
     3e4:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3e6:	2401      	movs	r4, #1
     3e8:	4321      	orrs	r1, r4
     3ea:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3ec:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ee:	203c      	movs	r0, #60	; 0x3c
     3f0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     3f2:	3a4a      	subs	r2, #74	; 0x4a
     3f4:	4011      	ands	r1, r2
	tmp |= PORT_PMUX_PMUXO(data);
     3f6:	3251      	adds	r2, #81	; 0x51
     3f8:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3fa:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3fc:	2158      	movs	r1, #88	; 0x58
     3fe:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     400:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     402:	4322      	orrs	r2, r4
     404:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     406:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     408:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     40a:	3949      	subs	r1, #73	; 0x49
     40c:	438a      	bics	r2, r1
	tmp |= PORT_PMUX_PMUXE(data);
     40e:	3909      	subs	r1, #9
     410:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     412:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(can_rx, PINMUX_PA25G_CAN0_RX);

	gpio_set_pin_function(can_tx, PINMUX_PA24G_CAN0_TX);
}
     414:	bd30      	pop	{r4, r5, pc}
	...

00000418 <CAN_0_init>:
 * \brief CAN initialization function
 *
 * Enables CAN peripheral, clocks and initializes CAN driver
 */
void CAN_0_init(void)
{
     418:	b510      	push	{r4, lr}
	((Mclk *)hw)->AHBMASK.reg |= MCLK_AHBMASK_CAN0;
     41a:	4a08      	ldr	r2, [pc, #32]	; (43c <CAN_0_init+0x24>)
     41c:	6911      	ldr	r1, [r2, #16]
     41e:	2380      	movs	r3, #128	; 0x80
     420:	005b      	lsls	r3, r3, #1
     422:	430b      	orrs	r3, r1
     424:	6113      	str	r3, [r2, #16]
     426:	2141      	movs	r1, #65	; 0x41
     428:	23e8      	movs	r3, #232	; 0xe8
     42a:	4a05      	ldr	r2, [pc, #20]	; (440 <CAN_0_init+0x28>)
     42c:	50d1      	str	r1, [r2, r3]
	hri_mclk_set_AHBMASK_CAN0_bit(MCLK);
	hri_gclk_write_PCHCTRL_reg(GCLK, CAN0_GCLK_ID, CONF_GCLK_CAN0_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	can_async_init(&CAN_0, CAN0);
     42e:	4905      	ldr	r1, [pc, #20]	; (444 <CAN_0_init+0x2c>)
     430:	4805      	ldr	r0, [pc, #20]	; (448 <CAN_0_init+0x30>)
     432:	4b06      	ldr	r3, [pc, #24]	; (44c <CAN_0_init+0x34>)
     434:	4798      	blx	r3
	CAN_0_PORT_init();
     436:	4b06      	ldr	r3, [pc, #24]	; (450 <CAN_0_init+0x38>)
     438:	4798      	blx	r3
}
     43a:	bd10      	pop	{r4, pc}
     43c:	40000800 	.word	0x40000800
     440:	40001c00 	.word	0x40001c00
     444:	42001c00 	.word	0x42001c00
     448:	200002c8 	.word	0x200002c8
     44c:	00000735 	.word	0x00000735
     450:	000003d9 	.word	0x000003d9

00000454 <TEMPERATURE_SENSOR_0_CLOCK_init>:
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_TSENS;
     454:	4a05      	ldr	r2, [pc, #20]	; (46c <TEMPERATURE_SENSOR_0_CLOCK_init+0x18>)
     456:	6951      	ldr	r1, [r2, #20]
     458:	2380      	movs	r3, #128	; 0x80
     45a:	015b      	lsls	r3, r3, #5
     45c:	430b      	orrs	r3, r1
     45e:	6153      	str	r3, [r2, #20]
     460:	2141      	movs	r1, #65	; 0x41
     462:	2394      	movs	r3, #148	; 0x94
     464:	4a02      	ldr	r2, [pc, #8]	; (470 <TEMPERATURE_SENSOR_0_CLOCK_init+0x1c>)
     466:	50d1      	str	r1, [r2, r3]
void TEMPERATURE_SENSOR_0_CLOCK_init(void)
{
	hri_mclk_set_APBAMASK_TSENS_bit(MCLK);

	hri_gclk_write_PCHCTRL_reg(GCLK, TSENS_GCLK_ID, CONF_GCLK_TSENS_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
}
     468:	4770      	bx	lr
     46a:	46c0      	nop			; (mov r8, r8)
     46c:	40000800 	.word	0x40000800
     470:	40001c00 	.word	0x40001c00

00000474 <TEMPERATURE_SENSOR_0_init>:

void TEMPERATURE_SENSOR_0_init(void)
{
     474:	b510      	push	{r4, lr}
	TEMPERATURE_SENSOR_0_CLOCK_init();
     476:	4b03      	ldr	r3, [pc, #12]	; (484 <TEMPERATURE_SENSOR_0_init+0x10>)
     478:	4798      	blx	r3
	temp_sync_init(&TEMPERATURE_SENSOR_0, TSENS);
     47a:	4903      	ldr	r1, [pc, #12]	; (488 <TEMPERATURE_SENSOR_0_init+0x14>)
     47c:	4803      	ldr	r0, [pc, #12]	; (48c <TEMPERATURE_SENSOR_0_init+0x18>)
     47e:	4b04      	ldr	r3, [pc, #16]	; (490 <TEMPERATURE_SENSOR_0_init+0x1c>)
     480:	4798      	blx	r3
}
     482:	bd10      	pop	{r4, pc}
     484:	00000455 	.word	0x00000455
     488:	40003000 	.word	0x40003000
     48c:	200002f0 	.word	0x200002f0
     490:	00000979 	.word	0x00000979

00000494 <system_init>:

void system_init(void)
{
     494:	b5f0      	push	{r4, r5, r6, r7, lr}
     496:	46c6      	mov	lr, r8
     498:	b500      	push	{lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     49a:	4b3f      	ldr	r3, [pc, #252]	; (598 <system_init+0x104>)
     49c:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     49e:	22c0      	movs	r2, #192	; 0xc0
     4a0:	05d2      	lsls	r2, r2, #23
     4a2:	2320      	movs	r3, #32
     4a4:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4a6:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4a8:	2382      	movs	r3, #130	; 0x82
     4aa:	05db      	lsls	r3, r3, #23
     4ac:	493b      	ldr	r1, [pc, #236]	; (59c <system_init+0x108>)
     4ae:	6299      	str	r1, [r3, #40]	; 0x28
     4b0:	24c0      	movs	r4, #192	; 0xc0
     4b2:	0624      	lsls	r4, r4, #24
     4b4:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4b6:	2545      	movs	r5, #69	; 0x45
     4b8:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4ba:	2101      	movs	r1, #1
     4bc:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4be:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     4c0:	2080      	movs	r0, #128	; 0x80
     4c2:	0080      	lsls	r0, r0, #2
     4c4:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4c6:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4c8:	4835      	ldr	r0, [pc, #212]	; (5a0 <system_init+0x10c>)
     4ca:	6298      	str	r0, [r3, #40]	; 0x28
     4cc:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4ce:	2449      	movs	r4, #73	; 0x49
     4d0:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4d2:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4d4:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     4d6:	2080      	movs	r0, #128	; 0x80
     4d8:	0500      	lsls	r0, r0, #20
     4da:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4dc:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4de:	2480      	movs	r4, #128	; 0x80
     4e0:	05e4      	lsls	r4, r4, #23
     4e2:	629c      	str	r4, [r3, #40]	; 0x28
     4e4:	482f      	ldr	r0, [pc, #188]	; (5a4 <system_init+0x110>)
     4e6:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4e8:	3516      	adds	r5, #22
     4ea:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4ec:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ee:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     4f0:	2080      	movs	r0, #128	; 0x80
     4f2:	0540      	lsls	r0, r0, #21
     4f4:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4f6:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4f8:	629c      	str	r4, [r3, #40]	; 0x28
     4fa:	482b      	ldr	r0, [pc, #172]	; (5a8 <system_init+0x114>)
     4fc:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4fe:	3501      	adds	r5, #1
     500:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     502:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     504:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     506:	2084      	movs	r0, #132	; 0x84
     508:	4680      	mov	r8, r0
     50a:	2704      	movs	r7, #4
     50c:	5017      	str	r7, [r2, r0]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     50e:	3024      	adds	r0, #36	; 0x24
     510:	4d26      	ldr	r5, [pc, #152]	; (5ac <system_init+0x118>)
     512:	501d      	str	r5, [r3, r0]
     514:	4d26      	ldr	r5, [pc, #152]	; (5b0 <system_init+0x11c>)
     516:	46ac      	mov	ip, r5
     518:	501d      	str	r5, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     51a:	25c2      	movs	r5, #194	; 0xc2
     51c:	5d5e      	ldrb	r6, [r3, r5]
     51e:	43be      	bics	r6, r7
     520:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     522:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     524:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     526:	555e      	strb	r6, [r3, r5]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     528:	3dba      	subs	r5, #186	; 0xba
     52a:	4646      	mov	r6, r8
     52c:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     52e:	4d21      	ldr	r5, [pc, #132]	; (5b4 <system_init+0x120>)
     530:	501d      	str	r5, [r3, r0]
     532:	4665      	mov	r5, ip
     534:	501d      	str	r5, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     536:	25c3      	movs	r5, #195	; 0xc3
     538:	5d5e      	ldrb	r6, [r3, r5]
     53a:	43be      	bics	r6, r7
     53c:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     53e:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     540:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     542:	555e      	strb	r6, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     544:	3790      	adds	r7, #144	; 0x90
     546:	2580      	movs	r5, #128	; 0x80
     548:	03ed      	lsls	r5, r5, #15
     54a:	51d5      	str	r5, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     54c:	2688      	movs	r6, #136	; 0x88
     54e:	46b0      	mov	r8, r6
     550:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     552:	501c      	str	r4, [r3, r0]
     554:	4d18      	ldr	r5, [pc, #96]	; (5b8 <system_init+0x124>)
     556:	501d      	str	r5, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     558:	25d6      	movs	r5, #214	; 0xd6
     55a:	46ac      	mov	ip, r5
     55c:	5d5d      	ldrb	r5, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     55e:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     560:	4666      	mov	r6, ip
     562:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     564:	2580      	movs	r5, #128	; 0x80
     566:	042d      	lsls	r5, r5, #16
     568:	51d5      	str	r5, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     56a:	4646      	mov	r6, r8
     56c:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     56e:	501c      	str	r4, [r3, r0]
     570:	4a12      	ldr	r2, [pc, #72]	; (5bc <system_init+0x128>)
     572:	501a      	str	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     574:	302f      	adds	r0, #47	; 0x2f
     576:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     578:	438a      	bics	r2, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     57a:	541a      	strb	r2, [r3, r0]
	// Set pin direction to output
	gpio_set_pin_direction(led_2, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(led_2, GPIO_PIN_FUNCTION_OFF);

	ADC_0_init();
     57c:	4b10      	ldr	r3, [pc, #64]	; (5c0 <system_init+0x12c>)
     57e:	4798      	blx	r3

	SPI_0_init();
     580:	4b10      	ldr	r3, [pc, #64]	; (5c4 <system_init+0x130>)
     582:	4798      	blx	r3
	USART_0_init();
     584:	4b10      	ldr	r3, [pc, #64]	; (5c8 <system_init+0x134>)
     586:	4798      	blx	r3
	CAN_0_init();
     588:	4b10      	ldr	r3, [pc, #64]	; (5cc <system_init+0x138>)
     58a:	4798      	blx	r3

	TEMPERATURE_SENSOR_0_init();
     58c:	4b10      	ldr	r3, [pc, #64]	; (5d0 <system_init+0x13c>)
     58e:	4798      	blx	r3
}
     590:	bc04      	pop	{r2}
     592:	4690      	mov	r8, r2
     594:	bdf0      	pop	{r4, r5, r6, r7, pc}
     596:	46c0      	nop			; (mov r8, r8)
     598:	00001159 	.word	0x00001159
     59c:	40000020 	.word	0x40000020
     5a0:	40000200 	.word	0x40000200
     5a4:	c0000800 	.word	0xc0000800
     5a8:	c0001000 	.word	0xc0001000
     5ac:	40020004 	.word	0x40020004
     5b0:	c0020000 	.word	0xc0020000
     5b4:	40020008 	.word	0x40020008
     5b8:	c0000040 	.word	0xc0000040
     5bc:	c0000080 	.word	0xc0000080
     5c0:	00000211 	.word	0x00000211
     5c4:	00000319 	.word	0x00000319
     5c8:	000003a1 	.word	0x000003a1
     5cc:	00000419 	.word	0x00000419
     5d0:	00000475 	.word	0x00000475

000005d4 <adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t adc_sync_init(struct adc_sync_descriptor *const descr, void *const hw, void *const func)
{
     5d4:	b570      	push	{r4, r5, r6, lr}
     5d6:	0004      	movs	r4, r0
     5d8:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     5da:	2800      	cmp	r0, #0
     5dc:	d00c      	beq.n	5f8 <adc_sync_init+0x24>
     5de:	0008      	movs	r0, r1
     5e0:	1e43      	subs	r3, r0, #1
     5e2:	4198      	sbcs	r0, r3
     5e4:	b2c0      	uxtb	r0, r0
     5e6:	2239      	movs	r2, #57	; 0x39
     5e8:	4904      	ldr	r1, [pc, #16]	; (5fc <adc_sync_init+0x28>)
     5ea:	4b05      	ldr	r3, [pc, #20]	; (600 <adc_sync_init+0x2c>)
     5ec:	4798      	blx	r3

	return _adc_sync_init(&descr->device, hw);
     5ee:	0029      	movs	r1, r5
     5f0:	0020      	movs	r0, r4
     5f2:	4b04      	ldr	r3, [pc, #16]	; (604 <adc_sync_init+0x30>)
     5f4:	4798      	blx	r3
}
     5f6:	bd70      	pop	{r4, r5, r6, pc}
     5f8:	2000      	movs	r0, #0
     5fa:	e7f4      	b.n	5e6 <adc_sync_init+0x12>
     5fc:	00005c40 	.word	0x00005c40
     600:	00000cad 	.word	0x00000cad
     604:	00000f2d 	.word	0x00000f2d

00000608 <adc_sync_enable_channel>:

/**
 * \brief Enable ADC
 */
int32_t adc_sync_enable_channel(struct adc_sync_descriptor *const descr, const uint8_t channel)
{
     608:	b570      	push	{r4, r5, r6, lr}
     60a:	0004      	movs	r4, r0
     60c:	000d      	movs	r5, r1
	ASSERT(descr);
     60e:	1e43      	subs	r3, r0, #1
     610:	4198      	sbcs	r0, r3
     612:	b2c0      	uxtb	r0, r0
     614:	224e      	movs	r2, #78	; 0x4e
     616:	4904      	ldr	r1, [pc, #16]	; (628 <adc_sync_enable_channel+0x20>)
     618:	4b04      	ldr	r3, [pc, #16]	; (62c <adc_sync_enable_channel+0x24>)
     61a:	4798      	blx	r3
	_adc_sync_enable_channel(&descr->device, channel);
     61c:	0029      	movs	r1, r5
     61e:	0020      	movs	r0, r4
     620:	4b03      	ldr	r3, [pc, #12]	; (630 <adc_sync_enable_channel+0x28>)
     622:	4798      	blx	r3

	return ERR_NONE;
}
     624:	2000      	movs	r0, #0
     626:	bd70      	pop	{r4, r5, r6, pc}
     628:	00005c40 	.word	0x00005c40
     62c:	00000cad 	.word	0x00000cad
     630:	00000f65 	.word	0x00000f65

00000634 <adc_sync_read_channel>:
/*
 * \brief Read data from ADC
 */
int32_t adc_sync_read_channel(struct adc_sync_descriptor *const descr, const uint8_t channel, uint8_t *const buffer,
                              const uint16_t length)
{
     634:	b5f0      	push	{r4, r5, r6, r7, lr}
     636:	46de      	mov	lr, fp
     638:	4657      	mov	r7, sl
     63a:	464e      	mov	r6, r9
     63c:	4645      	mov	r5, r8
     63e:	b5e0      	push	{r5, r6, r7, lr}
     640:	b083      	sub	sp, #12
     642:	0006      	movs	r6, r0
     644:	000d      	movs	r5, r1
     646:	4691      	mov	r9, r2
     648:	9301      	str	r3, [sp, #4]
	uint8_t  data_size;
	uint16_t offset = 0;

	ASSERT(descr && buffer && length);
     64a:	2800      	cmp	r0, #0
     64c:	d01e      	beq.n	68c <adc_sync_read_channel+0x58>
     64e:	2a00      	cmp	r2, #0
     650:	d01e      	beq.n	690 <adc_sync_read_channel+0x5c>
     652:	0018      	movs	r0, r3
     654:	1e43      	subs	r3, r0, #1
     656:	4198      	sbcs	r0, r3
     658:	2267      	movs	r2, #103	; 0x67
     65a:	491f      	ldr	r1, [pc, #124]	; (6d8 <adc_sync_read_channel+0xa4>)
     65c:	4f1f      	ldr	r7, [pc, #124]	; (6dc <adc_sync_read_channel+0xa8>)
     65e:	47b8      	blx	r7
	data_size = _adc_sync_get_data_size(&descr->device);
     660:	0034      	movs	r4, r6
     662:	0030      	movs	r0, r6
     664:	4b1e      	ldr	r3, [pc, #120]	; (6e0 <adc_sync_read_channel+0xac>)
     666:	4798      	blx	r3
     668:	0001      	movs	r1, r0
     66a:	4680      	mov	r8, r0
	ASSERT(!(length % data_size));
     66c:	9801      	ldr	r0, [sp, #4]
     66e:	4b1d      	ldr	r3, [pc, #116]	; (6e4 <adc_sync_read_channel+0xb0>)
     670:	4798      	blx	r3
     672:	4248      	negs	r0, r1
     674:	4148      	adcs	r0, r1
     676:	b2c0      	uxtb	r0, r0
     678:	2269      	movs	r2, #105	; 0x69
     67a:	4917      	ldr	r1, [pc, #92]	; (6d8 <adc_sync_read_channel+0xa4>)
     67c:	47b8      	blx	r7
	uint16_t offset = 0;
     67e:	2700      	movs	r7, #0

	do {
		uint16_t result;
		_adc_sync_convert(&descr->device);
     680:	4b19      	ldr	r3, [pc, #100]	; (6e8 <adc_sync_read_channel+0xb4>)
     682:	469b      	mov	fp, r3

		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
     684:	4e19      	ldr	r6, [pc, #100]	; (6ec <adc_sync_read_channel+0xb8>)
			;

		result         = _adc_sync_read_channel_data(&descr->device, channel);
     686:	4b1a      	ldr	r3, [pc, #104]	; (6f0 <adc_sync_read_channel+0xbc>)
     688:	469a      	mov	sl, r3
     68a:	e008      	b.n	69e <adc_sync_read_channel+0x6a>
	ASSERT(descr && buffer && length);
     68c:	2000      	movs	r0, #0
     68e:	e7e3      	b.n	658 <adc_sync_read_channel+0x24>
     690:	2000      	movs	r0, #0
     692:	e7e1      	b.n	658 <adc_sync_read_channel+0x24>
     694:	4447      	add	r7, r8
     696:	b2bf      	uxth	r7, r7
		buffer[offset] = result;
		if (1 < data_size) {
			buffer[offset + 1] = result >> 8;
		}
		offset += data_size;
	} while (offset < length);
     698:	9b01      	ldr	r3, [sp, #4]
     69a:	42bb      	cmp	r3, r7
     69c:	d913      	bls.n	6c6 <adc_sync_read_channel+0x92>
		_adc_sync_convert(&descr->device);
     69e:	0020      	movs	r0, r4
     6a0:	47d8      	blx	fp
		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
     6a2:	0029      	movs	r1, r5
     6a4:	0020      	movs	r0, r4
     6a6:	47b0      	blx	r6
     6a8:	2800      	cmp	r0, #0
     6aa:	d0fa      	beq.n	6a2 <adc_sync_read_channel+0x6e>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
     6ac:	0029      	movs	r1, r5
     6ae:	0020      	movs	r0, r4
     6b0:	47d0      	blx	sl
		buffer[offset] = result;
     6b2:	464b      	mov	r3, r9
     6b4:	55d8      	strb	r0, [r3, r7]
		if (1 < data_size) {
     6b6:	4643      	mov	r3, r8
     6b8:	2b01      	cmp	r3, #1
     6ba:	d9eb      	bls.n	694 <adc_sync_read_channel+0x60>
			buffer[offset + 1] = result >> 8;
     6bc:	464b      	mov	r3, r9
     6be:	19db      	adds	r3, r3, r7
     6c0:	0a00      	lsrs	r0, r0, #8
     6c2:	7058      	strb	r0, [r3, #1]
     6c4:	e7e6      	b.n	694 <adc_sync_read_channel+0x60>

	return offset;
}
     6c6:	0038      	movs	r0, r7
     6c8:	b003      	add	sp, #12
     6ca:	bc3c      	pop	{r2, r3, r4, r5}
     6cc:	4690      	mov	r8, r2
     6ce:	4699      	mov	r9, r3
     6d0:	46a2      	mov	sl, r4
     6d2:	46ab      	mov	fp, r5
     6d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     6d6:	46c0      	nop			; (mov r8, r8)
     6d8:	00005c40 	.word	0x00005c40
     6dc:	00000cad 	.word	0x00000cad
     6e0:	00000f79 	.word	0x00000f79
     6e4:	00001211 	.word	0x00001211
     6e8:	00000f95 	.word	0x00000f95
     6ec:	00000f8b 	.word	0x00000f8b
     6f0:	00000fa7 	.word	0x00000fa7

000006f4 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     6f4:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     6f8:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     6fa:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     6fc:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     700:	4770      	bx	lr

00000702 <atomic_leave_critical>:
     702:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     706:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     708:	f383 8810 	msr	PRIMASK, r3
}
     70c:	4770      	bx	lr

0000070e <can_tx_done>:

/**
 * \internal Callback of CAN Message Write finished
 */
static void can_tx_done(struct _can_async_device *dev)
{
     70e:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.tx_done) {
     710:	69c3      	ldr	r3, [r0, #28]
     712:	2b00      	cmp	r3, #0
     714:	d000      	beq.n	718 <can_tx_done+0xa>
		descr->cb.tx_done(descr);
     716:	4798      	blx	r3
	}
}
     718:	bd10      	pop	{r4, pc}

0000071a <can_rx_done>:

/**
 * \internal Callback of CAN Message Read finished
 */
static void can_rx_done(struct _can_async_device *dev)
{
     71a:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.rx_done) {
     71c:	6a03      	ldr	r3, [r0, #32]
     71e:	2b00      	cmp	r3, #0
     720:	d000      	beq.n	724 <can_rx_done+0xa>
		descr->cb.rx_done(descr);
     722:	4798      	blx	r3
	}
}
     724:	bd10      	pop	{r4, pc}

00000726 <can_irq_handler>:

/**
 * \internal Callback of CAN Interrupt
 */
static void can_irq_handler(struct _can_async_device *dev, enum can_async_interrupt_type type)
{
     726:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.irq_handler) {
     728:	6a43      	ldr	r3, [r0, #36]	; 0x24
     72a:	2b00      	cmp	r3, #0
     72c:	d000      	beq.n	730 <can_irq_handler+0xa>
		descr->cb.irq_handler(descr, type);
     72e:	4798      	blx	r3
	}
}
     730:	bd10      	pop	{r4, pc}
	...

00000734 <can_async_init>:
{
     734:	b570      	push	{r4, r5, r6, lr}
     736:	0005      	movs	r5, r0
     738:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     73a:	2800      	cmp	r0, #0
     73c:	d014      	beq.n	768 <can_async_init+0x34>
     73e:	0008      	movs	r0, r1
     740:	1e43      	subs	r3, r0, #1
     742:	4198      	sbcs	r0, r3
     744:	b2c0      	uxtb	r0, r0
     746:	2241      	movs	r2, #65	; 0x41
     748:	4908      	ldr	r1, [pc, #32]	; (76c <can_async_init+0x38>)
     74a:	4b09      	ldr	r3, [pc, #36]	; (770 <can_async_init+0x3c>)
     74c:	4798      	blx	r3
	rc = _can_async_init(&descr->dev, hw);
     74e:	0021      	movs	r1, r4
     750:	0028      	movs	r0, r5
     752:	4b08      	ldr	r3, [pc, #32]	; (774 <can_async_init+0x40>)
     754:	4798      	blx	r3
	if (rc) {
     756:	2800      	cmp	r0, #0
     758:	d105      	bne.n	766 <can_async_init+0x32>
	descr->dev.cb.tx_done     = can_tx_done;
     75a:	4b07      	ldr	r3, [pc, #28]	; (778 <can_async_init+0x44>)
     75c:	606b      	str	r3, [r5, #4]
	descr->dev.cb.rx_done     = can_rx_done;
     75e:	4b07      	ldr	r3, [pc, #28]	; (77c <can_async_init+0x48>)
     760:	60ab      	str	r3, [r5, #8]
	descr->dev.cb.irq_handler = can_irq_handler;
     762:	4b07      	ldr	r3, [pc, #28]	; (780 <can_async_init+0x4c>)
     764:	60eb      	str	r3, [r5, #12]
}
     766:	bd70      	pop	{r4, r5, r6, pc}
     768:	2000      	movs	r0, #0
     76a:	e7ec      	b.n	746 <can_async_init+0x12>
     76c:	00005c5c 	.word	0x00005c5c
     770:	00000cad 	.word	0x00000cad
     774:	00000fb5 	.word	0x00000fb5
     778:	0000070f 	.word	0x0000070f
     77c:	0000071b 	.word	0x0000071b
     780:	00000727 	.word	0x00000727

00000784 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     784:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     786:	4b04      	ldr	r3, [pc, #16]	; (798 <delay_ms+0x14>)
     788:	681c      	ldr	r4, [r3, #0]
     78a:	4b04      	ldr	r3, [pc, #16]	; (79c <delay_ms+0x18>)
     78c:	4798      	blx	r3
     78e:	0001      	movs	r1, r0
     790:	0020      	movs	r0, r4
     792:	4b03      	ldr	r3, [pc, #12]	; (7a0 <delay_ms+0x1c>)
     794:	4798      	blx	r3
}
     796:	bd10      	pop	{r4, pc}
     798:	2000018c 	.word	0x2000018c
     79c:	00001131 	.word	0x00001131
     7a0:	00001151 	.word	0x00001151

000007a4 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     7a4:	b570      	push	{r4, r5, r6, lr}
     7a6:	0006      	movs	r6, r0
     7a8:	000c      	movs	r4, r1
     7aa:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     7ac:	2800      	cmp	r0, #0
     7ae:	d00d      	beq.n	7cc <io_write+0x28>
     7b0:	0008      	movs	r0, r1
     7b2:	1e43      	subs	r3, r0, #1
     7b4:	4198      	sbcs	r0, r3
     7b6:	b2c0      	uxtb	r0, r0
     7b8:	2234      	movs	r2, #52	; 0x34
     7ba:	4905      	ldr	r1, [pc, #20]	; (7d0 <io_write+0x2c>)
     7bc:	4b05      	ldr	r3, [pc, #20]	; (7d4 <io_write+0x30>)
     7be:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     7c0:	6833      	ldr	r3, [r6, #0]
     7c2:	002a      	movs	r2, r5
     7c4:	0021      	movs	r1, r4
     7c6:	0030      	movs	r0, r6
     7c8:	4798      	blx	r3
}
     7ca:	bd70      	pop	{r4, r5, r6, pc}
     7cc:	2000      	movs	r0, #0
     7ce:	e7f3      	b.n	7b8 <io_write+0x14>
     7d0:	00005c78 	.word	0x00005c78
     7d4:	00000cad 	.word	0x00000cad

000007d8 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     7d8:	b570      	push	{r4, r5, r6, lr}
     7da:	0006      	movs	r6, r0
     7dc:	000c      	movs	r4, r1
     7de:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     7e0:	2800      	cmp	r0, #0
     7e2:	d00d      	beq.n	800 <io_read+0x28>
     7e4:	0008      	movs	r0, r1
     7e6:	1e43      	subs	r3, r0, #1
     7e8:	4198      	sbcs	r0, r3
     7ea:	b2c0      	uxtb	r0, r0
     7ec:	223d      	movs	r2, #61	; 0x3d
     7ee:	4905      	ldr	r1, [pc, #20]	; (804 <io_read+0x2c>)
     7f0:	4b05      	ldr	r3, [pc, #20]	; (808 <io_read+0x30>)
     7f2:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     7f4:	6873      	ldr	r3, [r6, #4]
     7f6:	002a      	movs	r2, r5
     7f8:	0021      	movs	r1, r4
     7fa:	0030      	movs	r0, r6
     7fc:	4798      	blx	r3
}
     7fe:	bd70      	pop	{r4, r5, r6, pc}
     800:	2000      	movs	r0, #0
     802:	e7f3      	b.n	7ec <io_read+0x14>
     804:	00005c78 	.word	0x00005c78
     808:	00000cad 	.word	0x00000cad

0000080c <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     80c:	b570      	push	{r4, r5, r6, lr}
     80e:	0004      	movs	r4, r0
     810:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     812:	2800      	cmp	r0, #0
     814:	d016      	beq.n	844 <spi_m_sync_init+0x38>
     816:	0008      	movs	r0, r1
     818:	1e43      	subs	r3, r0, #1
     81a:	4198      	sbcs	r0, r3
     81c:	b2c0      	uxtb	r0, r0
     81e:	2240      	movs	r2, #64	; 0x40
     820:	4909      	ldr	r1, [pc, #36]	; (848 <spi_m_sync_init+0x3c>)
     822:	4b0a      	ldr	r3, [pc, #40]	; (84c <spi_m_sync_init+0x40>)
     824:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
     826:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     828:	1d20      	adds	r0, r4, #4
     82a:	0029      	movs	r1, r5
     82c:	4b08      	ldr	r3, [pc, #32]	; (850 <spi_m_sync_init+0x44>)
     82e:	4798      	blx	r3

	if (rc < 0) {
     830:	2800      	cmp	r0, #0
     832:	db06      	blt.n	842 <spi_m_sync_init+0x36>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     834:	4b07      	ldr	r3, [pc, #28]	; (854 <spi_m_sync_init+0x48>)
     836:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     838:	4b07      	ldr	r3, [pc, #28]	; (858 <spi_m_sync_init+0x4c>)
     83a:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     83c:	4b07      	ldr	r3, [pc, #28]	; (85c <spi_m_sync_init+0x50>)
     83e:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     840:	2000      	movs	r0, #0
}
     842:	bd70      	pop	{r4, r5, r6, pc}
     844:	2000      	movs	r0, #0
     846:	e7ea      	b.n	81e <spi_m_sync_init+0x12>
     848:	00005c8c 	.word	0x00005c8c
     84c:	00000cad 	.word	0x00000cad
     850:	00001569 	.word	0x00001569
     854:	ffff8000 	.word	0xffff8000
     858:	0000090d 	.word	0x0000090d
     85c:	000008d1 	.word	0x000008d1

00000860 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     860:	b510      	push	{r4, lr}
     862:	0004      	movs	r4, r0
	ASSERT(spi);
     864:	1e43      	subs	r3, r0, #1
     866:	4198      	sbcs	r0, r3
     868:	b2c0      	uxtb	r0, r0
     86a:	2257      	movs	r2, #87	; 0x57
     86c:	4903      	ldr	r1, [pc, #12]	; (87c <spi_m_sync_enable+0x1c>)
     86e:	4b04      	ldr	r3, [pc, #16]	; (880 <spi_m_sync_enable+0x20>)
     870:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
     872:	1d20      	adds	r0, r4, #4
     874:	4b03      	ldr	r3, [pc, #12]	; (884 <spi_m_sync_enable+0x24>)
     876:	4798      	blx	r3
}
     878:	bd10      	pop	{r4, pc}
     87a:	46c0      	nop			; (mov r8, r8)
     87c:	00005c8c 	.word	0x00005c8c
     880:	00000cad 	.word	0x00000cad
     884:	00001661 	.word	0x00001661

00000888 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     888:	b530      	push	{r4, r5, lr}
     88a:	b087      	sub	sp, #28
     88c:	0004      	movs	r4, r0
     88e:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     890:	2800      	cmp	r0, #0
     892:	d014      	beq.n	8be <spi_m_sync_transfer+0x36>
     894:	0008      	movs	r0, r1
     896:	1e43      	subs	r3, r0, #1
     898:	4198      	sbcs	r0, r3
     89a:	b2c0      	uxtb	r0, r0
     89c:	22b3      	movs	r2, #179	; 0xb3
     89e:	4909      	ldr	r1, [pc, #36]	; (8c4 <spi_m_sync_transfer+0x3c>)
     8a0:	4b09      	ldr	r3, [pc, #36]	; (8c8 <spi_m_sync_transfer+0x40>)
     8a2:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
     8a4:	682b      	ldr	r3, [r5, #0]
     8a6:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     8a8:	686b      	ldr	r3, [r5, #4]
     8aa:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     8ac:	68ab      	ldr	r3, [r5, #8]
     8ae:	9301      	str	r3, [sp, #4]
     8b0:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     8b2:	1d20      	adds	r0, r4, #4
     8b4:	a903      	add	r1, sp, #12
     8b6:	4b05      	ldr	r3, [pc, #20]	; (8cc <spi_m_sync_transfer+0x44>)
     8b8:	4798      	blx	r3
}
     8ba:	b007      	add	sp, #28
     8bc:	bd30      	pop	{r4, r5, pc}
     8be:	2000      	movs	r0, #0
     8c0:	e7ec      	b.n	89c <spi_m_sync_transfer+0x14>
     8c2:	46c0      	nop			; (mov r8, r8)
     8c4:	00005c8c 	.word	0x00005c8c
     8c8:	00000cad 	.word	0x00000cad
     8cc:	00001695 	.word	0x00001695

000008d0 <_spi_m_sync_io_write>:
{
     8d0:	b570      	push	{r4, r5, r6, lr}
     8d2:	b084      	sub	sp, #16
     8d4:	0004      	movs	r4, r0
     8d6:	000e      	movs	r6, r1
     8d8:	0015      	movs	r5, r2
	ASSERT(io);
     8da:	1e43      	subs	r3, r0, #1
     8dc:	4198      	sbcs	r0, r3
     8de:	b2c0      	uxtb	r0, r0
     8e0:	22a3      	movs	r2, #163	; 0xa3
     8e2:	4907      	ldr	r1, [pc, #28]	; (900 <_spi_m_sync_io_write+0x30>)
     8e4:	4b07      	ldr	r3, [pc, #28]	; (904 <_spi_m_sync_io_write+0x34>)
     8e6:	4798      	blx	r3
	xfer.rxbuf = 0;
     8e8:	2300      	movs	r3, #0
     8ea:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     8ec:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     8ee:	9503      	str	r5, [sp, #12]
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     8f0:	0020      	movs	r0, r4
     8f2:	380c      	subs	r0, #12
	return spi_m_sync_transfer(spi, &xfer);
     8f4:	a901      	add	r1, sp, #4
     8f6:	4b04      	ldr	r3, [pc, #16]	; (908 <_spi_m_sync_io_write+0x38>)
     8f8:	4798      	blx	r3
}
     8fa:	b004      	add	sp, #16
     8fc:	bd70      	pop	{r4, r5, r6, pc}
     8fe:	46c0      	nop			; (mov r8, r8)
     900:	00005c8c 	.word	0x00005c8c
     904:	00000cad 	.word	0x00000cad
     908:	00000889 	.word	0x00000889

0000090c <_spi_m_sync_io_read>:
{
     90c:	b570      	push	{r4, r5, r6, lr}
     90e:	b084      	sub	sp, #16
     910:	0004      	movs	r4, r0
     912:	000e      	movs	r6, r1
     914:	0015      	movs	r5, r2
	ASSERT(io);
     916:	1e43      	subs	r3, r0, #1
     918:	4198      	sbcs	r0, r3
     91a:	b2c0      	uxtb	r0, r0
     91c:	2287      	movs	r2, #135	; 0x87
     91e:	4907      	ldr	r1, [pc, #28]	; (93c <_spi_m_sync_io_read+0x30>)
     920:	4b07      	ldr	r3, [pc, #28]	; (940 <_spi_m_sync_io_read+0x34>)
     922:	4798      	blx	r3
	xfer.rxbuf = buf;
     924:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     926:	2300      	movs	r3, #0
     928:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     92a:	9503      	str	r5, [sp, #12]
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     92c:	0020      	movs	r0, r4
     92e:	380c      	subs	r0, #12
	return spi_m_sync_transfer(spi, &xfer);
     930:	a901      	add	r1, sp, #4
     932:	4b04      	ldr	r3, [pc, #16]	; (944 <_spi_m_sync_io_read+0x38>)
     934:	4798      	blx	r3
}
     936:	b004      	add	sp, #16
     938:	bd70      	pop	{r4, r5, r6, pc}
     93a:	46c0      	nop			; (mov r8, r8)
     93c:	00005c8c 	.word	0x00005c8c
     940:	00000cad 	.word	0x00000cad
     944:	00000889 	.word	0x00000889

00000948 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     948:	b570      	push	{r4, r5, r6, lr}
     94a:	0004      	movs	r4, r0
     94c:	000d      	movs	r5, r1
	ASSERT(spi && io);
     94e:	2800      	cmp	r0, #0
     950:	d00b      	beq.n	96a <spi_m_sync_get_io_descriptor+0x22>
     952:	0008      	movs	r0, r1
     954:	1e43      	subs	r3, r0, #1
     956:	4198      	sbcs	r0, r3
     958:	b2c0      	uxtb	r0, r0
     95a:	22bd      	movs	r2, #189	; 0xbd
     95c:	4904      	ldr	r1, [pc, #16]	; (970 <spi_m_sync_get_io_descriptor+0x28>)
     95e:	4b05      	ldr	r3, [pc, #20]	; (974 <spi_m_sync_get_io_descriptor+0x2c>)
     960:	4798      	blx	r3
	*io = &spi->io;
     962:	340c      	adds	r4, #12
     964:	602c      	str	r4, [r5, #0]
	return 0;
}
     966:	2000      	movs	r0, #0
     968:	bd70      	pop	{r4, r5, r6, pc}
     96a:	2000      	movs	r0, #0
     96c:	e7f5      	b.n	95a <spi_m_sync_get_io_descriptor+0x12>
     96e:	46c0      	nop			; (mov r8, r8)
     970:	00005c8c 	.word	0x00005c8c
     974:	00000cad 	.word	0x00000cad

00000978 <temp_sync_init>:

/**
 * \brief              Initialize Temperature Descriptor
 */
int32_t temp_sync_init(struct temp_sync_descriptor *const descr, void *const hw)
{
     978:	b570      	push	{r4, r5, r6, lr}
     97a:	0004      	movs	r4, r0
     97c:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     97e:	2800      	cmp	r0, #0
     980:	d00c      	beq.n	99c <temp_sync_init+0x24>
     982:	0008      	movs	r0, r1
     984:	1e43      	subs	r3, r0, #1
     986:	4198      	sbcs	r0, r3
     988:	b2c0      	uxtb	r0, r0
     98a:	222b      	movs	r2, #43	; 0x2b
     98c:	4904      	ldr	r1, [pc, #16]	; (9a0 <temp_sync_init+0x28>)
     98e:	4b05      	ldr	r3, [pc, #20]	; (9a4 <temp_sync_init+0x2c>)
     990:	4798      	blx	r3
	return _temp_sync_init(&descr->dev, hw);
     992:	0029      	movs	r1, r5
     994:	0020      	movs	r0, r4
     996:	4b04      	ldr	r3, [pc, #16]	; (9a8 <temp_sync_init+0x30>)
     998:	4798      	blx	r3
}
     99a:	bd70      	pop	{r4, r5, r6, pc}
     99c:	2000      	movs	r0, #0
     99e:	e7f4      	b.n	98a <temp_sync_init+0x12>
     9a0:	00005ca8 	.word	0x00005ca8
     9a4:	00000cad 	.word	0x00000cad
     9a8:	000017a5 	.word	0x000017a5

000009ac <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     9ac:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9ae:	3808      	subs	r0, #8

	descr->stat = 0;
     9b0:	2300      	movs	r3, #0
     9b2:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     9b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
     9b6:	2b00      	cmp	r3, #0
     9b8:	d000      	beq.n	9bc <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     9ba:	4798      	blx	r3
	}
}
     9bc:	bd10      	pop	{r4, pc}

000009be <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     9be:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9c0:	3808      	subs	r0, #8

	descr->stat = 0;
     9c2:	2300      	movs	r3, #0
     9c4:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     9c6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     9c8:	2b00      	cmp	r3, #0
     9ca:	d000      	beq.n	9ce <usart_error+0x10>
		descr->usart_cb.error(descr);
     9cc:	4798      	blx	r3
	}
}
     9ce:	bd10      	pop	{r4, pc}

000009d0 <usart_fill_rx_buffer>:
{
     9d0:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9d2:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     9d4:	302c      	adds	r0, #44	; 0x2c
     9d6:	4b04      	ldr	r3, [pc, #16]	; (9e8 <usart_fill_rx_buffer+0x18>)
     9d8:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     9da:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9dc:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     9de:	2b00      	cmp	r3, #0
     9e0:	d001      	beq.n	9e6 <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     9e2:	0020      	movs	r0, r4
     9e4:	4798      	blx	r3
}
     9e6:	bd10      	pop	{r4, pc}
     9e8:	00000d51 	.word	0x00000d51

000009ec <usart_async_write>:
{
     9ec:	b570      	push	{r4, r5, r6, lr}
     9ee:	0004      	movs	r4, r0
     9f0:	000e      	movs	r6, r1
     9f2:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     9f4:	2800      	cmp	r0, #0
     9f6:	d01d      	beq.n	a34 <usart_async_write+0x48>
     9f8:	2900      	cmp	r1, #0
     9fa:	d01d      	beq.n	a38 <usart_async_write+0x4c>
     9fc:	0010      	movs	r0, r2
     9fe:	1e43      	subs	r3, r0, #1
     a00:	4198      	sbcs	r0, r3
     a02:	223c      	movs	r2, #60	; 0x3c
     a04:	32ff      	adds	r2, #255	; 0xff
     a06:	490f      	ldr	r1, [pc, #60]	; (a44 <usart_async_write+0x58>)
     a08:	4b0f      	ldr	r3, [pc, #60]	; (a48 <usart_async_write+0x5c>)
     a0a:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     a0c:	2344      	movs	r3, #68	; 0x44
     a0e:	5ae2      	ldrh	r2, [r4, r3]
     a10:	3308      	adds	r3, #8
     a12:	5ae3      	ldrh	r3, [r4, r3]
     a14:	429a      	cmp	r2, r3
     a16:	d111      	bne.n	a3c <usart_async_write+0x50>
	descr->tx_buffer        = (uint8_t *)buf;
     a18:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     a1a:	234c      	movs	r3, #76	; 0x4c
     a1c:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     a1e:	2200      	movs	r2, #0
     a20:	3b08      	subs	r3, #8
     a22:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     a24:	3b43      	subs	r3, #67	; 0x43
     a26:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     a28:	0020      	movs	r0, r4
     a2a:	3008      	adds	r0, #8
     a2c:	4b07      	ldr	r3, [pc, #28]	; (a4c <usart_async_write+0x60>)
     a2e:	4798      	blx	r3
	return (int32_t)length;
     a30:	0028      	movs	r0, r5
}
     a32:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     a34:	2000      	movs	r0, #0
     a36:	e7e4      	b.n	a02 <usart_async_write+0x16>
     a38:	2000      	movs	r0, #0
     a3a:	e7e2      	b.n	a02 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     a3c:	201c      	movs	r0, #28
     a3e:	4240      	negs	r0, r0
     a40:	e7f7      	b.n	a32 <usart_async_write+0x46>
     a42:	46c0      	nop			; (mov r8, r8)
     a44:	00005cc4 	.word	0x00005cc4
     a48:	00000cad 	.word	0x00000cad
     a4c:	00001479 	.word	0x00001479

00000a50 <usart_process_byte_sent>:
{
     a50:	b570      	push	{r4, r5, r6, lr}
     a52:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     a54:	0001      	movs	r1, r0
     a56:	3908      	subs	r1, #8
     a58:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
     a5a:	224c      	movs	r2, #76	; 0x4c
     a5c:	5a8a      	ldrh	r2, [r1, r2]
     a5e:	429a      	cmp	r2, r3
     a60:	d00c      	beq.n	a7c <usart_process_byte_sent+0x2c>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     a62:	000a      	movs	r2, r1
     a64:	6c89      	ldr	r1, [r1, #72]	; 0x48
     a66:	1c5d      	adds	r5, r3, #1
     a68:	2044      	movs	r0, #68	; 0x44
     a6a:	5215      	strh	r5, [r2, r0]
     a6c:	5cc9      	ldrb	r1, [r1, r3]
     a6e:	0020      	movs	r0, r4
     a70:	4b04      	ldr	r3, [pc, #16]	; (a84 <usart_process_byte_sent+0x34>)
     a72:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     a74:	0020      	movs	r0, r4
     a76:	4b04      	ldr	r3, [pc, #16]	; (a88 <usart_process_byte_sent+0x38>)
     a78:	4798      	blx	r3
}
     a7a:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     a7c:	4b03      	ldr	r3, [pc, #12]	; (a8c <usart_process_byte_sent+0x3c>)
     a7e:	4798      	blx	r3
}
     a80:	e7fb      	b.n	a7a <usart_process_byte_sent+0x2a>
     a82:	46c0      	nop			; (mov r8, r8)
     a84:	00001471 	.word	0x00001471
     a88:	00001479 	.word	0x00001479
     a8c:	00001481 	.word	0x00001481

00000a90 <usart_async_read>:
{
     a90:	b5f0      	push	{r4, r5, r6, r7, lr}
     a92:	46ce      	mov	lr, r9
     a94:	4647      	mov	r7, r8
     a96:	b580      	push	{r7, lr}
     a98:	b085      	sub	sp, #20
     a9a:	0005      	movs	r5, r0
     a9c:	000e      	movs	r6, r1
     a9e:	0017      	movs	r7, r2
	ASSERT(descr && buf && length);
     aa0:	2800      	cmp	r0, #0
     aa2:	d015      	beq.n	ad0 <usart_async_read+0x40>
     aa4:	2900      	cmp	r1, #0
     aa6:	d013      	beq.n	ad0 <usart_async_read+0x40>
     aa8:	2a00      	cmp	r2, #0
     aaa:	d12a      	bne.n	b02 <usart_async_read+0x72>
     aac:	22ac      	movs	r2, #172	; 0xac
     aae:	0052      	lsls	r2, r2, #1
     ab0:	4929      	ldr	r1, [pc, #164]	; (b58 <usart_async_read+0xc8>)
     ab2:	2000      	movs	r0, #0
     ab4:	4b29      	ldr	r3, [pc, #164]	; (b5c <usart_async_read+0xcc>)
     ab6:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     ab8:	a803      	add	r0, sp, #12
     aba:	4b29      	ldr	r3, [pc, #164]	; (b60 <usart_async_read+0xd0>)
     abc:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     abe:	0028      	movs	r0, r5
     ac0:	3034      	adds	r0, #52	; 0x34
     ac2:	4b28      	ldr	r3, [pc, #160]	; (b64 <usart_async_read+0xd4>)
     ac4:	4798      	blx	r3
	CRITICAL_SECTION_LEAVE()
     ac6:	a803      	add	r0, sp, #12
     ac8:	4b27      	ldr	r3, [pc, #156]	; (b68 <usart_async_read+0xd8>)
     aca:	4798      	blx	r3
	uint16_t                       was_read = 0;
     acc:	2500      	movs	r5, #0
	return (int32_t)was_read;
     ace:	e03c      	b.n	b4a <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     ad0:	22ac      	movs	r2, #172	; 0xac
     ad2:	0052      	lsls	r2, r2, #1
     ad4:	4920      	ldr	r1, [pc, #128]	; (b58 <usart_async_read+0xc8>)
     ad6:	2000      	movs	r0, #0
     ad8:	4b20      	ldr	r3, [pc, #128]	; (b5c <usart_async_read+0xcc>)
     ada:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     adc:	a803      	add	r0, sp, #12
     ade:	4b20      	ldr	r3, [pc, #128]	; (b60 <usart_async_read+0xd0>)
     ae0:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     ae2:	3534      	adds	r5, #52	; 0x34
     ae4:	0028      	movs	r0, r5
     ae6:	9501      	str	r5, [sp, #4]
     ae8:	4b1e      	ldr	r3, [pc, #120]	; (b64 <usart_async_read+0xd4>)
     aea:	4798      	blx	r3
     aec:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     aee:	a803      	add	r0, sp, #12
     af0:	4b1d      	ldr	r3, [pc, #116]	; (b68 <usart_async_read+0xd8>)
     af2:	4798      	blx	r3
	uint16_t                       was_read = 0;
     af4:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     af6:	4643      	mov	r3, r8
     af8:	2b00      	cmp	r3, #0
     afa:	d026      	beq.n	b4a <usart_async_read+0xba>
     afc:	2f00      	cmp	r7, #0
     afe:	d116      	bne.n	b2e <usart_async_read+0x9e>
     b00:	e023      	b.n	b4a <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     b02:	22ac      	movs	r2, #172	; 0xac
     b04:	0052      	lsls	r2, r2, #1
     b06:	4914      	ldr	r1, [pc, #80]	; (b58 <usart_async_read+0xc8>)
     b08:	2001      	movs	r0, #1
     b0a:	4b14      	ldr	r3, [pc, #80]	; (b5c <usart_async_read+0xcc>)
     b0c:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     b0e:	a803      	add	r0, sp, #12
     b10:	4b13      	ldr	r3, [pc, #76]	; (b60 <usart_async_read+0xd0>)
     b12:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     b14:	3534      	adds	r5, #52	; 0x34
     b16:	0028      	movs	r0, r5
     b18:	9501      	str	r5, [sp, #4]
     b1a:	4b12      	ldr	r3, [pc, #72]	; (b64 <usart_async_read+0xd4>)
     b1c:	4798      	blx	r3
     b1e:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     b20:	a803      	add	r0, sp, #12
     b22:	4b11      	ldr	r3, [pc, #68]	; (b68 <usart_async_read+0xd8>)
     b24:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     b26:	4643      	mov	r3, r8
	uint16_t                       was_read = 0;
     b28:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     b2a:	2b00      	cmp	r3, #0
     b2c:	d00d      	beq.n	b4a <usart_async_read+0xba>
{
     b2e:	2400      	movs	r4, #0
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     b30:	4b0e      	ldr	r3, [pc, #56]	; (b6c <usart_async_read+0xdc>)
     b32:	4699      	mov	r9, r3
     b34:	1c65      	adds	r5, r4, #1
     b36:	b2ad      	uxth	r5, r5
     b38:	1931      	adds	r1, r6, r4
     b3a:	9801      	ldr	r0, [sp, #4]
     b3c:	47c8      	blx	r9
     b3e:	3401      	adds	r4, #1
	while ((was_read < num) && (was_read < length)) {
     b40:	4544      	cmp	r4, r8
     b42:	d202      	bcs.n	b4a <usart_async_read+0xba>
     b44:	b2a3      	uxth	r3, r4
     b46:	429f      	cmp	r7, r3
     b48:	d8f4      	bhi.n	b34 <usart_async_read+0xa4>
}
     b4a:	0028      	movs	r0, r5
     b4c:	b005      	add	sp, #20
     b4e:	bc0c      	pop	{r2, r3}
     b50:	4690      	mov	r8, r2
     b52:	4699      	mov	r9, r3
     b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b56:	46c0      	nop			; (mov r8, r8)
     b58:	00005cc4 	.word	0x00005cc4
     b5c:	00000cad 	.word	0x00000cad
     b60:	000006f5 	.word	0x000006f5
     b64:	00000d91 	.word	0x00000d91
     b68:	00000703 	.word	0x00000703
     b6c:	00000d09 	.word	0x00000d09

00000b70 <usart_async_init>:
{
     b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     b72:	0004      	movs	r4, r0
     b74:	000d      	movs	r5, r1
     b76:	0016      	movs	r6, r2
     b78:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     b7a:	2800      	cmp	r0, #0
     b7c:	d026      	beq.n	bcc <usart_async_init+0x5c>
     b7e:	2900      	cmp	r1, #0
     b80:	d026      	beq.n	bd0 <usart_async_init+0x60>
     b82:	2a00      	cmp	r2, #0
     b84:	d026      	beq.n	bd4 <usart_async_init+0x64>
     b86:	0018      	movs	r0, r3
     b88:	1e43      	subs	r3, r0, #1
     b8a:	4198      	sbcs	r0, r3
     b8c:	223a      	movs	r2, #58	; 0x3a
     b8e:	4914      	ldr	r1, [pc, #80]	; (be0 <usart_async_init+0x70>)
     b90:	4b14      	ldr	r3, [pc, #80]	; (be4 <usart_async_init+0x74>)
     b92:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     b94:	0020      	movs	r0, r4
     b96:	3034      	adds	r0, #52	; 0x34
     b98:	003a      	movs	r2, r7
     b9a:	0031      	movs	r1, r6
     b9c:	4b12      	ldr	r3, [pc, #72]	; (be8 <usart_async_init+0x78>)
     b9e:	4798      	blx	r3
     ba0:	2800      	cmp	r0, #0
     ba2:	d119      	bne.n	bd8 <usart_async_init+0x68>
	init_status = _usart_async_init(&descr->device, hw);
     ba4:	0020      	movs	r0, r4
     ba6:	3008      	adds	r0, #8
     ba8:	0029      	movs	r1, r5
     baa:	4b10      	ldr	r3, [pc, #64]	; (bec <usart_async_init+0x7c>)
     bac:	4798      	blx	r3
	if (init_status) {
     bae:	2800      	cmp	r0, #0
     bb0:	d10b      	bne.n	bca <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     bb2:	4b0f      	ldr	r3, [pc, #60]	; (bf0 <usart_async_init+0x80>)
     bb4:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     bb6:	4b0f      	ldr	r3, [pc, #60]	; (bf4 <usart_async_init+0x84>)
     bb8:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     bba:	4b0f      	ldr	r3, [pc, #60]	; (bf8 <usart_async_init+0x88>)
     bbc:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     bbe:	4b0f      	ldr	r3, [pc, #60]	; (bfc <usart_async_init+0x8c>)
     bc0:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     bc2:	4b0f      	ldr	r3, [pc, #60]	; (c00 <usart_async_init+0x90>)
     bc4:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     bc6:	4b0f      	ldr	r3, [pc, #60]	; (c04 <usart_async_init+0x94>)
     bc8:	6163      	str	r3, [r4, #20]
}
     bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     bcc:	2000      	movs	r0, #0
     bce:	e7dd      	b.n	b8c <usart_async_init+0x1c>
     bd0:	2000      	movs	r0, #0
     bd2:	e7db      	b.n	b8c <usart_async_init+0x1c>
     bd4:	2000      	movs	r0, #0
     bd6:	e7d9      	b.n	b8c <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     bd8:	200d      	movs	r0, #13
     bda:	4240      	negs	r0, r0
     bdc:	e7f5      	b.n	bca <usart_async_init+0x5a>
     bde:	46c0      	nop			; (mov r8, r8)
     be0:	00005cc4 	.word	0x00005cc4
     be4:	00000cad 	.word	0x00000cad
     be8:	00000cb5 	.word	0x00000cb5
     bec:	000013e1 	.word	0x000013e1
     bf0:	00000a91 	.word	0x00000a91
     bf4:	000009ed 	.word	0x000009ed
     bf8:	00000a51 	.word	0x00000a51
     bfc:	000009d1 	.word	0x000009d1
     c00:	000009ad 	.word	0x000009ad
     c04:	000009bf 	.word	0x000009bf

00000c08 <usart_async_enable>:
{
     c08:	b510      	push	{r4, lr}
     c0a:	0004      	movs	r4, r0
	ASSERT(descr);
     c0c:	1e43      	subs	r3, r0, #1
     c0e:	4198      	sbcs	r0, r3
     c10:	b2c0      	uxtb	r0, r0
     c12:	2261      	movs	r2, #97	; 0x61
     c14:	4904      	ldr	r1, [pc, #16]	; (c28 <usart_async_enable+0x20>)
     c16:	4b05      	ldr	r3, [pc, #20]	; (c2c <usart_async_enable+0x24>)
     c18:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     c1a:	0020      	movs	r0, r4
     c1c:	3008      	adds	r0, #8
     c1e:	4b04      	ldr	r3, [pc, #16]	; (c30 <usart_async_enable+0x28>)
     c20:	4798      	blx	r3
}
     c22:	2000      	movs	r0, #0
     c24:	bd10      	pop	{r4, pc}
     c26:	46c0      	nop			; (mov r8, r8)
     c28:	00005cc4 	.word	0x00005cc4
     c2c:	00000cad 	.word	0x00000cad
     c30:	0000145d 	.word	0x0000145d

00000c34 <usart_async_register_callback>:
{
     c34:	b570      	push	{r4, r5, r6, lr}
     c36:	0005      	movs	r5, r0
     c38:	000e      	movs	r6, r1
     c3a:	0014      	movs	r4, r2
	ASSERT(descr);
     c3c:	1e43      	subs	r3, r0, #1
     c3e:	4198      	sbcs	r0, r3
     c40:	b2c0      	uxtb	r0, r0
     c42:	2283      	movs	r2, #131	; 0x83
     c44:	4916      	ldr	r1, [pc, #88]	; (ca0 <usart_async_register_callback+0x6c>)
     c46:	4b17      	ldr	r3, [pc, #92]	; (ca4 <usart_async_register_callback+0x70>)
     c48:	4798      	blx	r3
	switch (type) {
     c4a:	2e01      	cmp	r6, #1
     c4c:	d011      	beq.n	c72 <usart_async_register_callback+0x3e>
     c4e:	2e00      	cmp	r6, #0
     c50:	d004      	beq.n	c5c <usart_async_register_callback+0x28>
     c52:	2e02      	cmp	r6, #2
     c54:	d018      	beq.n	c88 <usart_async_register_callback+0x54>
		return ERR_INVALID_ARG;
     c56:	200d      	movs	r0, #13
     c58:	4240      	negs	r0, r0
     c5a:	e009      	b.n	c70 <usart_async_register_callback+0x3c>
		descr->usart_cb.rx_done = cb;
     c5c:	62ac      	str	r4, [r5, #40]	; 0x28
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_RX_DONE, NULL != cb);
     c5e:	1e62      	subs	r2, r4, #1
     c60:	4194      	sbcs	r4, r2
     c62:	b2e2      	uxtb	r2, r4
     c64:	0028      	movs	r0, r5
     c66:	3008      	adds	r0, #8
     c68:	2101      	movs	r1, #1
     c6a:	4b0f      	ldr	r3, [pc, #60]	; (ca8 <usart_async_register_callback+0x74>)
     c6c:	4798      	blx	r3
	return ERR_NONE;
     c6e:	2000      	movs	r0, #0
}
     c70:	bd70      	pop	{r4, r5, r6, pc}
		descr->usart_cb.tx_done = cb;
     c72:	626c      	str	r4, [r5, #36]	; 0x24
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_TX_DONE, NULL != cb);
     c74:	1e62      	subs	r2, r4, #1
     c76:	4194      	sbcs	r4, r2
     c78:	b2e2      	uxtb	r2, r4
     c7a:	0028      	movs	r0, r5
     c7c:	3008      	adds	r0, #8
     c7e:	2102      	movs	r1, #2
     c80:	4b09      	ldr	r3, [pc, #36]	; (ca8 <usart_async_register_callback+0x74>)
     c82:	4798      	blx	r3
	return ERR_NONE;
     c84:	2000      	movs	r0, #0
		break;
     c86:	e7f3      	b.n	c70 <usart_async_register_callback+0x3c>
		descr->usart_cb.error = cb;
     c88:	62ec      	str	r4, [r5, #44]	; 0x2c
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_ERROR, NULL != cb);
     c8a:	1e62      	subs	r2, r4, #1
     c8c:	4194      	sbcs	r4, r2
     c8e:	b2e2      	uxtb	r2, r4
     c90:	0028      	movs	r0, r5
     c92:	3008      	adds	r0, #8
     c94:	2103      	movs	r1, #3
     c96:	4b04      	ldr	r3, [pc, #16]	; (ca8 <usart_async_register_callback+0x74>)
     c98:	4798      	blx	r3
	return ERR_NONE;
     c9a:	2000      	movs	r0, #0
		break;
     c9c:	e7e8      	b.n	c70 <usart_async_register_callback+0x3c>
     c9e:	46c0      	nop			; (mov r8, r8)
     ca0:	00005cc4 	.word	0x00005cc4
     ca4:	00000cad 	.word	0x00000cad
     ca8:	00001489 	.word	0x00001489

00000cac <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     cac:	2800      	cmp	r0, #0
     cae:	d100      	bne.n	cb2 <assert+0x6>
		__asm("BKPT #0");
     cb0:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     cb2:	4770      	bx	lr

00000cb4 <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
     cb4:	b570      	push	{r4, r5, r6, lr}
     cb6:	0004      	movs	r4, r0
     cb8:	000e      	movs	r6, r1
     cba:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
     cbc:	2800      	cmp	r0, #0
     cbe:	d00b      	beq.n	cd8 <ringbuffer_init+0x24>
     cc0:	2900      	cmp	r1, #0
     cc2:	d018      	beq.n	cf6 <ringbuffer_init+0x42>
     cc4:	2001      	movs	r0, #1
     cc6:	2a00      	cmp	r2, #0
     cc8:	d107      	bne.n	cda <ringbuffer_init+0x26>
     cca:	2228      	movs	r2, #40	; 0x28
     ccc:	490c      	ldr	r1, [pc, #48]	; (d00 <ringbuffer_init+0x4c>)
     cce:	2000      	movs	r0, #0
     cd0:	4b0c      	ldr	r3, [pc, #48]	; (d04 <ringbuffer_init+0x50>)
     cd2:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
     cd4:	1e6b      	subs	r3, r5, #1
     cd6:	e007      	b.n	ce8 <ringbuffer_init+0x34>
	ASSERT(rb && buf && size);
     cd8:	2000      	movs	r0, #0
     cda:	2228      	movs	r2, #40	; 0x28
     cdc:	4908      	ldr	r1, [pc, #32]	; (d00 <ringbuffer_init+0x4c>)
     cde:	4b09      	ldr	r3, [pc, #36]	; (d04 <ringbuffer_init+0x50>)
     ce0:	4798      	blx	r3
	if ((size & (size - 1)) != 0) {
     ce2:	1e6b      	subs	r3, r5, #1
     ce4:	422b      	tst	r3, r5
     ce6:	d108      	bne.n	cfa <ringbuffer_init+0x46>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
     ce8:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
     cea:	2300      	movs	r3, #0
     cec:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
     cee:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
     cf0:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
     cf2:	2000      	movs	r0, #0
}
     cf4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
     cf6:	2000      	movs	r0, #0
     cf8:	e7ef      	b.n	cda <ringbuffer_init+0x26>
		return ERR_INVALID_ARG;
     cfa:	200d      	movs	r0, #13
     cfc:	4240      	negs	r0, r0
     cfe:	e7f9      	b.n	cf4 <ringbuffer_init+0x40>
     d00:	00005ce4 	.word	0x00005ce4
     d04:	00000cad 	.word	0x00000cad

00000d08 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
     d08:	b570      	push	{r4, r5, r6, lr}
     d0a:	0004      	movs	r4, r0
     d0c:	000d      	movs	r5, r1
	ASSERT(rb && data);
     d0e:	2800      	cmp	r0, #0
     d10:	d015      	beq.n	d3e <ringbuffer_get+0x36>
     d12:	0008      	movs	r0, r1
     d14:	1e43      	subs	r3, r0, #1
     d16:	4198      	sbcs	r0, r3
     d18:	b2c0      	uxtb	r0, r0
     d1a:	2240      	movs	r2, #64	; 0x40
     d1c:	490a      	ldr	r1, [pc, #40]	; (d48 <ringbuffer_get+0x40>)
     d1e:	4b0b      	ldr	r3, [pc, #44]	; (d4c <ringbuffer_get+0x44>)
     d20:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
     d22:	68a3      	ldr	r3, [r4, #8]
     d24:	68e2      	ldr	r2, [r4, #12]
     d26:	429a      	cmp	r2, r3
     d28:	d00b      	beq.n	d42 <ringbuffer_get+0x3a>
		*data = rb->buf[rb->read_index & rb->size];
     d2a:	6862      	ldr	r2, [r4, #4]
     d2c:	4013      	ands	r3, r2
     d2e:	6822      	ldr	r2, [r4, #0]
     d30:	5cd3      	ldrb	r3, [r2, r3]
     d32:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
     d34:	68a3      	ldr	r3, [r4, #8]
     d36:	3301      	adds	r3, #1
     d38:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
     d3a:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
     d3c:	bd70      	pop	{r4, r5, r6, pc}
     d3e:	2000      	movs	r0, #0
     d40:	e7eb      	b.n	d1a <ringbuffer_get+0x12>
	return ERR_NOT_FOUND;
     d42:	200a      	movs	r0, #10
     d44:	4240      	negs	r0, r0
     d46:	e7f9      	b.n	d3c <ringbuffer_get+0x34>
     d48:	00005ce4 	.word	0x00005ce4
     d4c:	00000cad 	.word	0x00000cad

00000d50 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
     d50:	b570      	push	{r4, r5, r6, lr}
     d52:	0004      	movs	r4, r0
     d54:	000d      	movs	r5, r1
	ASSERT(rb);
     d56:	1e43      	subs	r3, r0, #1
     d58:	4198      	sbcs	r0, r3
     d5a:	b2c0      	uxtb	r0, r0
     d5c:	2251      	movs	r2, #81	; 0x51
     d5e:	490a      	ldr	r1, [pc, #40]	; (d88 <ringbuffer_put+0x38>)
     d60:	4b0a      	ldr	r3, [pc, #40]	; (d8c <ringbuffer_put+0x3c>)
     d62:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
     d64:	6863      	ldr	r3, [r4, #4]
     d66:	68e2      	ldr	r2, [r4, #12]
     d68:	4013      	ands	r3, r2
     d6a:	6822      	ldr	r2, [r4, #0]
     d6c:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
     d6e:	68e3      	ldr	r3, [r4, #12]
     d70:	6861      	ldr	r1, [r4, #4]
     d72:	68a2      	ldr	r2, [r4, #8]
     d74:	1a9a      	subs	r2, r3, r2
     d76:	428a      	cmp	r2, r1
     d78:	d901      	bls.n	d7e <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
     d7a:	1a59      	subs	r1, r3, r1
     d7c:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
     d7e:	3301      	adds	r3, #1
     d80:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
     d82:	2000      	movs	r0, #0
     d84:	bd70      	pop	{r4, r5, r6, pc}
     d86:	46c0      	nop			; (mov r8, r8)
     d88:	00005ce4 	.word	0x00005ce4
     d8c:	00000cad 	.word	0x00000cad

00000d90 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
     d90:	b510      	push	{r4, lr}
     d92:	0004      	movs	r4, r0
	ASSERT(rb);
     d94:	1e43      	subs	r3, r0, #1
     d96:	4198      	sbcs	r0, r3
     d98:	b2c0      	uxtb	r0, r0
     d9a:	2267      	movs	r2, #103	; 0x67
     d9c:	4903      	ldr	r1, [pc, #12]	; (dac <ringbuffer_num+0x1c>)
     d9e:	4b04      	ldr	r3, [pc, #16]	; (db0 <ringbuffer_num+0x20>)
     da0:	4798      	blx	r3

	return rb->write_index - rb->read_index;
     da2:	68e0      	ldr	r0, [r4, #12]
     da4:	68a3      	ldr	r3, [r4, #8]
     da6:	1ac0      	subs	r0, r0, r3
}
     da8:	bd10      	pop	{r4, pc}
     daa:	46c0      	nop			; (mov r8, r8)
     dac:	00005ce4 	.word	0x00005ce4
     db0:	00000cad 	.word	0x00000cad

00000db4 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     db4:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     db6:	4a06      	ldr	r2, [pc, #24]	; (dd0 <_sbrk+0x1c>)
     db8:	6812      	ldr	r2, [r2, #0]
     dba:	2a00      	cmp	r2, #0
     dbc:	d004      	beq.n	dc8 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     dbe:	4a04      	ldr	r2, [pc, #16]	; (dd0 <_sbrk+0x1c>)
     dc0:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     dc2:	18c3      	adds	r3, r0, r3
     dc4:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     dc6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     dc8:	4902      	ldr	r1, [pc, #8]	; (dd4 <_sbrk+0x20>)
     dca:	4a01      	ldr	r2, [pc, #4]	; (dd0 <_sbrk+0x1c>)
     dcc:	6011      	str	r1, [r2, #0]
     dce:	e7f6      	b.n	dbe <_sbrk+0xa>
     dd0:	20000190 	.word	0x20000190
     dd4:	200023a8 	.word	0x200023a8

00000dd8 <_adc_init>:
 *
 * \param[in] hw The pointer to hardware instance
 * \param[in] i The number of hardware instance
 */
static int32_t _adc_init(void *const hw, const uint8_t i)
{
     dd8:	b510      	push	{r4, lr}
	};
}

static inline bool hri_adc_is_syncing(const void *const hw, hri_adc_syncbusy_reg_t reg)
{
	return ((Adc *)hw)->SYNCBUSY.reg & reg;
     dda:	8c03      	ldrh	r3, [r0, #32]

	if (!hri_adc_is_syncing(hw, ADC_SYNCBUSY_SWRST)) {
     ddc:	07db      	lsls	r3, r3, #31
     dde:	d418      	bmi.n	e12 <_adc_init+0x3a>
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     de0:	2203      	movs	r2, #3
     de2:	8c03      	ldrh	r3, [r0, #32]
     de4:	4213      	tst	r3, r2
     de6:	d1fc      	bne.n	de2 <_adc_init+0xa>

static inline hri_adc_ctrla_reg_t hri_adc_get_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_adc_wait_for_sync(hw, ADC_SYNCBUSY_SWRST | ADC_SYNCBUSY_ENABLE);
	tmp = ((Adc *)hw)->CTRLA.reg;
     de8:	7803      	ldrb	r3, [r0, #0]
		if (hri_adc_get_CTRLA_reg(hw, ADC_CTRLA_ENABLE)) {
     dea:	079b      	lsls	r3, r3, #30
     dec:	d50b      	bpl.n	e06 <_adc_init+0x2e>
	((Adc *)hw)->CTRLA.reg &= ~ADC_CTRLA_ENABLE;
     dee:	7803      	ldrb	r3, [r0, #0]
     df0:	2202      	movs	r2, #2
     df2:	4393      	bics	r3, r2
     df4:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     df6:	3201      	adds	r2, #1
     df8:	8c03      	ldrh	r3, [r0, #32]
     dfa:	4213      	tst	r3, r2
     dfc:	d1fc      	bne.n	df8 <_adc_init+0x20>
     dfe:	2202      	movs	r2, #2
     e00:	8c03      	ldrh	r3, [r0, #32]
     e02:	4213      	tst	r3, r2
     e04:	d1fc      	bne.n	e00 <_adc_init+0x28>
}

static inline void hri_adc_write_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLA.reg = data;
     e06:	2301      	movs	r3, #1
     e08:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e0a:	2203      	movs	r2, #3
     e0c:	8c03      	ldrh	r3, [r0, #32]
     e0e:	4213      	tst	r3, r2
     e10:	d1fc      	bne.n	e0c <_adc_init+0x34>
     e12:	2201      	movs	r2, #1
     e14:	8c03      	ldrh	r3, [r0, #32]
     e16:	4213      	tst	r3, r2
     e18:	d1fc      	bne.n	e14 <_adc_init+0x3c>
		}
		hri_adc_write_CTRLA_reg(hw, ADC_CTRLA_SWRST);
	}
	hri_adc_wait_for_sync(hw, ADC_SYNCBUSY_SWRST);

	hri_adc_write_CTRLB_reg(hw, _adcs[i].ctrl_b);
     e1a:	00ca      	lsls	r2, r1, #3
     e1c:	1a52      	subs	r2, r2, r1
     e1e:	0092      	lsls	r2, r2, #2
     e20:	4b36      	ldr	r3, [pc, #216]	; (efc <_adc_init+0x124>)
     e22:	189b      	adds	r3, r3, r2
     e24:	789a      	ldrb	r2, [r3, #2]
}

static inline void hri_adc_write_CTRLB_reg(const void *const hw, hri_adc_ctrlb_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLB.reg = data;
     e26:	7042      	strb	r2, [r0, #1]
	hri_adc_write_REFCTRL_reg(hw, _adcs[i].ref_ctrl);
     e28:	78da      	ldrb	r2, [r3, #3]
}

static inline void hri_adc_write_REFCTRL_reg(const void *const hw, hri_adc_refctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->REFCTRL.reg = data;
     e2a:	7082      	strb	r2, [r0, #2]
	hri_adc_write_EVCTRL_reg(hw, _adcs[i].ev_ctrl);
     e2c:	791a      	ldrb	r2, [r3, #4]
}

static inline void hri_adc_write_EVCTRL_reg(const void *const hw, hri_adc_evctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->EVCTRL.reg = data;
     e2e:	70c2      	strb	r2, [r0, #3]
	hri_adc_write_INPUTCTRL_reg(hw, _adcs[i].input_ctrl);
     e30:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_adc_write_INPUTCTRL_reg(const void *const hw, hri_adc_inputctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->INPUTCTRL.reg = data;
     e32:	8103      	strh	r3, [r0, #8]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e34:	8c03      	ldrh	r3, [r0, #32]
     e36:	055b      	lsls	r3, r3, #21
     e38:	d1fc      	bne.n	e34 <_adc_init+0x5c>
	hri_adc_write_CTRLC_reg(hw, _adcs[i].ctrl_c);
     e3a:	00cb      	lsls	r3, r1, #3
     e3c:	1a5b      	subs	r3, r3, r1
     e3e:	009b      	lsls	r3, r3, #2
     e40:	4a2e      	ldr	r2, [pc, #184]	; (efc <_adc_init+0x124>)
     e42:	18d3      	adds	r3, r2, r3
     e44:	891b      	ldrh	r3, [r3, #8]
}

static inline void hri_adc_write_CTRLC_reg(const void *const hw, hri_adc_ctrlc_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLC.reg = data;
     e46:	8143      	strh	r3, [r0, #10]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e48:	8c03      	ldrh	r3, [r0, #32]
     e4a:	055b      	lsls	r3, r3, #21
     e4c:	d1fc      	bne.n	e48 <_adc_init+0x70>
	hri_adc_write_AVGCTRL_reg(hw, _adcs[i].avg_ctrl);
     e4e:	00cb      	lsls	r3, r1, #3
     e50:	1a5b      	subs	r3, r3, r1
     e52:	009b      	lsls	r3, r3, #2
     e54:	4a29      	ldr	r2, [pc, #164]	; (efc <_adc_init+0x124>)
     e56:	18d3      	adds	r3, r2, r3
     e58:	7a9b      	ldrb	r3, [r3, #10]
}

static inline void hri_adc_write_AVGCTRL_reg(const void *const hw, hri_adc_avgctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->AVGCTRL.reg = data;
     e5a:	7303      	strb	r3, [r0, #12]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e5c:	8c03      	ldrh	r3, [r0, #32]
     e5e:	055b      	lsls	r3, r3, #21
     e60:	d1fc      	bne.n	e5c <_adc_init+0x84>
	hri_adc_write_SAMPCTRL_reg(hw, _adcs[i].samp_ctrl);
     e62:	00cb      	lsls	r3, r1, #3
     e64:	1a5b      	subs	r3, r3, r1
     e66:	009b      	lsls	r3, r3, #2
     e68:	4a24      	ldr	r2, [pc, #144]	; (efc <_adc_init+0x124>)
     e6a:	18d3      	adds	r3, r2, r3
     e6c:	7adb      	ldrb	r3, [r3, #11]
}

static inline void hri_adc_write_SAMPCTRL_reg(const void *const hw, hri_adc_sampctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->SAMPCTRL.reg = data;
     e6e:	7343      	strb	r3, [r0, #13]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e70:	8c03      	ldrh	r3, [r0, #32]
     e72:	055b      	lsls	r3, r3, #21
     e74:	d1fc      	bne.n	e70 <_adc_init+0x98>
	hri_adc_write_WINLT_reg(hw, _adcs[i].win_lt);
     e76:	00cb      	lsls	r3, r1, #3
     e78:	1a5b      	subs	r3, r3, r1
     e7a:	009b      	lsls	r3, r3, #2
     e7c:	4a1f      	ldr	r2, [pc, #124]	; (efc <_adc_init+0x124>)
     e7e:	18d3      	adds	r3, r2, r3
     e80:	899b      	ldrh	r3, [r3, #12]
}

static inline void hri_adc_write_WINLT_reg(const void *const hw, hri_adc_winlt_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->WINLT.reg = data;
     e82:	81c3      	strh	r3, [r0, #14]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e84:	2240      	movs	r2, #64	; 0x40
     e86:	8c03      	ldrh	r3, [r0, #32]
     e88:	4213      	tst	r3, r2
     e8a:	d1fc      	bne.n	e86 <_adc_init+0xae>
	hri_adc_write_WINUT_reg(hw, _adcs[i].win_ut);
     e8c:	00cb      	lsls	r3, r1, #3
     e8e:	1a5b      	subs	r3, r3, r1
     e90:	009b      	lsls	r3, r3, #2
     e92:	4a1a      	ldr	r2, [pc, #104]	; (efc <_adc_init+0x124>)
     e94:	18d3      	adds	r3, r2, r3
     e96:	89db      	ldrh	r3, [r3, #14]
}

static inline void hri_adc_write_WINUT_reg(const void *const hw, hri_adc_winut_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->WINUT.reg = data;
     e98:	8203      	strh	r3, [r0, #16]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e9a:	2280      	movs	r2, #128	; 0x80
     e9c:	8c03      	ldrh	r3, [r0, #32]
     e9e:	4213      	tst	r3, r2
     ea0:	d1fc      	bne.n	e9c <_adc_init+0xc4>
	hri_adc_write_GAINCORR_reg(hw, _adcs[i].gain_corr);
     ea2:	00cb      	lsls	r3, r1, #3
     ea4:	1a5b      	subs	r3, r3, r1
     ea6:	009b      	lsls	r3, r3, #2
     ea8:	4a14      	ldr	r2, [pc, #80]	; (efc <_adc_init+0x124>)
     eaa:	18d3      	adds	r3, r2, r3
     eac:	8a1b      	ldrh	r3, [r3, #16]
}

static inline void hri_adc_write_GAINCORR_reg(const void *const hw, hri_adc_gaincorr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->GAINCORR.reg = data;
     eae:	8243      	strh	r3, [r0, #18]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     eb0:	2280      	movs	r2, #128	; 0x80
     eb2:	0052      	lsls	r2, r2, #1
     eb4:	8c03      	ldrh	r3, [r0, #32]
     eb6:	4213      	tst	r3, r2
     eb8:	d1fc      	bne.n	eb4 <_adc_init+0xdc>
	hri_adc_write_OFFSETCORR_reg(hw, _adcs[i].offset_corr);
     eba:	00cb      	lsls	r3, r1, #3
     ebc:	1a5b      	subs	r3, r3, r1
     ebe:	009b      	lsls	r3, r3, #2
     ec0:	4a0e      	ldr	r2, [pc, #56]	; (efc <_adc_init+0x124>)
     ec2:	18d3      	adds	r3, r2, r3
     ec4:	8a5b      	ldrh	r3, [r3, #18]
}

static inline void hri_adc_write_OFFSETCORR_reg(const void *const hw, hri_adc_offsetcorr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->OFFSETCORR.reg = data;
     ec6:	8283      	strh	r3, [r0, #20]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     ec8:	2280      	movs	r2, #128	; 0x80
     eca:	0092      	lsls	r2, r2, #2
     ecc:	8c03      	ldrh	r3, [r0, #32]
     ece:	4213      	tst	r3, r2
     ed0:	d1fc      	bne.n	ecc <_adc_init+0xf4>
	hri_adc_write_DBGCTRL_reg(hw, _adcs[i].dbg_ctrl);
     ed2:	4c0a      	ldr	r4, [pc, #40]	; (efc <_adc_init+0x124>)
     ed4:	00cb      	lsls	r3, r1, #3
     ed6:	1a5a      	subs	r2, r3, r1
     ed8:	0092      	lsls	r2, r2, #2
     eda:	18a2      	adds	r2, r4, r2
     edc:	7d12      	ldrb	r2, [r2, #20]
}

static inline void hri_adc_write_DBGCTRL_reg(const void *const hw, hri_adc_dbgctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->DBGCTRL.reg = data;
     ede:	7702      	strb	r2, [r0, #28]
}

static inline void hri_adc_write_SEQCTRL_reg(const void *const hw, hri_adc_seqctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->SEQCTRL.reg = data;
     ee0:	2200      	movs	r2, #0
     ee2:	6282      	str	r2, [r0, #40]	; 0x28
	hri_adc_write_SEQCTRL_reg(hw, _adcs[i].seq_ctrl);
	hri_adc_write_CTRLA_reg(hw, _adcs[i].ctrl_a);
     ee4:	1a59      	subs	r1, r3, r1
     ee6:	0089      	lsls	r1, r1, #2
     ee8:	1861      	adds	r1, r4, r1
     eea:	784b      	ldrb	r3, [r1, #1]
	((Adc *)hw)->CTRLA.reg = data;
     eec:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     eee:	3203      	adds	r2, #3
     ef0:	8c03      	ldrh	r3, [r0, #32]
     ef2:	4213      	tst	r3, r2
     ef4:	d1fc      	bne.n	ef0 <_adc_init+0x118>

	return ERR_NONE;
}
     ef6:	2000      	movs	r0, #0
     ef8:	bd10      	pop	{r4, pc}
     efa:	46c0      	nop			; (mov r8, r8)
     efc:	00005d08 	.word	0x00005d08

00000f00 <_adc_get_regs>:
{
     f00:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)ADC0) >> 10;
     f02:	4b07      	ldr	r3, [pc, #28]	; (f20 <_adc_get_regs+0x20>)
     f04:	469c      	mov	ip, r3
     f06:	4460      	add	r0, ip
     f08:	0a80      	lsrs	r0, r0, #10
		if (_adcs[i].number == n) {
     f0a:	b2c0      	uxtb	r0, r0
     f0c:	2800      	cmp	r0, #0
     f0e:	d004      	beq.n	f1a <_adc_get_regs+0x1a>
	ASSERT(false);
     f10:	228d      	movs	r2, #141	; 0x8d
     f12:	4904      	ldr	r1, [pc, #16]	; (f24 <_adc_get_regs+0x24>)
     f14:	2000      	movs	r0, #0
     f16:	4b04      	ldr	r3, [pc, #16]	; (f28 <_adc_get_regs+0x28>)
     f18:	4798      	blx	r3
}
     f1a:	2000      	movs	r0, #0
     f1c:	bd10      	pop	{r4, pc}
     f1e:	46c0      	nop			; (mov r8, r8)
     f20:	bdffbc00 	.word	0xbdffbc00
     f24:	00005d24 	.word	0x00005d24
     f28:	00000cad 	.word	0x00000cad

00000f2c <_adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t _adc_sync_init(struct _adc_sync_device *const device, void *const hw)
{
     f2c:	b570      	push	{r4, r5, r6, lr}
     f2e:	0005      	movs	r5, r0
     f30:	000c      	movs	r4, r1
	ASSERT(device);
     f32:	1e43      	subs	r3, r0, #1
     f34:	4198      	sbcs	r0, r3
     f36:	b2c0      	uxtb	r0, r0
     f38:	22d4      	movs	r2, #212	; 0xd4
     f3a:	4906      	ldr	r1, [pc, #24]	; (f54 <_adc_sync_init+0x28>)
     f3c:	4b06      	ldr	r3, [pc, #24]	; (f58 <_adc_sync_init+0x2c>)
     f3e:	4798      	blx	r3

	device->hw = hw;
     f40:	602c      	str	r4, [r5, #0]

	return _adc_init(hw, _adc_get_regs((uint32_t)hw));
     f42:	0020      	movs	r0, r4
     f44:	4b05      	ldr	r3, [pc, #20]	; (f5c <_adc_sync_init+0x30>)
     f46:	4798      	blx	r3
     f48:	0001      	movs	r1, r0
     f4a:	0020      	movs	r0, r4
     f4c:	4b04      	ldr	r3, [pc, #16]	; (f60 <_adc_sync_init+0x34>)
     f4e:	4798      	blx	r3
}
     f50:	bd70      	pop	{r4, r5, r6, pc}
     f52:	46c0      	nop			; (mov r8, r8)
     f54:	00005d24 	.word	0x00005d24
     f58:	00000cad 	.word	0x00000cad
     f5c:	00000f01 	.word	0x00000f01
     f60:	00000dd9 	.word	0x00000dd9

00000f64 <_adc_sync_enable_channel>:
 */
void _adc_sync_enable_channel(struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	hri_adc_set_CTRLA_ENABLE_bit(device->hw);
     f64:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->CTRLA.reg |= ADC_CTRLA_ENABLE;
     f66:	7813      	ldrb	r3, [r2, #0]
     f68:	2102      	movs	r1, #2
     f6a:	430b      	orrs	r3, r1
     f6c:	7013      	strb	r3, [r2, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     f6e:	3101      	adds	r1, #1
     f70:	8c13      	ldrh	r3, [r2, #32]
     f72:	420b      	tst	r3, r1
     f74:	d1fc      	bne.n	f70 <_adc_sync_enable_channel+0xc>
}
     f76:	4770      	bx	lr

00000f78 <_adc_sync_get_data_size>:
/**
 * \brief Retrieve ADC conversion data size
 */
uint8_t _adc_sync_get_data_size(const struct _adc_sync_device *const device)
{
	return hri_adc_read_CTRLC_RESSEL_bf(device->hw) == ADC_CTRLC_RESSEL_8BIT_Val ? 1 : 2;
     f78:	6803      	ldr	r3, [r0, #0]
	tmp = ((Adc *)hw)->CTRLC.reg;
     f7a:	8958      	ldrh	r0, [r3, #10]
	tmp = (tmp & ADC_CTRLC_RESSEL_Msk) >> ADC_CTRLC_RESSEL_Pos;
     f7c:	0680      	lsls	r0, r0, #26
     f7e:	0f80      	lsrs	r0, r0, #30
     f80:	3803      	subs	r0, #3
     f82:	1e43      	subs	r3, r0, #1
     f84:	4198      	sbcs	r0, r3
     f86:	3001      	adds	r0, #1
}
     f88:	4770      	bx	lr

00000f8a <_adc_sync_is_channel_conversion_done>:
 */
bool _adc_sync_is_channel_conversion_done(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_get_interrupt_RESRDY_bit(device->hw);
     f8a:	6803      	ldr	r3, [r0, #0]
	return (((Adc *)hw)->INTFLAG.reg & ADC_INTFLAG_RESRDY) >> ADC_INTFLAG_RESRDY_Pos;
     f8c:	7998      	ldrb	r0, [r3, #6]
     f8e:	2301      	movs	r3, #1
     f90:	4018      	ands	r0, r3
}
     f92:	4770      	bx	lr

00000f94 <_adc_sync_convert>:
/**
 * \brief Make conversion
 */
void _adc_sync_convert(struct _adc_sync_device *const device)
{
	hri_adc_set_SWTRIG_START_bit(device->hw);
     f94:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->SWTRIG.reg |= ADC_SWTRIG_START;
     f96:	7e13      	ldrb	r3, [r2, #24]
     f98:	2102      	movs	r1, #2
     f9a:	430b      	orrs	r3, r1
     f9c:	7613      	strb	r3, [r2, #24]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     f9e:	8c13      	ldrh	r3, [r2, #32]
     fa0:	055b      	lsls	r3, r3, #21
     fa2:	d1fc      	bne.n	f9e <_adc_sync_convert+0xa>
}
     fa4:	4770      	bx	lr

00000fa6 <_adc_sync_read_channel_data>:
 */
uint16_t _adc_sync_read_channel_data(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_read_RESULT_reg(device->hw);
     fa6:	6803      	ldr	r3, [r0, #0]
	return ((Adc *)hw)->RESULT.reg;
     fa8:	8c98      	ldrh	r0, [r3, #36]	; 0x24
     faa:	b280      	uxth	r0, r0
}
     fac:	4770      	bx	lr

00000fae <_adc_get_adc_sync>:
 * \brief Retrieve ADC sync helper functions
 */
void *_adc_get_adc_sync(void)
{
	return (void *)NULL;
}
     fae:	2000      	movs	r0, #0
     fb0:	4770      	bx	lr
	...

00000fb4 <_can_async_init>:

/**
 * \brief Initialize CAN.
 */
int32_t _can_async_init(struct _can_async_device *const dev, void *const hw)
{
     fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
	dev->hw = hw;
     fb6:	6001      	str	r1, [r0, #0]
}

static inline void hri_can_set_CCCR_INIT_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= CAN_CCCR_INIT;
     fb8:	698b      	ldr	r3, [r1, #24]
     fba:	2201      	movs	r2, #1
     fbc:	4313      	orrs	r3, r2
     fbe:	618b      	str	r3, [r1, #24]
	hri_can_set_CCCR_INIT_bit(dev->hw);
	while (hri_can_get_CCCR_INIT_bit(dev->hw) == 0)
     fc0:	6802      	ldr	r2, [r0, #0]

static inline bool hri_can_get_CCCR_INIT_bit(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Can *)hw)->CCCR.reg;
	tmp = (tmp & CAN_CCCR_INIT) >> CAN_CCCR_INIT_Pos;
     fc2:	2401      	movs	r4, #1
	tmp = ((Can *)hw)->CCCR.reg;
     fc4:	6993      	ldr	r3, [r2, #24]
     fc6:	421c      	tst	r4, r3
     fc8:	d0fc      	beq.n	fc4 <_can_async_init+0x10>
}

static inline void hri_can_set_CCCR_CCE_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= CAN_CCCR_CCE;
     fca:	6993      	ldr	r3, [r2, #24]
     fcc:	2402      	movs	r4, #2
     fce:	4323      	orrs	r3, r4
     fd0:	6193      	str	r3, [r2, #24]
		;
	hri_can_set_CCCR_CCE_bit(dev->hw);

#ifdef CONF_CAN0_ENABLED
	if (hw == CAN0) {
     fd2:	4b34      	ldr	r3, [pc, #208]	; (10a4 <_can_async_init+0xf0>)
     fd4:	4299      	cmp	r1, r3
     fd6:	d010      	beq.n	ffa <_can_async_init+0x46>
		hri_can_write_ILE_reg(dev->hw, CAN_ILE_EINT0);
	}
#endif

	/* Disable CCE to prevent Configuration Change */
	hri_can_clear_CCCR_CCE_bit(dev->hw);
     fd8:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_can_clear_CCCR_CCE_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg &= ~CAN_CCCR_CCE;
     fda:	6993      	ldr	r3, [r2, #24]
     fdc:	2102      	movs	r1, #2
     fde:	438b      	bics	r3, r1
     fe0:	6193      	str	r3, [r2, #24]
	hri_can_clear_CCCR_INIT_bit(dev->hw);
     fe2:	6802      	ldr	r2, [r0, #0]
	((Can *)hw)->CCCR.reg &= ~CAN_CCCR_INIT;
     fe4:	6993      	ldr	r3, [r2, #24]
     fe6:	3901      	subs	r1, #1
     fe8:	438b      	bics	r3, r1
     fea:	6193      	str	r3, [r2, #24]
	while (hri_can_get_CCCR_INIT_bit(dev->hw)) {
     fec:	6801      	ldr	r1, [r0, #0]
	tmp = (tmp & CAN_CCCR_INIT) >> CAN_CCCR_INIT_Pos;
     fee:	2201      	movs	r2, #1
	tmp = ((Can *)hw)->CCCR.reg;
     ff0:	698b      	ldr	r3, [r1, #24]
     ff2:	421a      	tst	r2, r3
     ff4:	d1fc      	bne.n	ff0 <_can_async_init+0x3c>
	};

	return ERR_NONE;
}
     ff6:	2000      	movs	r0, #0
     ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_can0_dev    = dev;
     ffa:	4b2b      	ldr	r3, [pc, #172]	; (10a8 <_can_async_init+0xf4>)
     ffc:	001a      	movs	r2, r3
     ffe:	c201      	stmia	r2!, {r0}
		dev->context = (void *)&_can0_context;
    1000:	492a      	ldr	r1, [pc, #168]	; (10ac <_can_async_init+0xf8>)
    1002:	6181      	str	r1, [r0, #24]
		hri_can_set_CCCR_reg(dev->hw, CONF_CAN0_CCCR_REG);
    1004:	6801      	ldr	r1, [r0, #0]
}

static inline void hri_can_set_CCCR_reg(const void *const hw, hri_can_cccr_reg_t mask)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= mask;
    1006:	698c      	ldr	r4, [r1, #24]
    1008:	618c      	str	r4, [r1, #24]
		hri_can_write_MRCFG_reg(dev->hw, CONF_CAN0_MRCFG_REG);
    100a:	6801      	ldr	r1, [r0, #0]
	((Can *)hw)->MRCFG.reg = data;
    100c:	2400      	movs	r4, #0
    100e:	608c      	str	r4, [r1, #8]
		hri_can_write_NBTP_reg(dev->hw, CONF_CAN0_BTP_REG);
    1010:	6801      	ldr	r1, [r0, #0]
}

static inline void hri_can_write_NBTP_reg(const void *const hw, hri_can_nbtp_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->NBTP.reg = data;
    1012:	4d27      	ldr	r5, [pc, #156]	; (10b0 <_can_async_init+0xfc>)
    1014:	61cd      	str	r5, [r1, #28]
		hri_can_write_DBTP_reg(dev->hw, CONF_CAN0_DBTP_REG);
    1016:	6801      	ldr	r1, [r0, #0]
	((Can *)hw)->DBTP.reg = data;
    1018:	4d26      	ldr	r5, [pc, #152]	; (10b4 <_can_async_init+0x100>)
    101a:	60cd      	str	r5, [r1, #12]
		hri_can_write_RXF0C_reg(dev->hw, CONF_CAN0_RXF0C_REG | CAN_RXF0C_F0SA((uint32_t)can0_rx_fifo));
    101c:	4d26      	ldr	r5, [pc, #152]	; (10b8 <_can_async_init+0x104>)
    101e:	042d      	lsls	r5, r5, #16
    1020:	0c2d      	lsrs	r5, r5, #16
    1022:	2180      	movs	r1, #128	; 0x80
    1024:	0289      	lsls	r1, r1, #10
    1026:	430d      	orrs	r5, r1
}

static inline void hri_can_write_RXF0C_reg(const void *const hw, hri_can_rxf0c_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->RXF0C.reg = data;
    1028:	26a0      	movs	r6, #160	; 0xa0
    102a:	6807      	ldr	r7, [r0, #0]
    102c:	51bd      	str	r5, [r7, r6]
}

static inline void hri_can_write_RXESC_reg(const void *const hw, hri_can_rxesc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->RXESC.reg = data;
    102e:	25bc      	movs	r5, #188	; 0xbc
    1030:	6806      	ldr	r6, [r0, #0]
    1032:	5174      	str	r4, [r6, r5]
}

static inline void hri_can_write_TXESC_reg(const void *const hw, hri_can_txesc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->TXESC.reg = data;
    1034:	350c      	adds	r5, #12
    1036:	6806      	ldr	r6, [r0, #0]
    1038:	5174      	str	r4, [r6, r5]
		hri_can_write_TXBC_reg(dev->hw, CONF_CAN0_TXBC_REG | CAN_TXBC_TBSA((uint32_t)can0_tx_fifo));
    103a:	4d20      	ldr	r5, [pc, #128]	; (10bc <_can_async_init+0x108>)
    103c:	042d      	lsls	r5, r5, #16
    103e:	0c2d      	lsrs	r5, r5, #16
    1040:	2680      	movs	r6, #128	; 0x80
    1042:	04b6      	lsls	r6, r6, #18
    1044:	4335      	orrs	r5, r6
	((Can *)hw)->TXBC.reg = data;
    1046:	26c0      	movs	r6, #192	; 0xc0
    1048:	6807      	ldr	r7, [r0, #0]
    104a:	51bd      	str	r5, [r7, r6]
		hri_can_write_TXEFC_reg(dev->hw, CONF_CAN0_TXEFC_REG | CAN_TXEFC_EFSA((uint32_t)can0_tx_event_fifo));
    104c:	0412      	lsls	r2, r2, #16
    104e:	0c12      	lsrs	r2, r2, #16
    1050:	430a      	orrs	r2, r1
}

static inline void hri_can_write_TXEFC_reg(const void *const hw, hri_can_txefc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->TXEFC.reg = data;
    1052:	25f0      	movs	r5, #240	; 0xf0
    1054:	6806      	ldr	r6, [r0, #0]
    1056:	5172      	str	r2, [r6, r5]
	((Can *)hw)->GFC.reg = data;
    1058:	3d70      	subs	r5, #112	; 0x70
    105a:	2228      	movs	r2, #40	; 0x28
    105c:	6806      	ldr	r6, [r0, #0]
    105e:	5172      	str	r2, [r6, r5]
		hri_can_write_SIDFC_reg(dev->hw, CONF_CAN0_SIDFC_REG | CAN_SIDFC_FLSSA((uint32_t)can0_rx_std_filter));
    1060:	001a      	movs	r2, r3
    1062:	3214      	adds	r2, #20
    1064:	0412      	lsls	r2, r2, #16
    1066:	0c12      	lsrs	r2, r2, #16
    1068:	430a      	orrs	r2, r1
	((Can *)hw)->SIDFC.reg = data;
    106a:	2684      	movs	r6, #132	; 0x84
    106c:	6807      	ldr	r7, [r0, #0]
    106e:	51ba      	str	r2, [r7, r6]
		hri_can_write_XIDFC_reg(dev->hw, CONF_CAN0_XIDFC_REG | CAN_XIDFC_FLESA((uint32_t)can0_rx_ext_filter));
    1070:	331c      	adds	r3, #28
    1072:	041b      	lsls	r3, r3, #16
    1074:	0c1b      	lsrs	r3, r3, #16
    1076:	430b      	orrs	r3, r1
	((Can *)hw)->XIDFC.reg = data;
    1078:	2288      	movs	r2, #136	; 0x88
    107a:	6801      	ldr	r1, [r0, #0]
    107c:	508b      	str	r3, [r1, r2]
	((Can *)hw)->XIDAM.reg = data;
    107e:	2390      	movs	r3, #144	; 0x90
    1080:	6802      	ldr	r2, [r0, #0]
    1082:	50d4      	str	r4, [r2, r3]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1084:	4b0e      	ldr	r3, [pc, #56]	; (10c0 <_can_async_init+0x10c>)
    1086:	2280      	movs	r2, #128	; 0x80
    1088:	0212      	lsls	r2, r2, #8
    108a:	515a      	str	r2, [r3, r5]
  __ASM volatile ("dsb 0xF":::"memory");
    108c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1090:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1094:	21c0      	movs	r1, #192	; 0xc0
    1096:	0049      	lsls	r1, r1, #1
    1098:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    109a:	601a      	str	r2, [r3, #0]
		hri_can_write_ILE_reg(dev->hw, CAN_ILE_EINT0);
    109c:	6803      	ldr	r3, [r0, #0]
	((Can *)hw)->ILE.reg = data;
    109e:	2201      	movs	r2, #1
    10a0:	65da      	str	r2, [r3, #92]	; 0x5c
    10a2:	e799      	b.n	fd8 <_can_async_init+0x24>
    10a4:	42001c00 	.word	0x42001c00
    10a8:	20000194 	.word	0x20000194
    10ac:	20000000 	.word	0x20000000
    10b0:	06020a07 	.word	0x06020a07
    10b4:	00000a33 	.word	0x00000a33
    10b8:	20000360 	.word	0x20000360
    10bc:	20000380 	.word	0x20000380
    10c0:	e000e100 	.word	0xe000e100

000010c4 <CAN0_Handler>:

/*
 * \brief CAN interrupt handler
 */
void CAN0_Handler(void)
{
    10c4:	b570      	push	{r4, r5, r6, lr}
	struct _can_async_device *dev = _can0_dev;
    10c6:	4b19      	ldr	r3, [pc, #100]	; (112c <CAN0_Handler+0x68>)
    10c8:	681d      	ldr	r5, [r3, #0]
	uint32_t                  ir;
	ir = hri_can_read_IR_reg(dev->hw);
    10ca:	682b      	ldr	r3, [r5, #0]
	return ((Can *)hw)->IR.reg;
    10cc:	6d1c      	ldr	r4, [r3, #80]	; 0x50

	if (ir & CAN_IR_RF0N) {
    10ce:	07e3      	lsls	r3, r4, #31
    10d0:	d414      	bmi.n	10fc <CAN0_Handler+0x38>
		dev->cb.rx_done(dev);
	}

	if (ir & CAN_IR_TC) {
    10d2:	05a3      	lsls	r3, r4, #22
    10d4:	d416      	bmi.n	1104 <CAN0_Handler+0x40>
		dev->cb.tx_done(dev);
	}

	if (ir & CAN_IR_BO) {
    10d6:	01a3      	lsls	r3, r4, #6
    10d8:	d418      	bmi.n	110c <CAN0_Handler+0x48>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
	}

	if (ir & CAN_IR_EW) {
    10da:	01e3      	lsls	r3, r4, #7
    10dc:	d41b      	bmi.n	1116 <CAN0_Handler+0x52>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
	}

	if (ir & CAN_IR_EP) {
    10de:	0223      	lsls	r3, r4, #8
    10e0:	d507      	bpl.n	10f2 <CAN0_Handler+0x2e>
		dev->cb.irq_handler(dev, hri_can_get_PSR_EP_bit(dev->hw) ? CAN_IRQ_EP : CAN_IRQ_EA);
    10e2:	682b      	ldr	r3, [r5, #0]
	return (((Can *)hw)->PSR.reg & CAN_PSR_EP) >> CAN_PSR_EP_Pos;
    10e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
    10e6:	0689      	lsls	r1, r1, #26
    10e8:	0fc9      	lsrs	r1, r1, #31
    10ea:	3101      	adds	r1, #1
    10ec:	0028      	movs	r0, r5
    10ee:	68eb      	ldr	r3, [r5, #12]
    10f0:	4798      	blx	r3
	}

	if (ir & CAN_IR_RF0L) {
    10f2:	0723      	lsls	r3, r4, #28
    10f4:	d414      	bmi.n	1120 <CAN0_Handler+0x5c>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
	}

	hri_can_write_IR_reg(dev->hw, ir);
    10f6:	682b      	ldr	r3, [r5, #0]
	((Can *)hw)->IR.reg = data;
    10f8:	651c      	str	r4, [r3, #80]	; 0x50
}
    10fa:	bd70      	pop	{r4, r5, r6, pc}
		dev->cb.rx_done(dev);
    10fc:	0028      	movs	r0, r5
    10fe:	68ab      	ldr	r3, [r5, #8]
    1100:	4798      	blx	r3
    1102:	e7e6      	b.n	10d2 <CAN0_Handler+0xe>
		dev->cb.tx_done(dev);
    1104:	0028      	movs	r0, r5
    1106:	686b      	ldr	r3, [r5, #4]
    1108:	4798      	blx	r3
    110a:	e7e4      	b.n	10d6 <CAN0_Handler+0x12>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
    110c:	2103      	movs	r1, #3
    110e:	0028      	movs	r0, r5
    1110:	68eb      	ldr	r3, [r5, #12]
    1112:	4798      	blx	r3
    1114:	e7e1      	b.n	10da <CAN0_Handler+0x16>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
    1116:	2100      	movs	r1, #0
    1118:	0028      	movs	r0, r5
    111a:	68eb      	ldr	r3, [r5, #12]
    111c:	4798      	blx	r3
    111e:	e7de      	b.n	10de <CAN0_Handler+0x1a>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
    1120:	2104      	movs	r1, #4
    1122:	0028      	movs	r0, r5
    1124:	68eb      	ldr	r3, [r5, #12]
    1126:	4798      	blx	r3
    1128:	e7e5      	b.n	10f6 <CAN0_Handler+0x32>
    112a:	46c0      	nop			; (mov r8, r8)
    112c:	20000194 	.word	0x20000194

00001130 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
    1130:	b510      	push	{r4, lr}
    1132:	0003      	movs	r3, r0
		return (ms * (freq / 10000) + 2) / 3 * 10;
    1134:	20c8      	movs	r0, #200	; 0xc8
    1136:	0080      	lsls	r0, r0, #2
    1138:	4358      	muls	r0, r3
    113a:	3002      	adds	r0, #2
    113c:	2103      	movs	r1, #3
    113e:	4b03      	ldr	r3, [pc, #12]	; (114c <_get_cycles_for_ms+0x1c>)
    1140:	4798      	blx	r3
    1142:	0003      	movs	r3, r0
    1144:	0080      	lsls	r0, r0, #2
    1146:	18c0      	adds	r0, r0, r3
    1148:	0040      	lsls	r0, r0, #1
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    114a:	bd10      	pop	{r4, pc}
    114c:	000011db 	.word	0x000011db

00001150 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
    1150:	3901      	subs	r1, #1
    1152:	d8fd      	bhi.n	1150 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
    1154:	4770      	bx	lr
	...

00001158 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1158:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    115a:	4b08      	ldr	r3, [pc, #32]	; (117c <_init_chip+0x24>)
    115c:	685a      	ldr	r2, [r3, #4]
    115e:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_osc32kctrl_init_sources();
    1160:	4b07      	ldr	r3, [pc, #28]	; (1180 <_init_chip+0x28>)
    1162:	4798      	blx	r3
	_oscctrl_init_sources();
    1164:	4b07      	ldr	r3, [pc, #28]	; (1184 <_init_chip+0x2c>)
    1166:	4798      	blx	r3
	_mclk_init();
    1168:	4b07      	ldr	r3, [pc, #28]	; (1188 <_init_chip+0x30>)
    116a:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    116c:	4b07      	ldr	r3, [pc, #28]	; (118c <_init_chip+0x34>)
    116e:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    1170:	20ff      	movs	r0, #255	; 0xff
    1172:	4b07      	ldr	r3, [pc, #28]	; (1190 <_init_chip+0x38>)
    1174:	4798      	blx	r3

	_div_init();
    1176:	4b07      	ldr	r3, [pc, #28]	; (1194 <_init_chip+0x3c>)
    1178:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    117a:	bd10      	pop	{r4, pc}
    117c:	41004000 	.word	0x41004000
    1180:	000012c9 	.word	0x000012c9
    1184:	000012e1 	.word	0x000012e1
    1188:	000012bd 	.word	0x000012bd
    118c:	00001321 	.word	0x00001321
    1190:	00001281 	.word	0x00001281
    1194:	00001199 	.word	0x00001199

00001198 <_div_init>:

static inline void hri_divas_write_CTRLA_DLZ_bit(const void *const hw, bool value)
{
	uint8_t tmp;
	DIVAS_CRITICAL_SECTION_ENTER();
	tmp = ((Divas *)hw)->CTRLA.reg;
    1198:	2290      	movs	r2, #144	; 0x90
    119a:	05d2      	lsls	r2, r2, #23
    119c:	7813      	ldrb	r3, [r2, #0]
	tmp &= ~DIVAS_CTRLA_DLZ;
    119e:	2102      	movs	r1, #2
    11a0:	438b      	bics	r3, r1
	tmp |= value << DIVAS_CTRLA_DLZ_Pos;
	((Divas *)hw)->CTRLA.reg = tmp;
    11a2:	7013      	strb	r3, [r2, #0]
 * \brief Initialize hardware for division operation
 */
void _div_init(void)
{
	hri_divas_write_CTRLA_DLZ_bit(DIVAS, CONF_DIVAS_DLZ);
}
    11a4:	4770      	bx	lr

000011a6 <__aeabi_idiv>:

/**
 * \brief Do signed division
 */
int32_t __aeabi_idiv(int32_t numerator, int32_t denominator)
{
    11a6:	b510      	push	{r4, lr}
    11a8:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    11aa:	f3ef 8310 	mrs	r3, PRIMASK
	int32_t res;
	_DIVAS_CRITICAL_ENTER();
    11ae:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    11b0:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    11b2:	2390      	movs	r3, #144	; 0x90
    11b4:	05db      	lsls	r3, r3, #23
    11b6:	781a      	ldrb	r2, [r3, #0]
    11b8:	2401      	movs	r4, #1
    11ba:	4322      	orrs	r2, r4
    11bc:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    11be:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    11c0:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    11c2:	001a      	movs	r2, r3
    11c4:	7913      	ldrb	r3, [r2, #4]
    11c6:	07db      	lsls	r3, r3, #31
    11c8:	d4fc      	bmi.n	11c4 <__aeabi_idiv+0x1e>
	_divas_div(1, numerator, denominator);
	res = _divas_result32();
    11ca:	2390      	movs	r3, #144	; 0x90
    11cc:	05db      	lsls	r3, r3, #23
    11ce:	6918      	ldr	r0, [r3, #16]
	_DIVAS_CRITICAL_LEAVE();
    11d0:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    11d2:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    11d6:	b002      	add	sp, #8
    11d8:	bd10      	pop	{r4, pc}

000011da <__aeabi_uidiv>:

/**
 * \brief Do unsigned division
 */
uint32_t __aeabi_uidiv(uint32_t numerator, uint32_t denominator)
{
    11da:	b510      	push	{r4, lr}
    11dc:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    11de:	f3ef 8310 	mrs	r3, PRIMASK
	uint32_t res;
	_DIVAS_CRITICAL_ENTER();
    11e2:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    11e4:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    11e6:	2390      	movs	r3, #144	; 0x90
    11e8:	05db      	lsls	r3, r3, #23
    11ea:	781a      	ldrb	r2, [r3, #0]
    11ec:	2401      	movs	r4, #1
    11ee:	43a2      	bics	r2, r4
    11f0:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    11f2:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    11f4:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    11f6:	001a      	movs	r2, r3
    11f8:	7913      	ldrb	r3, [r2, #4]
    11fa:	07db      	lsls	r3, r3, #31
    11fc:	d4fc      	bmi.n	11f8 <__aeabi_uidiv+0x1e>
	_divas_div(0, numerator, denominator);
	res = _divas_result32();
    11fe:	2390      	movs	r3, #144	; 0x90
    1200:	05db      	lsls	r3, r3, #23
    1202:	6918      	ldr	r0, [r3, #16]
	_DIVAS_CRITICAL_LEAVE();
    1204:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    1206:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    120a:	b002      	add	sp, #8
    120c:	bd10      	pop	{r4, pc}
	...

00001210 <__aeabi_idivmod>:

/**
 * \brief Do signed division, return result and remainder
 */
uint64_t __aeabi_idivmod(int numerator, int denominator)
{
    1210:	b510      	push	{r4, lr}
    1212:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    1214:	f3ef 8310 	mrs	r3, PRIMASK
	uint64_t res;
	_DIVAS_CRITICAL_ENTER();
    1218:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    121a:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    121c:	2390      	movs	r3, #144	; 0x90
    121e:	05db      	lsls	r3, r3, #23
    1220:	781a      	ldrb	r2, [r3, #0]
    1222:	2401      	movs	r4, #1
    1224:	4322      	orrs	r2, r4
    1226:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    1228:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    122a:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    122c:	001a      	movs	r2, r3
    122e:	7913      	ldrb	r3, [r2, #4]
    1230:	07db      	lsls	r3, r3, #31
    1232:	d4fc      	bmi.n	122e <__aeabi_idivmod+0x1e>
	_divas_div(1, numerator, denominator);
	res = _divas_result64();
    1234:	4b03      	ldr	r3, [pc, #12]	; (1244 <__aeabi_idivmod+0x34>)
    1236:	6818      	ldr	r0, [r3, #0]
    1238:	6859      	ldr	r1, [r3, #4]
	_DIVAS_CRITICAL_LEAVE();
    123a:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    123c:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    1240:	b002      	add	sp, #8
    1242:	bd10      	pop	{r4, pc}
    1244:	48000010 	.word	0x48000010

00001248 <__aeabi_uidivmod>:

/**
 * \brief Do unsigned division, return result and remainder
 */
uint64_t __aeabi_uidivmod(unsigned numerator, unsigned denominator)
{
    1248:	b510      	push	{r4, lr}
    124a:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    124c:	f3ef 8310 	mrs	r3, PRIMASK
	uint64_t res;
	_DIVAS_CRITICAL_ENTER();
    1250:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    1252:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    1254:	2390      	movs	r3, #144	; 0x90
    1256:	05db      	lsls	r3, r3, #23
    1258:	781a      	ldrb	r2, [r3, #0]
    125a:	2401      	movs	r4, #1
    125c:	43a2      	bics	r2, r4
    125e:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    1260:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    1262:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    1264:	001a      	movs	r2, r3
    1266:	7913      	ldrb	r3, [r2, #4]
    1268:	07db      	lsls	r3, r3, #31
    126a:	d4fc      	bmi.n	1266 <__aeabi_uidivmod+0x1e>
	_divas_div(0, numerator, denominator);
	res = _divas_result64();
    126c:	4b03      	ldr	r3, [pc, #12]	; (127c <__aeabi_uidivmod+0x34>)
    126e:	6818      	ldr	r0, [r3, #0]
    1270:	6859      	ldr	r1, [r3, #4]
	_DIVAS_CRITICAL_LEAVE();
    1272:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    1274:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    1278:	b002      	add	sp, #8
    127a:	bd10      	pop	{r4, pc}
    127c:	48000010 	.word	0x48000010

00001280 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    1280:	07c3      	lsls	r3, r0, #31
    1282:	d507      	bpl.n	1294 <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    1284:	4a09      	ldr	r2, [pc, #36]	; (12ac <_gclk_init_generators_by_fref+0x2c>)
    1286:	4b0a      	ldr	r3, [pc, #40]	; (12b0 <_gclk_init_generators_by_fref+0x30>)
    1288:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    128a:	0019      	movs	r1, r3
    128c:	4a09      	ldr	r2, [pc, #36]	; (12b4 <_gclk_init_generators_by_fref+0x34>)
    128e:	684b      	ldr	r3, [r1, #4]
    1290:	4213      	tst	r3, r2
    1292:	d1fc      	bne.n	128e <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    1294:	0783      	lsls	r3, r0, #30
    1296:	d507      	bpl.n	12a8 <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    1298:	4a07      	ldr	r2, [pc, #28]	; (12b8 <_gclk_init_generators_by_fref+0x38>)
    129a:	4b05      	ldr	r3, [pc, #20]	; (12b0 <_gclk_init_generators_by_fref+0x30>)
    129c:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    129e:	0019      	movs	r1, r3
    12a0:	4a04      	ldr	r2, [pc, #16]	; (12b4 <_gclk_init_generators_by_fref+0x34>)
    12a2:	684b      	ldr	r3, [r1, #4]
    12a4:	4213      	tst	r3, r2
    12a6:	d1fc      	bne.n	12a2 <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SOURCE);
	}
#endif
}
    12a8:	4770      	bx	lr
    12aa:	46c0      	nop			; (mov r8, r8)
    12ac:	00010106 	.word	0x00010106
    12b0:	40001c00 	.word	0x40001c00
    12b4:	000007fd 	.word	0x000007fd
    12b8:	00080106 	.word	0x00080106

000012bc <_mclk_init>:
	((Mclk *)hw)->CPUDIV.reg = data;
    12bc:	2201      	movs	r2, #1
    12be:	4b01      	ldr	r3, [pc, #4]	; (12c4 <_mclk_init+0x8>)
    12c0:	711a      	strb	r2, [r3, #4]
 */
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    12c2:	4770      	bx	lr
    12c4:	40000800 	.word	0x40000800

000012c8 <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    12c8:	4b04      	ldr	r3, [pc, #16]	; (12dc <_osc32kctrl_init_sources+0x14>)
    12ca:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    12cc:	21f8      	movs	r1, #248	; 0xf8
    12ce:	0149      	lsls	r1, r1, #5
    12d0:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    12d2:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    12d4:	2201      	movs	r2, #1
    12d6:	611a      	str	r2, [r3, #16]
		;
#endif
#endif
	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    12d8:	4770      	bx	lr
    12da:	46c0      	nop			; (mov r8, r8)
    12dc:	40001400 	.word	0x40001400

000012e0 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC48MCTRL_reg(const void *const hw, hri_oscctrl_osc48mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MCTRL.reg = data;
    12e0:	4b0e      	ldr	r3, [pc, #56]	; (131c <_oscctrl_init_sources+0x3c>)
    12e2:	2202      	movs	r2, #2
    12e4:	751a      	strb	r2, [r3, #20]
}

static inline void hri_oscctrl_write_OSC48MDIV_reg(const void *const hw, hri_oscctrl_osc48mdiv_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MDIV.reg = data;
    12e6:	3203      	adds	r2, #3
    12e8:	755a      	strb	r2, [r3, #21]
	while (((Oscctrl *)hw)->OSC48MSYNCBUSY.reg & reg) {
    12ea:	0019      	movs	r1, r3
    12ec:	3a01      	subs	r2, #1
    12ee:	698b      	ldr	r3, [r1, #24]
    12f0:	421a      	tst	r2, r3
    12f2:	d1fc      	bne.n	12ee <_oscctrl_init_sources+0xe>
	return (((Oscctrl *)hw)->OSC48MSYNCBUSY.reg & OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV)
    12f4:	4909      	ldr	r1, [pc, #36]	; (131c <_oscctrl_init_sources+0x3c>)
#if CONF_OSC48M_CONFIG == 1
	hri_oscctrl_write_OSC48MCTRL_reg(hw,
	                                 (CONF_OSC48M_RUNSTDBY << OSCCTRL_OSC48MCTRL_RUNSTDBY_Pos)
	                                     | (CONF_OSC48M_ENABLE << OSCCTRL_OSC48MCTRL_ENABLE_Pos));
	hri_oscctrl_write_OSC48MDIV_reg(hw, OSCCTRL_OSC48MDIV_DIV(CONF_OSC48M_DIV));
	while (hri_oscctrl_get_OSC48MSYNCBUSY_OSC48MDIV_bit(hw))
    12f6:	2204      	movs	r2, #4
    12f8:	698b      	ldr	r3, [r1, #24]
    12fa:	421a      	tst	r2, r3
    12fc:	d1fc      	bne.n	12f8 <_oscctrl_init_sources+0x18>
}

static inline void hri_oscctrl_write_OSC48MSTUP_reg(const void *const hw, hri_oscctrl_osc48mstup_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MSTUP.reg = data;
    12fe:	2207      	movs	r2, #7
    1300:	4b06      	ldr	r3, [pc, #24]	; (131c <_oscctrl_init_sources+0x3c>)
    1302:	759a      	strb	r2, [r3, #22]
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC48MRDY) >> OSCCTRL_STATUS_OSC48MRDY_Pos;
    1304:	0019      	movs	r1, r3
#endif
#endif

#if CONF_OSC48M_CONFIG == 1
#if CONF_OSC48M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC48MRDY_bit(hw))
    1306:	3209      	adds	r2, #9
    1308:	68cb      	ldr	r3, [r1, #12]
    130a:	421a      	tst	r2, r3
    130c:	d0fc      	beq.n	1308 <_oscctrl_init_sources+0x28>
	((Oscctrl *)hw)->OSC48MCTRL.reg |= OSCCTRL_OSC48MCTRL_ONDEMAND;
    130e:	4a03      	ldr	r2, [pc, #12]	; (131c <_oscctrl_init_sources+0x3c>)
    1310:	7d13      	ldrb	r3, [r2, #20]
    1312:	2180      	movs	r1, #128	; 0x80
    1314:	430b      	orrs	r3, r1
    1316:	7513      	strb	r3, [r2, #20]
#if CONF_OSC48M_ONDEMAND == 1
	hri_oscctrl_set_OSC48MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    1318:	4770      	bx	lr
    131a:	46c0      	nop			; (mov r8, r8)
    131c:	40001000 	.word	0x40001000

00001320 <_oscctrl_init_referenced_generators>:
#if CONF_DPLL_ONDEMAND == 1
	hri_oscctrl_set_DPLLCTRLA_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    1320:	4770      	bx	lr

00001322 <_spi_sync_enable>:
	};
}

static inline bool hri_sercomspi_is_syncing(const void *const hw, hri_sercomspi_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1322:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1324:	07db      	lsls	r3, r3, #31
    1326:	d409      	bmi.n	133c <_spi_sync_enable+0x1a>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    1328:	6803      	ldr	r3, [r0, #0]
    132a:	2202      	movs	r2, #2
    132c:	4313      	orrs	r3, r2
    132e:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1330:	3201      	adds	r2, #1
    1332:	69c3      	ldr	r3, [r0, #28]
    1334:	421a      	tst	r2, r3
    1336:	d1fc      	bne.n	1332 <_spi_sync_enable+0x10>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    1338:	2000      	movs	r0, #0
}
    133a:	4770      	bx	lr
		return ERR_BUSY;
    133c:	2004      	movs	r0, #4
    133e:	4240      	negs	r0, r0
    1340:	e7fb      	b.n	133a <_spi_sync_enable+0x18>
	...

00001344 <_usart_init>:
{
    1344:	b510      	push	{r4, lr}
    1346:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1348:	4b1f      	ldr	r3, [pc, #124]	; (13c8 <_usart_init+0x84>)
    134a:	18c3      	adds	r3, r0, r3
    134c:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    134e:	b2db      	uxtb	r3, r3
    1350:	2b04      	cmp	r3, #4
    1352:	d004      	beq.n	135e <_usart_init+0x1a>
	ASSERT(false);
    1354:	4a1d      	ldr	r2, [pc, #116]	; (13cc <_usart_init+0x88>)
    1356:	491e      	ldr	r1, [pc, #120]	; (13d0 <_usart_init+0x8c>)
    1358:	2000      	movs	r0, #0
    135a:	4b1e      	ldr	r3, [pc, #120]	; (13d4 <_usart_init+0x90>)
    135c:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    135e:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    1360:	07db      	lsls	r3, r3, #31
    1362:	d418      	bmi.n	1396 <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1364:	2203      	movs	r2, #3
    1366:	69e3      	ldr	r3, [r4, #28]
    1368:	421a      	tst	r2, r3
    136a:	d1fc      	bne.n	1366 <_usart_init+0x22>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_SWRST | SERCOM_USART_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    136c:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    136e:	079b      	lsls	r3, r3, #30
    1370:	d50b      	bpl.n	138a <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    1372:	6823      	ldr	r3, [r4, #0]
    1374:	2202      	movs	r2, #2
    1376:	4393      	bics	r3, r2
    1378:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    137a:	3201      	adds	r2, #1
    137c:	69e3      	ldr	r3, [r4, #28]
    137e:	421a      	tst	r2, r3
    1380:	d1fc      	bne.n	137c <_usart_init+0x38>
    1382:	2202      	movs	r2, #2
    1384:	69e3      	ldr	r3, [r4, #28]
    1386:	421a      	tst	r2, r3
    1388:	d1fc      	bne.n	1384 <_usart_init+0x40>
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
    138a:	2305      	movs	r3, #5
    138c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    138e:	2203      	movs	r2, #3
    1390:	69e3      	ldr	r3, [r4, #28]
    1392:	421a      	tst	r2, r3
    1394:	d1fc      	bne.n	1390 <_usart_init+0x4c>
    1396:	2201      	movs	r2, #1
    1398:	69e3      	ldr	r3, [r4, #28]
    139a:	421a      	tst	r2, r3
    139c:	d1fc      	bne.n	1398 <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    139e:	4b0e      	ldr	r3, [pc, #56]	; (13d8 <_usart_init+0x94>)
    13a0:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13a2:	2203      	movs	r2, #3
    13a4:	69e3      	ldr	r3, [r4, #28]
    13a6:	421a      	tst	r2, r3
    13a8:	d1fc      	bne.n	13a4 <_usart_init+0x60>
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
    13aa:	23c0      	movs	r3, #192	; 0xc0
    13ac:	029b      	lsls	r3, r3, #10
    13ae:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    13b0:	2207      	movs	r2, #7
    13b2:	69e3      	ldr	r3, [r4, #28]
    13b4:	421a      	tst	r2, r3
    13b6:	d1fc      	bne.n	13b2 <_usart_init+0x6e>
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
    13b8:	4b08      	ldr	r3, [pc, #32]	; (13dc <_usart_init+0x98>)
    13ba:	81a3      	strh	r3, [r4, #12]
}

static inline void hri_sercomusart_write_RXPL_reg(const void *const hw, hri_sercomusart_rxpl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.RXPL.reg = data;
    13bc:	2300      	movs	r3, #0
    13be:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    13c0:	2230      	movs	r2, #48	; 0x30
    13c2:	54a3      	strb	r3, [r4, r2]
}
    13c4:	2000      	movs	r0, #0
    13c6:	bd10      	pop	{r4, pc}
    13c8:	bdfffc00 	.word	0xbdfffc00
    13cc:	0000025e 	.word	0x0000025e
    13d0:	00005d3c 	.word	0x00005d3c
    13d4:	00000cad 	.word	0x00000cad
    13d8:	40100004 	.word	0x40100004
    13dc:	ffffd8ad 	.word	0xffffd8ad

000013e0 <_usart_async_init>:
{
    13e0:	b570      	push	{r4, r5, r6, lr}
    13e2:	0005      	movs	r5, r0
    13e4:	000c      	movs	r4, r1
	ASSERT(device);
    13e6:	1e43      	subs	r3, r0, #1
    13e8:	4198      	sbcs	r0, r3
    13ea:	b2c0      	uxtb	r0, r0
    13ec:	22c4      	movs	r2, #196	; 0xc4
    13ee:	4914      	ldr	r1, [pc, #80]	; (1440 <_usart_async_init+0x60>)
    13f0:	4b14      	ldr	r3, [pc, #80]	; (1444 <_usart_async_init+0x64>)
    13f2:	4798      	blx	r3
	init_status = _usart_init(hw);
    13f4:	0020      	movs	r0, r4
    13f6:	4b14      	ldr	r3, [pc, #80]	; (1448 <_usart_async_init+0x68>)
    13f8:	4798      	blx	r3
	if (init_status) {
    13fa:	2800      	cmp	r0, #0
    13fc:	d000      	beq.n	1400 <_usart_async_init+0x20>
}
    13fe:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    1400:	61ac      	str	r4, [r5, #24]
	if (hw == SERCOM4) {
    1402:	4b12      	ldr	r3, [pc, #72]	; (144c <_usart_async_init+0x6c>)
    1404:	429c      	cmp	r4, r3
    1406:	d017      	beq.n	1438 <_usart_async_init+0x58>
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1408:	4b11      	ldr	r3, [pc, #68]	; (1450 <_usart_async_init+0x70>)
    140a:	469c      	mov	ip, r3
    140c:	4464      	add	r4, ip
    140e:	0aa4      	lsrs	r4, r4, #10
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    1410:	3409      	adds	r4, #9
  if ((int32_t)(IRQn) >= 0)
    1412:	b2e3      	uxtb	r3, r4
    1414:	0622      	lsls	r2, r4, #24
    1416:	d4f2      	bmi.n	13fe <_usart_async_init+0x1e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1418:	221f      	movs	r2, #31
    141a:	401a      	ands	r2, r3
    141c:	2301      	movs	r3, #1
    141e:	4093      	lsls	r3, r2
    1420:	4a0c      	ldr	r2, [pc, #48]	; (1454 <_usart_async_init+0x74>)
    1422:	2180      	movs	r1, #128	; 0x80
    1424:	5053      	str	r3, [r2, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1426:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    142a:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    142e:	3101      	adds	r1, #1
    1430:	31ff      	adds	r1, #255	; 0xff
    1432:	5053      	str	r3, [r2, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1434:	6013      	str	r3, [r2, #0]
    1436:	e7e2      	b.n	13fe <_usart_async_init+0x1e>
		_sercom4_dev = (struct _usart_async_device *)dev;
    1438:	4b07      	ldr	r3, [pc, #28]	; (1458 <_usart_async_init+0x78>)
    143a:	601d      	str	r5, [r3, #0]
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    143c:	230d      	movs	r3, #13
    143e:	e7eb      	b.n	1418 <_usart_async_init+0x38>
    1440:	00005d3c 	.word	0x00005d3c
    1444:	00000cad 	.word	0x00000cad
    1448:	00001345 	.word	0x00001345
    144c:	42001400 	.word	0x42001400
    1450:	bdfffc00 	.word	0xbdfffc00
    1454:	e000e100 	.word	0xe000e100
    1458:	200001c0 	.word	0x200001c0

0000145c <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    145c:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    145e:	6813      	ldr	r3, [r2, #0]
    1460:	2102      	movs	r1, #2
    1462:	430b      	orrs	r3, r1
    1464:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1466:	3101      	adds	r1, #1
    1468:	69d3      	ldr	r3, [r2, #28]
    146a:	4219      	tst	r1, r3
    146c:	d1fc      	bne.n	1468 <_usart_async_enable+0xc>
}
    146e:	4770      	bx	lr

00001470 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1470:	6983      	ldr	r3, [r0, #24]
    1472:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    1474:	8519      	strh	r1, [r3, #40]	; 0x28
}
    1476:	4770      	bx	lr

00001478 <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    1478:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    147a:	2201      	movs	r2, #1
    147c:	759a      	strb	r2, [r3, #22]
}
    147e:	4770      	bx	lr

00001480 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    1480:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1482:	2202      	movs	r2, #2
    1484:	759a      	strb	r2, [r3, #22]
}
    1486:	4770      	bx	lr

00001488 <_usart_async_set_irq_state>:
{
    1488:	b570      	push	{r4, r5, r6, lr}
    148a:	0004      	movs	r4, r0
    148c:	000d      	movs	r5, r1
    148e:	0016      	movs	r6, r2
	ASSERT(device);
    1490:	1e43      	subs	r3, r0, #1
    1492:	4198      	sbcs	r0, r3
    1494:	b2c0      	uxtb	r0, r0
    1496:	4a16      	ldr	r2, [pc, #88]	; (14f0 <_usart_async_set_irq_state+0x68>)
    1498:	4916      	ldr	r1, [pc, #88]	; (14f4 <_usart_async_set_irq_state+0x6c>)
    149a:	4b17      	ldr	r3, [pc, #92]	; (14f8 <_usart_async_set_irq_state+0x70>)
    149c:	4798      	blx	r3
	if (USART_ASYNC_BYTE_SENT == type || USART_ASYNC_TX_DONE == type) {
    149e:	2302      	movs	r3, #2
    14a0:	002a      	movs	r2, r5
    14a2:	439a      	bics	r2, r3
    14a4:	d10e      	bne.n	14c4 <_usart_async_set_irq_state+0x3c>
		hri_sercomusart_write_INTEN_DRE_bit(device->hw, state);
    14a6:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    14a8:	2e00      	cmp	r6, #0
    14aa:	d105      	bne.n	14b8 <_usart_async_set_irq_state+0x30>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    14ac:	2201      	movs	r2, #1
    14ae:	751a      	strb	r2, [r3, #20]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    14b0:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    14b2:	3201      	adds	r2, #1
    14b4:	751a      	strb	r2, [r3, #20]
}
    14b6:	bd70      	pop	{r4, r5, r6, pc}
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    14b8:	2201      	movs	r2, #1
    14ba:	759a      	strb	r2, [r3, #22]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    14bc:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    14be:	3201      	adds	r2, #1
    14c0:	759a      	strb	r2, [r3, #22]
    14c2:	e7f8      	b.n	14b6 <_usart_async_set_irq_state+0x2e>
	} else if (USART_ASYNC_RX_DONE == type) {
    14c4:	2d01      	cmp	r5, #1
    14c6:	d007      	beq.n	14d8 <_usart_async_set_irq_state+0x50>
	} else if (USART_ASYNC_ERROR == type) {
    14c8:	2d03      	cmp	r5, #3
    14ca:	d1f4      	bne.n	14b6 <_usart_async_set_irq_state+0x2e>
		hri_sercomusart_write_INTEN_ERROR_bit(device->hw, state);
    14cc:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    14ce:	2e00      	cmp	r6, #0
    14d0:	d00b      	beq.n	14ea <_usart_async_set_irq_state+0x62>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_ERROR;
    14d2:	2280      	movs	r2, #128	; 0x80
    14d4:	759a      	strb	r2, [r3, #22]
}
    14d6:	e7ee      	b.n	14b6 <_usart_async_set_irq_state+0x2e>
		hri_sercomusart_write_INTEN_RXC_bit(device->hw, state);
    14d8:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    14da:	2e00      	cmp	r6, #0
    14dc:	d102      	bne.n	14e4 <_usart_async_set_irq_state+0x5c>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_RXC;
    14de:	2204      	movs	r2, #4
    14e0:	751a      	strb	r2, [r3, #20]
    14e2:	e7e8      	b.n	14b6 <_usart_async_set_irq_state+0x2e>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_RXC;
    14e4:	2204      	movs	r2, #4
    14e6:	759a      	strb	r2, [r3, #22]
    14e8:	e7e5      	b.n	14b6 <_usart_async_set_irq_state+0x2e>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_ERROR;
    14ea:	2280      	movs	r2, #128	; 0x80
    14ec:	751a      	strb	r2, [r3, #20]
    14ee:	e7e2      	b.n	14b6 <_usart_async_set_irq_state+0x2e>
    14f0:	0000021e 	.word	0x0000021e
    14f4:	00005d3c 	.word	0x00005d3c
    14f8:	00000cad 	.word	0x00000cad

000014fc <SERCOM4_Handler>:

	return NULL;
}

void SERCOM4_Handler(void)
{
    14fc:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom4_dev);
    14fe:	4b19      	ldr	r3, [pc, #100]	; (1564 <SERCOM4_Handler+0x68>)
    1500:	6818      	ldr	r0, [r3, #0]
	void *hw = device->hw;
    1502:	6984      	ldr	r4, [r0, #24]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    1504:	7e23      	ldrb	r3, [r4, #24]
	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
    1506:	07db      	lsls	r3, r3, #31
    1508:	d502      	bpl.n	1510 <SERCOM4_Handler+0x14>
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
    150a:	7da3      	ldrb	r3, [r4, #22]
    150c:	07db      	lsls	r3, r3, #31
    150e:	d40f      	bmi.n	1530 <SERCOM4_Handler+0x34>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1510:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
    1512:	079b      	lsls	r3, r3, #30
    1514:	d502      	bpl.n	151c <SERCOM4_Handler+0x20>
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
    1516:	7da3      	ldrb	r3, [r4, #22]
    1518:	079b      	lsls	r3, r3, #30
    151a:	d40e      	bmi.n	153a <SERCOM4_Handler+0x3e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    151c:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
    151e:	075b      	lsls	r3, r3, #29
    1520:	d515      	bpl.n	154e <SERCOM4_Handler+0x52>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
    1522:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
    1524:	2337      	movs	r3, #55	; 0x37
    1526:	421a      	tst	r2, r3
    1528:	d00c      	beq.n	1544 <SERCOM4_Handler+0x48>
	((Sercom *)hw)->USART.STATUS.reg = mask;
    152a:	3348      	adds	r3, #72	; 0x48
    152c:	8363      	strh	r3, [r4, #26]
}
    152e:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    1530:	2301      	movs	r3, #1
    1532:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
    1534:	6803      	ldr	r3, [r0, #0]
    1536:	4798      	blx	r3
    1538:	e7f9      	b.n	152e <SERCOM4_Handler+0x32>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    153a:	2302      	movs	r3, #2
    153c:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
    153e:	6883      	ldr	r3, [r0, #8]
    1540:	4798      	blx	r3
    1542:	e7f4      	b.n	152e <SERCOM4_Handler+0x32>
	return ((Sercom *)hw)->USART.DATA.reg;
    1544:	8d21      	ldrh	r1, [r4, #40]	; 0x28
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
    1546:	b2c9      	uxtb	r1, r1
    1548:	6843      	ldr	r3, [r0, #4]
    154a:	4798      	blx	r3
    154c:	e7ef      	b.n	152e <SERCOM4_Handler+0x32>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
    154e:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
    1550:	09db      	lsrs	r3, r3, #7
    1552:	d0ec      	beq.n	152e <SERCOM4_Handler+0x32>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
    1554:	2380      	movs	r3, #128	; 0x80
    1556:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
    1558:	68c3      	ldr	r3, [r0, #12]
    155a:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
    155c:	8b63      	ldrh	r3, [r4, #26]
    155e:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
    1560:	8363      	strh	r3, [r4, #26]
}
    1562:	e7e4      	b.n	152e <SERCOM4_Handler+0x32>
    1564:	200001c0 	.word	0x200001c0

00001568 <_spi_m_sync_init>:

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    1568:	b570      	push	{r4, r5, r6, lr}
    156a:	0005      	movs	r5, r0
    156c:	000c      	movs	r4, r1
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    156e:	4b35      	ldr	r3, [pc, #212]	; (1644 <_spi_m_sync_init+0xdc>)
    1570:	18cb      	adds	r3, r1, r3
    1572:	0a9b      	lsrs	r3, r3, #10
		if (sercomspi_regs[i].n == n) {
    1574:	b2db      	uxtb	r3, r3
    1576:	2b02      	cmp	r3, #2
    1578:	d00b      	beq.n	1592 <_spi_m_sync_init+0x2a>
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    157a:	2800      	cmp	r0, #0
    157c:	d051      	beq.n	1622 <_spi_m_sync_init+0xba>
    157e:	1e60      	subs	r0, r4, #1
    1580:	4184      	sbcs	r4, r0
    1582:	b2e0      	uxtb	r0, r4
    1584:	4a30      	ldr	r2, [pc, #192]	; (1648 <_spi_m_sync_init+0xe0>)
    1586:	4931      	ldr	r1, [pc, #196]	; (164c <_spi_m_sync_init+0xe4>)
    1588:	4b31      	ldr	r3, [pc, #196]	; (1650 <_spi_m_sync_init+0xe8>)
    158a:	4798      	blx	r3

	if (regs == NULL) {
		return ERR_INVALID_ARG;
    158c:	200d      	movs	r0, #13
    158e:	4240      	negs	r0, r0
    1590:	e046      	b.n	1620 <_spi_m_sync_init+0xb8>
	ASSERT(dev && hw);
    1592:	2800      	cmp	r0, #0
    1594:	d14d      	bne.n	1632 <_spi_m_sync_init+0xca>
    1596:	4a2c      	ldr	r2, [pc, #176]	; (1648 <_spi_m_sync_init+0xe0>)
    1598:	492c      	ldr	r1, [pc, #176]	; (164c <_spi_m_sync_init+0xe4>)
    159a:	2000      	movs	r0, #0
    159c:	4b2c      	ldr	r3, [pc, #176]	; (1650 <_spi_m_sync_init+0xe8>)
    159e:	4798      	blx	r3
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    15a0:	69e3      	ldr	r3, [r4, #28]
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    15a2:	07db      	lsls	r3, r3, #31
    15a4:	d418      	bmi.n	15d8 <_spi_m_sync_init+0x70>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15a6:	2203      	movs	r2, #3
    15a8:	69e3      	ldr	r3, [r4, #28]
    15aa:	421a      	tst	r2, r3
    15ac:	d1fc      	bne.n	15a8 <_spi_m_sync_init+0x40>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    15ae:	6823      	ldr	r3, [r4, #0]
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    15b0:	079b      	lsls	r3, r3, #30
    15b2:	d50b      	bpl.n	15cc <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    15b4:	6823      	ldr	r3, [r4, #0]
    15b6:	2202      	movs	r2, #2
    15b8:	4393      	bics	r3, r2
    15ba:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15bc:	3201      	adds	r2, #1
    15be:	69e3      	ldr	r3, [r4, #28]
    15c0:	421a      	tst	r2, r3
    15c2:	d1fc      	bne.n	15be <_spi_m_sync_init+0x56>
    15c4:	2202      	movs	r2, #2
    15c6:	69e3      	ldr	r3, [r4, #28]
    15c8:	421a      	tst	r2, r3
    15ca:	d1fc      	bne.n	15c6 <_spi_m_sync_init+0x5e>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    15cc:	230d      	movs	r3, #13
    15ce:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15d0:	2203      	movs	r2, #3
    15d2:	69e3      	ldr	r3, [r4, #28]
    15d4:	421a      	tst	r2, r3
    15d6:	d1fc      	bne.n	15d2 <_spi_m_sync_init+0x6a>
    15d8:	2201      	movs	r2, #1
    15da:	69e3      	ldr	r3, [r4, #28]
    15dc:	421a      	tst	r2, r3
    15de:	d1fc      	bne.n	15da <_spi_m_sync_init+0x72>
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    15e0:	602c      	str	r4, [r5, #0]
	ASSERT(hw && regs);
    15e2:	0020      	movs	r0, r4
    15e4:	1e43      	subs	r3, r0, #1
    15e6:	4198      	sbcs	r0, r3
    15e8:	b2c0      	uxtb	r0, r0
    15ea:	4a1a      	ldr	r2, [pc, #104]	; (1654 <_spi_m_sync_init+0xec>)
    15ec:	4917      	ldr	r1, [pc, #92]	; (164c <_spi_m_sync_init+0xe4>)
    15ee:	4b18      	ldr	r3, [pc, #96]	; (1650 <_spi_m_sync_init+0xe8>)
    15f0:	4798      	blx	r3
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    15f2:	4b19      	ldr	r3, [pc, #100]	; (1658 <_spi_m_sync_init+0xf0>)
    15f4:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15f6:	2203      	movs	r2, #3
    15f8:	69e3      	ldr	r3, [r4, #28]
    15fa:	421a      	tst	r2, r3
    15fc:	d1fc      	bne.n	15f8 <_spi_m_sync_init+0x90>
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    15fe:	2380      	movs	r3, #128	; 0x80
    1600:	029b      	lsls	r3, r3, #10
    1602:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1604:	2207      	movs	r2, #7
    1606:	69e3      	ldr	r3, [r4, #28]
    1608:	421a      	tst	r2, r3
    160a:	d1fc      	bne.n	1606 <_spi_m_sync_init+0x9e>
	((Sercom *)hw)->SPI.BAUD.reg = data;
    160c:	2309      	movs	r3, #9
    160e:	7323      	strb	r3, [r4, #12]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1610:	2200      	movs	r2, #0
    1612:	3327      	adds	r3, #39	; 0x27
    1614:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1616:	3b2f      	subs	r3, #47	; 0x2f
    1618:	712b      	strb	r3, [r5, #4]

	dev->dummy_byte = regs->dummy_byte;
    161a:	4b10      	ldr	r3, [pc, #64]	; (165c <_spi_m_sync_init+0xf4>)
    161c:	80eb      	strh	r3, [r5, #6]

	return ERR_NONE;
    161e:	2000      	movs	r0, #0
}
    1620:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    1622:	4a09      	ldr	r2, [pc, #36]	; (1648 <_spi_m_sync_init+0xe0>)
    1624:	4909      	ldr	r1, [pc, #36]	; (164c <_spi_m_sync_init+0xe4>)
    1626:	2000      	movs	r0, #0
    1628:	4b09      	ldr	r3, [pc, #36]	; (1650 <_spi_m_sync_init+0xe8>)
    162a:	4798      	blx	r3
		return ERR_INVALID_ARG;
    162c:	200d      	movs	r0, #13
    162e:	4240      	negs	r0, r0
    1630:	e7f6      	b.n	1620 <_spi_m_sync_init+0xb8>
	ASSERT(dev && hw);
    1632:	0008      	movs	r0, r1
    1634:	1e43      	subs	r3, r0, #1
    1636:	4198      	sbcs	r0, r3
    1638:	b2c0      	uxtb	r0, r0
    163a:	4a03      	ldr	r2, [pc, #12]	; (1648 <_spi_m_sync_init+0xe0>)
    163c:	4903      	ldr	r1, [pc, #12]	; (164c <_spi_m_sync_init+0xe4>)
    163e:	4b04      	ldr	r3, [pc, #16]	; (1650 <_spi_m_sync_init+0xe8>)
    1640:	4798      	blx	r3
    1642:	e7ad      	b.n	15a0 <_spi_m_sync_init+0x38>
    1644:	bdfffc00 	.word	0xbdfffc00
    1648:	00000948 	.word	0x00000948
    164c:	00005d3c 	.word	0x00005d3c
    1650:	00000cad 	.word	0x00000cad
    1654:	0000090d 	.word	0x0000090d
    1658:	0001000c 	.word	0x0001000c
    165c:	000001ff 	.word	0x000001ff

00001660 <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    1660:	b510      	push	{r4, lr}
    1662:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1664:	d00b      	beq.n	167e <_spi_m_sync_enable+0x1e>
    1666:	6800      	ldr	r0, [r0, #0]
    1668:	1e43      	subs	r3, r0, #1
    166a:	4198      	sbcs	r0, r3
    166c:	b2c0      	uxtb	r0, r0
    166e:	4a05      	ldr	r2, [pc, #20]	; (1684 <_spi_m_sync_enable+0x24>)
    1670:	4905      	ldr	r1, [pc, #20]	; (1688 <_spi_m_sync_enable+0x28>)
    1672:	4b06      	ldr	r3, [pc, #24]	; (168c <_spi_m_sync_enable+0x2c>)
    1674:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    1676:	6820      	ldr	r0, [r4, #0]
    1678:	4b05      	ldr	r3, [pc, #20]	; (1690 <_spi_m_sync_enable+0x30>)
    167a:	4798      	blx	r3
}
    167c:	bd10      	pop	{r4, pc}
    167e:	2000      	movs	r0, #0
    1680:	e7f5      	b.n	166e <_spi_m_sync_enable+0xe>
    1682:	46c0      	nop			; (mov r8, r8)
    1684:	000009a3 	.word	0x000009a3
    1688:	00005d3c 	.word	0x00005d3c
    168c:	00000cad 	.word	0x00000cad
    1690:	00001323 	.word	0x00001323

00001694 <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    1694:	b5f0      	push	{r4, r5, r6, r7, lr}
    1696:	46de      	mov	lr, fp
    1698:	4657      	mov	r7, sl
    169a:	464e      	mov	r6, r9
    169c:	4645      	mov	r5, r8
    169e:	b5e0      	push	{r5, r6, r7, lr}
    16a0:	b083      	sub	sp, #12
    16a2:	4681      	mov	r9, r0
    16a4:	000e      	movs	r6, r1
	void *                 hw   = dev->prvt;
    16a6:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    16a8:	680b      	ldr	r3, [r1, #0]
    16aa:	4698      	mov	r8, r3
    16ac:	684d      	ldr	r5, [r1, #4]
    16ae:	7903      	ldrb	r3, [r0, #4]
    16b0:	9301      	str	r3, [sp, #4]

	ASSERT(dev && hw);
    16b2:	2800      	cmp	r0, #0
    16b4:	d015      	beq.n	16e2 <_spi_m_sync_trans+0x4e>
    16b6:	0020      	movs	r0, r4
    16b8:	1e43      	subs	r3, r0, #1
    16ba:	4198      	sbcs	r0, r3
    16bc:	b2c0      	uxtb	r0, r0
    16be:	4a36      	ldr	r2, [pc, #216]	; (1798 <_spi_m_sync_trans+0x104>)
    16c0:	4936      	ldr	r1, [pc, #216]	; (179c <_spi_m_sync_trans+0x108>)
    16c2:	4b37      	ldr	r3, [pc, #220]	; (17a0 <_spi_m_sync_trans+0x10c>)
    16c4:	4798      	blx	r3
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    16c6:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    16c8:	075b      	lsls	r3, r3, #29
    16ca:	d13f      	bne.n	174c <_spi_m_sync_trans+0xb8>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    16cc:	2303      	movs	r3, #3
    16ce:	69e0      	ldr	r0, [r4, #28]
    16d0:	4018      	ands	r0, r3
    16d2:	d1fc      	bne.n	16ce <_spi_m_sync_trans+0x3a>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    16d4:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    16d6:	079b      	lsls	r3, r3, #30
    16d8:	d53b      	bpl.n	1752 <_spi_m_sync_trans+0xbe>
    16da:	0002      	movs	r2, r0
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    16dc:	2301      	movs	r3, #1
    16de:	469c      	mov	ip, r3
    16e0:	e009      	b.n	16f6 <_spi_m_sync_trans+0x62>
    16e2:	2000      	movs	r0, #0
    16e4:	e7eb      	b.n	16be <_spi_m_sync_trans+0x2a>
		*ctrl->rxbuf++ = (uint8_t)data;
    16e6:	3501      	adds	r5, #1
	ctrl->rxcnt++;
    16e8:	3201      	adds	r2, #1
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    16ea:	b25b      	sxtb	r3, r3
    16ec:	2b00      	cmp	r3, #0
    16ee:	db16      	blt.n	171e <_spi_m_sync_trans+0x8a>
		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    16f0:	68b3      	ldr	r3, [r6, #8]
    16f2:	4283      	cmp	r3, r0
    16f4:	d927      	bls.n	1746 <_spi_m_sync_trans+0xb2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    16f6:	7e23      	ldrb	r3, [r4, #24]
    16f8:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    16fa:	2104      	movs	r1, #4
    16fc:	4219      	tst	r1, r3
    16fe:	d02b      	beq.n	1758 <_spi_m_sync_trans+0xc4>
	return ((Sercom *)hw)->SPI.DATA.reg;
    1700:	6aa7      	ldr	r7, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    1702:	2d00      	cmp	r5, #0
    1704:	d0f0      	beq.n	16e8 <_spi_m_sync_trans+0x54>
		*ctrl->rxbuf++ = (uint8_t)data;
    1706:	702f      	strb	r7, [r5, #0]
		if (ctrl->char_size > 1) {
    1708:	9901      	ldr	r1, [sp, #4]
    170a:	2901      	cmp	r1, #1
    170c:	d9eb      	bls.n	16e6 <_spi_m_sync_trans+0x52>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    170e:	0a3f      	lsrs	r7, r7, #8
    1710:	706f      	strb	r7, [r5, #1]
    1712:	3502      	adds	r5, #2
    1714:	e7e8      	b.n	16e8 <_spi_m_sync_trans+0x54>
		data = *ctrl->txbuf++;
    1716:	2101      	movs	r1, #1
    1718:	468b      	mov	fp, r1
    171a:	44d8      	add	r8, fp
    171c:	e037      	b.n	178e <_spi_m_sync_trans+0xfa>
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    171e:	2301      	movs	r3, #1
    1720:	425b      	negs	r3, r3
    1722:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1724:	3381      	adds	r3, #129	; 0x81
    1726:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    1728:	2013      	movs	r0, #19
    172a:	4240      	negs	r0, r0
	tmp &= mask;
    172c:	2203      	movs	r2, #3
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    172e:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    1730:	4213      	tst	r3, r2
    1732:	d0fc      	beq.n	172e <_spi_m_sync_trans+0x9a>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1734:	2303      	movs	r3, #3
    1736:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    1738:	b003      	add	sp, #12
    173a:	bc3c      	pop	{r2, r3, r4, r5}
    173c:	4690      	mov	r8, r2
    173e:	4699      	mov	r9, r3
    1740:	46a2      	mov	sl, r4
    1742:	46ab      	mov	fp, r5
    1744:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    1746:	4293      	cmp	r3, r2
    1748:	d8d5      	bhi.n	16f6 <_spi_m_sync_trans+0x62>
    174a:	e7ef      	b.n	172c <_spi_m_sync_trans+0x98>
		return ERR_BUSY;
    174c:	2004      	movs	r0, #4
    174e:	4240      	negs	r0, r0
    1750:	e7f2      	b.n	1738 <_spi_m_sync_trans+0xa4>
		return ERR_NOT_INITIALIZED;
    1752:	2014      	movs	r0, #20
    1754:	4240      	negs	r0, r0
    1756:	e7ef      	b.n	1738 <_spi_m_sync_trans+0xa4>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    1758:	4290      	cmp	r0, r2
    175a:	d8c6      	bhi.n	16ea <_spi_m_sync_trans+0x56>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    175c:	4667      	mov	r7, ip
    175e:	421f      	tst	r7, r3
    1760:	d0c3      	beq.n	16ea <_spi_m_sync_trans+0x56>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    1762:	464f      	mov	r7, r9
    1764:	88ff      	ldrh	r7, [r7, #6]
    1766:	46ba      	mov	sl, r7
	if (ctrl->txbuf) {
    1768:	4647      	mov	r7, r8
    176a:	2f00      	cmp	r7, #0
    176c:	d00f      	beq.n	178e <_spi_m_sync_trans+0xfa>
		data = *ctrl->txbuf++;
    176e:	783f      	ldrb	r7, [r7, #0]
    1770:	46ba      	mov	sl, r7
		if (ctrl->char_size > 1) {
    1772:	9901      	ldr	r1, [sp, #4]
    1774:	2901      	cmp	r1, #1
    1776:	d9ce      	bls.n	1716 <_spi_m_sync_trans+0x82>
			data |= (*ctrl->txbuf) << 8;
    1778:	4647      	mov	r7, r8
    177a:	787f      	ldrb	r7, [r7, #1]
    177c:	023f      	lsls	r7, r7, #8
    177e:	46bb      	mov	fp, r7
    1780:	4657      	mov	r7, sl
    1782:	4659      	mov	r1, fp
    1784:	430f      	orrs	r7, r1
    1786:	46ba      	mov	sl, r7
			ctrl->txbuf++;
    1788:	2102      	movs	r1, #2
    178a:	468b      	mov	fp, r1
    178c:	44d8      	add	r8, fp
	ctrl->txcnt++;
    178e:	3001      	adds	r0, #1
	((Sercom *)hw)->SPI.DATA.reg = data;
    1790:	4657      	mov	r7, sl
    1792:	62a7      	str	r7, [r4, #40]	; 0x28
    1794:	e7a9      	b.n	16ea <_spi_m_sync_trans+0x56>
    1796:	46c0      	nop			; (mov r8, r8)
    1798:	00000aa8 	.word	0x00000aa8
    179c:	00005d3c 	.word	0x00005d3c
    17a0:	00000cad 	.word	0x00000cad

000017a4 <_temp_sync_init>:

/**
 * \brief              Initialize Temperature Sensor
 */
int32_t _temp_sync_init(struct _temp_sync_device *const dev, void *const hw)
{
    17a4:	b570      	push	{r4, r5, r6, lr}
    17a6:	0005      	movs	r5, r0
    17a8:	000c      	movs	r4, r1
	};
}

static inline bool hri_tsens_is_syncing(const void *const hw, hri_tsens_syncbusy_reg_t reg)
{
	return ((Tsens *)hw)->SYNCBUSY.reg & reg;
    17aa:	688b      	ldr	r3, [r1, #8]
 *
 * \param[in] dev      The pointer to device instance
 */
static inline int32_t _temp_init_calibration(void *const hw)
{
	if (!hri_tsens_is_syncing(hw, TSENS_SYNCBUSY_SWRST)) {
    17ac:	07db      	lsls	r3, r3, #31
    17ae:	d52d      	bpl.n	180c <_temp_sync_init+0x68>
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    17b0:	2201      	movs	r2, #1
    17b2:	68a3      	ldr	r3, [r4, #8]
    17b4:	421a      	tst	r2, r3
    17b6:	d1fc      	bne.n	17b2 <_temp_sync_init+0xe>
		}
		hri_tsens_write_CTRLA_reg(hw, TSENS_CTRLA_SWRST);
	}
	hri_tsens_wait_for_sync(hw, TSENS_SYNCBUSY_SWRST);

	hri_tsens_write_CAL_reg(hw, TSENS_CAL_TCAL(CONF_TSENS_CAL_TCAL) | TSENS_CAL_FCAL(CONF_TSENS_CAL_FCAL));
    17b8:	4921      	ldr	r1, [pc, #132]	; (1840 <_temp_sync_init+0x9c>)
    17ba:	680b      	ldr	r3, [r1, #0]
    17bc:	021a      	lsls	r2, r3, #8
    17be:	20fc      	movs	r0, #252	; 0xfc
    17c0:	0180      	lsls	r0, r0, #6
    17c2:	4002      	ands	r2, r0
    17c4:	051b      	lsls	r3, r3, #20
    17c6:	0e9b      	lsrs	r3, r3, #26
    17c8:	4313      	orrs	r3, r2
}

static inline void hri_tsens_write_CAL_reg(const void *const hw, hri_tsens_cal_reg_t data)
{
	TSENS_CRITICAL_SECTION_ENTER();
	((Tsens *)hw)->CAL.reg = data;
    17ca:	6223      	str	r3, [r4, #32]
	hri_tsens_write_GAIN_reg(hw, CONF_TSENS_CAL_GAIN);
    17cc:	4e1d      	ldr	r6, [pc, #116]	; (1844 <_temp_sync_init+0xa0>)
    17ce:	6833      	ldr	r3, [r6, #0]
    17d0:	0518      	lsls	r0, r3, #20
    17d2:	23f0      	movs	r3, #240	; 0xf0
    17d4:	041b      	lsls	r3, r3, #16
    17d6:	4018      	ands	r0, r3
    17d8:	680b      	ldr	r3, [r1, #0]
    17da:	0b1b      	lsrs	r3, r3, #12
    17dc:	4318      	orrs	r0, r3
    17de:	4b1a      	ldr	r3, [pc, #104]	; (1848 <_temp_sync_init+0xa4>)
    17e0:	4798      	blx	r3
    17e2:	491a      	ldr	r1, [pc, #104]	; (184c <_temp_sync_init+0xa8>)
    17e4:	4b1a      	ldr	r3, [pc, #104]	; (1850 <_temp_sync_init+0xac>)
    17e6:	4798      	blx	r3
    17e8:	4b1a      	ldr	r3, [pc, #104]	; (1854 <_temp_sync_init+0xb0>)
    17ea:	4798      	blx	r3
	((Tsens *)hw)->GAIN.reg = data;
    17ec:	61a0      	str	r0, [r4, #24]
	hri_tsens_write_OFFSET_reg(hw, CONF_TSENS_CAL_OFFSET);
    17ee:	6833      	ldr	r3, [r6, #0]
    17f0:	011b      	lsls	r3, r3, #4
    17f2:	0a1b      	lsrs	r3, r3, #8
	((Tsens *)hw)->OFFSET.reg = data;
    17f4:	61e3      	str	r3, [r4, #28]
	dev->hw = hw;
    17f6:	602c      	str	r4, [r5, #0]
	((Tsens *)hw)->CTRLA.reg = data;
    17f8:	2300      	movs	r3, #0
    17fa:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    17fc:	2203      	movs	r2, #3
    17fe:	68a3      	ldr	r3, [r4, #8]
    1800:	421a      	tst	r2, r3
    1802:	d1fc      	bne.n	17fe <_temp_sync_init+0x5a>
	((Tsens *)hw)->CTRLC.reg = data;
    1804:	2300      	movs	r3, #0
    1806:	70a3      	strb	r3, [r4, #2]
}
    1808:	2000      	movs	r0, #0
    180a:	bd70      	pop	{r4, r5, r6, pc}
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    180c:	2203      	movs	r2, #3
    180e:	68a3      	ldr	r3, [r4, #8]
    1810:	421a      	tst	r2, r3
    1812:	d1fc      	bne.n	180e <_temp_sync_init+0x6a>
	tmp = ((Tsens *)hw)->CTRLA.reg;
    1814:	7823      	ldrb	r3, [r4, #0]
		if (hri_tsens_get_CTRLA_reg(hw, TSENS_CTRLA_ENABLE)) {
    1816:	079b      	lsls	r3, r3, #30
    1818:	d50b      	bpl.n	1832 <_temp_sync_init+0x8e>
	((Tsens *)hw)->CTRLA.reg &= ~TSENS_CTRLA_ENABLE;
    181a:	7823      	ldrb	r3, [r4, #0]
    181c:	2202      	movs	r2, #2
    181e:	4393      	bics	r3, r2
    1820:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    1822:	3201      	adds	r2, #1
    1824:	68a3      	ldr	r3, [r4, #8]
    1826:	421a      	tst	r2, r3
    1828:	d1fc      	bne.n	1824 <_temp_sync_init+0x80>
    182a:	2202      	movs	r2, #2
    182c:	68a3      	ldr	r3, [r4, #8]
    182e:	421a      	tst	r2, r3
    1830:	d1fc      	bne.n	182c <_temp_sync_init+0x88>
	((Tsens *)hw)->CTRLA.reg = data;
    1832:	2301      	movs	r3, #1
    1834:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    1836:	2203      	movs	r2, #3
    1838:	68a3      	ldr	r3, [r4, #8]
    183a:	421a      	tst	r2, r3
    183c:	d1fc      	bne.n	1838 <_temp_sync_init+0x94>
    183e:	e7b7      	b.n	17b0 <_temp_sync_init+0xc>
    1840:	00806030 	.word	0x00806030
    1844:	00806034 	.word	0x00806034
    1848:	00002625 	.word	0x00002625
    184c:	3caaaaab 	.word	0x3caaaaab
    1850:	0000206d 	.word	0x0000206d
    1854:	00001dad 	.word	0x00001dad

00001858 <main>:
#include "spi_serial.h"



int main(void)
{
    1858:	b570      	push	{r4, r5, r6, lr}
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    185a:	4b0e      	ldr	r3, [pc, #56]	; (1894 <main+0x3c>)
    185c:	4798      	blx	r3
	uart_init();
    185e:	4b0e      	ldr	r3, [pc, #56]	; (1898 <main+0x40>)
    1860:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1862:	24c0      	movs	r4, #192	; 0xc0
    1864:	05e4      	lsls	r4, r4, #23
    1866:	2320      	movs	r3, #32
    1868:	61a3      	str	r3, [r4, #24]

	gpio_set_pin_level(relay_signal, true);

	//ADC
	adc_sync_enable_channel(&ADC_0, 0);
    186a:	2100      	movs	r1, #0
    186c:	480b      	ldr	r0, [pc, #44]	; (189c <main+0x44>)
    186e:	4b0c      	ldr	r3, [pc, #48]	; (18a0 <main+0x48>)
    1870:	4798      	blx	r3
    1872:	2380      	movs	r3, #128	; 0x80
    1874:	009b      	lsls	r3, r3, #2
    1876:	61a3      	str	r3, [r4, #24]
	gpio_set_pin_level(spi_cs, true);
	//spi
	spi_init();
    1878:	4b0a      	ldr	r3, [pc, #40]	; (18a4 <main+0x4c>)
    187a:	4798      	blx	r3
	
	/* Replace with your application code */
	while (1) {
		if(serial_receiving == 1)
    187c:	4c0a      	ldr	r4, [pc, #40]	; (18a8 <main+0x50>)
		{
			if(serial_complete == 1)
    187e:	4d0b      	ldr	r5, [pc, #44]	; (18ac <main+0x54>)
			{
				usart_done();
    1880:	4e0b      	ldr	r6, [pc, #44]	; (18b0 <main+0x58>)
		if(serial_receiving == 1)
    1882:	7823      	ldrb	r3, [r4, #0]
    1884:	2b01      	cmp	r3, #1
    1886:	d1fc      	bne.n	1882 <main+0x2a>
			if(serial_complete == 1)
    1888:	782b      	ldrb	r3, [r5, #0]
    188a:	2b01      	cmp	r3, #1
    188c:	d1f9      	bne.n	1882 <main+0x2a>
				usart_done();
    188e:	47b0      	blx	r6
    1890:	e7f7      	b.n	1882 <main+0x2a>
    1892:	46c0      	nop			; (mov r8, r8)
    1894:	0000011d 	.word	0x0000011d
    1898:	00001d79 	.word	0x00001d79
    189c:	200002f4 	.word	0x200002f4
    18a0:	00000609 	.word	0x00000609
    18a4:	000018b5 	.word	0x000018b5
    18a8:	200001f0 	.word	0x200001f0
    18ac:	200002bc 	.word	0x200002bc
    18b0:	00001a45 	.word	0x00001a45

000018b4 <spi_init>:
#include "spi_pec.h"



void spi_init(void)
{
    18b4:	b510      	push	{r4, lr}

spi_m_sync_get_io_descriptor(&SPI_0, &spi_io);
    18b6:	4c04      	ldr	r4, [pc, #16]	; (18c8 <spi_init+0x14>)
    18b8:	4904      	ldr	r1, [pc, #16]	; (18cc <spi_init+0x18>)
    18ba:	0020      	movs	r0, r4
    18bc:	4b04      	ldr	r3, [pc, #16]	; (18d0 <spi_init+0x1c>)
    18be:	4798      	blx	r3
spi_m_sync_enable(&SPI_0);
    18c0:	0020      	movs	r0, r4
    18c2:	4b04      	ldr	r3, [pc, #16]	; (18d4 <spi_init+0x20>)
    18c4:	4798      	blx	r3
}
    18c6:	bd10      	pop	{r4, pc}
    18c8:	200002f8 	.word	0x200002f8
    18cc:	200003a0 	.word	0x200003a0
    18d0:	00000949 	.word	0x00000949
    18d4:	00000861 	.word	0x00000861

000018d8 <pec15_calc>:


uint16_t pec15_calc(uint8_t len, //Number of bytes that will be used to calculate a PEC
uint8_t *data //Array of data that will be used to calculate  a PEC
)
{
    18d8:	b570      	push	{r4, r5, r6, lr}
	uint16_t remainder,addr;
	remainder = 16;//initialize the PEC
	
	for (uint8_t i = 0; i<len; i++) // loops for each byte in data array
    18da:	2800      	cmp	r0, #0
    18dc:	d016      	beq.n	190c <pec15_calc+0x34>
    18de:	000a      	movs	r2, r1
    18e0:	3801      	subs	r0, #1
    18e2:	b2c0      	uxtb	r0, r0
    18e4:	3001      	adds	r0, #1
    18e6:	1809      	adds	r1, r1, r0
    18e8:	2010      	movs	r0, #16
	{
		addr = ((remainder>>7)^data[i])&0xff;//calculate PEC table address
		
		remainder = (remainder<<8)^crc15Table[addr];
    18ea:	4e09      	ldr	r6, [pc, #36]	; (1910 <pec15_calc+0x38>)
		addr = ((remainder>>7)^data[i])&0xff;//calculate PEC table address
    18ec:	25ff      	movs	r5, #255	; 0xff
    18ee:	09c4      	lsrs	r4, r0, #7
    18f0:	7813      	ldrb	r3, [r2, #0]
    18f2:	4063      	eors	r3, r4
		remainder = (remainder<<8)^crc15Table[addr];
    18f4:	402b      	ands	r3, r5
    18f6:	005b      	lsls	r3, r3, #1
    18f8:	0200      	lsls	r0, r0, #8
    18fa:	5b9b      	ldrh	r3, [r3, r6]
    18fc:	4058      	eors	r0, r3
    18fe:	b280      	uxth	r0, r0
    1900:	3201      	adds	r2, #1
	for (uint8_t i = 0; i<len; i++) // loops for each byte in data array
    1902:	428a      	cmp	r2, r1
    1904:	d1f3      	bne.n	18ee <pec15_calc+0x16>
		
	}
	
	return(remainder*2);//The CRC15 has a 0 in the LSB so the remainder must be multiplied by 2
    1906:	0040      	lsls	r0, r0, #1
    1908:	b280      	uxth	r0, r0
}
    190a:	bd70      	pop	{r4, r5, r6, pc}
	remainder = 16;//initialize the PEC
    190c:	2010      	movs	r0, #16
    190e:	e7fa      	b.n	1906 <pec15_calc+0x2e>
    1910:	00005d58 	.word	0x00005d58

00001914 <cmd_68>:
{
    1914:	b570      	push	{r4, r5, r6, lr}
    1916:	b082      	sub	sp, #8
    1918:	25c0      	movs	r5, #192	; 0xc0
    191a:	05ed      	lsls	r5, r5, #23
    191c:	2280      	movs	r2, #128	; 0x80
    191e:	0412      	lsls	r2, r2, #16
    1920:	2398      	movs	r3, #152	; 0x98
    1922:	50ea      	str	r2, [r5, r3]
	cmd[0] = tx_cmd[0];
    1924:	ac01      	add	r4, sp, #4
    1926:	7803      	ldrb	r3, [r0, #0]
    1928:	7023      	strb	r3, [r4, #0]
	cmd[1] =  tx_cmd[1];
    192a:	7843      	ldrb	r3, [r0, #1]
    192c:	7063      	strb	r3, [r4, #1]
	cmd_pec = pec15_calc(2, cmd);
    192e:	0021      	movs	r1, r4
    1930:	2002      	movs	r0, #2
    1932:	4b0a      	ldr	r3, [pc, #40]	; (195c <cmd_68+0x48>)
    1934:	4798      	blx	r3
	cmd[2] = (uint8_t)(cmd_pec >> 8);
    1936:	0a03      	lsrs	r3, r0, #8
    1938:	70a3      	strb	r3, [r4, #2]
	cmd[3] = (uint8_t)(cmd_pec);
    193a:	70e0      	strb	r0, [r4, #3]
    193c:	2380      	movs	r3, #128	; 0x80
    193e:	051b      	lsls	r3, r3, #20
    1940:	61ab      	str	r3, [r5, #24]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1942:	2680      	movs	r6, #128	; 0x80
    1944:	00b6      	lsls	r6, r6, #2
    1946:	616e      	str	r6, [r5, #20]
	io_write(spi_io, cmd, 4);
    1948:	4b05      	ldr	r3, [pc, #20]	; (1960 <cmd_68+0x4c>)
    194a:	6818      	ldr	r0, [r3, #0]
    194c:	2204      	movs	r2, #4
    194e:	0021      	movs	r1, r4
    1950:	4b04      	ldr	r3, [pc, #16]	; (1964 <cmd_68+0x50>)
    1952:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1954:	61ae      	str	r6, [r5, #24]
}
    1956:	b002      	add	sp, #8
    1958:	bd70      	pop	{r4, r5, r6, pc}
    195a:	46c0      	nop			; (mov r8, r8)
    195c:	000018d9 	.word	0x000018d9
    1960:	200003a0 	.word	0x200003a0
    1964:	000007a5 	.word	0x000007a5

00001968 <LTC681x_adcv>:
{
    1968:	b510      	push	{r4, lr}
    196a:	b082      	sub	sp, #8
	cmd[0] = md_bits + 0x02;
    196c:	ac01      	add	r4, sp, #4
	md_bits = (MD & 0x02) >> 1;
    196e:	0783      	lsls	r3, r0, #30
    1970:	0fdb      	lsrs	r3, r3, #31
	cmd[0] = md_bits + 0x02;
    1972:	3302      	adds	r3, #2
    1974:	7023      	strb	r3, [r4, #0]
	cmd[1] =  md_bits + 0x60 + (DCP<<4) + CH;
    1976:	0109      	lsls	r1, r1, #4
    1978:	3260      	adds	r2, #96	; 0x60
    197a:	1889      	adds	r1, r1, r2
	md_bits = (MD & 0x01) << 7;
    197c:	01c0      	lsls	r0, r0, #7
	cmd[1] =  md_bits + 0x60 + (DCP<<4) + CH;
    197e:	1809      	adds	r1, r1, r0
    1980:	7061      	strb	r1, [r4, #1]
    1982:	2180      	movs	r1, #128	; 0x80
    1984:	03c9      	lsls	r1, r1, #15
    1986:	2398      	movs	r3, #152	; 0x98
    1988:	22c0      	movs	r2, #192	; 0xc0
    198a:	05d2      	lsls	r2, r2, #23
    198c:	50d1      	str	r1, [r2, r3]
	cmd_68(cmd);
    198e:	0020      	movs	r0, r4
    1990:	4b01      	ldr	r3, [pc, #4]	; (1998 <LTC681x_adcv+0x30>)
    1992:	4798      	blx	r3
}
    1994:	b002      	add	sp, #8
    1996:	bd10      	pop	{r4, pc}
    1998:	00001915 	.word	0x00001915

0000199c <LTC681x_adax>:

/* Start ADC Conversion for GPIO and Vref2  */
void LTC681x_adax(uint8_t MD, //ADC Mode
uint8_t CHG //GPIO Channels to be measured
)
{
    199c:	b500      	push	{lr}
    199e:	b083      	sub	sp, #12
	uint8_t cmd[4];
	uint8_t md_bits;
	
	md_bits = (MD & 0x02) >> 1;
	cmd[0] = md_bits + 0x04;
    19a0:	aa01      	add	r2, sp, #4
	md_bits = (MD & 0x02) >> 1;
    19a2:	0783      	lsls	r3, r0, #30
    19a4:	0fdb      	lsrs	r3, r3, #31
	cmd[0] = md_bits + 0x04;
    19a6:	3304      	adds	r3, #4
    19a8:	7013      	strb	r3, [r2, #0]
	md_bits = (MD & 0x01) << 7;
    19aa:	01c0      	lsls	r0, r0, #7
	cmd[1] = md_bits + 0x60 + CHG ;
    19ac:	3160      	adds	r1, #96	; 0x60
    19ae:	1841      	adds	r1, r0, r1
    19b0:	7051      	strb	r1, [r2, #1]
	
	cmd_68(cmd);
    19b2:	0010      	movs	r0, r2
    19b4:	4b01      	ldr	r3, [pc, #4]	; (19bc <LTC681x_adax+0x20>)
    19b6:	4798      	blx	r3
    19b8:	b003      	add	sp, #12
    19ba:	bd00      	pop	{pc}
    19bc:	00001915 	.word	0x00001915

000019c0 <usart_return>:
	 	serial_complete = 0;
}

//sends an the rx array on usart
void usart_return(uint8_t rx[], uint8_t tx[])
{
    19c0:	b570      	push	{r4, r5, r6, lr}
    19c2:	0005      	movs	r5, r0
    19c4:	000c      	movs	r4, r1
		//copy message to tx buffer
		memcpy(&tx[17], &rx[0], SERIAL_BUF_SIZE);
    19c6:	0008      	movs	r0, r1
    19c8:	3011      	adds	r0, #17
    19ca:	22c8      	movs	r2, #200	; 0xc8
    19cc:	0029      	movs	r1, r5
    19ce:	4b06      	ldr	r3, [pc, #24]	; (19e8 <usart_return+0x28>)
    19d0:	4798      	blx	r3

		//print
		io_write(&USART_0.io, tx, strlen(rx) + 17);
    19d2:	0028      	movs	r0, r5
    19d4:	4b05      	ldr	r3, [pc, #20]	; (19ec <usart_return+0x2c>)
    19d6:	4798      	blx	r3
    19d8:	3011      	adds	r0, #17
    19da:	b282      	uxth	r2, r0
    19dc:	0021      	movs	r1, r4
    19de:	4804      	ldr	r0, [pc, #16]	; (19f0 <usart_return+0x30>)
    19e0:	4b04      	ldr	r3, [pc, #16]	; (19f4 <usart_return+0x34>)
    19e2:	4798      	blx	r3
		
		//clear memory
		memset(&rx, 0x00, SERIAL_BUF_SIZE);
		memset(&tx, 0x00, SERIAL_BUF_SIZE+18);
		
}
    19e4:	bd70      	pop	{r4, r5, r6, pc}
    19e6:	46c0      	nop			; (mov r8, r8)
    19e8:	00003f69 	.word	0x00003f69
    19ec:	0000406d 	.word	0x0000406d
    19f0:	20000310 	.word	0x20000310
    19f4:	000007a5 	.word	0x000007a5

000019f8 <usart_send>:

//sends a the string on usart (might work with arrays aswell)
void usart_send(uint8_t *str1)
{
    19f8:	b570      	push	{r4, r5, r6, lr}
    19fa:	0005      	movs	r5, r0
	//Copy the string to the tx_buffer, so that it can be sent using io_write
	memcpy(&tx_buffer[17], &str1[0], SERIAL_BUF_SIZE);
    19fc:	4c0a      	ldr	r4, [pc, #40]	; (1a28 <usart_send+0x30>)
    19fe:	22c8      	movs	r2, #200	; 0xc8
    1a00:	0001      	movs	r1, r0
    1a02:	0020      	movs	r0, r4
    1a04:	4b09      	ldr	r3, [pc, #36]	; (1a2c <usart_send+0x34>)
    1a06:	4798      	blx	r3
	
	//print to the serialcom port
	io_write(&USART_0.io, tx_buffer, (17  + strlen(str1)));
    1a08:	0028      	movs	r0, r5
    1a0a:	4b09      	ldr	r3, [pc, #36]	; (1a30 <usart_send+0x38>)
    1a0c:	4798      	blx	r3
    1a0e:	3011      	adds	r0, #17
    1a10:	b282      	uxth	r2, r0
    1a12:	0021      	movs	r1, r4
    1a14:	3911      	subs	r1, #17
    1a16:	4807      	ldr	r0, [pc, #28]	; (1a34 <usart_send+0x3c>)
    1a18:	4b07      	ldr	r3, [pc, #28]	; (1a38 <usart_send+0x40>)
    1a1a:	4798      	blx	r3
	//io_write(&USART_0.io, msg, total_bytes + 16);
	
	//clear memory, so that there is a clean buffer for next message
	memset(&rx_buffer, 0x00, SERIAL_BUF_SIZE);
    1a1c:	22c8      	movs	r2, #200	; 0xc8
    1a1e:	2100      	movs	r1, #0
    1a20:	4806      	ldr	r0, [pc, #24]	; (1a3c <usart_send+0x44>)
    1a22:	4b07      	ldr	r3, [pc, #28]	; (1a40 <usart_send+0x48>)
    1a24:	4798      	blx	r3
	
}
    1a26:	bd70      	pop	{r4, r5, r6, pc}
    1a28:	20000031 	.word	0x20000031
    1a2c:	00003f69 	.word	0x00003f69
    1a30:	0000406d 	.word	0x0000406d
    1a34:	20000310 	.word	0x20000310
    1a38:	000007a5 	.word	0x000007a5
    1a3c:	200001f4 	.word	0x200001f4
    1a40:	00003f7b 	.word	0x00003f7b

00001a44 <usart_done>:
{
    1a44:	b5f0      	push	{r4, r5, r6, r7, lr}
    1a46:	46ce      	mov	lr, r9
    1a48:	4647      	mov	r7, r8
    1a4a:	b580      	push	{r7, lr}
    1a4c:	b083      	sub	sp, #12
	if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
    1a4e:	4b8a      	ldr	r3, [pc, #552]	; (1c78 <usart_done+0x234>)
    1a50:	781b      	ldrb	r3, [r3, #0]
    1a52:	2b6f      	cmp	r3, #111	; 0x6f
    1a54:	d040      	beq.n	1ad8 <usart_done+0x94>
	else if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f'){
    1a56:	4b88      	ldr	r3, [pc, #544]	; (1c78 <usart_done+0x234>)
    1a58:	781b      	ldrb	r3, [r3, #0]
    1a5a:	2b6f      	cmp	r3, #111	; 0x6f
    1a5c:	d04d      	beq.n	1afa <usart_done+0xb6>
	 else if (rx_buffer[0] == 'a' && rx_buffer[1] == 'd' && rx_buffer[2] =='c'){
    1a5e:	4b86      	ldr	r3, [pc, #536]	; (1c78 <usart_done+0x234>)
    1a60:	781b      	ldrb	r3, [r3, #0]
    1a62:	2b61      	cmp	r3, #97	; 0x61
    1a64:	d056      	beq.n	1b14 <usart_done+0xd0>
	 else if (rx_buffer[0] == 't' && rx_buffer[1] == 'e' && rx_buffer[2] =='s'){
    1a66:	4b84      	ldr	r3, [pc, #528]	; (1c78 <usart_done+0x234>)
    1a68:	781b      	ldrb	r3, [r3, #0]
    1a6a:	2b74      	cmp	r3, #116	; 0x74
    1a6c:	d065      	beq.n	1b3a <usart_done+0xf6>
	 else if (rx_buffer[0] == '1'){
    1a6e:	4b82      	ldr	r3, [pc, #520]	; (1c78 <usart_done+0x234>)
    1a70:	781b      	ldrb	r3, [r3, #0]
    1a72:	2b31      	cmp	r3, #49	; 0x31
    1a74:	d100      	bne.n	1a78 <usart_done+0x34>
    1a76:	e070      	b.n	1b5a <usart_done+0x116>
	  else if (rx_buffer[0] == '2'){
    1a78:	4b7f      	ldr	r3, [pc, #508]	; (1c78 <usart_done+0x234>)
    1a7a:	781b      	ldrb	r3, [r3, #0]
    1a7c:	2b32      	cmp	r3, #50	; 0x32
    1a7e:	d100      	bne.n	1a82 <usart_done+0x3e>
    1a80:	e07a      	b.n	1b78 <usart_done+0x134>
	 else if (rx_buffer[0] == '3'){
    1a82:	4b7d      	ldr	r3, [pc, #500]	; (1c78 <usart_done+0x234>)
    1a84:	781b      	ldrb	r3, [r3, #0]
    1a86:	2b33      	cmp	r3, #51	; 0x33
    1a88:	d100      	bne.n	1a8c <usart_done+0x48>
    1a8a:	e0b4      	b.n	1bf6 <usart_done+0x1b2>
	 else if(rx_buffer[0] == '4'){
    1a8c:	4b7a      	ldr	r3, [pc, #488]	; (1c78 <usart_done+0x234>)
    1a8e:	781b      	ldrb	r3, [r3, #0]
    1a90:	2b34      	cmp	r3, #52	; 0x34
    1a92:	d100      	bne.n	1a96 <usart_done+0x52>
    1a94:	e0d2      	b.n	1c3c <usart_done+0x1f8>
	 else if (rx_buffer[0] == '5'){
    1a96:	4b78      	ldr	r3, [pc, #480]	; (1c78 <usart_done+0x234>)
    1a98:	781b      	ldrb	r3, [r3, #0]
    1a9a:	2b35      	cmp	r3, #53	; 0x35
    1a9c:	d100      	bne.n	1aa0 <usart_done+0x5c>
    1a9e:	e0d4      	b.n	1c4a <usart_done+0x206>
	 else if (rx_buffer[0] == '6'){
    1aa0:	4b75      	ldr	r3, [pc, #468]	; (1c78 <usart_done+0x234>)
    1aa2:	781b      	ldrb	r3, [r3, #0]
    1aa4:	2b36      	cmp	r3, #54	; 0x36
    1aa6:	d100      	bne.n	1aaa <usart_done+0x66>
    1aa8:	e0d5      	b.n	1c56 <usart_done+0x212>
	  else if (rx_buffer[0] == '7'){
    1aaa:	4b73      	ldr	r3, [pc, #460]	; (1c78 <usart_done+0x234>)
    1aac:	781b      	ldrb	r3, [r3, #0]
    1aae:	2b37      	cmp	r3, #55	; 0x37
    1ab0:	d100      	bne.n	1ab4 <usart_done+0x70>
    1ab2:	e0d6      	b.n	1c62 <usart_done+0x21e>
	 else if (rx_buffer[0] == '8'){
    1ab4:	4b70      	ldr	r3, [pc, #448]	; (1c78 <usart_done+0x234>)
    1ab6:	781b      	ldrb	r3, [r3, #0]
    1ab8:	2b38      	cmp	r3, #56	; 0x38
    1aba:	d100      	bne.n	1abe <usart_done+0x7a>
    1abc:	e0d7      	b.n	1c6e <usart_done+0x22a>
		 usart_send("Error: No such command");
    1abe:	486f      	ldr	r0, [pc, #444]	; (1c7c <usart_done+0x238>)
    1ac0:	4b6f      	ldr	r3, [pc, #444]	; (1c80 <usart_done+0x23c>)
    1ac2:	4798      	blx	r3
	 	serial_receiving = 0;
    1ac4:	2300      	movs	r3, #0
    1ac6:	4a6f      	ldr	r2, [pc, #444]	; (1c84 <usart_done+0x240>)
    1ac8:	7013      	strb	r3, [r2, #0]
	 	serial_complete = 0;
    1aca:	4a6f      	ldr	r2, [pc, #444]	; (1c88 <usart_done+0x244>)
    1acc:	7013      	strb	r3, [r2, #0]
}
    1ace:	b003      	add	sp, #12
    1ad0:	bc0c      	pop	{r2, r3}
    1ad2:	4690      	mov	r8, r2
    1ad4:	4699      	mov	r9, r3
    1ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
    1ad8:	4b67      	ldr	r3, [pc, #412]	; (1c78 <usart_done+0x234>)
    1ada:	785b      	ldrb	r3, [r3, #1]
    1adc:	2b6e      	cmp	r3, #110	; 0x6e
    1ade:	d1ba      	bne.n	1a56 <usart_done+0x12>
    1ae0:	2220      	movs	r2, #32
    1ae2:	23c0      	movs	r3, #192	; 0xc0
    1ae4:	05db      	lsls	r3, r3, #23
    1ae6:	619a      	str	r2, [r3, #24]
		usart_send(relay_on);
    1ae8:	4868      	ldr	r0, [pc, #416]	; (1c8c <usart_done+0x248>)
    1aea:	4c65      	ldr	r4, [pc, #404]	; (1c80 <usart_done+0x23c>)
    1aec:	47a0      	blx	r4
		delay_ms(50);
    1aee:	2032      	movs	r0, #50	; 0x32
    1af0:	4b67      	ldr	r3, [pc, #412]	; (1c90 <usart_done+0x24c>)
    1af2:	4798      	blx	r3
		usart_send("Relay test");
    1af4:	4867      	ldr	r0, [pc, #412]	; (1c94 <usart_done+0x250>)
    1af6:	47a0      	blx	r4
    1af8:	e7e4      	b.n	1ac4 <usart_done+0x80>
	else if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f'){
    1afa:	4b5f      	ldr	r3, [pc, #380]	; (1c78 <usart_done+0x234>)
    1afc:	785b      	ldrb	r3, [r3, #1]
    1afe:	2b66      	cmp	r3, #102	; 0x66
    1b00:	d1ad      	bne.n	1a5e <usart_done+0x1a>
    1b02:	4b5d      	ldr	r3, [pc, #372]	; (1c78 <usart_done+0x234>)
    1b04:	789b      	ldrb	r3, [r3, #2]
    1b06:	2b66      	cmp	r3, #102	; 0x66
    1b08:	d1a9      	bne.n	1a5e <usart_done+0x1a>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1b0a:	2220      	movs	r2, #32
    1b0c:	23c0      	movs	r3, #192	; 0xc0
    1b0e:	05db      	lsls	r3, r3, #23
    1b10:	615a      	str	r2, [r3, #20]
    1b12:	e7d7      	b.n	1ac4 <usart_done+0x80>
	 else if (rx_buffer[0] == 'a' && rx_buffer[1] == 'd' && rx_buffer[2] =='c'){
    1b14:	4b58      	ldr	r3, [pc, #352]	; (1c78 <usart_done+0x234>)
    1b16:	785b      	ldrb	r3, [r3, #1]
    1b18:	2b64      	cmp	r3, #100	; 0x64
    1b1a:	d1a4      	bne.n	1a66 <usart_done+0x22>
    1b1c:	4b56      	ldr	r3, [pc, #344]	; (1c78 <usart_done+0x234>)
    1b1e:	789b      	ldrb	r3, [r3, #2]
    1b20:	2b63      	cmp	r3, #99	; 0x63
    1b22:	d1a0      	bne.n	1a66 <usart_done+0x22>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1b24:	2180      	movs	r1, #128	; 0x80
    1b26:	03c9      	lsls	r1, r1, #15
    1b28:	3335      	adds	r3, #53	; 0x35
    1b2a:	22c0      	movs	r2, #192	; 0xc0
    1b2c:	05d2      	lsls	r2, r2, #23
    1b2e:	50d1      	str	r1, [r2, r3]
		 usart_return(&rx_buffer[1], tx_buffer);
    1b30:	4959      	ldr	r1, [pc, #356]	; (1c98 <usart_done+0x254>)
    1b32:	485a      	ldr	r0, [pc, #360]	; (1c9c <usart_done+0x258>)
    1b34:	4b5a      	ldr	r3, [pc, #360]	; (1ca0 <usart_done+0x25c>)
    1b36:	4798      	blx	r3
    1b38:	e7c4      	b.n	1ac4 <usart_done+0x80>
	 else if (rx_buffer[0] == 't' && rx_buffer[1] == 'e' && rx_buffer[2] =='s'){
    1b3a:	4b4f      	ldr	r3, [pc, #316]	; (1c78 <usart_done+0x234>)
    1b3c:	785b      	ldrb	r3, [r3, #1]
    1b3e:	2b65      	cmp	r3, #101	; 0x65
    1b40:	d195      	bne.n	1a6e <usart_done+0x2a>
    1b42:	4b4d      	ldr	r3, [pc, #308]	; (1c78 <usart_done+0x234>)
    1b44:	789b      	ldrb	r3, [r3, #2]
    1b46:	2b73      	cmp	r3, #115	; 0x73
    1b48:	d000      	beq.n	1b4c <usart_done+0x108>
    1b4a:	e790      	b.n	1a6e <usart_done+0x2a>
    1b4c:	2180      	movs	r1, #128	; 0x80
    1b4e:	03c9      	lsls	r1, r1, #15
    1b50:	3325      	adds	r3, #37	; 0x25
    1b52:	22c0      	movs	r2, #192	; 0xc0
    1b54:	05d2      	lsls	r2, r2, #23
    1b56:	50d1      	str	r1, [r2, r3]
    1b58:	e7b4      	b.n	1ac4 <usart_done+0x80>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1b5a:	4c52      	ldr	r4, [pc, #328]	; (1ca4 <usart_done+0x260>)
    1b5c:	3b2f      	subs	r3, #47	; 0x2f
    1b5e:	0022      	movs	r2, r4
    1b60:	2100      	movs	r1, #0
    1b62:	4851      	ldr	r0, [pc, #324]	; (1ca8 <usart_done+0x264>)
    1b64:	4d51      	ldr	r5, [pc, #324]	; (1cac <usart_done+0x268>)
    1b66:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1b68:	7863      	ldrb	r3, [r4, #1]
    1b6a:	7163      	strb	r3, [r4, #5]
		temp[0] = adc_buffer[0];
    1b6c:	7822      	ldrb	r2, [r4, #0]
    1b6e:	7122      	strb	r2, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1b70:	021b      	lsls	r3, r3, #8
    1b72:	4313      	orrs	r3, r2
    1b74:	80e3      	strh	r3, [r4, #6]
    1b76:	e7a5      	b.n	1ac4 <usart_done+0x80>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1b78:	4c4a      	ldr	r4, [pc, #296]	; (1ca4 <usart_done+0x260>)
    1b7a:	3b30      	subs	r3, #48	; 0x30
    1b7c:	0022      	movs	r2, r4
    1b7e:	2100      	movs	r1, #0
    1b80:	4849      	ldr	r0, [pc, #292]	; (1ca8 <usart_done+0x264>)
    1b82:	4d4a      	ldr	r5, [pc, #296]	; (1cac <usart_done+0x268>)
    1b84:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1b86:	7865      	ldrb	r5, [r4, #1]
    1b88:	7165      	strb	r5, [r4, #5]
		temp[0] = adc_buffer[0];
    1b8a:	7823      	ldrb	r3, [r4, #0]
    1b8c:	7123      	strb	r3, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1b8e:	022d      	lsls	r5, r5, #8
    1b90:	431d      	orrs	r5, r3
    1b92:	80e5      	strh	r5, [r4, #6]
		thou = res / 1000 % 10;
    1b94:	4e46      	ldr	r6, [pc, #280]	; (1cb0 <usart_done+0x26c>)
    1b96:	21fa      	movs	r1, #250	; 0xfa
    1b98:	0089      	lsls	r1, r1, #2
    1b9a:	0028      	movs	r0, r5
    1b9c:	47b0      	blx	r6
    1b9e:	b280      	uxth	r0, r0
    1ba0:	4b44      	ldr	r3, [pc, #272]	; (1cb4 <usart_done+0x270>)
    1ba2:	4699      	mov	r9, r3
    1ba4:	210a      	movs	r1, #10
    1ba6:	4798      	blx	r3
    1ba8:	b2cb      	uxtb	r3, r1
    1baa:	4698      	mov	r8, r3
    1bac:	7223      	strb	r3, [r4, #8]
		hund = res / 100  % 10;
    1bae:	2164      	movs	r1, #100	; 0x64
    1bb0:	0028      	movs	r0, r5
    1bb2:	47b0      	blx	r6
    1bb4:	b280      	uxth	r0, r0
    1bb6:	210a      	movs	r1, #10
    1bb8:	47c8      	blx	r9
    1bba:	b2cf      	uxtb	r7, r1
    1bbc:	7267      	strb	r7, [r4, #9]
		tens = res / 10   % 10;
    1bbe:	210a      	movs	r1, #10
    1bc0:	0028      	movs	r0, r5
    1bc2:	47b0      	blx	r6
    1bc4:	b280      	uxth	r0, r0
    1bc6:	210a      	movs	r1, #10
    1bc8:	47c8      	blx	r9
    1bca:	b2ce      	uxtb	r6, r1
    1bcc:	72a6      	strb	r6, [r4, #10]
		ones = res % 10;
    1bce:	210a      	movs	r1, #10
    1bd0:	0028      	movs	r0, r5
    1bd2:	47c8      	blx	r9
    1bd4:	b2c9      	uxtb	r1, r1
    1bd6:	72e1      	strb	r1, [r4, #11]
		adc_rest[0] = thou + 48;
    1bd8:	4643      	mov	r3, r8
    1bda:	3330      	adds	r3, #48	; 0x30
    1bdc:	7323      	strb	r3, [r4, #12]
		adc_rest[1] = hund + 48;
    1bde:	3730      	adds	r7, #48	; 0x30
    1be0:	7367      	strb	r7, [r4, #13]
		adc_rest[2] = tens + 48;
    1be2:	3630      	adds	r6, #48	; 0x30
    1be4:	73a6      	strb	r6, [r4, #14]
		adc_rest[3] = ones + 48;
    1be6:	3130      	adds	r1, #48	; 0x30
    1be8:	73e1      	strb	r1, [r4, #15]
		usart_return(adc_rest, tx_buffer);
    1bea:	0020      	movs	r0, r4
    1bec:	300c      	adds	r0, #12
    1bee:	492a      	ldr	r1, [pc, #168]	; (1c98 <usart_done+0x254>)
    1bf0:	4b2b      	ldr	r3, [pc, #172]	; (1ca0 <usart_done+0x25c>)
    1bf2:	4798      	blx	r3
    1bf4:	e766      	b.n	1ac4 <usart_done+0x80>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1bf6:	4c2b      	ldr	r4, [pc, #172]	; (1ca4 <usart_done+0x260>)
    1bf8:	3b31      	subs	r3, #49	; 0x31
    1bfa:	0022      	movs	r2, r4
    1bfc:	2100      	movs	r1, #0
    1bfe:	482a      	ldr	r0, [pc, #168]	; (1ca8 <usart_done+0x264>)
    1c00:	4d2a      	ldr	r5, [pc, #168]	; (1cac <usart_done+0x268>)
    1c02:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1c04:	7860      	ldrb	r0, [r4, #1]
    1c06:	7160      	strb	r0, [r4, #5]
		temp[0] = adc_buffer[0];
    1c08:	7823      	ldrb	r3, [r4, #0]
    1c0a:	7123      	strb	r3, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1c0c:	0200      	lsls	r0, r0, #8
    1c0e:	4318      	orrs	r0, r3
    1c10:	80e0      	strh	r0, [r4, #6]
		res2 = (float) res / 840;
    1c12:	4b29      	ldr	r3, [pc, #164]	; (1cb8 <usart_done+0x274>)
    1c14:	4798      	blx	r3
    1c16:	4929      	ldr	r1, [pc, #164]	; (1cbc <usart_done+0x278>)
    1c18:	4b29      	ldr	r3, [pc, #164]	; (1cc0 <usart_done+0x27c>)
    1c1a:	4798      	blx	r3
    1c1c:	6120      	str	r0, [r4, #16]
		gcvt(res2, 6, buf);
    1c1e:	0025      	movs	r5, r4
    1c20:	3514      	adds	r5, #20
    1c22:	4b28      	ldr	r3, [pc, #160]	; (1cc4 <usart_done+0x280>)
    1c24:	4798      	blx	r3
    1c26:	002b      	movs	r3, r5
    1c28:	2206      	movs	r2, #6
    1c2a:	4e27      	ldr	r6, [pc, #156]	; (1cc8 <usart_done+0x284>)
    1c2c:	47b0      	blx	r6
		buf[7] = 'V';
    1c2e:	2356      	movs	r3, #86	; 0x56
    1c30:	76e3      	strb	r3, [r4, #27]
		usart_return(buf, tx_buffer);
    1c32:	4919      	ldr	r1, [pc, #100]	; (1c98 <usart_done+0x254>)
    1c34:	0028      	movs	r0, r5
    1c36:	4b1a      	ldr	r3, [pc, #104]	; (1ca0 <usart_done+0x25c>)
    1c38:	4798      	blx	r3
    1c3a:	e743      	b.n	1ac4 <usart_done+0x80>
		 uint8_t temp_int[2] = {0b00000110, 0b10100000};
    1c3c:	a801      	add	r0, sp, #4
    1c3e:	4b23      	ldr	r3, [pc, #140]	; (1ccc <usart_done+0x288>)
    1c40:	881b      	ldrh	r3, [r3, #0]
    1c42:	8003      	strh	r3, [r0, #0]
		 cmd_68(temp_int);
    1c44:	4b22      	ldr	r3, [pc, #136]	; (1cd0 <usart_done+0x28c>)
    1c46:	4798      	blx	r3
    1c48:	e73c      	b.n	1ac4 <usart_done+0x80>
    1c4a:	2280      	movs	r2, #128	; 0x80
    1c4c:	0092      	lsls	r2, r2, #2
    1c4e:	23c0      	movs	r3, #192	; 0xc0
    1c50:	05db      	lsls	r3, r3, #23
    1c52:	619a      	str	r2, [r3, #24]
    1c54:	e736      	b.n	1ac4 <usart_done+0x80>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1c56:	2280      	movs	r2, #128	; 0x80
    1c58:	0092      	lsls	r2, r2, #2
    1c5a:	23c0      	movs	r3, #192	; 0xc0
    1c5c:	05db      	lsls	r3, r3, #23
    1c5e:	615a      	str	r2, [r3, #20]
    1c60:	e730      	b.n	1ac4 <usart_done+0x80>
		 LTC681x_adcv(0b10,0b0,0b000);
    1c62:	2200      	movs	r2, #0
    1c64:	2100      	movs	r1, #0
    1c66:	2002      	movs	r0, #2
    1c68:	4b1a      	ldr	r3, [pc, #104]	; (1cd4 <usart_done+0x290>)
    1c6a:	4798      	blx	r3
    1c6c:	e72a      	b.n	1ac4 <usart_done+0x80>
		 LTC681x_adax(0b10, 0b000 );
    1c6e:	2100      	movs	r1, #0
    1c70:	2002      	movs	r0, #2
    1c72:	4b19      	ldr	r3, [pc, #100]	; (1cd8 <usart_done+0x294>)
    1c74:	4798      	blx	r3
    1c76:	e725      	b.n	1ac4 <usart_done+0x80>
    1c78:	200001f4 	.word	0x200001f4
    1c7c:	00005f68 	.word	0x00005f68
    1c80:	000019f9 	.word	0x000019f9
    1c84:	200001f0 	.word	0x200001f0
    1c88:	200002bc 	.word	0x200002bc
    1c8c:	20000014 	.word	0x20000014
    1c90:	00000785 	.word	0x00000785
    1c94:	00005f5c 	.word	0x00005f5c
    1c98:	20000020 	.word	0x20000020
    1c9c:	200001f5 	.word	0x200001f5
    1ca0:	000019c1 	.word	0x000019c1
    1ca4:	200001c4 	.word	0x200001c4
    1ca8:	200002f4 	.word	0x200002f4
    1cac:	00000635 	.word	0x00000635
    1cb0:	000011db 	.word	0x000011db
    1cb4:	00001249 	.word	0x00001249
    1cb8:	00002625 	.word	0x00002625
    1cbc:	44520000 	.word	0x44520000
    1cc0:	00001ddd 	.word	0x00001ddd
    1cc4:	000039a1 	.word	0x000039a1
    1cc8:	00003ec1 	.word	0x00003ec1
    1ccc:	00005f58 	.word	0x00005f58
    1cd0:	00001915 	.word	0x00001915
    1cd4:	00001969 	.word	0x00001969
    1cd8:	0000199d 	.word	0x0000199d

00001cdc <serial_tx_cb>:

static void serial_tx_cb(const struct usart_async_descriptor *const io_descr) {
	
	// Do nothing when tx interrupt is called
	
}
    1cdc:	4770      	bx	lr
	...

00001ce0 <serial_rx_cb>:
{
    1ce0:	b510      	push	{r4, lr}
    1ce2:	b082      	sub	sp, #8
	count = io_read(&USART_0.io, &ch, 1);
    1ce4:	2201      	movs	r2, #1
    1ce6:	466b      	mov	r3, sp
    1ce8:	1dd9      	adds	r1, r3, #7
    1cea:	481f      	ldr	r0, [pc, #124]	; (1d68 <serial_rx_cb+0x88>)
    1cec:	4b1f      	ldr	r3, [pc, #124]	; (1d6c <serial_rx_cb+0x8c>)
    1cee:	4798      	blx	r3
    1cf0:	b2c1      	uxtb	r1, r0
	if(serial_receiving == 0)
    1cf2:	4b1f      	ldr	r3, [pc, #124]	; (1d70 <serial_rx_cb+0x90>)
    1cf4:	781b      	ldrb	r3, [r3, #0]
    1cf6:	2b00      	cmp	r3, #0
    1cf8:	d112      	bne.n	1d20 <serial_rx_cb+0x40>
		if (ch != '\r' && ch != '\n')
    1cfa:	466b      	mov	r3, sp
    1cfc:	79da      	ldrb	r2, [r3, #7]
    1cfe:	2a0d      	cmp	r2, #13
    1d00:	d024      	beq.n	1d4c <serial_rx_cb+0x6c>
    1d02:	2a0a      	cmp	r2, #10
    1d04:	d022      	beq.n	1d4c <serial_rx_cb+0x6c>
			serial_receiving =1;
    1d06:	4b1a      	ldr	r3, [pc, #104]	; (1d70 <serial_rx_cb+0x90>)
    1d08:	2001      	movs	r0, #1
    1d0a:	7018      	strb	r0, [r3, #0]
			serial_received_bytes_counter = 0;
    1d0c:	2000      	movs	r0, #0
    1d0e:	7058      	strb	r0, [r3, #1]
			rx_buffer[serial_received_bytes_counter] = ch;
    1d10:	7858      	ldrb	r0, [r3, #1]
    1d12:	1818      	adds	r0, r3, r0
    1d14:	7102      	strb	r2, [r0, #4]
			serial_received_bytes_counter += count;
    1d16:	7858      	ldrb	r0, [r3, #1]
    1d18:	1840      	adds	r0, r0, r1
    1d1a:	b2c0      	uxtb	r0, r0
    1d1c:	7058      	strb	r0, [r3, #1]
    1d1e:	e015      	b.n	1d4c <serial_rx_cb+0x6c>
		rx_buffer[serial_received_bytes_counter] = ch;
    1d20:	4b13      	ldr	r3, [pc, #76]	; (1d70 <serial_rx_cb+0x90>)
    1d22:	785a      	ldrb	r2, [r3, #1]
    1d24:	4668      	mov	r0, sp
    1d26:	79c4      	ldrb	r4, [r0, #7]
    1d28:	189a      	adds	r2, r3, r2
    1d2a:	7114      	strb	r4, [r2, #4]
		serial_received_bytes_counter += count;
    1d2c:	7858      	ldrb	r0, [r3, #1]
    1d2e:	1840      	adds	r0, r0, r1
    1d30:	b2c0      	uxtb	r0, r0
    1d32:	7058      	strb	r0, [r3, #1]
		if (ch == '\r' || ch == '\n')
    1d34:	2c0d      	cmp	r4, #13
    1d36:	d00b      	beq.n	1d50 <serial_rx_cb+0x70>
    1d38:	2c0a      	cmp	r4, #10
    1d3a:	d009      	beq.n	1d50 <serial_rx_cb+0x70>
		if(serial_received_bytes_counter >= SERIAL_BUF_SIZE)
    1d3c:	4b0c      	ldr	r3, [pc, #48]	; (1d70 <serial_rx_cb+0x90>)
    1d3e:	785b      	ldrb	r3, [r3, #1]
    1d40:	b2db      	uxtb	r3, r3
    1d42:	2bc7      	cmp	r3, #199	; 0xc7
    1d44:	d902      	bls.n	1d4c <serial_rx_cb+0x6c>
			serial_received_bytes_counter = 0;
    1d46:	2200      	movs	r2, #0
    1d48:	4b09      	ldr	r3, [pc, #36]	; (1d70 <serial_rx_cb+0x90>)
    1d4a:	705a      	strb	r2, [r3, #1]
}
    1d4c:	b002      	add	sp, #8
    1d4e:	bd10      	pop	{r4, pc}
			serial_complete = 1;
    1d50:	4a08      	ldr	r2, [pc, #32]	; (1d74 <serial_rx_cb+0x94>)
    1d52:	2101      	movs	r1, #1
    1d54:	234c      	movs	r3, #76	; 0x4c
    1d56:	54d1      	strb	r1, [r2, r3]
			total_bytes = serial_received_bytes_counter - 2;
    1d58:	4b05      	ldr	r3, [pc, #20]	; (1d70 <serial_rx_cb+0x90>)
    1d5a:	785b      	ldrb	r3, [r3, #1]
    1d5c:	3b02      	subs	r3, #2
    1d5e:	b2db      	uxtb	r3, r3
    1d60:	314c      	adds	r1, #76	; 0x4c
    1d62:	5453      	strb	r3, [r2, r1]
    1d64:	e7ea      	b.n	1d3c <serial_rx_cb+0x5c>
    1d66:	46c0      	nop			; (mov r8, r8)
    1d68:	20000310 	.word	0x20000310
    1d6c:	000007d9 	.word	0x000007d9
    1d70:	200001f0 	.word	0x200001f0
    1d74:	20000270 	.word	0x20000270

00001d78 <uart_init>:

void uart_init(){
    1d78:	b570      	push	{r4, r5, r6, lr}

	usart_async_register_callback(&USART_0, USART_ASYNC_TXC_CB, serial_tx_cb);
    1d7a:	4c07      	ldr	r4, [pc, #28]	; (1d98 <uart_init+0x20>)
    1d7c:	4a07      	ldr	r2, [pc, #28]	; (1d9c <uart_init+0x24>)
    1d7e:	2101      	movs	r1, #1
    1d80:	0020      	movs	r0, r4
    1d82:	4d07      	ldr	r5, [pc, #28]	; (1da0 <uart_init+0x28>)
    1d84:	47a8      	blx	r5
	usart_async_register_callback(&USART_0, USART_ASYNC_RXC_CB, serial_rx_cb);
    1d86:	4a07      	ldr	r2, [pc, #28]	; (1da4 <uart_init+0x2c>)
    1d88:	2100      	movs	r1, #0
    1d8a:	0020      	movs	r0, r4
    1d8c:	47a8      	blx	r5
	usart_async_enable(&USART_0);
    1d8e:	0020      	movs	r0, r4
    1d90:	4b05      	ldr	r3, [pc, #20]	; (1da8 <uart_init+0x30>)
    1d92:	4798      	blx	r3
	
}
    1d94:	bd70      	pop	{r4, r5, r6, pc}
    1d96:	46c0      	nop			; (mov r8, r8)
    1d98:	20000310 	.word	0x20000310
    1d9c:	00001cdd 	.word	0x00001cdd
    1da0:	00000c35 	.word	0x00000c35
    1da4:	00001ce1 	.word	0x00001ce1
    1da8:	00000c09 	.word	0x00000c09

00001dac <__aeabi_f2uiz>:
    1dac:	219e      	movs	r1, #158	; 0x9e
    1dae:	b510      	push	{r4, lr}
    1db0:	05c9      	lsls	r1, r1, #23
    1db2:	1c04      	adds	r4, r0, #0
    1db4:	f001 feb4 	bl	3b20 <__aeabi_fcmpge>
    1db8:	2800      	cmp	r0, #0
    1dba:	d103      	bne.n	1dc4 <__aeabi_f2uiz+0x18>
    1dbc:	1c20      	adds	r0, r4, #0
    1dbe:	f000 fc11 	bl	25e4 <__aeabi_f2iz>
    1dc2:	bd10      	pop	{r4, pc}
    1dc4:	219e      	movs	r1, #158	; 0x9e
    1dc6:	1c20      	adds	r0, r4, #0
    1dc8:	05c9      	lsls	r1, r1, #23
    1dca:	f000 fa6f 	bl	22ac <__aeabi_fsub>
    1dce:	f000 fc09 	bl	25e4 <__aeabi_f2iz>
    1dd2:	2380      	movs	r3, #128	; 0x80
    1dd4:	061b      	lsls	r3, r3, #24
    1dd6:	469c      	mov	ip, r3
    1dd8:	4460      	add	r0, ip
    1dda:	e7f2      	b.n	1dc2 <__aeabi_f2uiz+0x16>

00001ddc <__aeabi_fdiv>:
    1ddc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1dde:	4657      	mov	r7, sl
    1de0:	464e      	mov	r6, r9
    1de2:	46de      	mov	lr, fp
    1de4:	4645      	mov	r5, r8
    1de6:	b5e0      	push	{r5, r6, r7, lr}
    1de8:	0244      	lsls	r4, r0, #9
    1dea:	0043      	lsls	r3, r0, #1
    1dec:	0fc6      	lsrs	r6, r0, #31
    1dee:	b083      	sub	sp, #12
    1df0:	1c0f      	adds	r7, r1, #0
    1df2:	0a64      	lsrs	r4, r4, #9
    1df4:	0e1b      	lsrs	r3, r3, #24
    1df6:	46b2      	mov	sl, r6
    1df8:	d053      	beq.n	1ea2 <__aeabi_fdiv+0xc6>
    1dfa:	2bff      	cmp	r3, #255	; 0xff
    1dfc:	d027      	beq.n	1e4e <__aeabi_fdiv+0x72>
    1dfe:	2280      	movs	r2, #128	; 0x80
    1e00:	00e4      	lsls	r4, r4, #3
    1e02:	04d2      	lsls	r2, r2, #19
    1e04:	4314      	orrs	r4, r2
    1e06:	227f      	movs	r2, #127	; 0x7f
    1e08:	4252      	negs	r2, r2
    1e0a:	4690      	mov	r8, r2
    1e0c:	4498      	add	r8, r3
    1e0e:	2300      	movs	r3, #0
    1e10:	4699      	mov	r9, r3
    1e12:	469b      	mov	fp, r3
    1e14:	027d      	lsls	r5, r7, #9
    1e16:	0078      	lsls	r0, r7, #1
    1e18:	0ffb      	lsrs	r3, r7, #31
    1e1a:	0a6d      	lsrs	r5, r5, #9
    1e1c:	0e00      	lsrs	r0, r0, #24
    1e1e:	9300      	str	r3, [sp, #0]
    1e20:	d024      	beq.n	1e6c <__aeabi_fdiv+0x90>
    1e22:	28ff      	cmp	r0, #255	; 0xff
    1e24:	d046      	beq.n	1eb4 <__aeabi_fdiv+0xd8>
    1e26:	2380      	movs	r3, #128	; 0x80
    1e28:	2100      	movs	r1, #0
    1e2a:	00ed      	lsls	r5, r5, #3
    1e2c:	04db      	lsls	r3, r3, #19
    1e2e:	431d      	orrs	r5, r3
    1e30:	387f      	subs	r0, #127	; 0x7f
    1e32:	4647      	mov	r7, r8
    1e34:	1a38      	subs	r0, r7, r0
    1e36:	464f      	mov	r7, r9
    1e38:	430f      	orrs	r7, r1
    1e3a:	00bf      	lsls	r7, r7, #2
    1e3c:	46b9      	mov	r9, r7
    1e3e:	0033      	movs	r3, r6
    1e40:	9a00      	ldr	r2, [sp, #0]
    1e42:	4f87      	ldr	r7, [pc, #540]	; (2060 <STACK_SIZE+0x60>)
    1e44:	4053      	eors	r3, r2
    1e46:	464a      	mov	r2, r9
    1e48:	58ba      	ldr	r2, [r7, r2]
    1e4a:	9301      	str	r3, [sp, #4]
    1e4c:	4697      	mov	pc, r2
    1e4e:	2c00      	cmp	r4, #0
    1e50:	d14e      	bne.n	1ef0 <__aeabi_fdiv+0x114>
    1e52:	2308      	movs	r3, #8
    1e54:	4699      	mov	r9, r3
    1e56:	33f7      	adds	r3, #247	; 0xf7
    1e58:	4698      	mov	r8, r3
    1e5a:	3bfd      	subs	r3, #253	; 0xfd
    1e5c:	469b      	mov	fp, r3
    1e5e:	027d      	lsls	r5, r7, #9
    1e60:	0078      	lsls	r0, r7, #1
    1e62:	0ffb      	lsrs	r3, r7, #31
    1e64:	0a6d      	lsrs	r5, r5, #9
    1e66:	0e00      	lsrs	r0, r0, #24
    1e68:	9300      	str	r3, [sp, #0]
    1e6a:	d1da      	bne.n	1e22 <__aeabi_fdiv+0x46>
    1e6c:	2d00      	cmp	r5, #0
    1e6e:	d126      	bne.n	1ebe <__aeabi_fdiv+0xe2>
    1e70:	2000      	movs	r0, #0
    1e72:	2101      	movs	r1, #1
    1e74:	0033      	movs	r3, r6
    1e76:	9a00      	ldr	r2, [sp, #0]
    1e78:	4f7a      	ldr	r7, [pc, #488]	; (2064 <STACK_SIZE+0x64>)
    1e7a:	4053      	eors	r3, r2
    1e7c:	4642      	mov	r2, r8
    1e7e:	1a10      	subs	r0, r2, r0
    1e80:	464a      	mov	r2, r9
    1e82:	430a      	orrs	r2, r1
    1e84:	0092      	lsls	r2, r2, #2
    1e86:	58ba      	ldr	r2, [r7, r2]
    1e88:	001d      	movs	r5, r3
    1e8a:	4697      	mov	pc, r2
    1e8c:	9b00      	ldr	r3, [sp, #0]
    1e8e:	002c      	movs	r4, r5
    1e90:	469a      	mov	sl, r3
    1e92:	468b      	mov	fp, r1
    1e94:	465b      	mov	r3, fp
    1e96:	2b02      	cmp	r3, #2
    1e98:	d131      	bne.n	1efe <__aeabi_fdiv+0x122>
    1e9a:	4653      	mov	r3, sl
    1e9c:	21ff      	movs	r1, #255	; 0xff
    1e9e:	2400      	movs	r4, #0
    1ea0:	e038      	b.n	1f14 <__aeabi_fdiv+0x138>
    1ea2:	2c00      	cmp	r4, #0
    1ea4:	d117      	bne.n	1ed6 <__aeabi_fdiv+0xfa>
    1ea6:	2304      	movs	r3, #4
    1ea8:	4699      	mov	r9, r3
    1eaa:	2300      	movs	r3, #0
    1eac:	4698      	mov	r8, r3
    1eae:	3301      	adds	r3, #1
    1eb0:	469b      	mov	fp, r3
    1eb2:	e7af      	b.n	1e14 <__aeabi_fdiv+0x38>
    1eb4:	20ff      	movs	r0, #255	; 0xff
    1eb6:	2d00      	cmp	r5, #0
    1eb8:	d10b      	bne.n	1ed2 <__aeabi_fdiv+0xf6>
    1eba:	2102      	movs	r1, #2
    1ebc:	e7da      	b.n	1e74 <__aeabi_fdiv+0x98>
    1ebe:	0028      	movs	r0, r5
    1ec0:	f001 fe38 	bl	3b34 <__clzsi2>
    1ec4:	1f43      	subs	r3, r0, #5
    1ec6:	409d      	lsls	r5, r3
    1ec8:	2376      	movs	r3, #118	; 0x76
    1eca:	425b      	negs	r3, r3
    1ecc:	1a18      	subs	r0, r3, r0
    1ece:	2100      	movs	r1, #0
    1ed0:	e7af      	b.n	1e32 <__aeabi_fdiv+0x56>
    1ed2:	2103      	movs	r1, #3
    1ed4:	e7ad      	b.n	1e32 <__aeabi_fdiv+0x56>
    1ed6:	0020      	movs	r0, r4
    1ed8:	f001 fe2c 	bl	3b34 <__clzsi2>
    1edc:	1f43      	subs	r3, r0, #5
    1ede:	409c      	lsls	r4, r3
    1ee0:	2376      	movs	r3, #118	; 0x76
    1ee2:	425b      	negs	r3, r3
    1ee4:	1a1b      	subs	r3, r3, r0
    1ee6:	4698      	mov	r8, r3
    1ee8:	2300      	movs	r3, #0
    1eea:	4699      	mov	r9, r3
    1eec:	469b      	mov	fp, r3
    1eee:	e791      	b.n	1e14 <__aeabi_fdiv+0x38>
    1ef0:	230c      	movs	r3, #12
    1ef2:	4699      	mov	r9, r3
    1ef4:	33f3      	adds	r3, #243	; 0xf3
    1ef6:	4698      	mov	r8, r3
    1ef8:	3bfc      	subs	r3, #252	; 0xfc
    1efa:	469b      	mov	fp, r3
    1efc:	e78a      	b.n	1e14 <__aeabi_fdiv+0x38>
    1efe:	2b03      	cmp	r3, #3
    1f00:	d100      	bne.n	1f04 <__aeabi_fdiv+0x128>
    1f02:	e0a5      	b.n	2050 <STACK_SIZE+0x50>
    1f04:	4655      	mov	r5, sl
    1f06:	2b01      	cmp	r3, #1
    1f08:	d000      	beq.n	1f0c <__aeabi_fdiv+0x130>
    1f0a:	e081      	b.n	2010 <STACK_SIZE+0x10>
    1f0c:	2301      	movs	r3, #1
    1f0e:	2100      	movs	r1, #0
    1f10:	2400      	movs	r4, #0
    1f12:	402b      	ands	r3, r5
    1f14:	0264      	lsls	r4, r4, #9
    1f16:	05c9      	lsls	r1, r1, #23
    1f18:	0a60      	lsrs	r0, r4, #9
    1f1a:	07db      	lsls	r3, r3, #31
    1f1c:	4308      	orrs	r0, r1
    1f1e:	4318      	orrs	r0, r3
    1f20:	b003      	add	sp, #12
    1f22:	bc3c      	pop	{r2, r3, r4, r5}
    1f24:	4690      	mov	r8, r2
    1f26:	4699      	mov	r9, r3
    1f28:	46a2      	mov	sl, r4
    1f2a:	46ab      	mov	fp, r5
    1f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f2e:	2480      	movs	r4, #128	; 0x80
    1f30:	2300      	movs	r3, #0
    1f32:	03e4      	lsls	r4, r4, #15
    1f34:	21ff      	movs	r1, #255	; 0xff
    1f36:	e7ed      	b.n	1f14 <__aeabi_fdiv+0x138>
    1f38:	21ff      	movs	r1, #255	; 0xff
    1f3a:	2400      	movs	r4, #0
    1f3c:	e7ea      	b.n	1f14 <__aeabi_fdiv+0x138>
    1f3e:	2301      	movs	r3, #1
    1f40:	1a59      	subs	r1, r3, r1
    1f42:	291b      	cmp	r1, #27
    1f44:	dd66      	ble.n	2014 <STACK_SIZE+0x14>
    1f46:	9a01      	ldr	r2, [sp, #4]
    1f48:	4013      	ands	r3, r2
    1f4a:	2100      	movs	r1, #0
    1f4c:	2400      	movs	r4, #0
    1f4e:	e7e1      	b.n	1f14 <__aeabi_fdiv+0x138>
    1f50:	2380      	movs	r3, #128	; 0x80
    1f52:	03db      	lsls	r3, r3, #15
    1f54:	421c      	tst	r4, r3
    1f56:	d038      	beq.n	1fca <__aeabi_fdiv+0x1ee>
    1f58:	421d      	tst	r5, r3
    1f5a:	d051      	beq.n	2000 <STACK_SIZE>
    1f5c:	431c      	orrs	r4, r3
    1f5e:	0264      	lsls	r4, r4, #9
    1f60:	0a64      	lsrs	r4, r4, #9
    1f62:	0033      	movs	r3, r6
    1f64:	21ff      	movs	r1, #255	; 0xff
    1f66:	e7d5      	b.n	1f14 <__aeabi_fdiv+0x138>
    1f68:	0163      	lsls	r3, r4, #5
    1f6a:	016c      	lsls	r4, r5, #5
    1f6c:	42a3      	cmp	r3, r4
    1f6e:	d23b      	bcs.n	1fe8 <__aeabi_fdiv+0x20c>
    1f70:	261b      	movs	r6, #27
    1f72:	2100      	movs	r1, #0
    1f74:	3801      	subs	r0, #1
    1f76:	2501      	movs	r5, #1
    1f78:	001f      	movs	r7, r3
    1f7a:	0049      	lsls	r1, r1, #1
    1f7c:	005b      	lsls	r3, r3, #1
    1f7e:	2f00      	cmp	r7, #0
    1f80:	db01      	blt.n	1f86 <__aeabi_fdiv+0x1aa>
    1f82:	429c      	cmp	r4, r3
    1f84:	d801      	bhi.n	1f8a <__aeabi_fdiv+0x1ae>
    1f86:	1b1b      	subs	r3, r3, r4
    1f88:	4329      	orrs	r1, r5
    1f8a:	3e01      	subs	r6, #1
    1f8c:	2e00      	cmp	r6, #0
    1f8e:	d1f3      	bne.n	1f78 <__aeabi_fdiv+0x19c>
    1f90:	001c      	movs	r4, r3
    1f92:	1e63      	subs	r3, r4, #1
    1f94:	419c      	sbcs	r4, r3
    1f96:	430c      	orrs	r4, r1
    1f98:	0001      	movs	r1, r0
    1f9a:	317f      	adds	r1, #127	; 0x7f
    1f9c:	2900      	cmp	r1, #0
    1f9e:	ddce      	ble.n	1f3e <__aeabi_fdiv+0x162>
    1fa0:	0763      	lsls	r3, r4, #29
    1fa2:	d004      	beq.n	1fae <__aeabi_fdiv+0x1d2>
    1fa4:	230f      	movs	r3, #15
    1fa6:	4023      	ands	r3, r4
    1fa8:	2b04      	cmp	r3, #4
    1faa:	d000      	beq.n	1fae <__aeabi_fdiv+0x1d2>
    1fac:	3404      	adds	r4, #4
    1fae:	0123      	lsls	r3, r4, #4
    1fb0:	d503      	bpl.n	1fba <__aeabi_fdiv+0x1de>
    1fb2:	0001      	movs	r1, r0
    1fb4:	4b2c      	ldr	r3, [pc, #176]	; (2068 <STACK_SIZE+0x68>)
    1fb6:	3180      	adds	r1, #128	; 0x80
    1fb8:	401c      	ands	r4, r3
    1fba:	29fe      	cmp	r1, #254	; 0xfe
    1fbc:	dd0d      	ble.n	1fda <__aeabi_fdiv+0x1fe>
    1fbe:	2301      	movs	r3, #1
    1fc0:	9a01      	ldr	r2, [sp, #4]
    1fc2:	21ff      	movs	r1, #255	; 0xff
    1fc4:	4013      	ands	r3, r2
    1fc6:	2400      	movs	r4, #0
    1fc8:	e7a4      	b.n	1f14 <__aeabi_fdiv+0x138>
    1fca:	2380      	movs	r3, #128	; 0x80
    1fcc:	03db      	lsls	r3, r3, #15
    1fce:	431c      	orrs	r4, r3
    1fd0:	0264      	lsls	r4, r4, #9
    1fd2:	0a64      	lsrs	r4, r4, #9
    1fd4:	0033      	movs	r3, r6
    1fd6:	21ff      	movs	r1, #255	; 0xff
    1fd8:	e79c      	b.n	1f14 <__aeabi_fdiv+0x138>
    1fda:	2301      	movs	r3, #1
    1fdc:	9a01      	ldr	r2, [sp, #4]
    1fde:	01a4      	lsls	r4, r4, #6
    1fe0:	0a64      	lsrs	r4, r4, #9
    1fe2:	b2c9      	uxtb	r1, r1
    1fe4:	4013      	ands	r3, r2
    1fe6:	e795      	b.n	1f14 <__aeabi_fdiv+0x138>
    1fe8:	1b1b      	subs	r3, r3, r4
    1fea:	261a      	movs	r6, #26
    1fec:	2101      	movs	r1, #1
    1fee:	e7c2      	b.n	1f76 <__aeabi_fdiv+0x19a>
    1ff0:	9b00      	ldr	r3, [sp, #0]
    1ff2:	468b      	mov	fp, r1
    1ff4:	469a      	mov	sl, r3
    1ff6:	2400      	movs	r4, #0
    1ff8:	e74c      	b.n	1e94 <__aeabi_fdiv+0xb8>
    1ffa:	0263      	lsls	r3, r4, #9
    1ffc:	d5e5      	bpl.n	1fca <__aeabi_fdiv+0x1ee>
    1ffe:	2500      	movs	r5, #0
    2000:	2480      	movs	r4, #128	; 0x80
    2002:	03e4      	lsls	r4, r4, #15
    2004:	432c      	orrs	r4, r5
    2006:	0264      	lsls	r4, r4, #9
    2008:	0a64      	lsrs	r4, r4, #9
    200a:	9b00      	ldr	r3, [sp, #0]
    200c:	21ff      	movs	r1, #255	; 0xff
    200e:	e781      	b.n	1f14 <__aeabi_fdiv+0x138>
    2010:	9501      	str	r5, [sp, #4]
    2012:	e7c1      	b.n	1f98 <__aeabi_fdiv+0x1bc>
    2014:	0023      	movs	r3, r4
    2016:	2020      	movs	r0, #32
    2018:	40cb      	lsrs	r3, r1
    201a:	1a41      	subs	r1, r0, r1
    201c:	408c      	lsls	r4, r1
    201e:	1e61      	subs	r1, r4, #1
    2020:	418c      	sbcs	r4, r1
    2022:	431c      	orrs	r4, r3
    2024:	0763      	lsls	r3, r4, #29
    2026:	d004      	beq.n	2032 <STACK_SIZE+0x32>
    2028:	230f      	movs	r3, #15
    202a:	4023      	ands	r3, r4
    202c:	2b04      	cmp	r3, #4
    202e:	d000      	beq.n	2032 <STACK_SIZE+0x32>
    2030:	3404      	adds	r4, #4
    2032:	0163      	lsls	r3, r4, #5
    2034:	d505      	bpl.n	2042 <STACK_SIZE+0x42>
    2036:	2301      	movs	r3, #1
    2038:	9a01      	ldr	r2, [sp, #4]
    203a:	2101      	movs	r1, #1
    203c:	4013      	ands	r3, r2
    203e:	2400      	movs	r4, #0
    2040:	e768      	b.n	1f14 <__aeabi_fdiv+0x138>
    2042:	2301      	movs	r3, #1
    2044:	9a01      	ldr	r2, [sp, #4]
    2046:	01a4      	lsls	r4, r4, #6
    2048:	0a64      	lsrs	r4, r4, #9
    204a:	4013      	ands	r3, r2
    204c:	2100      	movs	r1, #0
    204e:	e761      	b.n	1f14 <__aeabi_fdiv+0x138>
    2050:	2380      	movs	r3, #128	; 0x80
    2052:	03db      	lsls	r3, r3, #15
    2054:	431c      	orrs	r4, r3
    2056:	0264      	lsls	r4, r4, #9
    2058:	0a64      	lsrs	r4, r4, #9
    205a:	4653      	mov	r3, sl
    205c:	21ff      	movs	r1, #255	; 0xff
    205e:	e759      	b.n	1f14 <__aeabi_fdiv+0x138>
    2060:	00005f80 	.word	0x00005f80
    2064:	00005fc0 	.word	0x00005fc0
    2068:	f7ffffff 	.word	0xf7ffffff

0000206c <__aeabi_fmul>:
    206c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    206e:	4657      	mov	r7, sl
    2070:	464e      	mov	r6, r9
    2072:	4645      	mov	r5, r8
    2074:	46de      	mov	lr, fp
    2076:	b5e0      	push	{r5, r6, r7, lr}
    2078:	0247      	lsls	r7, r0, #9
    207a:	0046      	lsls	r6, r0, #1
    207c:	4688      	mov	r8, r1
    207e:	0a7f      	lsrs	r7, r7, #9
    2080:	0e36      	lsrs	r6, r6, #24
    2082:	0fc4      	lsrs	r4, r0, #31
    2084:	2e00      	cmp	r6, #0
    2086:	d047      	beq.n	2118 <__aeabi_fmul+0xac>
    2088:	2eff      	cmp	r6, #255	; 0xff
    208a:	d024      	beq.n	20d6 <__aeabi_fmul+0x6a>
    208c:	00fb      	lsls	r3, r7, #3
    208e:	2780      	movs	r7, #128	; 0x80
    2090:	04ff      	lsls	r7, r7, #19
    2092:	431f      	orrs	r7, r3
    2094:	2300      	movs	r3, #0
    2096:	4699      	mov	r9, r3
    2098:	469a      	mov	sl, r3
    209a:	3e7f      	subs	r6, #127	; 0x7f
    209c:	4643      	mov	r3, r8
    209e:	025d      	lsls	r5, r3, #9
    20a0:	0058      	lsls	r0, r3, #1
    20a2:	0fdb      	lsrs	r3, r3, #31
    20a4:	0a6d      	lsrs	r5, r5, #9
    20a6:	0e00      	lsrs	r0, r0, #24
    20a8:	4698      	mov	r8, r3
    20aa:	d043      	beq.n	2134 <__aeabi_fmul+0xc8>
    20ac:	28ff      	cmp	r0, #255	; 0xff
    20ae:	d03b      	beq.n	2128 <__aeabi_fmul+0xbc>
    20b0:	00eb      	lsls	r3, r5, #3
    20b2:	2580      	movs	r5, #128	; 0x80
    20b4:	2200      	movs	r2, #0
    20b6:	04ed      	lsls	r5, r5, #19
    20b8:	431d      	orrs	r5, r3
    20ba:	387f      	subs	r0, #127	; 0x7f
    20bc:	1836      	adds	r6, r6, r0
    20be:	1c73      	adds	r3, r6, #1
    20c0:	4641      	mov	r1, r8
    20c2:	469b      	mov	fp, r3
    20c4:	464b      	mov	r3, r9
    20c6:	4061      	eors	r1, r4
    20c8:	4313      	orrs	r3, r2
    20ca:	2b0f      	cmp	r3, #15
    20cc:	d864      	bhi.n	2198 <__aeabi_fmul+0x12c>
    20ce:	4875      	ldr	r0, [pc, #468]	; (22a4 <__aeabi_fmul+0x238>)
    20d0:	009b      	lsls	r3, r3, #2
    20d2:	58c3      	ldr	r3, [r0, r3]
    20d4:	469f      	mov	pc, r3
    20d6:	2f00      	cmp	r7, #0
    20d8:	d142      	bne.n	2160 <__aeabi_fmul+0xf4>
    20da:	2308      	movs	r3, #8
    20dc:	4699      	mov	r9, r3
    20de:	3b06      	subs	r3, #6
    20e0:	26ff      	movs	r6, #255	; 0xff
    20e2:	469a      	mov	sl, r3
    20e4:	e7da      	b.n	209c <__aeabi_fmul+0x30>
    20e6:	4641      	mov	r1, r8
    20e8:	2a02      	cmp	r2, #2
    20ea:	d028      	beq.n	213e <__aeabi_fmul+0xd2>
    20ec:	2a03      	cmp	r2, #3
    20ee:	d100      	bne.n	20f2 <__aeabi_fmul+0x86>
    20f0:	e0ce      	b.n	2290 <__aeabi_fmul+0x224>
    20f2:	2a01      	cmp	r2, #1
    20f4:	d000      	beq.n	20f8 <__aeabi_fmul+0x8c>
    20f6:	e0ac      	b.n	2252 <__aeabi_fmul+0x1e6>
    20f8:	4011      	ands	r1, r2
    20fa:	2000      	movs	r0, #0
    20fc:	2200      	movs	r2, #0
    20fe:	b2cc      	uxtb	r4, r1
    2100:	0240      	lsls	r0, r0, #9
    2102:	05d2      	lsls	r2, r2, #23
    2104:	0a40      	lsrs	r0, r0, #9
    2106:	07e4      	lsls	r4, r4, #31
    2108:	4310      	orrs	r0, r2
    210a:	4320      	orrs	r0, r4
    210c:	bc3c      	pop	{r2, r3, r4, r5}
    210e:	4690      	mov	r8, r2
    2110:	4699      	mov	r9, r3
    2112:	46a2      	mov	sl, r4
    2114:	46ab      	mov	fp, r5
    2116:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2118:	2f00      	cmp	r7, #0
    211a:	d115      	bne.n	2148 <__aeabi_fmul+0xdc>
    211c:	2304      	movs	r3, #4
    211e:	4699      	mov	r9, r3
    2120:	3b03      	subs	r3, #3
    2122:	2600      	movs	r6, #0
    2124:	469a      	mov	sl, r3
    2126:	e7b9      	b.n	209c <__aeabi_fmul+0x30>
    2128:	20ff      	movs	r0, #255	; 0xff
    212a:	2202      	movs	r2, #2
    212c:	2d00      	cmp	r5, #0
    212e:	d0c5      	beq.n	20bc <__aeabi_fmul+0x50>
    2130:	2203      	movs	r2, #3
    2132:	e7c3      	b.n	20bc <__aeabi_fmul+0x50>
    2134:	2d00      	cmp	r5, #0
    2136:	d119      	bne.n	216c <__aeabi_fmul+0x100>
    2138:	2000      	movs	r0, #0
    213a:	2201      	movs	r2, #1
    213c:	e7be      	b.n	20bc <__aeabi_fmul+0x50>
    213e:	2401      	movs	r4, #1
    2140:	22ff      	movs	r2, #255	; 0xff
    2142:	400c      	ands	r4, r1
    2144:	2000      	movs	r0, #0
    2146:	e7db      	b.n	2100 <__aeabi_fmul+0x94>
    2148:	0038      	movs	r0, r7
    214a:	f001 fcf3 	bl	3b34 <__clzsi2>
    214e:	2676      	movs	r6, #118	; 0x76
    2150:	1f43      	subs	r3, r0, #5
    2152:	409f      	lsls	r7, r3
    2154:	2300      	movs	r3, #0
    2156:	4276      	negs	r6, r6
    2158:	1a36      	subs	r6, r6, r0
    215a:	4699      	mov	r9, r3
    215c:	469a      	mov	sl, r3
    215e:	e79d      	b.n	209c <__aeabi_fmul+0x30>
    2160:	230c      	movs	r3, #12
    2162:	4699      	mov	r9, r3
    2164:	3b09      	subs	r3, #9
    2166:	26ff      	movs	r6, #255	; 0xff
    2168:	469a      	mov	sl, r3
    216a:	e797      	b.n	209c <__aeabi_fmul+0x30>
    216c:	0028      	movs	r0, r5
    216e:	f001 fce1 	bl	3b34 <__clzsi2>
    2172:	1f43      	subs	r3, r0, #5
    2174:	409d      	lsls	r5, r3
    2176:	2376      	movs	r3, #118	; 0x76
    2178:	425b      	negs	r3, r3
    217a:	1a18      	subs	r0, r3, r0
    217c:	2200      	movs	r2, #0
    217e:	e79d      	b.n	20bc <__aeabi_fmul+0x50>
    2180:	2080      	movs	r0, #128	; 0x80
    2182:	2400      	movs	r4, #0
    2184:	03c0      	lsls	r0, r0, #15
    2186:	22ff      	movs	r2, #255	; 0xff
    2188:	e7ba      	b.n	2100 <__aeabi_fmul+0x94>
    218a:	003d      	movs	r5, r7
    218c:	4652      	mov	r2, sl
    218e:	e7ab      	b.n	20e8 <__aeabi_fmul+0x7c>
    2190:	003d      	movs	r5, r7
    2192:	0021      	movs	r1, r4
    2194:	4652      	mov	r2, sl
    2196:	e7a7      	b.n	20e8 <__aeabi_fmul+0x7c>
    2198:	0c3b      	lsrs	r3, r7, #16
    219a:	469c      	mov	ip, r3
    219c:	042a      	lsls	r2, r5, #16
    219e:	0c12      	lsrs	r2, r2, #16
    21a0:	0c2b      	lsrs	r3, r5, #16
    21a2:	0014      	movs	r4, r2
    21a4:	4660      	mov	r0, ip
    21a6:	4665      	mov	r5, ip
    21a8:	043f      	lsls	r7, r7, #16
    21aa:	0c3f      	lsrs	r7, r7, #16
    21ac:	437c      	muls	r4, r7
    21ae:	4342      	muls	r2, r0
    21b0:	435d      	muls	r5, r3
    21b2:	437b      	muls	r3, r7
    21b4:	0c27      	lsrs	r7, r4, #16
    21b6:	189b      	adds	r3, r3, r2
    21b8:	18ff      	adds	r7, r7, r3
    21ba:	42ba      	cmp	r2, r7
    21bc:	d903      	bls.n	21c6 <__aeabi_fmul+0x15a>
    21be:	2380      	movs	r3, #128	; 0x80
    21c0:	025b      	lsls	r3, r3, #9
    21c2:	469c      	mov	ip, r3
    21c4:	4465      	add	r5, ip
    21c6:	0424      	lsls	r4, r4, #16
    21c8:	043a      	lsls	r2, r7, #16
    21ca:	0c24      	lsrs	r4, r4, #16
    21cc:	1912      	adds	r2, r2, r4
    21ce:	0193      	lsls	r3, r2, #6
    21d0:	1e5c      	subs	r4, r3, #1
    21d2:	41a3      	sbcs	r3, r4
    21d4:	0c3f      	lsrs	r7, r7, #16
    21d6:	0e92      	lsrs	r2, r2, #26
    21d8:	197d      	adds	r5, r7, r5
    21da:	431a      	orrs	r2, r3
    21dc:	01ad      	lsls	r5, r5, #6
    21de:	4315      	orrs	r5, r2
    21e0:	012b      	lsls	r3, r5, #4
    21e2:	d504      	bpl.n	21ee <__aeabi_fmul+0x182>
    21e4:	2301      	movs	r3, #1
    21e6:	465e      	mov	r6, fp
    21e8:	086a      	lsrs	r2, r5, #1
    21ea:	401d      	ands	r5, r3
    21ec:	4315      	orrs	r5, r2
    21ee:	0032      	movs	r2, r6
    21f0:	327f      	adds	r2, #127	; 0x7f
    21f2:	2a00      	cmp	r2, #0
    21f4:	dd25      	ble.n	2242 <__aeabi_fmul+0x1d6>
    21f6:	076b      	lsls	r3, r5, #29
    21f8:	d004      	beq.n	2204 <__aeabi_fmul+0x198>
    21fa:	230f      	movs	r3, #15
    21fc:	402b      	ands	r3, r5
    21fe:	2b04      	cmp	r3, #4
    2200:	d000      	beq.n	2204 <__aeabi_fmul+0x198>
    2202:	3504      	adds	r5, #4
    2204:	012b      	lsls	r3, r5, #4
    2206:	d503      	bpl.n	2210 <__aeabi_fmul+0x1a4>
    2208:	0032      	movs	r2, r6
    220a:	4b27      	ldr	r3, [pc, #156]	; (22a8 <__aeabi_fmul+0x23c>)
    220c:	3280      	adds	r2, #128	; 0x80
    220e:	401d      	ands	r5, r3
    2210:	2afe      	cmp	r2, #254	; 0xfe
    2212:	dc94      	bgt.n	213e <__aeabi_fmul+0xd2>
    2214:	2401      	movs	r4, #1
    2216:	01a8      	lsls	r0, r5, #6
    2218:	0a40      	lsrs	r0, r0, #9
    221a:	b2d2      	uxtb	r2, r2
    221c:	400c      	ands	r4, r1
    221e:	e76f      	b.n	2100 <__aeabi_fmul+0x94>
    2220:	2080      	movs	r0, #128	; 0x80
    2222:	03c0      	lsls	r0, r0, #15
    2224:	4207      	tst	r7, r0
    2226:	d007      	beq.n	2238 <__aeabi_fmul+0x1cc>
    2228:	4205      	tst	r5, r0
    222a:	d105      	bne.n	2238 <__aeabi_fmul+0x1cc>
    222c:	4328      	orrs	r0, r5
    222e:	0240      	lsls	r0, r0, #9
    2230:	0a40      	lsrs	r0, r0, #9
    2232:	4644      	mov	r4, r8
    2234:	22ff      	movs	r2, #255	; 0xff
    2236:	e763      	b.n	2100 <__aeabi_fmul+0x94>
    2238:	4338      	orrs	r0, r7
    223a:	0240      	lsls	r0, r0, #9
    223c:	0a40      	lsrs	r0, r0, #9
    223e:	22ff      	movs	r2, #255	; 0xff
    2240:	e75e      	b.n	2100 <__aeabi_fmul+0x94>
    2242:	2401      	movs	r4, #1
    2244:	1aa3      	subs	r3, r4, r2
    2246:	2b1b      	cmp	r3, #27
    2248:	dd05      	ble.n	2256 <__aeabi_fmul+0x1ea>
    224a:	400c      	ands	r4, r1
    224c:	2200      	movs	r2, #0
    224e:	2000      	movs	r0, #0
    2250:	e756      	b.n	2100 <__aeabi_fmul+0x94>
    2252:	465e      	mov	r6, fp
    2254:	e7cb      	b.n	21ee <__aeabi_fmul+0x182>
    2256:	002a      	movs	r2, r5
    2258:	2020      	movs	r0, #32
    225a:	40da      	lsrs	r2, r3
    225c:	1ac3      	subs	r3, r0, r3
    225e:	409d      	lsls	r5, r3
    2260:	002b      	movs	r3, r5
    2262:	1e5d      	subs	r5, r3, #1
    2264:	41ab      	sbcs	r3, r5
    2266:	4313      	orrs	r3, r2
    2268:	075a      	lsls	r2, r3, #29
    226a:	d004      	beq.n	2276 <__aeabi_fmul+0x20a>
    226c:	220f      	movs	r2, #15
    226e:	401a      	ands	r2, r3
    2270:	2a04      	cmp	r2, #4
    2272:	d000      	beq.n	2276 <__aeabi_fmul+0x20a>
    2274:	3304      	adds	r3, #4
    2276:	015a      	lsls	r2, r3, #5
    2278:	d504      	bpl.n	2284 <__aeabi_fmul+0x218>
    227a:	2401      	movs	r4, #1
    227c:	2201      	movs	r2, #1
    227e:	400c      	ands	r4, r1
    2280:	2000      	movs	r0, #0
    2282:	e73d      	b.n	2100 <__aeabi_fmul+0x94>
    2284:	2401      	movs	r4, #1
    2286:	019b      	lsls	r3, r3, #6
    2288:	0a58      	lsrs	r0, r3, #9
    228a:	400c      	ands	r4, r1
    228c:	2200      	movs	r2, #0
    228e:	e737      	b.n	2100 <__aeabi_fmul+0x94>
    2290:	2080      	movs	r0, #128	; 0x80
    2292:	2401      	movs	r4, #1
    2294:	03c0      	lsls	r0, r0, #15
    2296:	4328      	orrs	r0, r5
    2298:	0240      	lsls	r0, r0, #9
    229a:	0a40      	lsrs	r0, r0, #9
    229c:	400c      	ands	r4, r1
    229e:	22ff      	movs	r2, #255	; 0xff
    22a0:	e72e      	b.n	2100 <__aeabi_fmul+0x94>
    22a2:	46c0      	nop			; (mov r8, r8)
    22a4:	00006000 	.word	0x00006000
    22a8:	f7ffffff 	.word	0xf7ffffff

000022ac <__aeabi_fsub>:
    22ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    22ae:	464f      	mov	r7, r9
    22b0:	46d6      	mov	lr, sl
    22b2:	4646      	mov	r6, r8
    22b4:	0044      	lsls	r4, r0, #1
    22b6:	b5c0      	push	{r6, r7, lr}
    22b8:	0fc2      	lsrs	r2, r0, #31
    22ba:	0247      	lsls	r7, r0, #9
    22bc:	0248      	lsls	r0, r1, #9
    22be:	0a40      	lsrs	r0, r0, #9
    22c0:	4684      	mov	ip, r0
    22c2:	4666      	mov	r6, ip
    22c4:	0a7b      	lsrs	r3, r7, #9
    22c6:	0048      	lsls	r0, r1, #1
    22c8:	0fc9      	lsrs	r1, r1, #31
    22ca:	469a      	mov	sl, r3
    22cc:	0e24      	lsrs	r4, r4, #24
    22ce:	0015      	movs	r5, r2
    22d0:	00db      	lsls	r3, r3, #3
    22d2:	0e00      	lsrs	r0, r0, #24
    22d4:	4689      	mov	r9, r1
    22d6:	00f6      	lsls	r6, r6, #3
    22d8:	28ff      	cmp	r0, #255	; 0xff
    22da:	d100      	bne.n	22de <__aeabi_fsub+0x32>
    22dc:	e08f      	b.n	23fe <__aeabi_fsub+0x152>
    22de:	2101      	movs	r1, #1
    22e0:	464f      	mov	r7, r9
    22e2:	404f      	eors	r7, r1
    22e4:	0039      	movs	r1, r7
    22e6:	4291      	cmp	r1, r2
    22e8:	d066      	beq.n	23b8 <__aeabi_fsub+0x10c>
    22ea:	1a22      	subs	r2, r4, r0
    22ec:	2a00      	cmp	r2, #0
    22ee:	dc00      	bgt.n	22f2 <__aeabi_fsub+0x46>
    22f0:	e09d      	b.n	242e <__aeabi_fsub+0x182>
    22f2:	2800      	cmp	r0, #0
    22f4:	d13d      	bne.n	2372 <__aeabi_fsub+0xc6>
    22f6:	2e00      	cmp	r6, #0
    22f8:	d100      	bne.n	22fc <__aeabi_fsub+0x50>
    22fa:	e08b      	b.n	2414 <__aeabi_fsub+0x168>
    22fc:	1e51      	subs	r1, r2, #1
    22fe:	2900      	cmp	r1, #0
    2300:	d000      	beq.n	2304 <__aeabi_fsub+0x58>
    2302:	e0b5      	b.n	2470 <__aeabi_fsub+0x1c4>
    2304:	2401      	movs	r4, #1
    2306:	1b9b      	subs	r3, r3, r6
    2308:	015a      	lsls	r2, r3, #5
    230a:	d544      	bpl.n	2396 <__aeabi_fsub+0xea>
    230c:	019b      	lsls	r3, r3, #6
    230e:	099f      	lsrs	r7, r3, #6
    2310:	0038      	movs	r0, r7
    2312:	f001 fc0f 	bl	3b34 <__clzsi2>
    2316:	3805      	subs	r0, #5
    2318:	4087      	lsls	r7, r0
    231a:	4284      	cmp	r4, r0
    231c:	dd00      	ble.n	2320 <__aeabi_fsub+0x74>
    231e:	e096      	b.n	244e <__aeabi_fsub+0x1a2>
    2320:	1b04      	subs	r4, r0, r4
    2322:	003a      	movs	r2, r7
    2324:	2020      	movs	r0, #32
    2326:	3401      	adds	r4, #1
    2328:	40e2      	lsrs	r2, r4
    232a:	1b04      	subs	r4, r0, r4
    232c:	40a7      	lsls	r7, r4
    232e:	003b      	movs	r3, r7
    2330:	1e5f      	subs	r7, r3, #1
    2332:	41bb      	sbcs	r3, r7
    2334:	2400      	movs	r4, #0
    2336:	4313      	orrs	r3, r2
    2338:	075a      	lsls	r2, r3, #29
    233a:	d004      	beq.n	2346 <__aeabi_fsub+0x9a>
    233c:	220f      	movs	r2, #15
    233e:	401a      	ands	r2, r3
    2340:	2a04      	cmp	r2, #4
    2342:	d000      	beq.n	2346 <__aeabi_fsub+0x9a>
    2344:	3304      	adds	r3, #4
    2346:	015a      	lsls	r2, r3, #5
    2348:	d527      	bpl.n	239a <__aeabi_fsub+0xee>
    234a:	3401      	adds	r4, #1
    234c:	2cff      	cmp	r4, #255	; 0xff
    234e:	d100      	bne.n	2352 <__aeabi_fsub+0xa6>
    2350:	e079      	b.n	2446 <__aeabi_fsub+0x19a>
    2352:	2201      	movs	r2, #1
    2354:	019b      	lsls	r3, r3, #6
    2356:	0a5b      	lsrs	r3, r3, #9
    2358:	b2e4      	uxtb	r4, r4
    235a:	402a      	ands	r2, r5
    235c:	025b      	lsls	r3, r3, #9
    235e:	05e4      	lsls	r4, r4, #23
    2360:	0a58      	lsrs	r0, r3, #9
    2362:	07d2      	lsls	r2, r2, #31
    2364:	4320      	orrs	r0, r4
    2366:	4310      	orrs	r0, r2
    2368:	bc1c      	pop	{r2, r3, r4}
    236a:	4690      	mov	r8, r2
    236c:	4699      	mov	r9, r3
    236e:	46a2      	mov	sl, r4
    2370:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2372:	2cff      	cmp	r4, #255	; 0xff
    2374:	d0e0      	beq.n	2338 <__aeabi_fsub+0x8c>
    2376:	2180      	movs	r1, #128	; 0x80
    2378:	04c9      	lsls	r1, r1, #19
    237a:	430e      	orrs	r6, r1
    237c:	2a1b      	cmp	r2, #27
    237e:	dc7b      	bgt.n	2478 <__aeabi_fsub+0x1cc>
    2380:	0031      	movs	r1, r6
    2382:	2020      	movs	r0, #32
    2384:	40d1      	lsrs	r1, r2
    2386:	1a82      	subs	r2, r0, r2
    2388:	4096      	lsls	r6, r2
    238a:	1e72      	subs	r2, r6, #1
    238c:	4196      	sbcs	r6, r2
    238e:	430e      	orrs	r6, r1
    2390:	1b9b      	subs	r3, r3, r6
    2392:	015a      	lsls	r2, r3, #5
    2394:	d4ba      	bmi.n	230c <__aeabi_fsub+0x60>
    2396:	075a      	lsls	r2, r3, #29
    2398:	d1d0      	bne.n	233c <__aeabi_fsub+0x90>
    239a:	2201      	movs	r2, #1
    239c:	08df      	lsrs	r7, r3, #3
    239e:	402a      	ands	r2, r5
    23a0:	2cff      	cmp	r4, #255	; 0xff
    23a2:	d133      	bne.n	240c <__aeabi_fsub+0x160>
    23a4:	2f00      	cmp	r7, #0
    23a6:	d100      	bne.n	23aa <__aeabi_fsub+0xfe>
    23a8:	e0a8      	b.n	24fc <__aeabi_fsub+0x250>
    23aa:	2380      	movs	r3, #128	; 0x80
    23ac:	03db      	lsls	r3, r3, #15
    23ae:	433b      	orrs	r3, r7
    23b0:	025b      	lsls	r3, r3, #9
    23b2:	0a5b      	lsrs	r3, r3, #9
    23b4:	24ff      	movs	r4, #255	; 0xff
    23b6:	e7d1      	b.n	235c <__aeabi_fsub+0xb0>
    23b8:	1a21      	subs	r1, r4, r0
    23ba:	2900      	cmp	r1, #0
    23bc:	dd4c      	ble.n	2458 <__aeabi_fsub+0x1ac>
    23be:	2800      	cmp	r0, #0
    23c0:	d02a      	beq.n	2418 <__aeabi_fsub+0x16c>
    23c2:	2cff      	cmp	r4, #255	; 0xff
    23c4:	d0b8      	beq.n	2338 <__aeabi_fsub+0x8c>
    23c6:	2080      	movs	r0, #128	; 0x80
    23c8:	04c0      	lsls	r0, r0, #19
    23ca:	4306      	orrs	r6, r0
    23cc:	291b      	cmp	r1, #27
    23ce:	dd00      	ble.n	23d2 <__aeabi_fsub+0x126>
    23d0:	e0af      	b.n	2532 <__aeabi_fsub+0x286>
    23d2:	0030      	movs	r0, r6
    23d4:	2720      	movs	r7, #32
    23d6:	40c8      	lsrs	r0, r1
    23d8:	1a79      	subs	r1, r7, r1
    23da:	408e      	lsls	r6, r1
    23dc:	1e71      	subs	r1, r6, #1
    23de:	418e      	sbcs	r6, r1
    23e0:	4306      	orrs	r6, r0
    23e2:	199b      	adds	r3, r3, r6
    23e4:	0159      	lsls	r1, r3, #5
    23e6:	d5d6      	bpl.n	2396 <__aeabi_fsub+0xea>
    23e8:	3401      	adds	r4, #1
    23ea:	2cff      	cmp	r4, #255	; 0xff
    23ec:	d100      	bne.n	23f0 <__aeabi_fsub+0x144>
    23ee:	e085      	b.n	24fc <__aeabi_fsub+0x250>
    23f0:	2201      	movs	r2, #1
    23f2:	497a      	ldr	r1, [pc, #488]	; (25dc <__aeabi_fsub+0x330>)
    23f4:	401a      	ands	r2, r3
    23f6:	085b      	lsrs	r3, r3, #1
    23f8:	400b      	ands	r3, r1
    23fa:	4313      	orrs	r3, r2
    23fc:	e79c      	b.n	2338 <__aeabi_fsub+0x8c>
    23fe:	2e00      	cmp	r6, #0
    2400:	d000      	beq.n	2404 <__aeabi_fsub+0x158>
    2402:	e770      	b.n	22e6 <__aeabi_fsub+0x3a>
    2404:	e76b      	b.n	22de <__aeabi_fsub+0x32>
    2406:	1e3b      	subs	r3, r7, #0
    2408:	d1c5      	bne.n	2396 <__aeabi_fsub+0xea>
    240a:	2200      	movs	r2, #0
    240c:	027b      	lsls	r3, r7, #9
    240e:	0a5b      	lsrs	r3, r3, #9
    2410:	b2e4      	uxtb	r4, r4
    2412:	e7a3      	b.n	235c <__aeabi_fsub+0xb0>
    2414:	0014      	movs	r4, r2
    2416:	e78f      	b.n	2338 <__aeabi_fsub+0x8c>
    2418:	2e00      	cmp	r6, #0
    241a:	d04d      	beq.n	24b8 <__aeabi_fsub+0x20c>
    241c:	1e48      	subs	r0, r1, #1
    241e:	2800      	cmp	r0, #0
    2420:	d157      	bne.n	24d2 <__aeabi_fsub+0x226>
    2422:	199b      	adds	r3, r3, r6
    2424:	2401      	movs	r4, #1
    2426:	015a      	lsls	r2, r3, #5
    2428:	d5b5      	bpl.n	2396 <__aeabi_fsub+0xea>
    242a:	2402      	movs	r4, #2
    242c:	e7e0      	b.n	23f0 <__aeabi_fsub+0x144>
    242e:	2a00      	cmp	r2, #0
    2430:	d125      	bne.n	247e <__aeabi_fsub+0x1d2>
    2432:	1c62      	adds	r2, r4, #1
    2434:	b2d2      	uxtb	r2, r2
    2436:	2a01      	cmp	r2, #1
    2438:	dd72      	ble.n	2520 <__aeabi_fsub+0x274>
    243a:	1b9f      	subs	r7, r3, r6
    243c:	017a      	lsls	r2, r7, #5
    243e:	d535      	bpl.n	24ac <__aeabi_fsub+0x200>
    2440:	1af7      	subs	r7, r6, r3
    2442:	000d      	movs	r5, r1
    2444:	e764      	b.n	2310 <__aeabi_fsub+0x64>
    2446:	2201      	movs	r2, #1
    2448:	2300      	movs	r3, #0
    244a:	402a      	ands	r2, r5
    244c:	e786      	b.n	235c <__aeabi_fsub+0xb0>
    244e:	003b      	movs	r3, r7
    2450:	4a63      	ldr	r2, [pc, #396]	; (25e0 <__aeabi_fsub+0x334>)
    2452:	1a24      	subs	r4, r4, r0
    2454:	4013      	ands	r3, r2
    2456:	e76f      	b.n	2338 <__aeabi_fsub+0x8c>
    2458:	2900      	cmp	r1, #0
    245a:	d16c      	bne.n	2536 <__aeabi_fsub+0x28a>
    245c:	1c61      	adds	r1, r4, #1
    245e:	b2c8      	uxtb	r0, r1
    2460:	2801      	cmp	r0, #1
    2462:	dd4e      	ble.n	2502 <__aeabi_fsub+0x256>
    2464:	29ff      	cmp	r1, #255	; 0xff
    2466:	d049      	beq.n	24fc <__aeabi_fsub+0x250>
    2468:	199b      	adds	r3, r3, r6
    246a:	085b      	lsrs	r3, r3, #1
    246c:	000c      	movs	r4, r1
    246e:	e763      	b.n	2338 <__aeabi_fsub+0x8c>
    2470:	2aff      	cmp	r2, #255	; 0xff
    2472:	d041      	beq.n	24f8 <__aeabi_fsub+0x24c>
    2474:	000a      	movs	r2, r1
    2476:	e781      	b.n	237c <__aeabi_fsub+0xd0>
    2478:	2601      	movs	r6, #1
    247a:	1b9b      	subs	r3, r3, r6
    247c:	e789      	b.n	2392 <__aeabi_fsub+0xe6>
    247e:	2c00      	cmp	r4, #0
    2480:	d01c      	beq.n	24bc <__aeabi_fsub+0x210>
    2482:	28ff      	cmp	r0, #255	; 0xff
    2484:	d021      	beq.n	24ca <__aeabi_fsub+0x21e>
    2486:	2480      	movs	r4, #128	; 0x80
    2488:	04e4      	lsls	r4, r4, #19
    248a:	4252      	negs	r2, r2
    248c:	4323      	orrs	r3, r4
    248e:	2a1b      	cmp	r2, #27
    2490:	dd00      	ble.n	2494 <__aeabi_fsub+0x1e8>
    2492:	e096      	b.n	25c2 <__aeabi_fsub+0x316>
    2494:	001c      	movs	r4, r3
    2496:	2520      	movs	r5, #32
    2498:	40d4      	lsrs	r4, r2
    249a:	1aaa      	subs	r2, r5, r2
    249c:	4093      	lsls	r3, r2
    249e:	1e5a      	subs	r2, r3, #1
    24a0:	4193      	sbcs	r3, r2
    24a2:	4323      	orrs	r3, r4
    24a4:	1af3      	subs	r3, r6, r3
    24a6:	0004      	movs	r4, r0
    24a8:	000d      	movs	r5, r1
    24aa:	e72d      	b.n	2308 <__aeabi_fsub+0x5c>
    24ac:	2f00      	cmp	r7, #0
    24ae:	d000      	beq.n	24b2 <__aeabi_fsub+0x206>
    24b0:	e72e      	b.n	2310 <__aeabi_fsub+0x64>
    24b2:	2200      	movs	r2, #0
    24b4:	2400      	movs	r4, #0
    24b6:	e7a9      	b.n	240c <__aeabi_fsub+0x160>
    24b8:	000c      	movs	r4, r1
    24ba:	e73d      	b.n	2338 <__aeabi_fsub+0x8c>
    24bc:	2b00      	cmp	r3, #0
    24be:	d058      	beq.n	2572 <__aeabi_fsub+0x2c6>
    24c0:	43d2      	mvns	r2, r2
    24c2:	2a00      	cmp	r2, #0
    24c4:	d0ee      	beq.n	24a4 <__aeabi_fsub+0x1f8>
    24c6:	28ff      	cmp	r0, #255	; 0xff
    24c8:	d1e1      	bne.n	248e <__aeabi_fsub+0x1e2>
    24ca:	0033      	movs	r3, r6
    24cc:	24ff      	movs	r4, #255	; 0xff
    24ce:	000d      	movs	r5, r1
    24d0:	e732      	b.n	2338 <__aeabi_fsub+0x8c>
    24d2:	29ff      	cmp	r1, #255	; 0xff
    24d4:	d010      	beq.n	24f8 <__aeabi_fsub+0x24c>
    24d6:	0001      	movs	r1, r0
    24d8:	e778      	b.n	23cc <__aeabi_fsub+0x120>
    24da:	2b00      	cmp	r3, #0
    24dc:	d06e      	beq.n	25bc <__aeabi_fsub+0x310>
    24de:	24ff      	movs	r4, #255	; 0xff
    24e0:	2e00      	cmp	r6, #0
    24e2:	d100      	bne.n	24e6 <__aeabi_fsub+0x23a>
    24e4:	e728      	b.n	2338 <__aeabi_fsub+0x8c>
    24e6:	2280      	movs	r2, #128	; 0x80
    24e8:	4651      	mov	r1, sl
    24ea:	03d2      	lsls	r2, r2, #15
    24ec:	4211      	tst	r1, r2
    24ee:	d003      	beq.n	24f8 <__aeabi_fsub+0x24c>
    24f0:	4661      	mov	r1, ip
    24f2:	4211      	tst	r1, r2
    24f4:	d100      	bne.n	24f8 <__aeabi_fsub+0x24c>
    24f6:	0033      	movs	r3, r6
    24f8:	24ff      	movs	r4, #255	; 0xff
    24fa:	e71d      	b.n	2338 <__aeabi_fsub+0x8c>
    24fc:	24ff      	movs	r4, #255	; 0xff
    24fe:	2300      	movs	r3, #0
    2500:	e72c      	b.n	235c <__aeabi_fsub+0xb0>
    2502:	2c00      	cmp	r4, #0
    2504:	d1e9      	bne.n	24da <__aeabi_fsub+0x22e>
    2506:	2b00      	cmp	r3, #0
    2508:	d063      	beq.n	25d2 <__aeabi_fsub+0x326>
    250a:	2e00      	cmp	r6, #0
    250c:	d100      	bne.n	2510 <__aeabi_fsub+0x264>
    250e:	e713      	b.n	2338 <__aeabi_fsub+0x8c>
    2510:	199b      	adds	r3, r3, r6
    2512:	015a      	lsls	r2, r3, #5
    2514:	d400      	bmi.n	2518 <__aeabi_fsub+0x26c>
    2516:	e73e      	b.n	2396 <__aeabi_fsub+0xea>
    2518:	4a31      	ldr	r2, [pc, #196]	; (25e0 <__aeabi_fsub+0x334>)
    251a:	000c      	movs	r4, r1
    251c:	4013      	ands	r3, r2
    251e:	e70b      	b.n	2338 <__aeabi_fsub+0x8c>
    2520:	2c00      	cmp	r4, #0
    2522:	d11e      	bne.n	2562 <__aeabi_fsub+0x2b6>
    2524:	2b00      	cmp	r3, #0
    2526:	d12f      	bne.n	2588 <__aeabi_fsub+0x2dc>
    2528:	2e00      	cmp	r6, #0
    252a:	d04f      	beq.n	25cc <__aeabi_fsub+0x320>
    252c:	0033      	movs	r3, r6
    252e:	000d      	movs	r5, r1
    2530:	e702      	b.n	2338 <__aeabi_fsub+0x8c>
    2532:	2601      	movs	r6, #1
    2534:	e755      	b.n	23e2 <__aeabi_fsub+0x136>
    2536:	2c00      	cmp	r4, #0
    2538:	d11f      	bne.n	257a <__aeabi_fsub+0x2ce>
    253a:	2b00      	cmp	r3, #0
    253c:	d043      	beq.n	25c6 <__aeabi_fsub+0x31a>
    253e:	43c9      	mvns	r1, r1
    2540:	2900      	cmp	r1, #0
    2542:	d00b      	beq.n	255c <__aeabi_fsub+0x2b0>
    2544:	28ff      	cmp	r0, #255	; 0xff
    2546:	d039      	beq.n	25bc <__aeabi_fsub+0x310>
    2548:	291b      	cmp	r1, #27
    254a:	dc44      	bgt.n	25d6 <__aeabi_fsub+0x32a>
    254c:	001c      	movs	r4, r3
    254e:	2720      	movs	r7, #32
    2550:	40cc      	lsrs	r4, r1
    2552:	1a79      	subs	r1, r7, r1
    2554:	408b      	lsls	r3, r1
    2556:	1e59      	subs	r1, r3, #1
    2558:	418b      	sbcs	r3, r1
    255a:	4323      	orrs	r3, r4
    255c:	199b      	adds	r3, r3, r6
    255e:	0004      	movs	r4, r0
    2560:	e740      	b.n	23e4 <__aeabi_fsub+0x138>
    2562:	2b00      	cmp	r3, #0
    2564:	d11a      	bne.n	259c <__aeabi_fsub+0x2f0>
    2566:	2e00      	cmp	r6, #0
    2568:	d124      	bne.n	25b4 <__aeabi_fsub+0x308>
    256a:	2780      	movs	r7, #128	; 0x80
    256c:	2200      	movs	r2, #0
    256e:	03ff      	lsls	r7, r7, #15
    2570:	e71b      	b.n	23aa <__aeabi_fsub+0xfe>
    2572:	0033      	movs	r3, r6
    2574:	0004      	movs	r4, r0
    2576:	000d      	movs	r5, r1
    2578:	e6de      	b.n	2338 <__aeabi_fsub+0x8c>
    257a:	28ff      	cmp	r0, #255	; 0xff
    257c:	d01e      	beq.n	25bc <__aeabi_fsub+0x310>
    257e:	2480      	movs	r4, #128	; 0x80
    2580:	04e4      	lsls	r4, r4, #19
    2582:	4249      	negs	r1, r1
    2584:	4323      	orrs	r3, r4
    2586:	e7df      	b.n	2548 <__aeabi_fsub+0x29c>
    2588:	2e00      	cmp	r6, #0
    258a:	d100      	bne.n	258e <__aeabi_fsub+0x2e2>
    258c:	e6d4      	b.n	2338 <__aeabi_fsub+0x8c>
    258e:	1b9f      	subs	r7, r3, r6
    2590:	017a      	lsls	r2, r7, #5
    2592:	d400      	bmi.n	2596 <__aeabi_fsub+0x2ea>
    2594:	e737      	b.n	2406 <__aeabi_fsub+0x15a>
    2596:	1af3      	subs	r3, r6, r3
    2598:	000d      	movs	r5, r1
    259a:	e6cd      	b.n	2338 <__aeabi_fsub+0x8c>
    259c:	24ff      	movs	r4, #255	; 0xff
    259e:	2e00      	cmp	r6, #0
    25a0:	d100      	bne.n	25a4 <__aeabi_fsub+0x2f8>
    25a2:	e6c9      	b.n	2338 <__aeabi_fsub+0x8c>
    25a4:	2280      	movs	r2, #128	; 0x80
    25a6:	4650      	mov	r0, sl
    25a8:	03d2      	lsls	r2, r2, #15
    25aa:	4210      	tst	r0, r2
    25ac:	d0a4      	beq.n	24f8 <__aeabi_fsub+0x24c>
    25ae:	4660      	mov	r0, ip
    25b0:	4210      	tst	r0, r2
    25b2:	d1a1      	bne.n	24f8 <__aeabi_fsub+0x24c>
    25b4:	0033      	movs	r3, r6
    25b6:	000d      	movs	r5, r1
    25b8:	24ff      	movs	r4, #255	; 0xff
    25ba:	e6bd      	b.n	2338 <__aeabi_fsub+0x8c>
    25bc:	0033      	movs	r3, r6
    25be:	24ff      	movs	r4, #255	; 0xff
    25c0:	e6ba      	b.n	2338 <__aeabi_fsub+0x8c>
    25c2:	2301      	movs	r3, #1
    25c4:	e76e      	b.n	24a4 <__aeabi_fsub+0x1f8>
    25c6:	0033      	movs	r3, r6
    25c8:	0004      	movs	r4, r0
    25ca:	e6b5      	b.n	2338 <__aeabi_fsub+0x8c>
    25cc:	2700      	movs	r7, #0
    25ce:	2200      	movs	r2, #0
    25d0:	e71c      	b.n	240c <__aeabi_fsub+0x160>
    25d2:	0033      	movs	r3, r6
    25d4:	e6b0      	b.n	2338 <__aeabi_fsub+0x8c>
    25d6:	2301      	movs	r3, #1
    25d8:	e7c0      	b.n	255c <__aeabi_fsub+0x2b0>
    25da:	46c0      	nop			; (mov r8, r8)
    25dc:	7dffffff 	.word	0x7dffffff
    25e0:	fbffffff 	.word	0xfbffffff

000025e4 <__aeabi_f2iz>:
    25e4:	0241      	lsls	r1, r0, #9
    25e6:	0043      	lsls	r3, r0, #1
    25e8:	0fc2      	lsrs	r2, r0, #31
    25ea:	0a49      	lsrs	r1, r1, #9
    25ec:	0e1b      	lsrs	r3, r3, #24
    25ee:	2000      	movs	r0, #0
    25f0:	2b7e      	cmp	r3, #126	; 0x7e
    25f2:	dd0d      	ble.n	2610 <__aeabi_f2iz+0x2c>
    25f4:	2b9d      	cmp	r3, #157	; 0x9d
    25f6:	dc0c      	bgt.n	2612 <__aeabi_f2iz+0x2e>
    25f8:	2080      	movs	r0, #128	; 0x80
    25fa:	0400      	lsls	r0, r0, #16
    25fc:	4301      	orrs	r1, r0
    25fe:	2b95      	cmp	r3, #149	; 0x95
    2600:	dc0a      	bgt.n	2618 <__aeabi_f2iz+0x34>
    2602:	2096      	movs	r0, #150	; 0x96
    2604:	1ac3      	subs	r3, r0, r3
    2606:	40d9      	lsrs	r1, r3
    2608:	4248      	negs	r0, r1
    260a:	2a00      	cmp	r2, #0
    260c:	d100      	bne.n	2610 <__aeabi_f2iz+0x2c>
    260e:	0008      	movs	r0, r1
    2610:	4770      	bx	lr
    2612:	4b03      	ldr	r3, [pc, #12]	; (2620 <__aeabi_f2iz+0x3c>)
    2614:	18d0      	adds	r0, r2, r3
    2616:	e7fb      	b.n	2610 <__aeabi_f2iz+0x2c>
    2618:	3b96      	subs	r3, #150	; 0x96
    261a:	4099      	lsls	r1, r3
    261c:	e7f4      	b.n	2608 <__aeabi_f2iz+0x24>
    261e:	46c0      	nop			; (mov r8, r8)
    2620:	7fffffff 	.word	0x7fffffff

00002624 <__aeabi_ui2f>:
    2624:	b510      	push	{r4, lr}
    2626:	1e04      	subs	r4, r0, #0
    2628:	d027      	beq.n	267a <__aeabi_ui2f+0x56>
    262a:	f001 fa83 	bl	3b34 <__clzsi2>
    262e:	239e      	movs	r3, #158	; 0x9e
    2630:	1a1b      	subs	r3, r3, r0
    2632:	2b96      	cmp	r3, #150	; 0x96
    2634:	dc0a      	bgt.n	264c <__aeabi_ui2f+0x28>
    2636:	2296      	movs	r2, #150	; 0x96
    2638:	1ad2      	subs	r2, r2, r3
    263a:	4094      	lsls	r4, r2
    263c:	0264      	lsls	r4, r4, #9
    263e:	0a64      	lsrs	r4, r4, #9
    2640:	b2db      	uxtb	r3, r3
    2642:	0264      	lsls	r4, r4, #9
    2644:	05db      	lsls	r3, r3, #23
    2646:	0a60      	lsrs	r0, r4, #9
    2648:	4318      	orrs	r0, r3
    264a:	bd10      	pop	{r4, pc}
    264c:	2b99      	cmp	r3, #153	; 0x99
    264e:	dc17      	bgt.n	2680 <__aeabi_ui2f+0x5c>
    2650:	2299      	movs	r2, #153	; 0x99
    2652:	1ad2      	subs	r2, r2, r3
    2654:	2a00      	cmp	r2, #0
    2656:	dd27      	ble.n	26a8 <__aeabi_ui2f+0x84>
    2658:	4094      	lsls	r4, r2
    265a:	0022      	movs	r2, r4
    265c:	4c13      	ldr	r4, [pc, #76]	; (26ac <__aeabi_ui2f+0x88>)
    265e:	4014      	ands	r4, r2
    2660:	0751      	lsls	r1, r2, #29
    2662:	d004      	beq.n	266e <__aeabi_ui2f+0x4a>
    2664:	210f      	movs	r1, #15
    2666:	400a      	ands	r2, r1
    2668:	2a04      	cmp	r2, #4
    266a:	d000      	beq.n	266e <__aeabi_ui2f+0x4a>
    266c:	3404      	adds	r4, #4
    266e:	0162      	lsls	r2, r4, #5
    2670:	d412      	bmi.n	2698 <__aeabi_ui2f+0x74>
    2672:	01a4      	lsls	r4, r4, #6
    2674:	0a64      	lsrs	r4, r4, #9
    2676:	b2db      	uxtb	r3, r3
    2678:	e7e3      	b.n	2642 <__aeabi_ui2f+0x1e>
    267a:	2300      	movs	r3, #0
    267c:	2400      	movs	r4, #0
    267e:	e7e0      	b.n	2642 <__aeabi_ui2f+0x1e>
    2680:	22b9      	movs	r2, #185	; 0xb9
    2682:	0021      	movs	r1, r4
    2684:	1ad2      	subs	r2, r2, r3
    2686:	4091      	lsls	r1, r2
    2688:	000a      	movs	r2, r1
    268a:	1e51      	subs	r1, r2, #1
    268c:	418a      	sbcs	r2, r1
    268e:	2105      	movs	r1, #5
    2690:	1a09      	subs	r1, r1, r0
    2692:	40cc      	lsrs	r4, r1
    2694:	4314      	orrs	r4, r2
    2696:	e7db      	b.n	2650 <__aeabi_ui2f+0x2c>
    2698:	4b04      	ldr	r3, [pc, #16]	; (26ac <__aeabi_ui2f+0x88>)
    269a:	401c      	ands	r4, r3
    269c:	239f      	movs	r3, #159	; 0x9f
    269e:	01a4      	lsls	r4, r4, #6
    26a0:	1a1b      	subs	r3, r3, r0
    26a2:	0a64      	lsrs	r4, r4, #9
    26a4:	b2db      	uxtb	r3, r3
    26a6:	e7cc      	b.n	2642 <__aeabi_ui2f+0x1e>
    26a8:	0022      	movs	r2, r4
    26aa:	e7d7      	b.n	265c <__aeabi_ui2f+0x38>
    26ac:	fbffffff 	.word	0xfbffffff

000026b0 <__aeabi_ddiv>:
    26b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    26b2:	4657      	mov	r7, sl
    26b4:	4645      	mov	r5, r8
    26b6:	46de      	mov	lr, fp
    26b8:	464e      	mov	r6, r9
    26ba:	b5e0      	push	{r5, r6, r7, lr}
    26bc:	004c      	lsls	r4, r1, #1
    26be:	030e      	lsls	r6, r1, #12
    26c0:	b087      	sub	sp, #28
    26c2:	4683      	mov	fp, r0
    26c4:	4692      	mov	sl, r2
    26c6:	001d      	movs	r5, r3
    26c8:	4680      	mov	r8, r0
    26ca:	0b36      	lsrs	r6, r6, #12
    26cc:	0d64      	lsrs	r4, r4, #21
    26ce:	0fcf      	lsrs	r7, r1, #31
    26d0:	2c00      	cmp	r4, #0
    26d2:	d04f      	beq.n	2774 <__aeabi_ddiv+0xc4>
    26d4:	4b6f      	ldr	r3, [pc, #444]	; (2894 <__aeabi_ddiv+0x1e4>)
    26d6:	429c      	cmp	r4, r3
    26d8:	d035      	beq.n	2746 <__aeabi_ddiv+0x96>
    26da:	2380      	movs	r3, #128	; 0x80
    26dc:	0f42      	lsrs	r2, r0, #29
    26de:	041b      	lsls	r3, r3, #16
    26e0:	00f6      	lsls	r6, r6, #3
    26e2:	4313      	orrs	r3, r2
    26e4:	4333      	orrs	r3, r6
    26e6:	4699      	mov	r9, r3
    26e8:	00c3      	lsls	r3, r0, #3
    26ea:	4698      	mov	r8, r3
    26ec:	4b6a      	ldr	r3, [pc, #424]	; (2898 <__aeabi_ddiv+0x1e8>)
    26ee:	2600      	movs	r6, #0
    26f0:	469c      	mov	ip, r3
    26f2:	2300      	movs	r3, #0
    26f4:	4464      	add	r4, ip
    26f6:	9303      	str	r3, [sp, #12]
    26f8:	032b      	lsls	r3, r5, #12
    26fa:	0b1b      	lsrs	r3, r3, #12
    26fc:	469b      	mov	fp, r3
    26fe:	006b      	lsls	r3, r5, #1
    2700:	0fed      	lsrs	r5, r5, #31
    2702:	4650      	mov	r0, sl
    2704:	0d5b      	lsrs	r3, r3, #21
    2706:	9501      	str	r5, [sp, #4]
    2708:	d05e      	beq.n	27c8 <__aeabi_ddiv+0x118>
    270a:	4a62      	ldr	r2, [pc, #392]	; (2894 <__aeabi_ddiv+0x1e4>)
    270c:	4293      	cmp	r3, r2
    270e:	d053      	beq.n	27b8 <__aeabi_ddiv+0x108>
    2710:	465a      	mov	r2, fp
    2712:	00d1      	lsls	r1, r2, #3
    2714:	2280      	movs	r2, #128	; 0x80
    2716:	0f40      	lsrs	r0, r0, #29
    2718:	0412      	lsls	r2, r2, #16
    271a:	4302      	orrs	r2, r0
    271c:	430a      	orrs	r2, r1
    271e:	4693      	mov	fp, r2
    2720:	4652      	mov	r2, sl
    2722:	00d1      	lsls	r1, r2, #3
    2724:	4a5c      	ldr	r2, [pc, #368]	; (2898 <__aeabi_ddiv+0x1e8>)
    2726:	4694      	mov	ip, r2
    2728:	2200      	movs	r2, #0
    272a:	4463      	add	r3, ip
    272c:	0038      	movs	r0, r7
    272e:	4068      	eors	r0, r5
    2730:	4684      	mov	ip, r0
    2732:	9002      	str	r0, [sp, #8]
    2734:	1ae4      	subs	r4, r4, r3
    2736:	4316      	orrs	r6, r2
    2738:	2e0f      	cmp	r6, #15
    273a:	d900      	bls.n	273e <__aeabi_ddiv+0x8e>
    273c:	e0b4      	b.n	28a8 <__aeabi_ddiv+0x1f8>
    273e:	4b57      	ldr	r3, [pc, #348]	; (289c <__aeabi_ddiv+0x1ec>)
    2740:	00b6      	lsls	r6, r6, #2
    2742:	599b      	ldr	r3, [r3, r6]
    2744:	469f      	mov	pc, r3
    2746:	0003      	movs	r3, r0
    2748:	4333      	orrs	r3, r6
    274a:	4699      	mov	r9, r3
    274c:	d16c      	bne.n	2828 <__aeabi_ddiv+0x178>
    274e:	2300      	movs	r3, #0
    2750:	4698      	mov	r8, r3
    2752:	3302      	adds	r3, #2
    2754:	2608      	movs	r6, #8
    2756:	9303      	str	r3, [sp, #12]
    2758:	e7ce      	b.n	26f8 <__aeabi_ddiv+0x48>
    275a:	46cb      	mov	fp, r9
    275c:	4641      	mov	r1, r8
    275e:	9a03      	ldr	r2, [sp, #12]
    2760:	9701      	str	r7, [sp, #4]
    2762:	2a02      	cmp	r2, #2
    2764:	d165      	bne.n	2832 <__aeabi_ddiv+0x182>
    2766:	9b01      	ldr	r3, [sp, #4]
    2768:	4c4a      	ldr	r4, [pc, #296]	; (2894 <__aeabi_ddiv+0x1e4>)
    276a:	469c      	mov	ip, r3
    276c:	2300      	movs	r3, #0
    276e:	2200      	movs	r2, #0
    2770:	4698      	mov	r8, r3
    2772:	e06b      	b.n	284c <__aeabi_ddiv+0x19c>
    2774:	0003      	movs	r3, r0
    2776:	4333      	orrs	r3, r6
    2778:	4699      	mov	r9, r3
    277a:	d04e      	beq.n	281a <__aeabi_ddiv+0x16a>
    277c:	2e00      	cmp	r6, #0
    277e:	d100      	bne.n	2782 <__aeabi_ddiv+0xd2>
    2780:	e1bc      	b.n	2afc <__aeabi_ddiv+0x44c>
    2782:	0030      	movs	r0, r6
    2784:	f001 f9d6 	bl	3b34 <__clzsi2>
    2788:	0003      	movs	r3, r0
    278a:	3b0b      	subs	r3, #11
    278c:	2b1c      	cmp	r3, #28
    278e:	dd00      	ble.n	2792 <__aeabi_ddiv+0xe2>
    2790:	e1ac      	b.n	2aec <__aeabi_ddiv+0x43c>
    2792:	221d      	movs	r2, #29
    2794:	1ad3      	subs	r3, r2, r3
    2796:	465a      	mov	r2, fp
    2798:	0001      	movs	r1, r0
    279a:	40da      	lsrs	r2, r3
    279c:	3908      	subs	r1, #8
    279e:	408e      	lsls	r6, r1
    27a0:	0013      	movs	r3, r2
    27a2:	4333      	orrs	r3, r6
    27a4:	4699      	mov	r9, r3
    27a6:	465b      	mov	r3, fp
    27a8:	408b      	lsls	r3, r1
    27aa:	4698      	mov	r8, r3
    27ac:	2300      	movs	r3, #0
    27ae:	4c3c      	ldr	r4, [pc, #240]	; (28a0 <__aeabi_ddiv+0x1f0>)
    27b0:	2600      	movs	r6, #0
    27b2:	1a24      	subs	r4, r4, r0
    27b4:	9303      	str	r3, [sp, #12]
    27b6:	e79f      	b.n	26f8 <__aeabi_ddiv+0x48>
    27b8:	4651      	mov	r1, sl
    27ba:	465a      	mov	r2, fp
    27bc:	4311      	orrs	r1, r2
    27be:	d129      	bne.n	2814 <__aeabi_ddiv+0x164>
    27c0:	2200      	movs	r2, #0
    27c2:	4693      	mov	fp, r2
    27c4:	3202      	adds	r2, #2
    27c6:	e7b1      	b.n	272c <__aeabi_ddiv+0x7c>
    27c8:	4659      	mov	r1, fp
    27ca:	4301      	orrs	r1, r0
    27cc:	d01e      	beq.n	280c <__aeabi_ddiv+0x15c>
    27ce:	465b      	mov	r3, fp
    27d0:	2b00      	cmp	r3, #0
    27d2:	d100      	bne.n	27d6 <__aeabi_ddiv+0x126>
    27d4:	e19e      	b.n	2b14 <__aeabi_ddiv+0x464>
    27d6:	4658      	mov	r0, fp
    27d8:	f001 f9ac 	bl	3b34 <__clzsi2>
    27dc:	0003      	movs	r3, r0
    27de:	3b0b      	subs	r3, #11
    27e0:	2b1c      	cmp	r3, #28
    27e2:	dd00      	ble.n	27e6 <__aeabi_ddiv+0x136>
    27e4:	e18f      	b.n	2b06 <__aeabi_ddiv+0x456>
    27e6:	0002      	movs	r2, r0
    27e8:	4659      	mov	r1, fp
    27ea:	3a08      	subs	r2, #8
    27ec:	4091      	lsls	r1, r2
    27ee:	468b      	mov	fp, r1
    27f0:	211d      	movs	r1, #29
    27f2:	1acb      	subs	r3, r1, r3
    27f4:	4651      	mov	r1, sl
    27f6:	40d9      	lsrs	r1, r3
    27f8:	000b      	movs	r3, r1
    27fa:	4659      	mov	r1, fp
    27fc:	430b      	orrs	r3, r1
    27fe:	4651      	mov	r1, sl
    2800:	469b      	mov	fp, r3
    2802:	4091      	lsls	r1, r2
    2804:	4b26      	ldr	r3, [pc, #152]	; (28a0 <__aeabi_ddiv+0x1f0>)
    2806:	2200      	movs	r2, #0
    2808:	1a1b      	subs	r3, r3, r0
    280a:	e78f      	b.n	272c <__aeabi_ddiv+0x7c>
    280c:	2300      	movs	r3, #0
    280e:	2201      	movs	r2, #1
    2810:	469b      	mov	fp, r3
    2812:	e78b      	b.n	272c <__aeabi_ddiv+0x7c>
    2814:	4651      	mov	r1, sl
    2816:	2203      	movs	r2, #3
    2818:	e788      	b.n	272c <__aeabi_ddiv+0x7c>
    281a:	2300      	movs	r3, #0
    281c:	4698      	mov	r8, r3
    281e:	3301      	adds	r3, #1
    2820:	2604      	movs	r6, #4
    2822:	2400      	movs	r4, #0
    2824:	9303      	str	r3, [sp, #12]
    2826:	e767      	b.n	26f8 <__aeabi_ddiv+0x48>
    2828:	2303      	movs	r3, #3
    282a:	46b1      	mov	r9, r6
    282c:	9303      	str	r3, [sp, #12]
    282e:	260c      	movs	r6, #12
    2830:	e762      	b.n	26f8 <__aeabi_ddiv+0x48>
    2832:	2a03      	cmp	r2, #3
    2834:	d100      	bne.n	2838 <__aeabi_ddiv+0x188>
    2836:	e25c      	b.n	2cf2 <__aeabi_ddiv+0x642>
    2838:	9b01      	ldr	r3, [sp, #4]
    283a:	2a01      	cmp	r2, #1
    283c:	d000      	beq.n	2840 <__aeabi_ddiv+0x190>
    283e:	e1e4      	b.n	2c0a <__aeabi_ddiv+0x55a>
    2840:	4013      	ands	r3, r2
    2842:	469c      	mov	ip, r3
    2844:	2300      	movs	r3, #0
    2846:	2400      	movs	r4, #0
    2848:	2200      	movs	r2, #0
    284a:	4698      	mov	r8, r3
    284c:	2100      	movs	r1, #0
    284e:	0312      	lsls	r2, r2, #12
    2850:	0b13      	lsrs	r3, r2, #12
    2852:	0d0a      	lsrs	r2, r1, #20
    2854:	0512      	lsls	r2, r2, #20
    2856:	431a      	orrs	r2, r3
    2858:	0523      	lsls	r3, r4, #20
    285a:	4c12      	ldr	r4, [pc, #72]	; (28a4 <__aeabi_ddiv+0x1f4>)
    285c:	4640      	mov	r0, r8
    285e:	4022      	ands	r2, r4
    2860:	4313      	orrs	r3, r2
    2862:	4662      	mov	r2, ip
    2864:	005b      	lsls	r3, r3, #1
    2866:	07d2      	lsls	r2, r2, #31
    2868:	085b      	lsrs	r3, r3, #1
    286a:	4313      	orrs	r3, r2
    286c:	0019      	movs	r1, r3
    286e:	b007      	add	sp, #28
    2870:	bc3c      	pop	{r2, r3, r4, r5}
    2872:	4690      	mov	r8, r2
    2874:	4699      	mov	r9, r3
    2876:	46a2      	mov	sl, r4
    2878:	46ab      	mov	fp, r5
    287a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    287c:	2300      	movs	r3, #0
    287e:	2280      	movs	r2, #128	; 0x80
    2880:	469c      	mov	ip, r3
    2882:	0312      	lsls	r2, r2, #12
    2884:	4698      	mov	r8, r3
    2886:	4c03      	ldr	r4, [pc, #12]	; (2894 <__aeabi_ddiv+0x1e4>)
    2888:	e7e0      	b.n	284c <__aeabi_ddiv+0x19c>
    288a:	2300      	movs	r3, #0
    288c:	4c01      	ldr	r4, [pc, #4]	; (2894 <__aeabi_ddiv+0x1e4>)
    288e:	2200      	movs	r2, #0
    2890:	4698      	mov	r8, r3
    2892:	e7db      	b.n	284c <__aeabi_ddiv+0x19c>
    2894:	000007ff 	.word	0x000007ff
    2898:	fffffc01 	.word	0xfffffc01
    289c:	00006040 	.word	0x00006040
    28a0:	fffffc0d 	.word	0xfffffc0d
    28a4:	800fffff 	.word	0x800fffff
    28a8:	45d9      	cmp	r9, fp
    28aa:	d900      	bls.n	28ae <__aeabi_ddiv+0x1fe>
    28ac:	e139      	b.n	2b22 <__aeabi_ddiv+0x472>
    28ae:	d100      	bne.n	28b2 <__aeabi_ddiv+0x202>
    28b0:	e134      	b.n	2b1c <__aeabi_ddiv+0x46c>
    28b2:	2300      	movs	r3, #0
    28b4:	4646      	mov	r6, r8
    28b6:	464d      	mov	r5, r9
    28b8:	469a      	mov	sl, r3
    28ba:	3c01      	subs	r4, #1
    28bc:	465b      	mov	r3, fp
    28be:	0e0a      	lsrs	r2, r1, #24
    28c0:	021b      	lsls	r3, r3, #8
    28c2:	431a      	orrs	r2, r3
    28c4:	020b      	lsls	r3, r1, #8
    28c6:	0c17      	lsrs	r7, r2, #16
    28c8:	9303      	str	r3, [sp, #12]
    28ca:	0413      	lsls	r3, r2, #16
    28cc:	0c1b      	lsrs	r3, r3, #16
    28ce:	0039      	movs	r1, r7
    28d0:	0028      	movs	r0, r5
    28d2:	4690      	mov	r8, r2
    28d4:	9301      	str	r3, [sp, #4]
    28d6:	f7fe fc80 	bl	11da <__aeabi_uidiv>
    28da:	0002      	movs	r2, r0
    28dc:	9b01      	ldr	r3, [sp, #4]
    28de:	4683      	mov	fp, r0
    28e0:	435a      	muls	r2, r3
    28e2:	0028      	movs	r0, r5
    28e4:	0039      	movs	r1, r7
    28e6:	4691      	mov	r9, r2
    28e8:	f7fe fcae 	bl	1248 <__aeabi_uidivmod>
    28ec:	0c35      	lsrs	r5, r6, #16
    28ee:	0409      	lsls	r1, r1, #16
    28f0:	430d      	orrs	r5, r1
    28f2:	45a9      	cmp	r9, r5
    28f4:	d90d      	bls.n	2912 <__aeabi_ddiv+0x262>
    28f6:	465b      	mov	r3, fp
    28f8:	4445      	add	r5, r8
    28fa:	3b01      	subs	r3, #1
    28fc:	45a8      	cmp	r8, r5
    28fe:	d900      	bls.n	2902 <__aeabi_ddiv+0x252>
    2900:	e13a      	b.n	2b78 <__aeabi_ddiv+0x4c8>
    2902:	45a9      	cmp	r9, r5
    2904:	d800      	bhi.n	2908 <__aeabi_ddiv+0x258>
    2906:	e137      	b.n	2b78 <__aeabi_ddiv+0x4c8>
    2908:	2302      	movs	r3, #2
    290a:	425b      	negs	r3, r3
    290c:	469c      	mov	ip, r3
    290e:	4445      	add	r5, r8
    2910:	44e3      	add	fp, ip
    2912:	464b      	mov	r3, r9
    2914:	1aeb      	subs	r3, r5, r3
    2916:	0039      	movs	r1, r7
    2918:	0018      	movs	r0, r3
    291a:	9304      	str	r3, [sp, #16]
    291c:	f7fe fc5d 	bl	11da <__aeabi_uidiv>
    2920:	9b01      	ldr	r3, [sp, #4]
    2922:	0005      	movs	r5, r0
    2924:	4343      	muls	r3, r0
    2926:	0039      	movs	r1, r7
    2928:	9804      	ldr	r0, [sp, #16]
    292a:	4699      	mov	r9, r3
    292c:	f7fe fc8c 	bl	1248 <__aeabi_uidivmod>
    2930:	0433      	lsls	r3, r6, #16
    2932:	0409      	lsls	r1, r1, #16
    2934:	0c1b      	lsrs	r3, r3, #16
    2936:	430b      	orrs	r3, r1
    2938:	4599      	cmp	r9, r3
    293a:	d909      	bls.n	2950 <__aeabi_ddiv+0x2a0>
    293c:	4443      	add	r3, r8
    293e:	1e6a      	subs	r2, r5, #1
    2940:	4598      	cmp	r8, r3
    2942:	d900      	bls.n	2946 <__aeabi_ddiv+0x296>
    2944:	e11a      	b.n	2b7c <__aeabi_ddiv+0x4cc>
    2946:	4599      	cmp	r9, r3
    2948:	d800      	bhi.n	294c <__aeabi_ddiv+0x29c>
    294a:	e117      	b.n	2b7c <__aeabi_ddiv+0x4cc>
    294c:	3d02      	subs	r5, #2
    294e:	4443      	add	r3, r8
    2950:	464a      	mov	r2, r9
    2952:	1a9b      	subs	r3, r3, r2
    2954:	465a      	mov	r2, fp
    2956:	0412      	lsls	r2, r2, #16
    2958:	432a      	orrs	r2, r5
    295a:	9903      	ldr	r1, [sp, #12]
    295c:	4693      	mov	fp, r2
    295e:	0c10      	lsrs	r0, r2, #16
    2960:	0c0a      	lsrs	r2, r1, #16
    2962:	4691      	mov	r9, r2
    2964:	0409      	lsls	r1, r1, #16
    2966:	465a      	mov	r2, fp
    2968:	0c09      	lsrs	r1, r1, #16
    296a:	464e      	mov	r6, r9
    296c:	000d      	movs	r5, r1
    296e:	0412      	lsls	r2, r2, #16
    2970:	0c12      	lsrs	r2, r2, #16
    2972:	4345      	muls	r5, r0
    2974:	9105      	str	r1, [sp, #20]
    2976:	4351      	muls	r1, r2
    2978:	4372      	muls	r2, r6
    297a:	4370      	muls	r0, r6
    297c:	1952      	adds	r2, r2, r5
    297e:	0c0e      	lsrs	r6, r1, #16
    2980:	18b2      	adds	r2, r6, r2
    2982:	4295      	cmp	r5, r2
    2984:	d903      	bls.n	298e <__aeabi_ddiv+0x2de>
    2986:	2580      	movs	r5, #128	; 0x80
    2988:	026d      	lsls	r5, r5, #9
    298a:	46ac      	mov	ip, r5
    298c:	4460      	add	r0, ip
    298e:	0c15      	lsrs	r5, r2, #16
    2990:	0409      	lsls	r1, r1, #16
    2992:	0412      	lsls	r2, r2, #16
    2994:	0c09      	lsrs	r1, r1, #16
    2996:	1828      	adds	r0, r5, r0
    2998:	1852      	adds	r2, r2, r1
    299a:	4283      	cmp	r3, r0
    299c:	d200      	bcs.n	29a0 <__aeabi_ddiv+0x2f0>
    299e:	e0ce      	b.n	2b3e <__aeabi_ddiv+0x48e>
    29a0:	d100      	bne.n	29a4 <__aeabi_ddiv+0x2f4>
    29a2:	e0c8      	b.n	2b36 <__aeabi_ddiv+0x486>
    29a4:	1a1d      	subs	r5, r3, r0
    29a6:	4653      	mov	r3, sl
    29a8:	1a9e      	subs	r6, r3, r2
    29aa:	45b2      	cmp	sl, r6
    29ac:	4192      	sbcs	r2, r2
    29ae:	4252      	negs	r2, r2
    29b0:	1aab      	subs	r3, r5, r2
    29b2:	469a      	mov	sl, r3
    29b4:	4598      	cmp	r8, r3
    29b6:	d100      	bne.n	29ba <__aeabi_ddiv+0x30a>
    29b8:	e117      	b.n	2bea <__aeabi_ddiv+0x53a>
    29ba:	0039      	movs	r1, r7
    29bc:	0018      	movs	r0, r3
    29be:	f7fe fc0c 	bl	11da <__aeabi_uidiv>
    29c2:	9b01      	ldr	r3, [sp, #4]
    29c4:	0005      	movs	r5, r0
    29c6:	4343      	muls	r3, r0
    29c8:	0039      	movs	r1, r7
    29ca:	4650      	mov	r0, sl
    29cc:	9304      	str	r3, [sp, #16]
    29ce:	f7fe fc3b 	bl	1248 <__aeabi_uidivmod>
    29d2:	9804      	ldr	r0, [sp, #16]
    29d4:	040b      	lsls	r3, r1, #16
    29d6:	0c31      	lsrs	r1, r6, #16
    29d8:	4319      	orrs	r1, r3
    29da:	4288      	cmp	r0, r1
    29dc:	d909      	bls.n	29f2 <__aeabi_ddiv+0x342>
    29de:	4441      	add	r1, r8
    29e0:	1e6b      	subs	r3, r5, #1
    29e2:	4588      	cmp	r8, r1
    29e4:	d900      	bls.n	29e8 <__aeabi_ddiv+0x338>
    29e6:	e107      	b.n	2bf8 <__aeabi_ddiv+0x548>
    29e8:	4288      	cmp	r0, r1
    29ea:	d800      	bhi.n	29ee <__aeabi_ddiv+0x33e>
    29ec:	e104      	b.n	2bf8 <__aeabi_ddiv+0x548>
    29ee:	3d02      	subs	r5, #2
    29f0:	4441      	add	r1, r8
    29f2:	9b04      	ldr	r3, [sp, #16]
    29f4:	1acb      	subs	r3, r1, r3
    29f6:	0018      	movs	r0, r3
    29f8:	0039      	movs	r1, r7
    29fa:	9304      	str	r3, [sp, #16]
    29fc:	f7fe fbed 	bl	11da <__aeabi_uidiv>
    2a00:	9b01      	ldr	r3, [sp, #4]
    2a02:	4682      	mov	sl, r0
    2a04:	4343      	muls	r3, r0
    2a06:	0039      	movs	r1, r7
    2a08:	9804      	ldr	r0, [sp, #16]
    2a0a:	9301      	str	r3, [sp, #4]
    2a0c:	f7fe fc1c 	bl	1248 <__aeabi_uidivmod>
    2a10:	9801      	ldr	r0, [sp, #4]
    2a12:	040b      	lsls	r3, r1, #16
    2a14:	0431      	lsls	r1, r6, #16
    2a16:	0c09      	lsrs	r1, r1, #16
    2a18:	4319      	orrs	r1, r3
    2a1a:	4288      	cmp	r0, r1
    2a1c:	d90d      	bls.n	2a3a <__aeabi_ddiv+0x38a>
    2a1e:	4653      	mov	r3, sl
    2a20:	4441      	add	r1, r8
    2a22:	3b01      	subs	r3, #1
    2a24:	4588      	cmp	r8, r1
    2a26:	d900      	bls.n	2a2a <__aeabi_ddiv+0x37a>
    2a28:	e0e8      	b.n	2bfc <__aeabi_ddiv+0x54c>
    2a2a:	4288      	cmp	r0, r1
    2a2c:	d800      	bhi.n	2a30 <__aeabi_ddiv+0x380>
    2a2e:	e0e5      	b.n	2bfc <__aeabi_ddiv+0x54c>
    2a30:	2302      	movs	r3, #2
    2a32:	425b      	negs	r3, r3
    2a34:	469c      	mov	ip, r3
    2a36:	4441      	add	r1, r8
    2a38:	44e2      	add	sl, ip
    2a3a:	9b01      	ldr	r3, [sp, #4]
    2a3c:	042d      	lsls	r5, r5, #16
    2a3e:	1ace      	subs	r6, r1, r3
    2a40:	4651      	mov	r1, sl
    2a42:	4329      	orrs	r1, r5
    2a44:	9d05      	ldr	r5, [sp, #20]
    2a46:	464f      	mov	r7, r9
    2a48:	002a      	movs	r2, r5
    2a4a:	040b      	lsls	r3, r1, #16
    2a4c:	0c08      	lsrs	r0, r1, #16
    2a4e:	0c1b      	lsrs	r3, r3, #16
    2a50:	435a      	muls	r2, r3
    2a52:	4345      	muls	r5, r0
    2a54:	437b      	muls	r3, r7
    2a56:	4378      	muls	r0, r7
    2a58:	195b      	adds	r3, r3, r5
    2a5a:	0c17      	lsrs	r7, r2, #16
    2a5c:	18fb      	adds	r3, r7, r3
    2a5e:	429d      	cmp	r5, r3
    2a60:	d903      	bls.n	2a6a <__aeabi_ddiv+0x3ba>
    2a62:	2580      	movs	r5, #128	; 0x80
    2a64:	026d      	lsls	r5, r5, #9
    2a66:	46ac      	mov	ip, r5
    2a68:	4460      	add	r0, ip
    2a6a:	0c1d      	lsrs	r5, r3, #16
    2a6c:	0412      	lsls	r2, r2, #16
    2a6e:	041b      	lsls	r3, r3, #16
    2a70:	0c12      	lsrs	r2, r2, #16
    2a72:	1828      	adds	r0, r5, r0
    2a74:	189b      	adds	r3, r3, r2
    2a76:	4286      	cmp	r6, r0
    2a78:	d200      	bcs.n	2a7c <__aeabi_ddiv+0x3cc>
    2a7a:	e093      	b.n	2ba4 <__aeabi_ddiv+0x4f4>
    2a7c:	d100      	bne.n	2a80 <__aeabi_ddiv+0x3d0>
    2a7e:	e08e      	b.n	2b9e <__aeabi_ddiv+0x4ee>
    2a80:	2301      	movs	r3, #1
    2a82:	4319      	orrs	r1, r3
    2a84:	4ba0      	ldr	r3, [pc, #640]	; (2d08 <__aeabi_ddiv+0x658>)
    2a86:	18e3      	adds	r3, r4, r3
    2a88:	2b00      	cmp	r3, #0
    2a8a:	dc00      	bgt.n	2a8e <__aeabi_ddiv+0x3de>
    2a8c:	e099      	b.n	2bc2 <__aeabi_ddiv+0x512>
    2a8e:	074a      	lsls	r2, r1, #29
    2a90:	d000      	beq.n	2a94 <__aeabi_ddiv+0x3e4>
    2a92:	e09e      	b.n	2bd2 <__aeabi_ddiv+0x522>
    2a94:	465a      	mov	r2, fp
    2a96:	01d2      	lsls	r2, r2, #7
    2a98:	d506      	bpl.n	2aa8 <__aeabi_ddiv+0x3f8>
    2a9a:	465a      	mov	r2, fp
    2a9c:	4b9b      	ldr	r3, [pc, #620]	; (2d0c <__aeabi_ddiv+0x65c>)
    2a9e:	401a      	ands	r2, r3
    2aa0:	2380      	movs	r3, #128	; 0x80
    2aa2:	4693      	mov	fp, r2
    2aa4:	00db      	lsls	r3, r3, #3
    2aa6:	18e3      	adds	r3, r4, r3
    2aa8:	4a99      	ldr	r2, [pc, #612]	; (2d10 <__aeabi_ddiv+0x660>)
    2aaa:	4293      	cmp	r3, r2
    2aac:	dd68      	ble.n	2b80 <__aeabi_ddiv+0x4d0>
    2aae:	2301      	movs	r3, #1
    2ab0:	9a02      	ldr	r2, [sp, #8]
    2ab2:	4c98      	ldr	r4, [pc, #608]	; (2d14 <__aeabi_ddiv+0x664>)
    2ab4:	401a      	ands	r2, r3
    2ab6:	2300      	movs	r3, #0
    2ab8:	4694      	mov	ip, r2
    2aba:	4698      	mov	r8, r3
    2abc:	2200      	movs	r2, #0
    2abe:	e6c5      	b.n	284c <__aeabi_ddiv+0x19c>
    2ac0:	2280      	movs	r2, #128	; 0x80
    2ac2:	464b      	mov	r3, r9
    2ac4:	0312      	lsls	r2, r2, #12
    2ac6:	4213      	tst	r3, r2
    2ac8:	d00a      	beq.n	2ae0 <__aeabi_ddiv+0x430>
    2aca:	465b      	mov	r3, fp
    2acc:	4213      	tst	r3, r2
    2ace:	d106      	bne.n	2ade <__aeabi_ddiv+0x42e>
    2ad0:	431a      	orrs	r2, r3
    2ad2:	0312      	lsls	r2, r2, #12
    2ad4:	0b12      	lsrs	r2, r2, #12
    2ad6:	46ac      	mov	ip, r5
    2ad8:	4688      	mov	r8, r1
    2ada:	4c8e      	ldr	r4, [pc, #568]	; (2d14 <__aeabi_ddiv+0x664>)
    2adc:	e6b6      	b.n	284c <__aeabi_ddiv+0x19c>
    2ade:	464b      	mov	r3, r9
    2ae0:	431a      	orrs	r2, r3
    2ae2:	0312      	lsls	r2, r2, #12
    2ae4:	0b12      	lsrs	r2, r2, #12
    2ae6:	46bc      	mov	ip, r7
    2ae8:	4c8a      	ldr	r4, [pc, #552]	; (2d14 <__aeabi_ddiv+0x664>)
    2aea:	e6af      	b.n	284c <__aeabi_ddiv+0x19c>
    2aec:	0003      	movs	r3, r0
    2aee:	465a      	mov	r2, fp
    2af0:	3b28      	subs	r3, #40	; 0x28
    2af2:	409a      	lsls	r2, r3
    2af4:	2300      	movs	r3, #0
    2af6:	4691      	mov	r9, r2
    2af8:	4698      	mov	r8, r3
    2afa:	e657      	b.n	27ac <__aeabi_ddiv+0xfc>
    2afc:	4658      	mov	r0, fp
    2afe:	f001 f819 	bl	3b34 <__clzsi2>
    2b02:	3020      	adds	r0, #32
    2b04:	e640      	b.n	2788 <__aeabi_ddiv+0xd8>
    2b06:	0003      	movs	r3, r0
    2b08:	4652      	mov	r2, sl
    2b0a:	3b28      	subs	r3, #40	; 0x28
    2b0c:	409a      	lsls	r2, r3
    2b0e:	2100      	movs	r1, #0
    2b10:	4693      	mov	fp, r2
    2b12:	e677      	b.n	2804 <__aeabi_ddiv+0x154>
    2b14:	f001 f80e 	bl	3b34 <__clzsi2>
    2b18:	3020      	adds	r0, #32
    2b1a:	e65f      	b.n	27dc <__aeabi_ddiv+0x12c>
    2b1c:	4588      	cmp	r8, r1
    2b1e:	d200      	bcs.n	2b22 <__aeabi_ddiv+0x472>
    2b20:	e6c7      	b.n	28b2 <__aeabi_ddiv+0x202>
    2b22:	464b      	mov	r3, r9
    2b24:	07de      	lsls	r6, r3, #31
    2b26:	085d      	lsrs	r5, r3, #1
    2b28:	4643      	mov	r3, r8
    2b2a:	085b      	lsrs	r3, r3, #1
    2b2c:	431e      	orrs	r6, r3
    2b2e:	4643      	mov	r3, r8
    2b30:	07db      	lsls	r3, r3, #31
    2b32:	469a      	mov	sl, r3
    2b34:	e6c2      	b.n	28bc <__aeabi_ddiv+0x20c>
    2b36:	2500      	movs	r5, #0
    2b38:	4592      	cmp	sl, r2
    2b3a:	d300      	bcc.n	2b3e <__aeabi_ddiv+0x48e>
    2b3c:	e733      	b.n	29a6 <__aeabi_ddiv+0x2f6>
    2b3e:	9e03      	ldr	r6, [sp, #12]
    2b40:	4659      	mov	r1, fp
    2b42:	46b4      	mov	ip, r6
    2b44:	44e2      	add	sl, ip
    2b46:	45b2      	cmp	sl, r6
    2b48:	41ad      	sbcs	r5, r5
    2b4a:	426d      	negs	r5, r5
    2b4c:	4445      	add	r5, r8
    2b4e:	18eb      	adds	r3, r5, r3
    2b50:	3901      	subs	r1, #1
    2b52:	4598      	cmp	r8, r3
    2b54:	d207      	bcs.n	2b66 <__aeabi_ddiv+0x4b6>
    2b56:	4298      	cmp	r0, r3
    2b58:	d900      	bls.n	2b5c <__aeabi_ddiv+0x4ac>
    2b5a:	e07f      	b.n	2c5c <__aeabi_ddiv+0x5ac>
    2b5c:	d100      	bne.n	2b60 <__aeabi_ddiv+0x4b0>
    2b5e:	e0bc      	b.n	2cda <__aeabi_ddiv+0x62a>
    2b60:	1a1d      	subs	r5, r3, r0
    2b62:	468b      	mov	fp, r1
    2b64:	e71f      	b.n	29a6 <__aeabi_ddiv+0x2f6>
    2b66:	4598      	cmp	r8, r3
    2b68:	d1fa      	bne.n	2b60 <__aeabi_ddiv+0x4b0>
    2b6a:	9d03      	ldr	r5, [sp, #12]
    2b6c:	4555      	cmp	r5, sl
    2b6e:	d9f2      	bls.n	2b56 <__aeabi_ddiv+0x4a6>
    2b70:	4643      	mov	r3, r8
    2b72:	468b      	mov	fp, r1
    2b74:	1a1d      	subs	r5, r3, r0
    2b76:	e716      	b.n	29a6 <__aeabi_ddiv+0x2f6>
    2b78:	469b      	mov	fp, r3
    2b7a:	e6ca      	b.n	2912 <__aeabi_ddiv+0x262>
    2b7c:	0015      	movs	r5, r2
    2b7e:	e6e7      	b.n	2950 <__aeabi_ddiv+0x2a0>
    2b80:	465a      	mov	r2, fp
    2b82:	08c9      	lsrs	r1, r1, #3
    2b84:	0752      	lsls	r2, r2, #29
    2b86:	430a      	orrs	r2, r1
    2b88:	055b      	lsls	r3, r3, #21
    2b8a:	4690      	mov	r8, r2
    2b8c:	0d5c      	lsrs	r4, r3, #21
    2b8e:	465a      	mov	r2, fp
    2b90:	2301      	movs	r3, #1
    2b92:	9902      	ldr	r1, [sp, #8]
    2b94:	0252      	lsls	r2, r2, #9
    2b96:	4019      	ands	r1, r3
    2b98:	0b12      	lsrs	r2, r2, #12
    2b9a:	468c      	mov	ip, r1
    2b9c:	e656      	b.n	284c <__aeabi_ddiv+0x19c>
    2b9e:	2b00      	cmp	r3, #0
    2ba0:	d100      	bne.n	2ba4 <__aeabi_ddiv+0x4f4>
    2ba2:	e76f      	b.n	2a84 <__aeabi_ddiv+0x3d4>
    2ba4:	4446      	add	r6, r8
    2ba6:	1e4a      	subs	r2, r1, #1
    2ba8:	45b0      	cmp	r8, r6
    2baa:	d929      	bls.n	2c00 <__aeabi_ddiv+0x550>
    2bac:	0011      	movs	r1, r2
    2bae:	4286      	cmp	r6, r0
    2bb0:	d000      	beq.n	2bb4 <__aeabi_ddiv+0x504>
    2bb2:	e765      	b.n	2a80 <__aeabi_ddiv+0x3d0>
    2bb4:	9a03      	ldr	r2, [sp, #12]
    2bb6:	4293      	cmp	r3, r2
    2bb8:	d000      	beq.n	2bbc <__aeabi_ddiv+0x50c>
    2bba:	e761      	b.n	2a80 <__aeabi_ddiv+0x3d0>
    2bbc:	e762      	b.n	2a84 <__aeabi_ddiv+0x3d4>
    2bbe:	2101      	movs	r1, #1
    2bc0:	4249      	negs	r1, r1
    2bc2:	2001      	movs	r0, #1
    2bc4:	1ac2      	subs	r2, r0, r3
    2bc6:	2a38      	cmp	r2, #56	; 0x38
    2bc8:	dd21      	ble.n	2c0e <__aeabi_ddiv+0x55e>
    2bca:	9b02      	ldr	r3, [sp, #8]
    2bcc:	4003      	ands	r3, r0
    2bce:	469c      	mov	ip, r3
    2bd0:	e638      	b.n	2844 <__aeabi_ddiv+0x194>
    2bd2:	220f      	movs	r2, #15
    2bd4:	400a      	ands	r2, r1
    2bd6:	2a04      	cmp	r2, #4
    2bd8:	d100      	bne.n	2bdc <__aeabi_ddiv+0x52c>
    2bda:	e75b      	b.n	2a94 <__aeabi_ddiv+0x3e4>
    2bdc:	000a      	movs	r2, r1
    2bde:	1d11      	adds	r1, r2, #4
    2be0:	4291      	cmp	r1, r2
    2be2:	4192      	sbcs	r2, r2
    2be4:	4252      	negs	r2, r2
    2be6:	4493      	add	fp, r2
    2be8:	e754      	b.n	2a94 <__aeabi_ddiv+0x3e4>
    2bea:	4b47      	ldr	r3, [pc, #284]	; (2d08 <__aeabi_ddiv+0x658>)
    2bec:	18e3      	adds	r3, r4, r3
    2bee:	2b00      	cmp	r3, #0
    2bf0:	dde5      	ble.n	2bbe <__aeabi_ddiv+0x50e>
    2bf2:	2201      	movs	r2, #1
    2bf4:	4252      	negs	r2, r2
    2bf6:	e7f2      	b.n	2bde <__aeabi_ddiv+0x52e>
    2bf8:	001d      	movs	r5, r3
    2bfa:	e6fa      	b.n	29f2 <__aeabi_ddiv+0x342>
    2bfc:	469a      	mov	sl, r3
    2bfe:	e71c      	b.n	2a3a <__aeabi_ddiv+0x38a>
    2c00:	42b0      	cmp	r0, r6
    2c02:	d839      	bhi.n	2c78 <__aeabi_ddiv+0x5c8>
    2c04:	d06e      	beq.n	2ce4 <__aeabi_ddiv+0x634>
    2c06:	0011      	movs	r1, r2
    2c08:	e73a      	b.n	2a80 <__aeabi_ddiv+0x3d0>
    2c0a:	9302      	str	r3, [sp, #8]
    2c0c:	e73a      	b.n	2a84 <__aeabi_ddiv+0x3d4>
    2c0e:	2a1f      	cmp	r2, #31
    2c10:	dc3c      	bgt.n	2c8c <__aeabi_ddiv+0x5dc>
    2c12:	2320      	movs	r3, #32
    2c14:	1a9b      	subs	r3, r3, r2
    2c16:	000c      	movs	r4, r1
    2c18:	4658      	mov	r0, fp
    2c1a:	4099      	lsls	r1, r3
    2c1c:	4098      	lsls	r0, r3
    2c1e:	1e4b      	subs	r3, r1, #1
    2c20:	4199      	sbcs	r1, r3
    2c22:	465b      	mov	r3, fp
    2c24:	40d4      	lsrs	r4, r2
    2c26:	40d3      	lsrs	r3, r2
    2c28:	4320      	orrs	r0, r4
    2c2a:	4308      	orrs	r0, r1
    2c2c:	001a      	movs	r2, r3
    2c2e:	0743      	lsls	r3, r0, #29
    2c30:	d009      	beq.n	2c46 <__aeabi_ddiv+0x596>
    2c32:	230f      	movs	r3, #15
    2c34:	4003      	ands	r3, r0
    2c36:	2b04      	cmp	r3, #4
    2c38:	d005      	beq.n	2c46 <__aeabi_ddiv+0x596>
    2c3a:	0001      	movs	r1, r0
    2c3c:	1d08      	adds	r0, r1, #4
    2c3e:	4288      	cmp	r0, r1
    2c40:	419b      	sbcs	r3, r3
    2c42:	425b      	negs	r3, r3
    2c44:	18d2      	adds	r2, r2, r3
    2c46:	0213      	lsls	r3, r2, #8
    2c48:	d53a      	bpl.n	2cc0 <__aeabi_ddiv+0x610>
    2c4a:	2301      	movs	r3, #1
    2c4c:	9a02      	ldr	r2, [sp, #8]
    2c4e:	2401      	movs	r4, #1
    2c50:	401a      	ands	r2, r3
    2c52:	2300      	movs	r3, #0
    2c54:	4694      	mov	ip, r2
    2c56:	4698      	mov	r8, r3
    2c58:	2200      	movs	r2, #0
    2c5a:	e5f7      	b.n	284c <__aeabi_ddiv+0x19c>
    2c5c:	2102      	movs	r1, #2
    2c5e:	4249      	negs	r1, r1
    2c60:	468c      	mov	ip, r1
    2c62:	9d03      	ldr	r5, [sp, #12]
    2c64:	44e3      	add	fp, ip
    2c66:	46ac      	mov	ip, r5
    2c68:	44e2      	add	sl, ip
    2c6a:	45aa      	cmp	sl, r5
    2c6c:	41ad      	sbcs	r5, r5
    2c6e:	426d      	negs	r5, r5
    2c70:	4445      	add	r5, r8
    2c72:	18ed      	adds	r5, r5, r3
    2c74:	1a2d      	subs	r5, r5, r0
    2c76:	e696      	b.n	29a6 <__aeabi_ddiv+0x2f6>
    2c78:	1e8a      	subs	r2, r1, #2
    2c7a:	9903      	ldr	r1, [sp, #12]
    2c7c:	004d      	lsls	r5, r1, #1
    2c7e:	428d      	cmp	r5, r1
    2c80:	4189      	sbcs	r1, r1
    2c82:	4249      	negs	r1, r1
    2c84:	4441      	add	r1, r8
    2c86:	1876      	adds	r6, r6, r1
    2c88:	9503      	str	r5, [sp, #12]
    2c8a:	e78f      	b.n	2bac <__aeabi_ddiv+0x4fc>
    2c8c:	201f      	movs	r0, #31
    2c8e:	4240      	negs	r0, r0
    2c90:	1ac3      	subs	r3, r0, r3
    2c92:	4658      	mov	r0, fp
    2c94:	40d8      	lsrs	r0, r3
    2c96:	0003      	movs	r3, r0
    2c98:	2a20      	cmp	r2, #32
    2c9a:	d028      	beq.n	2cee <__aeabi_ddiv+0x63e>
    2c9c:	2040      	movs	r0, #64	; 0x40
    2c9e:	465d      	mov	r5, fp
    2ca0:	1a82      	subs	r2, r0, r2
    2ca2:	4095      	lsls	r5, r2
    2ca4:	4329      	orrs	r1, r5
    2ca6:	1e4a      	subs	r2, r1, #1
    2ca8:	4191      	sbcs	r1, r2
    2caa:	4319      	orrs	r1, r3
    2cac:	2307      	movs	r3, #7
    2cae:	2200      	movs	r2, #0
    2cb0:	400b      	ands	r3, r1
    2cb2:	d009      	beq.n	2cc8 <__aeabi_ddiv+0x618>
    2cb4:	230f      	movs	r3, #15
    2cb6:	2200      	movs	r2, #0
    2cb8:	400b      	ands	r3, r1
    2cba:	0008      	movs	r0, r1
    2cbc:	2b04      	cmp	r3, #4
    2cbe:	d1bd      	bne.n	2c3c <__aeabi_ddiv+0x58c>
    2cc0:	0001      	movs	r1, r0
    2cc2:	0753      	lsls	r3, r2, #29
    2cc4:	0252      	lsls	r2, r2, #9
    2cc6:	0b12      	lsrs	r2, r2, #12
    2cc8:	08c9      	lsrs	r1, r1, #3
    2cca:	4319      	orrs	r1, r3
    2ccc:	2301      	movs	r3, #1
    2cce:	4688      	mov	r8, r1
    2cd0:	9902      	ldr	r1, [sp, #8]
    2cd2:	2400      	movs	r4, #0
    2cd4:	4019      	ands	r1, r3
    2cd6:	468c      	mov	ip, r1
    2cd8:	e5b8      	b.n	284c <__aeabi_ddiv+0x19c>
    2cda:	4552      	cmp	r2, sl
    2cdc:	d8be      	bhi.n	2c5c <__aeabi_ddiv+0x5ac>
    2cde:	468b      	mov	fp, r1
    2ce0:	2500      	movs	r5, #0
    2ce2:	e660      	b.n	29a6 <__aeabi_ddiv+0x2f6>
    2ce4:	9d03      	ldr	r5, [sp, #12]
    2ce6:	429d      	cmp	r5, r3
    2ce8:	d3c6      	bcc.n	2c78 <__aeabi_ddiv+0x5c8>
    2cea:	0011      	movs	r1, r2
    2cec:	e762      	b.n	2bb4 <__aeabi_ddiv+0x504>
    2cee:	2500      	movs	r5, #0
    2cf0:	e7d8      	b.n	2ca4 <__aeabi_ddiv+0x5f4>
    2cf2:	2280      	movs	r2, #128	; 0x80
    2cf4:	465b      	mov	r3, fp
    2cf6:	0312      	lsls	r2, r2, #12
    2cf8:	431a      	orrs	r2, r3
    2cfa:	9b01      	ldr	r3, [sp, #4]
    2cfc:	0312      	lsls	r2, r2, #12
    2cfe:	0b12      	lsrs	r2, r2, #12
    2d00:	469c      	mov	ip, r3
    2d02:	4688      	mov	r8, r1
    2d04:	4c03      	ldr	r4, [pc, #12]	; (2d14 <__aeabi_ddiv+0x664>)
    2d06:	e5a1      	b.n	284c <__aeabi_ddiv+0x19c>
    2d08:	000003ff 	.word	0x000003ff
    2d0c:	feffffff 	.word	0xfeffffff
    2d10:	000007fe 	.word	0x000007fe
    2d14:	000007ff 	.word	0x000007ff

00002d18 <__aeabi_dmul>:
    2d18:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d1a:	4657      	mov	r7, sl
    2d1c:	4645      	mov	r5, r8
    2d1e:	46de      	mov	lr, fp
    2d20:	464e      	mov	r6, r9
    2d22:	b5e0      	push	{r5, r6, r7, lr}
    2d24:	030c      	lsls	r4, r1, #12
    2d26:	4698      	mov	r8, r3
    2d28:	004e      	lsls	r6, r1, #1
    2d2a:	0b23      	lsrs	r3, r4, #12
    2d2c:	b087      	sub	sp, #28
    2d2e:	0007      	movs	r7, r0
    2d30:	4692      	mov	sl, r2
    2d32:	469b      	mov	fp, r3
    2d34:	0d76      	lsrs	r6, r6, #21
    2d36:	0fcd      	lsrs	r5, r1, #31
    2d38:	2e00      	cmp	r6, #0
    2d3a:	d06b      	beq.n	2e14 <__aeabi_dmul+0xfc>
    2d3c:	4b6d      	ldr	r3, [pc, #436]	; (2ef4 <__aeabi_dmul+0x1dc>)
    2d3e:	429e      	cmp	r6, r3
    2d40:	d035      	beq.n	2dae <__aeabi_dmul+0x96>
    2d42:	2480      	movs	r4, #128	; 0x80
    2d44:	465b      	mov	r3, fp
    2d46:	0f42      	lsrs	r2, r0, #29
    2d48:	0424      	lsls	r4, r4, #16
    2d4a:	00db      	lsls	r3, r3, #3
    2d4c:	4314      	orrs	r4, r2
    2d4e:	431c      	orrs	r4, r3
    2d50:	00c3      	lsls	r3, r0, #3
    2d52:	4699      	mov	r9, r3
    2d54:	4b68      	ldr	r3, [pc, #416]	; (2ef8 <__aeabi_dmul+0x1e0>)
    2d56:	46a3      	mov	fp, r4
    2d58:	469c      	mov	ip, r3
    2d5a:	2300      	movs	r3, #0
    2d5c:	2700      	movs	r7, #0
    2d5e:	4466      	add	r6, ip
    2d60:	9302      	str	r3, [sp, #8]
    2d62:	4643      	mov	r3, r8
    2d64:	031c      	lsls	r4, r3, #12
    2d66:	005a      	lsls	r2, r3, #1
    2d68:	0fdb      	lsrs	r3, r3, #31
    2d6a:	4650      	mov	r0, sl
    2d6c:	0b24      	lsrs	r4, r4, #12
    2d6e:	0d52      	lsrs	r2, r2, #21
    2d70:	4698      	mov	r8, r3
    2d72:	d100      	bne.n	2d76 <__aeabi_dmul+0x5e>
    2d74:	e076      	b.n	2e64 <__aeabi_dmul+0x14c>
    2d76:	4b5f      	ldr	r3, [pc, #380]	; (2ef4 <__aeabi_dmul+0x1dc>)
    2d78:	429a      	cmp	r2, r3
    2d7a:	d06d      	beq.n	2e58 <__aeabi_dmul+0x140>
    2d7c:	2380      	movs	r3, #128	; 0x80
    2d7e:	0f41      	lsrs	r1, r0, #29
    2d80:	041b      	lsls	r3, r3, #16
    2d82:	430b      	orrs	r3, r1
    2d84:	495c      	ldr	r1, [pc, #368]	; (2ef8 <__aeabi_dmul+0x1e0>)
    2d86:	00e4      	lsls	r4, r4, #3
    2d88:	468c      	mov	ip, r1
    2d8a:	431c      	orrs	r4, r3
    2d8c:	00c3      	lsls	r3, r0, #3
    2d8e:	2000      	movs	r0, #0
    2d90:	4462      	add	r2, ip
    2d92:	4641      	mov	r1, r8
    2d94:	18b6      	adds	r6, r6, r2
    2d96:	4069      	eors	r1, r5
    2d98:	1c72      	adds	r2, r6, #1
    2d9a:	9101      	str	r1, [sp, #4]
    2d9c:	4694      	mov	ip, r2
    2d9e:	4307      	orrs	r7, r0
    2da0:	2f0f      	cmp	r7, #15
    2da2:	d900      	bls.n	2da6 <__aeabi_dmul+0x8e>
    2da4:	e0b0      	b.n	2f08 <__aeabi_dmul+0x1f0>
    2da6:	4a55      	ldr	r2, [pc, #340]	; (2efc <__aeabi_dmul+0x1e4>)
    2da8:	00bf      	lsls	r7, r7, #2
    2daa:	59d2      	ldr	r2, [r2, r7]
    2dac:	4697      	mov	pc, r2
    2dae:	465b      	mov	r3, fp
    2db0:	4303      	orrs	r3, r0
    2db2:	4699      	mov	r9, r3
    2db4:	d000      	beq.n	2db8 <__aeabi_dmul+0xa0>
    2db6:	e087      	b.n	2ec8 <__aeabi_dmul+0x1b0>
    2db8:	2300      	movs	r3, #0
    2dba:	469b      	mov	fp, r3
    2dbc:	3302      	adds	r3, #2
    2dbe:	2708      	movs	r7, #8
    2dc0:	9302      	str	r3, [sp, #8]
    2dc2:	e7ce      	b.n	2d62 <__aeabi_dmul+0x4a>
    2dc4:	4642      	mov	r2, r8
    2dc6:	9201      	str	r2, [sp, #4]
    2dc8:	2802      	cmp	r0, #2
    2dca:	d067      	beq.n	2e9c <__aeabi_dmul+0x184>
    2dcc:	2803      	cmp	r0, #3
    2dce:	d100      	bne.n	2dd2 <__aeabi_dmul+0xba>
    2dd0:	e20e      	b.n	31f0 <__aeabi_dmul+0x4d8>
    2dd2:	2801      	cmp	r0, #1
    2dd4:	d000      	beq.n	2dd8 <__aeabi_dmul+0xc0>
    2dd6:	e162      	b.n	309e <__aeabi_dmul+0x386>
    2dd8:	2300      	movs	r3, #0
    2dda:	2400      	movs	r4, #0
    2ddc:	2200      	movs	r2, #0
    2dde:	4699      	mov	r9, r3
    2de0:	9901      	ldr	r1, [sp, #4]
    2de2:	4001      	ands	r1, r0
    2de4:	b2cd      	uxtb	r5, r1
    2de6:	2100      	movs	r1, #0
    2de8:	0312      	lsls	r2, r2, #12
    2dea:	0d0b      	lsrs	r3, r1, #20
    2dec:	0b12      	lsrs	r2, r2, #12
    2dee:	051b      	lsls	r3, r3, #20
    2df0:	4313      	orrs	r3, r2
    2df2:	4a43      	ldr	r2, [pc, #268]	; (2f00 <__aeabi_dmul+0x1e8>)
    2df4:	0524      	lsls	r4, r4, #20
    2df6:	4013      	ands	r3, r2
    2df8:	431c      	orrs	r4, r3
    2dfa:	0064      	lsls	r4, r4, #1
    2dfc:	07ed      	lsls	r5, r5, #31
    2dfe:	0864      	lsrs	r4, r4, #1
    2e00:	432c      	orrs	r4, r5
    2e02:	4648      	mov	r0, r9
    2e04:	0021      	movs	r1, r4
    2e06:	b007      	add	sp, #28
    2e08:	bc3c      	pop	{r2, r3, r4, r5}
    2e0a:	4690      	mov	r8, r2
    2e0c:	4699      	mov	r9, r3
    2e0e:	46a2      	mov	sl, r4
    2e10:	46ab      	mov	fp, r5
    2e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e14:	4303      	orrs	r3, r0
    2e16:	4699      	mov	r9, r3
    2e18:	d04f      	beq.n	2eba <__aeabi_dmul+0x1a2>
    2e1a:	465b      	mov	r3, fp
    2e1c:	2b00      	cmp	r3, #0
    2e1e:	d100      	bne.n	2e22 <__aeabi_dmul+0x10a>
    2e20:	e189      	b.n	3136 <__aeabi_dmul+0x41e>
    2e22:	4658      	mov	r0, fp
    2e24:	f000 fe86 	bl	3b34 <__clzsi2>
    2e28:	0003      	movs	r3, r0
    2e2a:	3b0b      	subs	r3, #11
    2e2c:	2b1c      	cmp	r3, #28
    2e2e:	dd00      	ble.n	2e32 <__aeabi_dmul+0x11a>
    2e30:	e17a      	b.n	3128 <__aeabi_dmul+0x410>
    2e32:	221d      	movs	r2, #29
    2e34:	1ad3      	subs	r3, r2, r3
    2e36:	003a      	movs	r2, r7
    2e38:	0001      	movs	r1, r0
    2e3a:	465c      	mov	r4, fp
    2e3c:	40da      	lsrs	r2, r3
    2e3e:	3908      	subs	r1, #8
    2e40:	408c      	lsls	r4, r1
    2e42:	0013      	movs	r3, r2
    2e44:	408f      	lsls	r7, r1
    2e46:	4323      	orrs	r3, r4
    2e48:	469b      	mov	fp, r3
    2e4a:	46b9      	mov	r9, r7
    2e4c:	2300      	movs	r3, #0
    2e4e:	4e2d      	ldr	r6, [pc, #180]	; (2f04 <__aeabi_dmul+0x1ec>)
    2e50:	2700      	movs	r7, #0
    2e52:	1a36      	subs	r6, r6, r0
    2e54:	9302      	str	r3, [sp, #8]
    2e56:	e784      	b.n	2d62 <__aeabi_dmul+0x4a>
    2e58:	4653      	mov	r3, sl
    2e5a:	4323      	orrs	r3, r4
    2e5c:	d12a      	bne.n	2eb4 <__aeabi_dmul+0x19c>
    2e5e:	2400      	movs	r4, #0
    2e60:	2002      	movs	r0, #2
    2e62:	e796      	b.n	2d92 <__aeabi_dmul+0x7a>
    2e64:	4653      	mov	r3, sl
    2e66:	4323      	orrs	r3, r4
    2e68:	d020      	beq.n	2eac <__aeabi_dmul+0x194>
    2e6a:	2c00      	cmp	r4, #0
    2e6c:	d100      	bne.n	2e70 <__aeabi_dmul+0x158>
    2e6e:	e157      	b.n	3120 <__aeabi_dmul+0x408>
    2e70:	0020      	movs	r0, r4
    2e72:	f000 fe5f 	bl	3b34 <__clzsi2>
    2e76:	0003      	movs	r3, r0
    2e78:	3b0b      	subs	r3, #11
    2e7a:	2b1c      	cmp	r3, #28
    2e7c:	dd00      	ble.n	2e80 <__aeabi_dmul+0x168>
    2e7e:	e149      	b.n	3114 <__aeabi_dmul+0x3fc>
    2e80:	211d      	movs	r1, #29
    2e82:	1acb      	subs	r3, r1, r3
    2e84:	4651      	mov	r1, sl
    2e86:	0002      	movs	r2, r0
    2e88:	40d9      	lsrs	r1, r3
    2e8a:	4653      	mov	r3, sl
    2e8c:	3a08      	subs	r2, #8
    2e8e:	4094      	lsls	r4, r2
    2e90:	4093      	lsls	r3, r2
    2e92:	430c      	orrs	r4, r1
    2e94:	4a1b      	ldr	r2, [pc, #108]	; (2f04 <__aeabi_dmul+0x1ec>)
    2e96:	1a12      	subs	r2, r2, r0
    2e98:	2000      	movs	r0, #0
    2e9a:	e77a      	b.n	2d92 <__aeabi_dmul+0x7a>
    2e9c:	2501      	movs	r5, #1
    2e9e:	9b01      	ldr	r3, [sp, #4]
    2ea0:	4c14      	ldr	r4, [pc, #80]	; (2ef4 <__aeabi_dmul+0x1dc>)
    2ea2:	401d      	ands	r5, r3
    2ea4:	2300      	movs	r3, #0
    2ea6:	2200      	movs	r2, #0
    2ea8:	4699      	mov	r9, r3
    2eaa:	e79c      	b.n	2de6 <__aeabi_dmul+0xce>
    2eac:	2400      	movs	r4, #0
    2eae:	2200      	movs	r2, #0
    2eb0:	2001      	movs	r0, #1
    2eb2:	e76e      	b.n	2d92 <__aeabi_dmul+0x7a>
    2eb4:	4653      	mov	r3, sl
    2eb6:	2003      	movs	r0, #3
    2eb8:	e76b      	b.n	2d92 <__aeabi_dmul+0x7a>
    2eba:	2300      	movs	r3, #0
    2ebc:	469b      	mov	fp, r3
    2ebe:	3301      	adds	r3, #1
    2ec0:	2704      	movs	r7, #4
    2ec2:	2600      	movs	r6, #0
    2ec4:	9302      	str	r3, [sp, #8]
    2ec6:	e74c      	b.n	2d62 <__aeabi_dmul+0x4a>
    2ec8:	2303      	movs	r3, #3
    2eca:	4681      	mov	r9, r0
    2ecc:	270c      	movs	r7, #12
    2ece:	9302      	str	r3, [sp, #8]
    2ed0:	e747      	b.n	2d62 <__aeabi_dmul+0x4a>
    2ed2:	2280      	movs	r2, #128	; 0x80
    2ed4:	2300      	movs	r3, #0
    2ed6:	2500      	movs	r5, #0
    2ed8:	0312      	lsls	r2, r2, #12
    2eda:	4699      	mov	r9, r3
    2edc:	4c05      	ldr	r4, [pc, #20]	; (2ef4 <__aeabi_dmul+0x1dc>)
    2ede:	e782      	b.n	2de6 <__aeabi_dmul+0xce>
    2ee0:	465c      	mov	r4, fp
    2ee2:	464b      	mov	r3, r9
    2ee4:	9802      	ldr	r0, [sp, #8]
    2ee6:	e76f      	b.n	2dc8 <__aeabi_dmul+0xb0>
    2ee8:	465c      	mov	r4, fp
    2eea:	464b      	mov	r3, r9
    2eec:	9501      	str	r5, [sp, #4]
    2eee:	9802      	ldr	r0, [sp, #8]
    2ef0:	e76a      	b.n	2dc8 <__aeabi_dmul+0xb0>
    2ef2:	46c0      	nop			; (mov r8, r8)
    2ef4:	000007ff 	.word	0x000007ff
    2ef8:	fffffc01 	.word	0xfffffc01
    2efc:	00006080 	.word	0x00006080
    2f00:	800fffff 	.word	0x800fffff
    2f04:	fffffc0d 	.word	0xfffffc0d
    2f08:	464a      	mov	r2, r9
    2f0a:	4649      	mov	r1, r9
    2f0c:	0c17      	lsrs	r7, r2, #16
    2f0e:	0c1a      	lsrs	r2, r3, #16
    2f10:	041b      	lsls	r3, r3, #16
    2f12:	0c1b      	lsrs	r3, r3, #16
    2f14:	0408      	lsls	r0, r1, #16
    2f16:	0019      	movs	r1, r3
    2f18:	0c00      	lsrs	r0, r0, #16
    2f1a:	4341      	muls	r1, r0
    2f1c:	0015      	movs	r5, r2
    2f1e:	4688      	mov	r8, r1
    2f20:	0019      	movs	r1, r3
    2f22:	437d      	muls	r5, r7
    2f24:	4379      	muls	r1, r7
    2f26:	9503      	str	r5, [sp, #12]
    2f28:	4689      	mov	r9, r1
    2f2a:	0029      	movs	r1, r5
    2f2c:	0015      	movs	r5, r2
    2f2e:	4345      	muls	r5, r0
    2f30:	444d      	add	r5, r9
    2f32:	9502      	str	r5, [sp, #8]
    2f34:	4645      	mov	r5, r8
    2f36:	0c2d      	lsrs	r5, r5, #16
    2f38:	46aa      	mov	sl, r5
    2f3a:	9d02      	ldr	r5, [sp, #8]
    2f3c:	4455      	add	r5, sl
    2f3e:	45a9      	cmp	r9, r5
    2f40:	d906      	bls.n	2f50 <__aeabi_dmul+0x238>
    2f42:	468a      	mov	sl, r1
    2f44:	2180      	movs	r1, #128	; 0x80
    2f46:	0249      	lsls	r1, r1, #9
    2f48:	4689      	mov	r9, r1
    2f4a:	44ca      	add	sl, r9
    2f4c:	4651      	mov	r1, sl
    2f4e:	9103      	str	r1, [sp, #12]
    2f50:	0c29      	lsrs	r1, r5, #16
    2f52:	9104      	str	r1, [sp, #16]
    2f54:	4641      	mov	r1, r8
    2f56:	0409      	lsls	r1, r1, #16
    2f58:	042d      	lsls	r5, r5, #16
    2f5a:	0c09      	lsrs	r1, r1, #16
    2f5c:	4688      	mov	r8, r1
    2f5e:	0029      	movs	r1, r5
    2f60:	0c25      	lsrs	r5, r4, #16
    2f62:	0424      	lsls	r4, r4, #16
    2f64:	4441      	add	r1, r8
    2f66:	0c24      	lsrs	r4, r4, #16
    2f68:	9105      	str	r1, [sp, #20]
    2f6a:	0021      	movs	r1, r4
    2f6c:	4341      	muls	r1, r0
    2f6e:	4688      	mov	r8, r1
    2f70:	0021      	movs	r1, r4
    2f72:	4379      	muls	r1, r7
    2f74:	468a      	mov	sl, r1
    2f76:	4368      	muls	r0, r5
    2f78:	4641      	mov	r1, r8
    2f7a:	4450      	add	r0, sl
    2f7c:	4681      	mov	r9, r0
    2f7e:	0c08      	lsrs	r0, r1, #16
    2f80:	4448      	add	r0, r9
    2f82:	436f      	muls	r7, r5
    2f84:	4582      	cmp	sl, r0
    2f86:	d903      	bls.n	2f90 <__aeabi_dmul+0x278>
    2f88:	2180      	movs	r1, #128	; 0x80
    2f8a:	0249      	lsls	r1, r1, #9
    2f8c:	4689      	mov	r9, r1
    2f8e:	444f      	add	r7, r9
    2f90:	0c01      	lsrs	r1, r0, #16
    2f92:	4689      	mov	r9, r1
    2f94:	0039      	movs	r1, r7
    2f96:	4449      	add	r1, r9
    2f98:	9102      	str	r1, [sp, #8]
    2f9a:	4641      	mov	r1, r8
    2f9c:	040f      	lsls	r7, r1, #16
    2f9e:	9904      	ldr	r1, [sp, #16]
    2fa0:	0c3f      	lsrs	r7, r7, #16
    2fa2:	4688      	mov	r8, r1
    2fa4:	0400      	lsls	r0, r0, #16
    2fa6:	19c0      	adds	r0, r0, r7
    2fa8:	4480      	add	r8, r0
    2faa:	4641      	mov	r1, r8
    2fac:	9104      	str	r1, [sp, #16]
    2fae:	4659      	mov	r1, fp
    2fb0:	0c0f      	lsrs	r7, r1, #16
    2fb2:	0409      	lsls	r1, r1, #16
    2fb4:	0c09      	lsrs	r1, r1, #16
    2fb6:	4688      	mov	r8, r1
    2fb8:	4359      	muls	r1, r3
    2fba:	468a      	mov	sl, r1
    2fbc:	0039      	movs	r1, r7
    2fbe:	4351      	muls	r1, r2
    2fc0:	4689      	mov	r9, r1
    2fc2:	4641      	mov	r1, r8
    2fc4:	434a      	muls	r2, r1
    2fc6:	4651      	mov	r1, sl
    2fc8:	0c09      	lsrs	r1, r1, #16
    2fca:	468b      	mov	fp, r1
    2fcc:	437b      	muls	r3, r7
    2fce:	18d2      	adds	r2, r2, r3
    2fd0:	445a      	add	r2, fp
    2fd2:	4293      	cmp	r3, r2
    2fd4:	d903      	bls.n	2fde <__aeabi_dmul+0x2c6>
    2fd6:	2380      	movs	r3, #128	; 0x80
    2fd8:	025b      	lsls	r3, r3, #9
    2fda:	469b      	mov	fp, r3
    2fdc:	44d9      	add	r9, fp
    2fde:	4651      	mov	r1, sl
    2fe0:	0409      	lsls	r1, r1, #16
    2fe2:	0c09      	lsrs	r1, r1, #16
    2fe4:	468a      	mov	sl, r1
    2fe6:	4641      	mov	r1, r8
    2fe8:	4361      	muls	r1, r4
    2fea:	437c      	muls	r4, r7
    2fec:	0c13      	lsrs	r3, r2, #16
    2fee:	0412      	lsls	r2, r2, #16
    2ff0:	444b      	add	r3, r9
    2ff2:	4452      	add	r2, sl
    2ff4:	46a1      	mov	r9, r4
    2ff6:	468a      	mov	sl, r1
    2ff8:	003c      	movs	r4, r7
    2ffa:	4641      	mov	r1, r8
    2ffc:	436c      	muls	r4, r5
    2ffe:	434d      	muls	r5, r1
    3000:	4651      	mov	r1, sl
    3002:	444d      	add	r5, r9
    3004:	0c0f      	lsrs	r7, r1, #16
    3006:	197d      	adds	r5, r7, r5
    3008:	45a9      	cmp	r9, r5
    300a:	d903      	bls.n	3014 <__aeabi_dmul+0x2fc>
    300c:	2180      	movs	r1, #128	; 0x80
    300e:	0249      	lsls	r1, r1, #9
    3010:	4688      	mov	r8, r1
    3012:	4444      	add	r4, r8
    3014:	9f04      	ldr	r7, [sp, #16]
    3016:	9903      	ldr	r1, [sp, #12]
    3018:	46b8      	mov	r8, r7
    301a:	4441      	add	r1, r8
    301c:	468b      	mov	fp, r1
    301e:	4583      	cmp	fp, r0
    3020:	4180      	sbcs	r0, r0
    3022:	4241      	negs	r1, r0
    3024:	4688      	mov	r8, r1
    3026:	4651      	mov	r1, sl
    3028:	0408      	lsls	r0, r1, #16
    302a:	042f      	lsls	r7, r5, #16
    302c:	0c00      	lsrs	r0, r0, #16
    302e:	183f      	adds	r7, r7, r0
    3030:	4658      	mov	r0, fp
    3032:	9902      	ldr	r1, [sp, #8]
    3034:	1810      	adds	r0, r2, r0
    3036:	4689      	mov	r9, r1
    3038:	4290      	cmp	r0, r2
    303a:	4192      	sbcs	r2, r2
    303c:	444f      	add	r7, r9
    303e:	46ba      	mov	sl, r7
    3040:	4252      	negs	r2, r2
    3042:	4699      	mov	r9, r3
    3044:	4693      	mov	fp, r2
    3046:	44c2      	add	sl, r8
    3048:	44d1      	add	r9, sl
    304a:	44cb      	add	fp, r9
    304c:	428f      	cmp	r7, r1
    304e:	41bf      	sbcs	r7, r7
    3050:	45c2      	cmp	sl, r8
    3052:	4189      	sbcs	r1, r1
    3054:	4599      	cmp	r9, r3
    3056:	419b      	sbcs	r3, r3
    3058:	4593      	cmp	fp, r2
    305a:	4192      	sbcs	r2, r2
    305c:	427f      	negs	r7, r7
    305e:	4249      	negs	r1, r1
    3060:	0c2d      	lsrs	r5, r5, #16
    3062:	4252      	negs	r2, r2
    3064:	430f      	orrs	r7, r1
    3066:	425b      	negs	r3, r3
    3068:	4313      	orrs	r3, r2
    306a:	197f      	adds	r7, r7, r5
    306c:	18ff      	adds	r7, r7, r3
    306e:	465b      	mov	r3, fp
    3070:	193c      	adds	r4, r7, r4
    3072:	0ddb      	lsrs	r3, r3, #23
    3074:	9a05      	ldr	r2, [sp, #20]
    3076:	0264      	lsls	r4, r4, #9
    3078:	431c      	orrs	r4, r3
    307a:	0243      	lsls	r3, r0, #9
    307c:	4313      	orrs	r3, r2
    307e:	1e5d      	subs	r5, r3, #1
    3080:	41ab      	sbcs	r3, r5
    3082:	465a      	mov	r2, fp
    3084:	0dc0      	lsrs	r0, r0, #23
    3086:	4303      	orrs	r3, r0
    3088:	0252      	lsls	r2, r2, #9
    308a:	4313      	orrs	r3, r2
    308c:	01e2      	lsls	r2, r4, #7
    308e:	d556      	bpl.n	313e <__aeabi_dmul+0x426>
    3090:	2001      	movs	r0, #1
    3092:	085a      	lsrs	r2, r3, #1
    3094:	4003      	ands	r3, r0
    3096:	4313      	orrs	r3, r2
    3098:	07e2      	lsls	r2, r4, #31
    309a:	4313      	orrs	r3, r2
    309c:	0864      	lsrs	r4, r4, #1
    309e:	485a      	ldr	r0, [pc, #360]	; (3208 <__aeabi_dmul+0x4f0>)
    30a0:	4460      	add	r0, ip
    30a2:	2800      	cmp	r0, #0
    30a4:	dd4d      	ble.n	3142 <__aeabi_dmul+0x42a>
    30a6:	075a      	lsls	r2, r3, #29
    30a8:	d009      	beq.n	30be <__aeabi_dmul+0x3a6>
    30aa:	220f      	movs	r2, #15
    30ac:	401a      	ands	r2, r3
    30ae:	2a04      	cmp	r2, #4
    30b0:	d005      	beq.n	30be <__aeabi_dmul+0x3a6>
    30b2:	1d1a      	adds	r2, r3, #4
    30b4:	429a      	cmp	r2, r3
    30b6:	419b      	sbcs	r3, r3
    30b8:	425b      	negs	r3, r3
    30ba:	18e4      	adds	r4, r4, r3
    30bc:	0013      	movs	r3, r2
    30be:	01e2      	lsls	r2, r4, #7
    30c0:	d504      	bpl.n	30cc <__aeabi_dmul+0x3b4>
    30c2:	2080      	movs	r0, #128	; 0x80
    30c4:	4a51      	ldr	r2, [pc, #324]	; (320c <__aeabi_dmul+0x4f4>)
    30c6:	00c0      	lsls	r0, r0, #3
    30c8:	4014      	ands	r4, r2
    30ca:	4460      	add	r0, ip
    30cc:	4a50      	ldr	r2, [pc, #320]	; (3210 <__aeabi_dmul+0x4f8>)
    30ce:	4290      	cmp	r0, r2
    30d0:	dd00      	ble.n	30d4 <__aeabi_dmul+0x3bc>
    30d2:	e6e3      	b.n	2e9c <__aeabi_dmul+0x184>
    30d4:	2501      	movs	r5, #1
    30d6:	08db      	lsrs	r3, r3, #3
    30d8:	0762      	lsls	r2, r4, #29
    30da:	431a      	orrs	r2, r3
    30dc:	0264      	lsls	r4, r4, #9
    30de:	9b01      	ldr	r3, [sp, #4]
    30e0:	4691      	mov	r9, r2
    30e2:	0b22      	lsrs	r2, r4, #12
    30e4:	0544      	lsls	r4, r0, #21
    30e6:	0d64      	lsrs	r4, r4, #21
    30e8:	401d      	ands	r5, r3
    30ea:	e67c      	b.n	2de6 <__aeabi_dmul+0xce>
    30ec:	2280      	movs	r2, #128	; 0x80
    30ee:	4659      	mov	r1, fp
    30f0:	0312      	lsls	r2, r2, #12
    30f2:	4211      	tst	r1, r2
    30f4:	d008      	beq.n	3108 <__aeabi_dmul+0x3f0>
    30f6:	4214      	tst	r4, r2
    30f8:	d106      	bne.n	3108 <__aeabi_dmul+0x3f0>
    30fa:	4322      	orrs	r2, r4
    30fc:	0312      	lsls	r2, r2, #12
    30fe:	0b12      	lsrs	r2, r2, #12
    3100:	4645      	mov	r5, r8
    3102:	4699      	mov	r9, r3
    3104:	4c43      	ldr	r4, [pc, #268]	; (3214 <__aeabi_dmul+0x4fc>)
    3106:	e66e      	b.n	2de6 <__aeabi_dmul+0xce>
    3108:	465b      	mov	r3, fp
    310a:	431a      	orrs	r2, r3
    310c:	0312      	lsls	r2, r2, #12
    310e:	0b12      	lsrs	r2, r2, #12
    3110:	4c40      	ldr	r4, [pc, #256]	; (3214 <__aeabi_dmul+0x4fc>)
    3112:	e668      	b.n	2de6 <__aeabi_dmul+0xce>
    3114:	0003      	movs	r3, r0
    3116:	4654      	mov	r4, sl
    3118:	3b28      	subs	r3, #40	; 0x28
    311a:	409c      	lsls	r4, r3
    311c:	2300      	movs	r3, #0
    311e:	e6b9      	b.n	2e94 <__aeabi_dmul+0x17c>
    3120:	f000 fd08 	bl	3b34 <__clzsi2>
    3124:	3020      	adds	r0, #32
    3126:	e6a6      	b.n	2e76 <__aeabi_dmul+0x15e>
    3128:	0003      	movs	r3, r0
    312a:	3b28      	subs	r3, #40	; 0x28
    312c:	409f      	lsls	r7, r3
    312e:	2300      	movs	r3, #0
    3130:	46bb      	mov	fp, r7
    3132:	4699      	mov	r9, r3
    3134:	e68a      	b.n	2e4c <__aeabi_dmul+0x134>
    3136:	f000 fcfd 	bl	3b34 <__clzsi2>
    313a:	3020      	adds	r0, #32
    313c:	e674      	b.n	2e28 <__aeabi_dmul+0x110>
    313e:	46b4      	mov	ip, r6
    3140:	e7ad      	b.n	309e <__aeabi_dmul+0x386>
    3142:	2501      	movs	r5, #1
    3144:	1a2a      	subs	r2, r5, r0
    3146:	2a38      	cmp	r2, #56	; 0x38
    3148:	dd06      	ble.n	3158 <__aeabi_dmul+0x440>
    314a:	9b01      	ldr	r3, [sp, #4]
    314c:	2400      	movs	r4, #0
    314e:	401d      	ands	r5, r3
    3150:	2300      	movs	r3, #0
    3152:	2200      	movs	r2, #0
    3154:	4699      	mov	r9, r3
    3156:	e646      	b.n	2de6 <__aeabi_dmul+0xce>
    3158:	2a1f      	cmp	r2, #31
    315a:	dc21      	bgt.n	31a0 <__aeabi_dmul+0x488>
    315c:	2520      	movs	r5, #32
    315e:	0020      	movs	r0, r4
    3160:	1aad      	subs	r5, r5, r2
    3162:	001e      	movs	r6, r3
    3164:	40ab      	lsls	r3, r5
    3166:	40a8      	lsls	r0, r5
    3168:	40d6      	lsrs	r6, r2
    316a:	1e5d      	subs	r5, r3, #1
    316c:	41ab      	sbcs	r3, r5
    316e:	4330      	orrs	r0, r6
    3170:	4318      	orrs	r0, r3
    3172:	40d4      	lsrs	r4, r2
    3174:	0743      	lsls	r3, r0, #29
    3176:	d009      	beq.n	318c <__aeabi_dmul+0x474>
    3178:	230f      	movs	r3, #15
    317a:	4003      	ands	r3, r0
    317c:	2b04      	cmp	r3, #4
    317e:	d005      	beq.n	318c <__aeabi_dmul+0x474>
    3180:	0003      	movs	r3, r0
    3182:	1d18      	adds	r0, r3, #4
    3184:	4298      	cmp	r0, r3
    3186:	419b      	sbcs	r3, r3
    3188:	425b      	negs	r3, r3
    318a:	18e4      	adds	r4, r4, r3
    318c:	0223      	lsls	r3, r4, #8
    318e:	d521      	bpl.n	31d4 <__aeabi_dmul+0x4bc>
    3190:	2501      	movs	r5, #1
    3192:	9b01      	ldr	r3, [sp, #4]
    3194:	2401      	movs	r4, #1
    3196:	401d      	ands	r5, r3
    3198:	2300      	movs	r3, #0
    319a:	2200      	movs	r2, #0
    319c:	4699      	mov	r9, r3
    319e:	e622      	b.n	2de6 <__aeabi_dmul+0xce>
    31a0:	251f      	movs	r5, #31
    31a2:	0021      	movs	r1, r4
    31a4:	426d      	negs	r5, r5
    31a6:	1a28      	subs	r0, r5, r0
    31a8:	40c1      	lsrs	r1, r0
    31aa:	0008      	movs	r0, r1
    31ac:	2a20      	cmp	r2, #32
    31ae:	d01d      	beq.n	31ec <__aeabi_dmul+0x4d4>
    31b0:	355f      	adds	r5, #95	; 0x5f
    31b2:	1aaa      	subs	r2, r5, r2
    31b4:	4094      	lsls	r4, r2
    31b6:	4323      	orrs	r3, r4
    31b8:	1e5c      	subs	r4, r3, #1
    31ba:	41a3      	sbcs	r3, r4
    31bc:	2507      	movs	r5, #7
    31be:	4303      	orrs	r3, r0
    31c0:	401d      	ands	r5, r3
    31c2:	2200      	movs	r2, #0
    31c4:	2d00      	cmp	r5, #0
    31c6:	d009      	beq.n	31dc <__aeabi_dmul+0x4c4>
    31c8:	220f      	movs	r2, #15
    31ca:	2400      	movs	r4, #0
    31cc:	401a      	ands	r2, r3
    31ce:	0018      	movs	r0, r3
    31d0:	2a04      	cmp	r2, #4
    31d2:	d1d6      	bne.n	3182 <__aeabi_dmul+0x46a>
    31d4:	0003      	movs	r3, r0
    31d6:	0765      	lsls	r5, r4, #29
    31d8:	0264      	lsls	r4, r4, #9
    31da:	0b22      	lsrs	r2, r4, #12
    31dc:	08db      	lsrs	r3, r3, #3
    31de:	432b      	orrs	r3, r5
    31e0:	2501      	movs	r5, #1
    31e2:	4699      	mov	r9, r3
    31e4:	9b01      	ldr	r3, [sp, #4]
    31e6:	2400      	movs	r4, #0
    31e8:	401d      	ands	r5, r3
    31ea:	e5fc      	b.n	2de6 <__aeabi_dmul+0xce>
    31ec:	2400      	movs	r4, #0
    31ee:	e7e2      	b.n	31b6 <__aeabi_dmul+0x49e>
    31f0:	2280      	movs	r2, #128	; 0x80
    31f2:	2501      	movs	r5, #1
    31f4:	0312      	lsls	r2, r2, #12
    31f6:	4322      	orrs	r2, r4
    31f8:	9901      	ldr	r1, [sp, #4]
    31fa:	0312      	lsls	r2, r2, #12
    31fc:	0b12      	lsrs	r2, r2, #12
    31fe:	400d      	ands	r5, r1
    3200:	4699      	mov	r9, r3
    3202:	4c04      	ldr	r4, [pc, #16]	; (3214 <__aeabi_dmul+0x4fc>)
    3204:	e5ef      	b.n	2de6 <__aeabi_dmul+0xce>
    3206:	46c0      	nop			; (mov r8, r8)
    3208:	000003ff 	.word	0x000003ff
    320c:	feffffff 	.word	0xfeffffff
    3210:	000007fe 	.word	0x000007fe
    3214:	000007ff 	.word	0x000007ff

00003218 <__aeabi_dsub>:
    3218:	b5f0      	push	{r4, r5, r6, r7, lr}
    321a:	4646      	mov	r6, r8
    321c:	46d6      	mov	lr, sl
    321e:	464f      	mov	r7, r9
    3220:	030c      	lsls	r4, r1, #12
    3222:	b5c0      	push	{r6, r7, lr}
    3224:	0fcd      	lsrs	r5, r1, #31
    3226:	004e      	lsls	r6, r1, #1
    3228:	0a61      	lsrs	r1, r4, #9
    322a:	0f44      	lsrs	r4, r0, #29
    322c:	430c      	orrs	r4, r1
    322e:	00c1      	lsls	r1, r0, #3
    3230:	0058      	lsls	r0, r3, #1
    3232:	0d40      	lsrs	r0, r0, #21
    3234:	4684      	mov	ip, r0
    3236:	468a      	mov	sl, r1
    3238:	000f      	movs	r7, r1
    323a:	0319      	lsls	r1, r3, #12
    323c:	0f50      	lsrs	r0, r2, #29
    323e:	0a49      	lsrs	r1, r1, #9
    3240:	4301      	orrs	r1, r0
    3242:	48c6      	ldr	r0, [pc, #792]	; (355c <__aeabi_dsub+0x344>)
    3244:	0d76      	lsrs	r6, r6, #21
    3246:	46a8      	mov	r8, r5
    3248:	0fdb      	lsrs	r3, r3, #31
    324a:	00d2      	lsls	r2, r2, #3
    324c:	4584      	cmp	ip, r0
    324e:	d100      	bne.n	3252 <__aeabi_dsub+0x3a>
    3250:	e0d8      	b.n	3404 <__aeabi_dsub+0x1ec>
    3252:	2001      	movs	r0, #1
    3254:	4043      	eors	r3, r0
    3256:	42ab      	cmp	r3, r5
    3258:	d100      	bne.n	325c <__aeabi_dsub+0x44>
    325a:	e0a6      	b.n	33aa <__aeabi_dsub+0x192>
    325c:	4660      	mov	r0, ip
    325e:	1a35      	subs	r5, r6, r0
    3260:	2d00      	cmp	r5, #0
    3262:	dc00      	bgt.n	3266 <__aeabi_dsub+0x4e>
    3264:	e105      	b.n	3472 <__aeabi_dsub+0x25a>
    3266:	2800      	cmp	r0, #0
    3268:	d110      	bne.n	328c <__aeabi_dsub+0x74>
    326a:	000b      	movs	r3, r1
    326c:	4313      	orrs	r3, r2
    326e:	d100      	bne.n	3272 <__aeabi_dsub+0x5a>
    3270:	e0d7      	b.n	3422 <__aeabi_dsub+0x20a>
    3272:	1e6b      	subs	r3, r5, #1
    3274:	2b00      	cmp	r3, #0
    3276:	d000      	beq.n	327a <__aeabi_dsub+0x62>
    3278:	e14b      	b.n	3512 <__aeabi_dsub+0x2fa>
    327a:	4653      	mov	r3, sl
    327c:	1a9f      	subs	r7, r3, r2
    327e:	45ba      	cmp	sl, r7
    3280:	4180      	sbcs	r0, r0
    3282:	1a64      	subs	r4, r4, r1
    3284:	4240      	negs	r0, r0
    3286:	1a24      	subs	r4, r4, r0
    3288:	2601      	movs	r6, #1
    328a:	e01e      	b.n	32ca <__aeabi_dsub+0xb2>
    328c:	4bb3      	ldr	r3, [pc, #716]	; (355c <__aeabi_dsub+0x344>)
    328e:	429e      	cmp	r6, r3
    3290:	d048      	beq.n	3324 <__aeabi_dsub+0x10c>
    3292:	2380      	movs	r3, #128	; 0x80
    3294:	041b      	lsls	r3, r3, #16
    3296:	4319      	orrs	r1, r3
    3298:	2d38      	cmp	r5, #56	; 0x38
    329a:	dd00      	ble.n	329e <__aeabi_dsub+0x86>
    329c:	e119      	b.n	34d2 <__aeabi_dsub+0x2ba>
    329e:	2d1f      	cmp	r5, #31
    32a0:	dd00      	ble.n	32a4 <__aeabi_dsub+0x8c>
    32a2:	e14c      	b.n	353e <__aeabi_dsub+0x326>
    32a4:	2320      	movs	r3, #32
    32a6:	000f      	movs	r7, r1
    32a8:	1b5b      	subs	r3, r3, r5
    32aa:	0010      	movs	r0, r2
    32ac:	409a      	lsls	r2, r3
    32ae:	409f      	lsls	r7, r3
    32b0:	40e8      	lsrs	r0, r5
    32b2:	1e53      	subs	r3, r2, #1
    32b4:	419a      	sbcs	r2, r3
    32b6:	40e9      	lsrs	r1, r5
    32b8:	4307      	orrs	r7, r0
    32ba:	4317      	orrs	r7, r2
    32bc:	4653      	mov	r3, sl
    32be:	1bdf      	subs	r7, r3, r7
    32c0:	1a61      	subs	r1, r4, r1
    32c2:	45ba      	cmp	sl, r7
    32c4:	41a4      	sbcs	r4, r4
    32c6:	4264      	negs	r4, r4
    32c8:	1b0c      	subs	r4, r1, r4
    32ca:	0223      	lsls	r3, r4, #8
    32cc:	d400      	bmi.n	32d0 <__aeabi_dsub+0xb8>
    32ce:	e0c5      	b.n	345c <__aeabi_dsub+0x244>
    32d0:	0264      	lsls	r4, r4, #9
    32d2:	0a65      	lsrs	r5, r4, #9
    32d4:	2d00      	cmp	r5, #0
    32d6:	d100      	bne.n	32da <__aeabi_dsub+0xc2>
    32d8:	e0f6      	b.n	34c8 <__aeabi_dsub+0x2b0>
    32da:	0028      	movs	r0, r5
    32dc:	f000 fc2a 	bl	3b34 <__clzsi2>
    32e0:	0003      	movs	r3, r0
    32e2:	3b08      	subs	r3, #8
    32e4:	2b1f      	cmp	r3, #31
    32e6:	dd00      	ble.n	32ea <__aeabi_dsub+0xd2>
    32e8:	e0e9      	b.n	34be <__aeabi_dsub+0x2a6>
    32ea:	2220      	movs	r2, #32
    32ec:	003c      	movs	r4, r7
    32ee:	1ad2      	subs	r2, r2, r3
    32f0:	409d      	lsls	r5, r3
    32f2:	40d4      	lsrs	r4, r2
    32f4:	409f      	lsls	r7, r3
    32f6:	4325      	orrs	r5, r4
    32f8:	429e      	cmp	r6, r3
    32fa:	dd00      	ble.n	32fe <__aeabi_dsub+0xe6>
    32fc:	e0db      	b.n	34b6 <__aeabi_dsub+0x29e>
    32fe:	1b9e      	subs	r6, r3, r6
    3300:	1c73      	adds	r3, r6, #1
    3302:	2b1f      	cmp	r3, #31
    3304:	dd00      	ble.n	3308 <__aeabi_dsub+0xf0>
    3306:	e10a      	b.n	351e <__aeabi_dsub+0x306>
    3308:	2220      	movs	r2, #32
    330a:	0038      	movs	r0, r7
    330c:	1ad2      	subs	r2, r2, r3
    330e:	0029      	movs	r1, r5
    3310:	4097      	lsls	r7, r2
    3312:	002c      	movs	r4, r5
    3314:	4091      	lsls	r1, r2
    3316:	40d8      	lsrs	r0, r3
    3318:	1e7a      	subs	r2, r7, #1
    331a:	4197      	sbcs	r7, r2
    331c:	40dc      	lsrs	r4, r3
    331e:	2600      	movs	r6, #0
    3320:	4301      	orrs	r1, r0
    3322:	430f      	orrs	r7, r1
    3324:	077b      	lsls	r3, r7, #29
    3326:	d009      	beq.n	333c <__aeabi_dsub+0x124>
    3328:	230f      	movs	r3, #15
    332a:	403b      	ands	r3, r7
    332c:	2b04      	cmp	r3, #4
    332e:	d005      	beq.n	333c <__aeabi_dsub+0x124>
    3330:	1d3b      	adds	r3, r7, #4
    3332:	42bb      	cmp	r3, r7
    3334:	41bf      	sbcs	r7, r7
    3336:	427f      	negs	r7, r7
    3338:	19e4      	adds	r4, r4, r7
    333a:	001f      	movs	r7, r3
    333c:	0223      	lsls	r3, r4, #8
    333e:	d525      	bpl.n	338c <__aeabi_dsub+0x174>
    3340:	4b86      	ldr	r3, [pc, #536]	; (355c <__aeabi_dsub+0x344>)
    3342:	3601      	adds	r6, #1
    3344:	429e      	cmp	r6, r3
    3346:	d100      	bne.n	334a <__aeabi_dsub+0x132>
    3348:	e0af      	b.n	34aa <__aeabi_dsub+0x292>
    334a:	4b85      	ldr	r3, [pc, #532]	; (3560 <__aeabi_dsub+0x348>)
    334c:	2501      	movs	r5, #1
    334e:	401c      	ands	r4, r3
    3350:	4643      	mov	r3, r8
    3352:	0762      	lsls	r2, r4, #29
    3354:	08ff      	lsrs	r7, r7, #3
    3356:	0264      	lsls	r4, r4, #9
    3358:	0576      	lsls	r6, r6, #21
    335a:	4317      	orrs	r7, r2
    335c:	0b24      	lsrs	r4, r4, #12
    335e:	0d76      	lsrs	r6, r6, #21
    3360:	401d      	ands	r5, r3
    3362:	2100      	movs	r1, #0
    3364:	0324      	lsls	r4, r4, #12
    3366:	0b23      	lsrs	r3, r4, #12
    3368:	0d0c      	lsrs	r4, r1, #20
    336a:	4a7e      	ldr	r2, [pc, #504]	; (3564 <__aeabi_dsub+0x34c>)
    336c:	0524      	lsls	r4, r4, #20
    336e:	431c      	orrs	r4, r3
    3370:	4014      	ands	r4, r2
    3372:	0533      	lsls	r3, r6, #20
    3374:	4323      	orrs	r3, r4
    3376:	005b      	lsls	r3, r3, #1
    3378:	07ed      	lsls	r5, r5, #31
    337a:	085b      	lsrs	r3, r3, #1
    337c:	432b      	orrs	r3, r5
    337e:	0038      	movs	r0, r7
    3380:	0019      	movs	r1, r3
    3382:	bc1c      	pop	{r2, r3, r4}
    3384:	4690      	mov	r8, r2
    3386:	4699      	mov	r9, r3
    3388:	46a2      	mov	sl, r4
    338a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    338c:	2501      	movs	r5, #1
    338e:	4643      	mov	r3, r8
    3390:	0762      	lsls	r2, r4, #29
    3392:	08ff      	lsrs	r7, r7, #3
    3394:	4317      	orrs	r7, r2
    3396:	08e4      	lsrs	r4, r4, #3
    3398:	401d      	ands	r5, r3
    339a:	4b70      	ldr	r3, [pc, #448]	; (355c <__aeabi_dsub+0x344>)
    339c:	429e      	cmp	r6, r3
    339e:	d036      	beq.n	340e <__aeabi_dsub+0x1f6>
    33a0:	0324      	lsls	r4, r4, #12
    33a2:	0576      	lsls	r6, r6, #21
    33a4:	0b24      	lsrs	r4, r4, #12
    33a6:	0d76      	lsrs	r6, r6, #21
    33a8:	e7db      	b.n	3362 <__aeabi_dsub+0x14a>
    33aa:	4663      	mov	r3, ip
    33ac:	1af3      	subs	r3, r6, r3
    33ae:	2b00      	cmp	r3, #0
    33b0:	dc00      	bgt.n	33b4 <__aeabi_dsub+0x19c>
    33b2:	e094      	b.n	34de <__aeabi_dsub+0x2c6>
    33b4:	4660      	mov	r0, ip
    33b6:	2800      	cmp	r0, #0
    33b8:	d035      	beq.n	3426 <__aeabi_dsub+0x20e>
    33ba:	4868      	ldr	r0, [pc, #416]	; (355c <__aeabi_dsub+0x344>)
    33bc:	4286      	cmp	r6, r0
    33be:	d0b1      	beq.n	3324 <__aeabi_dsub+0x10c>
    33c0:	2780      	movs	r7, #128	; 0x80
    33c2:	043f      	lsls	r7, r7, #16
    33c4:	4339      	orrs	r1, r7
    33c6:	2b38      	cmp	r3, #56	; 0x38
    33c8:	dc00      	bgt.n	33cc <__aeabi_dsub+0x1b4>
    33ca:	e0fd      	b.n	35c8 <__aeabi_dsub+0x3b0>
    33cc:	430a      	orrs	r2, r1
    33ce:	0017      	movs	r7, r2
    33d0:	2100      	movs	r1, #0
    33d2:	1e7a      	subs	r2, r7, #1
    33d4:	4197      	sbcs	r7, r2
    33d6:	4457      	add	r7, sl
    33d8:	4557      	cmp	r7, sl
    33da:	4180      	sbcs	r0, r0
    33dc:	1909      	adds	r1, r1, r4
    33de:	4244      	negs	r4, r0
    33e0:	190c      	adds	r4, r1, r4
    33e2:	0223      	lsls	r3, r4, #8
    33e4:	d53a      	bpl.n	345c <__aeabi_dsub+0x244>
    33e6:	4b5d      	ldr	r3, [pc, #372]	; (355c <__aeabi_dsub+0x344>)
    33e8:	3601      	adds	r6, #1
    33ea:	429e      	cmp	r6, r3
    33ec:	d100      	bne.n	33f0 <__aeabi_dsub+0x1d8>
    33ee:	e14b      	b.n	3688 <__aeabi_dsub+0x470>
    33f0:	2201      	movs	r2, #1
    33f2:	4b5b      	ldr	r3, [pc, #364]	; (3560 <__aeabi_dsub+0x348>)
    33f4:	401c      	ands	r4, r3
    33f6:	087b      	lsrs	r3, r7, #1
    33f8:	4017      	ands	r7, r2
    33fa:	431f      	orrs	r7, r3
    33fc:	07e2      	lsls	r2, r4, #31
    33fe:	4317      	orrs	r7, r2
    3400:	0864      	lsrs	r4, r4, #1
    3402:	e78f      	b.n	3324 <__aeabi_dsub+0x10c>
    3404:	0008      	movs	r0, r1
    3406:	4310      	orrs	r0, r2
    3408:	d000      	beq.n	340c <__aeabi_dsub+0x1f4>
    340a:	e724      	b.n	3256 <__aeabi_dsub+0x3e>
    340c:	e721      	b.n	3252 <__aeabi_dsub+0x3a>
    340e:	0023      	movs	r3, r4
    3410:	433b      	orrs	r3, r7
    3412:	d100      	bne.n	3416 <__aeabi_dsub+0x1fe>
    3414:	e1b9      	b.n	378a <__aeabi_dsub+0x572>
    3416:	2280      	movs	r2, #128	; 0x80
    3418:	0312      	lsls	r2, r2, #12
    341a:	4314      	orrs	r4, r2
    341c:	0324      	lsls	r4, r4, #12
    341e:	0b24      	lsrs	r4, r4, #12
    3420:	e79f      	b.n	3362 <__aeabi_dsub+0x14a>
    3422:	002e      	movs	r6, r5
    3424:	e77e      	b.n	3324 <__aeabi_dsub+0x10c>
    3426:	0008      	movs	r0, r1
    3428:	4310      	orrs	r0, r2
    342a:	d100      	bne.n	342e <__aeabi_dsub+0x216>
    342c:	e0ca      	b.n	35c4 <__aeabi_dsub+0x3ac>
    342e:	1e58      	subs	r0, r3, #1
    3430:	4684      	mov	ip, r0
    3432:	2800      	cmp	r0, #0
    3434:	d000      	beq.n	3438 <__aeabi_dsub+0x220>
    3436:	e0e7      	b.n	3608 <__aeabi_dsub+0x3f0>
    3438:	4452      	add	r2, sl
    343a:	4552      	cmp	r2, sl
    343c:	4180      	sbcs	r0, r0
    343e:	1864      	adds	r4, r4, r1
    3440:	4240      	negs	r0, r0
    3442:	1824      	adds	r4, r4, r0
    3444:	0017      	movs	r7, r2
    3446:	2601      	movs	r6, #1
    3448:	0223      	lsls	r3, r4, #8
    344a:	d507      	bpl.n	345c <__aeabi_dsub+0x244>
    344c:	2602      	movs	r6, #2
    344e:	e7cf      	b.n	33f0 <__aeabi_dsub+0x1d8>
    3450:	4664      	mov	r4, ip
    3452:	432c      	orrs	r4, r5
    3454:	d100      	bne.n	3458 <__aeabi_dsub+0x240>
    3456:	e1b3      	b.n	37c0 <__aeabi_dsub+0x5a8>
    3458:	002c      	movs	r4, r5
    345a:	4667      	mov	r7, ip
    345c:	077b      	lsls	r3, r7, #29
    345e:	d000      	beq.n	3462 <__aeabi_dsub+0x24a>
    3460:	e762      	b.n	3328 <__aeabi_dsub+0x110>
    3462:	0763      	lsls	r3, r4, #29
    3464:	08ff      	lsrs	r7, r7, #3
    3466:	431f      	orrs	r7, r3
    3468:	2501      	movs	r5, #1
    346a:	4643      	mov	r3, r8
    346c:	08e4      	lsrs	r4, r4, #3
    346e:	401d      	ands	r5, r3
    3470:	e793      	b.n	339a <__aeabi_dsub+0x182>
    3472:	2d00      	cmp	r5, #0
    3474:	d178      	bne.n	3568 <__aeabi_dsub+0x350>
    3476:	1c75      	adds	r5, r6, #1
    3478:	056d      	lsls	r5, r5, #21
    347a:	0d6d      	lsrs	r5, r5, #21
    347c:	2d01      	cmp	r5, #1
    347e:	dc00      	bgt.n	3482 <__aeabi_dsub+0x26a>
    3480:	e0f2      	b.n	3668 <__aeabi_dsub+0x450>
    3482:	4650      	mov	r0, sl
    3484:	1a80      	subs	r0, r0, r2
    3486:	4582      	cmp	sl, r0
    3488:	41bf      	sbcs	r7, r7
    348a:	1a65      	subs	r5, r4, r1
    348c:	427f      	negs	r7, r7
    348e:	1bed      	subs	r5, r5, r7
    3490:	4684      	mov	ip, r0
    3492:	0228      	lsls	r0, r5, #8
    3494:	d400      	bmi.n	3498 <__aeabi_dsub+0x280>
    3496:	e08c      	b.n	35b2 <__aeabi_dsub+0x39a>
    3498:	4650      	mov	r0, sl
    349a:	1a17      	subs	r7, r2, r0
    349c:	42ba      	cmp	r2, r7
    349e:	4192      	sbcs	r2, r2
    34a0:	1b0c      	subs	r4, r1, r4
    34a2:	4255      	negs	r5, r2
    34a4:	1b65      	subs	r5, r4, r5
    34a6:	4698      	mov	r8, r3
    34a8:	e714      	b.n	32d4 <__aeabi_dsub+0xbc>
    34aa:	2501      	movs	r5, #1
    34ac:	4643      	mov	r3, r8
    34ae:	2400      	movs	r4, #0
    34b0:	401d      	ands	r5, r3
    34b2:	2700      	movs	r7, #0
    34b4:	e755      	b.n	3362 <__aeabi_dsub+0x14a>
    34b6:	4c2a      	ldr	r4, [pc, #168]	; (3560 <__aeabi_dsub+0x348>)
    34b8:	1af6      	subs	r6, r6, r3
    34ba:	402c      	ands	r4, r5
    34bc:	e732      	b.n	3324 <__aeabi_dsub+0x10c>
    34be:	003d      	movs	r5, r7
    34c0:	3828      	subs	r0, #40	; 0x28
    34c2:	4085      	lsls	r5, r0
    34c4:	2700      	movs	r7, #0
    34c6:	e717      	b.n	32f8 <__aeabi_dsub+0xe0>
    34c8:	0038      	movs	r0, r7
    34ca:	f000 fb33 	bl	3b34 <__clzsi2>
    34ce:	3020      	adds	r0, #32
    34d0:	e706      	b.n	32e0 <__aeabi_dsub+0xc8>
    34d2:	430a      	orrs	r2, r1
    34d4:	0017      	movs	r7, r2
    34d6:	2100      	movs	r1, #0
    34d8:	1e7a      	subs	r2, r7, #1
    34da:	4197      	sbcs	r7, r2
    34dc:	e6ee      	b.n	32bc <__aeabi_dsub+0xa4>
    34de:	2b00      	cmp	r3, #0
    34e0:	d000      	beq.n	34e4 <__aeabi_dsub+0x2cc>
    34e2:	e0e5      	b.n	36b0 <__aeabi_dsub+0x498>
    34e4:	1c73      	adds	r3, r6, #1
    34e6:	469c      	mov	ip, r3
    34e8:	055b      	lsls	r3, r3, #21
    34ea:	0d5b      	lsrs	r3, r3, #21
    34ec:	2b01      	cmp	r3, #1
    34ee:	dc00      	bgt.n	34f2 <__aeabi_dsub+0x2da>
    34f0:	e09f      	b.n	3632 <__aeabi_dsub+0x41a>
    34f2:	4b1a      	ldr	r3, [pc, #104]	; (355c <__aeabi_dsub+0x344>)
    34f4:	459c      	cmp	ip, r3
    34f6:	d100      	bne.n	34fa <__aeabi_dsub+0x2e2>
    34f8:	e0c5      	b.n	3686 <__aeabi_dsub+0x46e>
    34fa:	4452      	add	r2, sl
    34fc:	4552      	cmp	r2, sl
    34fe:	4180      	sbcs	r0, r0
    3500:	1864      	adds	r4, r4, r1
    3502:	4240      	negs	r0, r0
    3504:	1824      	adds	r4, r4, r0
    3506:	07e7      	lsls	r7, r4, #31
    3508:	0852      	lsrs	r2, r2, #1
    350a:	4317      	orrs	r7, r2
    350c:	0864      	lsrs	r4, r4, #1
    350e:	4666      	mov	r6, ip
    3510:	e708      	b.n	3324 <__aeabi_dsub+0x10c>
    3512:	4812      	ldr	r0, [pc, #72]	; (355c <__aeabi_dsub+0x344>)
    3514:	4285      	cmp	r5, r0
    3516:	d100      	bne.n	351a <__aeabi_dsub+0x302>
    3518:	e085      	b.n	3626 <__aeabi_dsub+0x40e>
    351a:	001d      	movs	r5, r3
    351c:	e6bc      	b.n	3298 <__aeabi_dsub+0x80>
    351e:	0029      	movs	r1, r5
    3520:	3e1f      	subs	r6, #31
    3522:	40f1      	lsrs	r1, r6
    3524:	2b20      	cmp	r3, #32
    3526:	d100      	bne.n	352a <__aeabi_dsub+0x312>
    3528:	e07f      	b.n	362a <__aeabi_dsub+0x412>
    352a:	2240      	movs	r2, #64	; 0x40
    352c:	1ad3      	subs	r3, r2, r3
    352e:	409d      	lsls	r5, r3
    3530:	432f      	orrs	r7, r5
    3532:	1e7d      	subs	r5, r7, #1
    3534:	41af      	sbcs	r7, r5
    3536:	2400      	movs	r4, #0
    3538:	430f      	orrs	r7, r1
    353a:	2600      	movs	r6, #0
    353c:	e78e      	b.n	345c <__aeabi_dsub+0x244>
    353e:	002b      	movs	r3, r5
    3540:	000f      	movs	r7, r1
    3542:	3b20      	subs	r3, #32
    3544:	40df      	lsrs	r7, r3
    3546:	2d20      	cmp	r5, #32
    3548:	d071      	beq.n	362e <__aeabi_dsub+0x416>
    354a:	2340      	movs	r3, #64	; 0x40
    354c:	1b5d      	subs	r5, r3, r5
    354e:	40a9      	lsls	r1, r5
    3550:	430a      	orrs	r2, r1
    3552:	1e51      	subs	r1, r2, #1
    3554:	418a      	sbcs	r2, r1
    3556:	2100      	movs	r1, #0
    3558:	4317      	orrs	r7, r2
    355a:	e6af      	b.n	32bc <__aeabi_dsub+0xa4>
    355c:	000007ff 	.word	0x000007ff
    3560:	ff7fffff 	.word	0xff7fffff
    3564:	800fffff 	.word	0x800fffff
    3568:	2e00      	cmp	r6, #0
    356a:	d03e      	beq.n	35ea <__aeabi_dsub+0x3d2>
    356c:	4eb3      	ldr	r6, [pc, #716]	; (383c <__aeabi_dsub+0x624>)
    356e:	45b4      	cmp	ip, r6
    3570:	d045      	beq.n	35fe <__aeabi_dsub+0x3e6>
    3572:	2680      	movs	r6, #128	; 0x80
    3574:	0436      	lsls	r6, r6, #16
    3576:	426d      	negs	r5, r5
    3578:	4334      	orrs	r4, r6
    357a:	2d38      	cmp	r5, #56	; 0x38
    357c:	dd00      	ble.n	3580 <__aeabi_dsub+0x368>
    357e:	e0a8      	b.n	36d2 <__aeabi_dsub+0x4ba>
    3580:	2d1f      	cmp	r5, #31
    3582:	dd00      	ble.n	3586 <__aeabi_dsub+0x36e>
    3584:	e11f      	b.n	37c6 <__aeabi_dsub+0x5ae>
    3586:	2620      	movs	r6, #32
    3588:	0027      	movs	r7, r4
    358a:	4650      	mov	r0, sl
    358c:	1b76      	subs	r6, r6, r5
    358e:	40b7      	lsls	r7, r6
    3590:	40e8      	lsrs	r0, r5
    3592:	4307      	orrs	r7, r0
    3594:	4650      	mov	r0, sl
    3596:	40b0      	lsls	r0, r6
    3598:	1e46      	subs	r6, r0, #1
    359a:	41b0      	sbcs	r0, r6
    359c:	40ec      	lsrs	r4, r5
    359e:	4338      	orrs	r0, r7
    35a0:	1a17      	subs	r7, r2, r0
    35a2:	42ba      	cmp	r2, r7
    35a4:	4192      	sbcs	r2, r2
    35a6:	1b0c      	subs	r4, r1, r4
    35a8:	4252      	negs	r2, r2
    35aa:	1aa4      	subs	r4, r4, r2
    35ac:	4666      	mov	r6, ip
    35ae:	4698      	mov	r8, r3
    35b0:	e68b      	b.n	32ca <__aeabi_dsub+0xb2>
    35b2:	4664      	mov	r4, ip
    35b4:	4667      	mov	r7, ip
    35b6:	432c      	orrs	r4, r5
    35b8:	d000      	beq.n	35bc <__aeabi_dsub+0x3a4>
    35ba:	e68b      	b.n	32d4 <__aeabi_dsub+0xbc>
    35bc:	2500      	movs	r5, #0
    35be:	2600      	movs	r6, #0
    35c0:	2700      	movs	r7, #0
    35c2:	e6ea      	b.n	339a <__aeabi_dsub+0x182>
    35c4:	001e      	movs	r6, r3
    35c6:	e6ad      	b.n	3324 <__aeabi_dsub+0x10c>
    35c8:	2b1f      	cmp	r3, #31
    35ca:	dc60      	bgt.n	368e <__aeabi_dsub+0x476>
    35cc:	2720      	movs	r7, #32
    35ce:	1af8      	subs	r0, r7, r3
    35d0:	000f      	movs	r7, r1
    35d2:	4684      	mov	ip, r0
    35d4:	4087      	lsls	r7, r0
    35d6:	0010      	movs	r0, r2
    35d8:	40d8      	lsrs	r0, r3
    35da:	4307      	orrs	r7, r0
    35dc:	4660      	mov	r0, ip
    35de:	4082      	lsls	r2, r0
    35e0:	1e50      	subs	r0, r2, #1
    35e2:	4182      	sbcs	r2, r0
    35e4:	40d9      	lsrs	r1, r3
    35e6:	4317      	orrs	r7, r2
    35e8:	e6f5      	b.n	33d6 <__aeabi_dsub+0x1be>
    35ea:	0026      	movs	r6, r4
    35ec:	4650      	mov	r0, sl
    35ee:	4306      	orrs	r6, r0
    35f0:	d005      	beq.n	35fe <__aeabi_dsub+0x3e6>
    35f2:	43ed      	mvns	r5, r5
    35f4:	2d00      	cmp	r5, #0
    35f6:	d0d3      	beq.n	35a0 <__aeabi_dsub+0x388>
    35f8:	4e90      	ldr	r6, [pc, #576]	; (383c <__aeabi_dsub+0x624>)
    35fa:	45b4      	cmp	ip, r6
    35fc:	d1bd      	bne.n	357a <__aeabi_dsub+0x362>
    35fe:	000c      	movs	r4, r1
    3600:	0017      	movs	r7, r2
    3602:	4666      	mov	r6, ip
    3604:	4698      	mov	r8, r3
    3606:	e68d      	b.n	3324 <__aeabi_dsub+0x10c>
    3608:	488c      	ldr	r0, [pc, #560]	; (383c <__aeabi_dsub+0x624>)
    360a:	4283      	cmp	r3, r0
    360c:	d00b      	beq.n	3626 <__aeabi_dsub+0x40e>
    360e:	4663      	mov	r3, ip
    3610:	e6d9      	b.n	33c6 <__aeabi_dsub+0x1ae>
    3612:	2d00      	cmp	r5, #0
    3614:	d000      	beq.n	3618 <__aeabi_dsub+0x400>
    3616:	e096      	b.n	3746 <__aeabi_dsub+0x52e>
    3618:	0008      	movs	r0, r1
    361a:	4310      	orrs	r0, r2
    361c:	d100      	bne.n	3620 <__aeabi_dsub+0x408>
    361e:	e0e2      	b.n	37e6 <__aeabi_dsub+0x5ce>
    3620:	000c      	movs	r4, r1
    3622:	0017      	movs	r7, r2
    3624:	4698      	mov	r8, r3
    3626:	4e85      	ldr	r6, [pc, #532]	; (383c <__aeabi_dsub+0x624>)
    3628:	e67c      	b.n	3324 <__aeabi_dsub+0x10c>
    362a:	2500      	movs	r5, #0
    362c:	e780      	b.n	3530 <__aeabi_dsub+0x318>
    362e:	2100      	movs	r1, #0
    3630:	e78e      	b.n	3550 <__aeabi_dsub+0x338>
    3632:	0023      	movs	r3, r4
    3634:	4650      	mov	r0, sl
    3636:	4303      	orrs	r3, r0
    3638:	2e00      	cmp	r6, #0
    363a:	d000      	beq.n	363e <__aeabi_dsub+0x426>
    363c:	e0a8      	b.n	3790 <__aeabi_dsub+0x578>
    363e:	2b00      	cmp	r3, #0
    3640:	d100      	bne.n	3644 <__aeabi_dsub+0x42c>
    3642:	e0de      	b.n	3802 <__aeabi_dsub+0x5ea>
    3644:	000b      	movs	r3, r1
    3646:	4313      	orrs	r3, r2
    3648:	d100      	bne.n	364c <__aeabi_dsub+0x434>
    364a:	e66b      	b.n	3324 <__aeabi_dsub+0x10c>
    364c:	4452      	add	r2, sl
    364e:	4552      	cmp	r2, sl
    3650:	4180      	sbcs	r0, r0
    3652:	1864      	adds	r4, r4, r1
    3654:	4240      	negs	r0, r0
    3656:	1824      	adds	r4, r4, r0
    3658:	0017      	movs	r7, r2
    365a:	0223      	lsls	r3, r4, #8
    365c:	d400      	bmi.n	3660 <__aeabi_dsub+0x448>
    365e:	e6fd      	b.n	345c <__aeabi_dsub+0x244>
    3660:	4b77      	ldr	r3, [pc, #476]	; (3840 <__aeabi_dsub+0x628>)
    3662:	4666      	mov	r6, ip
    3664:	401c      	ands	r4, r3
    3666:	e65d      	b.n	3324 <__aeabi_dsub+0x10c>
    3668:	0025      	movs	r5, r4
    366a:	4650      	mov	r0, sl
    366c:	4305      	orrs	r5, r0
    366e:	2e00      	cmp	r6, #0
    3670:	d1cf      	bne.n	3612 <__aeabi_dsub+0x3fa>
    3672:	2d00      	cmp	r5, #0
    3674:	d14f      	bne.n	3716 <__aeabi_dsub+0x4fe>
    3676:	000c      	movs	r4, r1
    3678:	4314      	orrs	r4, r2
    367a:	d100      	bne.n	367e <__aeabi_dsub+0x466>
    367c:	e0a0      	b.n	37c0 <__aeabi_dsub+0x5a8>
    367e:	000c      	movs	r4, r1
    3680:	0017      	movs	r7, r2
    3682:	4698      	mov	r8, r3
    3684:	e64e      	b.n	3324 <__aeabi_dsub+0x10c>
    3686:	4666      	mov	r6, ip
    3688:	2400      	movs	r4, #0
    368a:	2700      	movs	r7, #0
    368c:	e685      	b.n	339a <__aeabi_dsub+0x182>
    368e:	001f      	movs	r7, r3
    3690:	0008      	movs	r0, r1
    3692:	3f20      	subs	r7, #32
    3694:	40f8      	lsrs	r0, r7
    3696:	0007      	movs	r7, r0
    3698:	2b20      	cmp	r3, #32
    369a:	d100      	bne.n	369e <__aeabi_dsub+0x486>
    369c:	e08e      	b.n	37bc <__aeabi_dsub+0x5a4>
    369e:	2040      	movs	r0, #64	; 0x40
    36a0:	1ac3      	subs	r3, r0, r3
    36a2:	4099      	lsls	r1, r3
    36a4:	430a      	orrs	r2, r1
    36a6:	1e51      	subs	r1, r2, #1
    36a8:	418a      	sbcs	r2, r1
    36aa:	2100      	movs	r1, #0
    36ac:	4317      	orrs	r7, r2
    36ae:	e692      	b.n	33d6 <__aeabi_dsub+0x1be>
    36b0:	2e00      	cmp	r6, #0
    36b2:	d114      	bne.n	36de <__aeabi_dsub+0x4c6>
    36b4:	0026      	movs	r6, r4
    36b6:	4650      	mov	r0, sl
    36b8:	4306      	orrs	r6, r0
    36ba:	d062      	beq.n	3782 <__aeabi_dsub+0x56a>
    36bc:	43db      	mvns	r3, r3
    36be:	2b00      	cmp	r3, #0
    36c0:	d15c      	bne.n	377c <__aeabi_dsub+0x564>
    36c2:	1887      	adds	r7, r0, r2
    36c4:	4297      	cmp	r7, r2
    36c6:	4192      	sbcs	r2, r2
    36c8:	1864      	adds	r4, r4, r1
    36ca:	4252      	negs	r2, r2
    36cc:	18a4      	adds	r4, r4, r2
    36ce:	4666      	mov	r6, ip
    36d0:	e687      	b.n	33e2 <__aeabi_dsub+0x1ca>
    36d2:	4650      	mov	r0, sl
    36d4:	4320      	orrs	r0, r4
    36d6:	1e44      	subs	r4, r0, #1
    36d8:	41a0      	sbcs	r0, r4
    36da:	2400      	movs	r4, #0
    36dc:	e760      	b.n	35a0 <__aeabi_dsub+0x388>
    36de:	4e57      	ldr	r6, [pc, #348]	; (383c <__aeabi_dsub+0x624>)
    36e0:	45b4      	cmp	ip, r6
    36e2:	d04e      	beq.n	3782 <__aeabi_dsub+0x56a>
    36e4:	2680      	movs	r6, #128	; 0x80
    36e6:	0436      	lsls	r6, r6, #16
    36e8:	425b      	negs	r3, r3
    36ea:	4334      	orrs	r4, r6
    36ec:	2b38      	cmp	r3, #56	; 0x38
    36ee:	dd00      	ble.n	36f2 <__aeabi_dsub+0x4da>
    36f0:	e07f      	b.n	37f2 <__aeabi_dsub+0x5da>
    36f2:	2b1f      	cmp	r3, #31
    36f4:	dd00      	ble.n	36f8 <__aeabi_dsub+0x4e0>
    36f6:	e08b      	b.n	3810 <__aeabi_dsub+0x5f8>
    36f8:	2620      	movs	r6, #32
    36fa:	0027      	movs	r7, r4
    36fc:	4650      	mov	r0, sl
    36fe:	1af6      	subs	r6, r6, r3
    3700:	40b7      	lsls	r7, r6
    3702:	40d8      	lsrs	r0, r3
    3704:	4307      	orrs	r7, r0
    3706:	4650      	mov	r0, sl
    3708:	40b0      	lsls	r0, r6
    370a:	1e46      	subs	r6, r0, #1
    370c:	41b0      	sbcs	r0, r6
    370e:	4307      	orrs	r7, r0
    3710:	40dc      	lsrs	r4, r3
    3712:	18bf      	adds	r7, r7, r2
    3714:	e7d6      	b.n	36c4 <__aeabi_dsub+0x4ac>
    3716:	000d      	movs	r5, r1
    3718:	4315      	orrs	r5, r2
    371a:	d100      	bne.n	371e <__aeabi_dsub+0x506>
    371c:	e602      	b.n	3324 <__aeabi_dsub+0x10c>
    371e:	4650      	mov	r0, sl
    3720:	1a80      	subs	r0, r0, r2
    3722:	4582      	cmp	sl, r0
    3724:	41bf      	sbcs	r7, r7
    3726:	1a65      	subs	r5, r4, r1
    3728:	427f      	negs	r7, r7
    372a:	1bed      	subs	r5, r5, r7
    372c:	4684      	mov	ip, r0
    372e:	0228      	lsls	r0, r5, #8
    3730:	d400      	bmi.n	3734 <__aeabi_dsub+0x51c>
    3732:	e68d      	b.n	3450 <__aeabi_dsub+0x238>
    3734:	4650      	mov	r0, sl
    3736:	1a17      	subs	r7, r2, r0
    3738:	42ba      	cmp	r2, r7
    373a:	4192      	sbcs	r2, r2
    373c:	1b0c      	subs	r4, r1, r4
    373e:	4252      	negs	r2, r2
    3740:	1aa4      	subs	r4, r4, r2
    3742:	4698      	mov	r8, r3
    3744:	e5ee      	b.n	3324 <__aeabi_dsub+0x10c>
    3746:	000d      	movs	r5, r1
    3748:	4315      	orrs	r5, r2
    374a:	d100      	bne.n	374e <__aeabi_dsub+0x536>
    374c:	e76b      	b.n	3626 <__aeabi_dsub+0x40e>
    374e:	4650      	mov	r0, sl
    3750:	0767      	lsls	r7, r4, #29
    3752:	08c0      	lsrs	r0, r0, #3
    3754:	4307      	orrs	r7, r0
    3756:	2080      	movs	r0, #128	; 0x80
    3758:	08e4      	lsrs	r4, r4, #3
    375a:	0300      	lsls	r0, r0, #12
    375c:	4204      	tst	r4, r0
    375e:	d007      	beq.n	3770 <__aeabi_dsub+0x558>
    3760:	08cd      	lsrs	r5, r1, #3
    3762:	4205      	tst	r5, r0
    3764:	d104      	bne.n	3770 <__aeabi_dsub+0x558>
    3766:	002c      	movs	r4, r5
    3768:	4698      	mov	r8, r3
    376a:	08d7      	lsrs	r7, r2, #3
    376c:	0749      	lsls	r1, r1, #29
    376e:	430f      	orrs	r7, r1
    3770:	0f7b      	lsrs	r3, r7, #29
    3772:	00e4      	lsls	r4, r4, #3
    3774:	431c      	orrs	r4, r3
    3776:	00ff      	lsls	r7, r7, #3
    3778:	4e30      	ldr	r6, [pc, #192]	; (383c <__aeabi_dsub+0x624>)
    377a:	e5d3      	b.n	3324 <__aeabi_dsub+0x10c>
    377c:	4e2f      	ldr	r6, [pc, #188]	; (383c <__aeabi_dsub+0x624>)
    377e:	45b4      	cmp	ip, r6
    3780:	d1b4      	bne.n	36ec <__aeabi_dsub+0x4d4>
    3782:	000c      	movs	r4, r1
    3784:	0017      	movs	r7, r2
    3786:	4666      	mov	r6, ip
    3788:	e5cc      	b.n	3324 <__aeabi_dsub+0x10c>
    378a:	2700      	movs	r7, #0
    378c:	2400      	movs	r4, #0
    378e:	e5e8      	b.n	3362 <__aeabi_dsub+0x14a>
    3790:	2b00      	cmp	r3, #0
    3792:	d039      	beq.n	3808 <__aeabi_dsub+0x5f0>
    3794:	000b      	movs	r3, r1
    3796:	4313      	orrs	r3, r2
    3798:	d100      	bne.n	379c <__aeabi_dsub+0x584>
    379a:	e744      	b.n	3626 <__aeabi_dsub+0x40e>
    379c:	08c0      	lsrs	r0, r0, #3
    379e:	0767      	lsls	r7, r4, #29
    37a0:	4307      	orrs	r7, r0
    37a2:	2080      	movs	r0, #128	; 0x80
    37a4:	08e4      	lsrs	r4, r4, #3
    37a6:	0300      	lsls	r0, r0, #12
    37a8:	4204      	tst	r4, r0
    37aa:	d0e1      	beq.n	3770 <__aeabi_dsub+0x558>
    37ac:	08cb      	lsrs	r3, r1, #3
    37ae:	4203      	tst	r3, r0
    37b0:	d1de      	bne.n	3770 <__aeabi_dsub+0x558>
    37b2:	08d7      	lsrs	r7, r2, #3
    37b4:	0749      	lsls	r1, r1, #29
    37b6:	430f      	orrs	r7, r1
    37b8:	001c      	movs	r4, r3
    37ba:	e7d9      	b.n	3770 <__aeabi_dsub+0x558>
    37bc:	2100      	movs	r1, #0
    37be:	e771      	b.n	36a4 <__aeabi_dsub+0x48c>
    37c0:	2500      	movs	r5, #0
    37c2:	2700      	movs	r7, #0
    37c4:	e5e9      	b.n	339a <__aeabi_dsub+0x182>
    37c6:	002e      	movs	r6, r5
    37c8:	0027      	movs	r7, r4
    37ca:	3e20      	subs	r6, #32
    37cc:	40f7      	lsrs	r7, r6
    37ce:	2d20      	cmp	r5, #32
    37d0:	d02f      	beq.n	3832 <__aeabi_dsub+0x61a>
    37d2:	2640      	movs	r6, #64	; 0x40
    37d4:	1b75      	subs	r5, r6, r5
    37d6:	40ac      	lsls	r4, r5
    37d8:	4650      	mov	r0, sl
    37da:	4320      	orrs	r0, r4
    37dc:	1e44      	subs	r4, r0, #1
    37de:	41a0      	sbcs	r0, r4
    37e0:	2400      	movs	r4, #0
    37e2:	4338      	orrs	r0, r7
    37e4:	e6dc      	b.n	35a0 <__aeabi_dsub+0x388>
    37e6:	2480      	movs	r4, #128	; 0x80
    37e8:	2500      	movs	r5, #0
    37ea:	0324      	lsls	r4, r4, #12
    37ec:	4e13      	ldr	r6, [pc, #76]	; (383c <__aeabi_dsub+0x624>)
    37ee:	2700      	movs	r7, #0
    37f0:	e5d3      	b.n	339a <__aeabi_dsub+0x182>
    37f2:	4650      	mov	r0, sl
    37f4:	4320      	orrs	r0, r4
    37f6:	0007      	movs	r7, r0
    37f8:	1e78      	subs	r0, r7, #1
    37fa:	4187      	sbcs	r7, r0
    37fc:	2400      	movs	r4, #0
    37fe:	18bf      	adds	r7, r7, r2
    3800:	e760      	b.n	36c4 <__aeabi_dsub+0x4ac>
    3802:	000c      	movs	r4, r1
    3804:	0017      	movs	r7, r2
    3806:	e58d      	b.n	3324 <__aeabi_dsub+0x10c>
    3808:	000c      	movs	r4, r1
    380a:	0017      	movs	r7, r2
    380c:	4e0b      	ldr	r6, [pc, #44]	; (383c <__aeabi_dsub+0x624>)
    380e:	e589      	b.n	3324 <__aeabi_dsub+0x10c>
    3810:	001e      	movs	r6, r3
    3812:	0027      	movs	r7, r4
    3814:	3e20      	subs	r6, #32
    3816:	40f7      	lsrs	r7, r6
    3818:	2b20      	cmp	r3, #32
    381a:	d00c      	beq.n	3836 <__aeabi_dsub+0x61e>
    381c:	2640      	movs	r6, #64	; 0x40
    381e:	1af3      	subs	r3, r6, r3
    3820:	409c      	lsls	r4, r3
    3822:	4650      	mov	r0, sl
    3824:	4320      	orrs	r0, r4
    3826:	1e44      	subs	r4, r0, #1
    3828:	41a0      	sbcs	r0, r4
    382a:	4307      	orrs	r7, r0
    382c:	2400      	movs	r4, #0
    382e:	18bf      	adds	r7, r7, r2
    3830:	e748      	b.n	36c4 <__aeabi_dsub+0x4ac>
    3832:	2400      	movs	r4, #0
    3834:	e7d0      	b.n	37d8 <__aeabi_dsub+0x5c0>
    3836:	2400      	movs	r4, #0
    3838:	e7f3      	b.n	3822 <__aeabi_dsub+0x60a>
    383a:	46c0      	nop			; (mov r8, r8)
    383c:	000007ff 	.word	0x000007ff
    3840:	ff7fffff 	.word	0xff7fffff

00003844 <__aeabi_d2iz>:
    3844:	b530      	push	{r4, r5, lr}
    3846:	4d13      	ldr	r5, [pc, #76]	; (3894 <__aeabi_d2iz+0x50>)
    3848:	030a      	lsls	r2, r1, #12
    384a:	004b      	lsls	r3, r1, #1
    384c:	0b12      	lsrs	r2, r2, #12
    384e:	0d5b      	lsrs	r3, r3, #21
    3850:	0fc9      	lsrs	r1, r1, #31
    3852:	2400      	movs	r4, #0
    3854:	42ab      	cmp	r3, r5
    3856:	dd10      	ble.n	387a <__aeabi_d2iz+0x36>
    3858:	4c0f      	ldr	r4, [pc, #60]	; (3898 <__aeabi_d2iz+0x54>)
    385a:	42a3      	cmp	r3, r4
    385c:	dc0f      	bgt.n	387e <__aeabi_d2iz+0x3a>
    385e:	2480      	movs	r4, #128	; 0x80
    3860:	4d0e      	ldr	r5, [pc, #56]	; (389c <__aeabi_d2iz+0x58>)
    3862:	0364      	lsls	r4, r4, #13
    3864:	4322      	orrs	r2, r4
    3866:	1aed      	subs	r5, r5, r3
    3868:	2d1f      	cmp	r5, #31
    386a:	dd0b      	ble.n	3884 <__aeabi_d2iz+0x40>
    386c:	480c      	ldr	r0, [pc, #48]	; (38a0 <__aeabi_d2iz+0x5c>)
    386e:	1ac3      	subs	r3, r0, r3
    3870:	40da      	lsrs	r2, r3
    3872:	4254      	negs	r4, r2
    3874:	2900      	cmp	r1, #0
    3876:	d100      	bne.n	387a <__aeabi_d2iz+0x36>
    3878:	0014      	movs	r4, r2
    387a:	0020      	movs	r0, r4
    387c:	bd30      	pop	{r4, r5, pc}
    387e:	4b09      	ldr	r3, [pc, #36]	; (38a4 <__aeabi_d2iz+0x60>)
    3880:	18cc      	adds	r4, r1, r3
    3882:	e7fa      	b.n	387a <__aeabi_d2iz+0x36>
    3884:	4c08      	ldr	r4, [pc, #32]	; (38a8 <__aeabi_d2iz+0x64>)
    3886:	40e8      	lsrs	r0, r5
    3888:	46a4      	mov	ip, r4
    388a:	4463      	add	r3, ip
    388c:	409a      	lsls	r2, r3
    388e:	4302      	orrs	r2, r0
    3890:	e7ef      	b.n	3872 <__aeabi_d2iz+0x2e>
    3892:	46c0      	nop			; (mov r8, r8)
    3894:	000003fe 	.word	0x000003fe
    3898:	0000041d 	.word	0x0000041d
    389c:	00000433 	.word	0x00000433
    38a0:	00000413 	.word	0x00000413
    38a4:	7fffffff 	.word	0x7fffffff
    38a8:	fffffbed 	.word	0xfffffbed

000038ac <__aeabi_i2d>:
    38ac:	b570      	push	{r4, r5, r6, lr}
    38ae:	2800      	cmp	r0, #0
    38b0:	d030      	beq.n	3914 <__aeabi_i2d+0x68>
    38b2:	17c3      	asrs	r3, r0, #31
    38b4:	18c4      	adds	r4, r0, r3
    38b6:	405c      	eors	r4, r3
    38b8:	0fc5      	lsrs	r5, r0, #31
    38ba:	0020      	movs	r0, r4
    38bc:	f000 f93a 	bl	3b34 <__clzsi2>
    38c0:	4b17      	ldr	r3, [pc, #92]	; (3920 <__aeabi_i2d+0x74>)
    38c2:	4a18      	ldr	r2, [pc, #96]	; (3924 <__aeabi_i2d+0x78>)
    38c4:	1a1b      	subs	r3, r3, r0
    38c6:	1ad2      	subs	r2, r2, r3
    38c8:	2a1f      	cmp	r2, #31
    38ca:	dd18      	ble.n	38fe <__aeabi_i2d+0x52>
    38cc:	4a16      	ldr	r2, [pc, #88]	; (3928 <__aeabi_i2d+0x7c>)
    38ce:	1ad2      	subs	r2, r2, r3
    38d0:	4094      	lsls	r4, r2
    38d2:	2200      	movs	r2, #0
    38d4:	0324      	lsls	r4, r4, #12
    38d6:	055b      	lsls	r3, r3, #21
    38d8:	0b24      	lsrs	r4, r4, #12
    38da:	0d5b      	lsrs	r3, r3, #21
    38dc:	2100      	movs	r1, #0
    38de:	0010      	movs	r0, r2
    38e0:	0324      	lsls	r4, r4, #12
    38e2:	0d0a      	lsrs	r2, r1, #20
    38e4:	0b24      	lsrs	r4, r4, #12
    38e6:	0512      	lsls	r2, r2, #20
    38e8:	4322      	orrs	r2, r4
    38ea:	4c10      	ldr	r4, [pc, #64]	; (392c <__aeabi_i2d+0x80>)
    38ec:	051b      	lsls	r3, r3, #20
    38ee:	4022      	ands	r2, r4
    38f0:	4313      	orrs	r3, r2
    38f2:	005b      	lsls	r3, r3, #1
    38f4:	07ed      	lsls	r5, r5, #31
    38f6:	085b      	lsrs	r3, r3, #1
    38f8:	432b      	orrs	r3, r5
    38fa:	0019      	movs	r1, r3
    38fc:	bd70      	pop	{r4, r5, r6, pc}
    38fe:	0021      	movs	r1, r4
    3900:	4091      	lsls	r1, r2
    3902:	000a      	movs	r2, r1
    3904:	210b      	movs	r1, #11
    3906:	1a08      	subs	r0, r1, r0
    3908:	40c4      	lsrs	r4, r0
    390a:	055b      	lsls	r3, r3, #21
    390c:	0324      	lsls	r4, r4, #12
    390e:	0b24      	lsrs	r4, r4, #12
    3910:	0d5b      	lsrs	r3, r3, #21
    3912:	e7e3      	b.n	38dc <__aeabi_i2d+0x30>
    3914:	2500      	movs	r5, #0
    3916:	2300      	movs	r3, #0
    3918:	2400      	movs	r4, #0
    391a:	2200      	movs	r2, #0
    391c:	e7de      	b.n	38dc <__aeabi_i2d+0x30>
    391e:	46c0      	nop			; (mov r8, r8)
    3920:	0000041e 	.word	0x0000041e
    3924:	00000433 	.word	0x00000433
    3928:	00000413 	.word	0x00000413
    392c:	800fffff 	.word	0x800fffff

00003930 <__aeabi_ui2d>:
    3930:	b510      	push	{r4, lr}
    3932:	1e04      	subs	r4, r0, #0
    3934:	d028      	beq.n	3988 <__aeabi_ui2d+0x58>
    3936:	f000 f8fd 	bl	3b34 <__clzsi2>
    393a:	4b15      	ldr	r3, [pc, #84]	; (3990 <__aeabi_ui2d+0x60>)
    393c:	4a15      	ldr	r2, [pc, #84]	; (3994 <__aeabi_ui2d+0x64>)
    393e:	1a1b      	subs	r3, r3, r0
    3940:	1ad2      	subs	r2, r2, r3
    3942:	2a1f      	cmp	r2, #31
    3944:	dd15      	ble.n	3972 <__aeabi_ui2d+0x42>
    3946:	4a14      	ldr	r2, [pc, #80]	; (3998 <__aeabi_ui2d+0x68>)
    3948:	1ad2      	subs	r2, r2, r3
    394a:	4094      	lsls	r4, r2
    394c:	2200      	movs	r2, #0
    394e:	0324      	lsls	r4, r4, #12
    3950:	055b      	lsls	r3, r3, #21
    3952:	0b24      	lsrs	r4, r4, #12
    3954:	0d5b      	lsrs	r3, r3, #21
    3956:	2100      	movs	r1, #0
    3958:	0010      	movs	r0, r2
    395a:	0324      	lsls	r4, r4, #12
    395c:	0d0a      	lsrs	r2, r1, #20
    395e:	0b24      	lsrs	r4, r4, #12
    3960:	0512      	lsls	r2, r2, #20
    3962:	4322      	orrs	r2, r4
    3964:	4c0d      	ldr	r4, [pc, #52]	; (399c <__aeabi_ui2d+0x6c>)
    3966:	051b      	lsls	r3, r3, #20
    3968:	4022      	ands	r2, r4
    396a:	4313      	orrs	r3, r2
    396c:	005b      	lsls	r3, r3, #1
    396e:	0859      	lsrs	r1, r3, #1
    3970:	bd10      	pop	{r4, pc}
    3972:	0021      	movs	r1, r4
    3974:	4091      	lsls	r1, r2
    3976:	000a      	movs	r2, r1
    3978:	210b      	movs	r1, #11
    397a:	1a08      	subs	r0, r1, r0
    397c:	40c4      	lsrs	r4, r0
    397e:	055b      	lsls	r3, r3, #21
    3980:	0324      	lsls	r4, r4, #12
    3982:	0b24      	lsrs	r4, r4, #12
    3984:	0d5b      	lsrs	r3, r3, #21
    3986:	e7e6      	b.n	3956 <__aeabi_ui2d+0x26>
    3988:	2300      	movs	r3, #0
    398a:	2400      	movs	r4, #0
    398c:	2200      	movs	r2, #0
    398e:	e7e2      	b.n	3956 <__aeabi_ui2d+0x26>
    3990:	0000041e 	.word	0x0000041e
    3994:	00000433 	.word	0x00000433
    3998:	00000413 	.word	0x00000413
    399c:	800fffff 	.word	0x800fffff

000039a0 <__aeabi_f2d>:
    39a0:	0041      	lsls	r1, r0, #1
    39a2:	0e09      	lsrs	r1, r1, #24
    39a4:	1c4b      	adds	r3, r1, #1
    39a6:	b570      	push	{r4, r5, r6, lr}
    39a8:	b2db      	uxtb	r3, r3
    39aa:	0246      	lsls	r6, r0, #9
    39ac:	0a75      	lsrs	r5, r6, #9
    39ae:	0fc4      	lsrs	r4, r0, #31
    39b0:	2b01      	cmp	r3, #1
    39b2:	dd14      	ble.n	39de <__aeabi_f2d+0x3e>
    39b4:	23e0      	movs	r3, #224	; 0xe0
    39b6:	009b      	lsls	r3, r3, #2
    39b8:	076d      	lsls	r5, r5, #29
    39ba:	0b36      	lsrs	r6, r6, #12
    39bc:	18cb      	adds	r3, r1, r3
    39be:	2100      	movs	r1, #0
    39c0:	0d0a      	lsrs	r2, r1, #20
    39c2:	0028      	movs	r0, r5
    39c4:	0512      	lsls	r2, r2, #20
    39c6:	4d1c      	ldr	r5, [pc, #112]	; (3a38 <__aeabi_f2d+0x98>)
    39c8:	4332      	orrs	r2, r6
    39ca:	055b      	lsls	r3, r3, #21
    39cc:	402a      	ands	r2, r5
    39ce:	085b      	lsrs	r3, r3, #1
    39d0:	4313      	orrs	r3, r2
    39d2:	005b      	lsls	r3, r3, #1
    39d4:	07e4      	lsls	r4, r4, #31
    39d6:	085b      	lsrs	r3, r3, #1
    39d8:	4323      	orrs	r3, r4
    39da:	0019      	movs	r1, r3
    39dc:	bd70      	pop	{r4, r5, r6, pc}
    39de:	2900      	cmp	r1, #0
    39e0:	d114      	bne.n	3a0c <__aeabi_f2d+0x6c>
    39e2:	2d00      	cmp	r5, #0
    39e4:	d01e      	beq.n	3a24 <__aeabi_f2d+0x84>
    39e6:	0028      	movs	r0, r5
    39e8:	f000 f8a4 	bl	3b34 <__clzsi2>
    39ec:	280a      	cmp	r0, #10
    39ee:	dc1c      	bgt.n	3a2a <__aeabi_f2d+0x8a>
    39f0:	230b      	movs	r3, #11
    39f2:	002a      	movs	r2, r5
    39f4:	1a1b      	subs	r3, r3, r0
    39f6:	40da      	lsrs	r2, r3
    39f8:	0003      	movs	r3, r0
    39fa:	3315      	adds	r3, #21
    39fc:	409d      	lsls	r5, r3
    39fe:	4b0f      	ldr	r3, [pc, #60]	; (3a3c <__aeabi_f2d+0x9c>)
    3a00:	0312      	lsls	r2, r2, #12
    3a02:	1a1b      	subs	r3, r3, r0
    3a04:	055b      	lsls	r3, r3, #21
    3a06:	0b16      	lsrs	r6, r2, #12
    3a08:	0d5b      	lsrs	r3, r3, #21
    3a0a:	e7d8      	b.n	39be <__aeabi_f2d+0x1e>
    3a0c:	2d00      	cmp	r5, #0
    3a0e:	d006      	beq.n	3a1e <__aeabi_f2d+0x7e>
    3a10:	0b32      	lsrs	r2, r6, #12
    3a12:	2680      	movs	r6, #128	; 0x80
    3a14:	0336      	lsls	r6, r6, #12
    3a16:	076d      	lsls	r5, r5, #29
    3a18:	4316      	orrs	r6, r2
    3a1a:	4b09      	ldr	r3, [pc, #36]	; (3a40 <__aeabi_f2d+0xa0>)
    3a1c:	e7cf      	b.n	39be <__aeabi_f2d+0x1e>
    3a1e:	4b08      	ldr	r3, [pc, #32]	; (3a40 <__aeabi_f2d+0xa0>)
    3a20:	2600      	movs	r6, #0
    3a22:	e7cc      	b.n	39be <__aeabi_f2d+0x1e>
    3a24:	2300      	movs	r3, #0
    3a26:	2600      	movs	r6, #0
    3a28:	e7c9      	b.n	39be <__aeabi_f2d+0x1e>
    3a2a:	0003      	movs	r3, r0
    3a2c:	002a      	movs	r2, r5
    3a2e:	3b0b      	subs	r3, #11
    3a30:	409a      	lsls	r2, r3
    3a32:	2500      	movs	r5, #0
    3a34:	e7e3      	b.n	39fe <__aeabi_f2d+0x5e>
    3a36:	46c0      	nop			; (mov r8, r8)
    3a38:	800fffff 	.word	0x800fffff
    3a3c:	00000389 	.word	0x00000389
    3a40:	000007ff 	.word	0x000007ff

00003a44 <__aeabi_cdrcmple>:
    3a44:	4684      	mov	ip, r0
    3a46:	1c10      	adds	r0, r2, #0
    3a48:	4662      	mov	r2, ip
    3a4a:	468c      	mov	ip, r1
    3a4c:	1c19      	adds	r1, r3, #0
    3a4e:	4663      	mov	r3, ip
    3a50:	e000      	b.n	3a54 <__aeabi_cdcmpeq>
    3a52:	46c0      	nop			; (mov r8, r8)

00003a54 <__aeabi_cdcmpeq>:
    3a54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3a56:	f000 f9d1 	bl	3dfc <__ledf2>
    3a5a:	2800      	cmp	r0, #0
    3a5c:	d401      	bmi.n	3a62 <__aeabi_cdcmpeq+0xe>
    3a5e:	2100      	movs	r1, #0
    3a60:	42c8      	cmn	r0, r1
    3a62:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003a64 <__aeabi_dcmpeq>:
    3a64:	b510      	push	{r4, lr}
    3a66:	f000 f92b 	bl	3cc0 <__eqdf2>
    3a6a:	4240      	negs	r0, r0
    3a6c:	3001      	adds	r0, #1
    3a6e:	bd10      	pop	{r4, pc}

00003a70 <__aeabi_dcmplt>:
    3a70:	b510      	push	{r4, lr}
    3a72:	f000 f9c3 	bl	3dfc <__ledf2>
    3a76:	2800      	cmp	r0, #0
    3a78:	db01      	blt.n	3a7e <__aeabi_dcmplt+0xe>
    3a7a:	2000      	movs	r0, #0
    3a7c:	bd10      	pop	{r4, pc}
    3a7e:	2001      	movs	r0, #1
    3a80:	bd10      	pop	{r4, pc}
    3a82:	46c0      	nop			; (mov r8, r8)

00003a84 <__aeabi_dcmple>:
    3a84:	b510      	push	{r4, lr}
    3a86:	f000 f9b9 	bl	3dfc <__ledf2>
    3a8a:	2800      	cmp	r0, #0
    3a8c:	dd01      	ble.n	3a92 <__aeabi_dcmple+0xe>
    3a8e:	2000      	movs	r0, #0
    3a90:	bd10      	pop	{r4, pc}
    3a92:	2001      	movs	r0, #1
    3a94:	bd10      	pop	{r4, pc}
    3a96:	46c0      	nop			; (mov r8, r8)

00003a98 <__aeabi_dcmpgt>:
    3a98:	b510      	push	{r4, lr}
    3a9a:	f000 f94b 	bl	3d34 <__gedf2>
    3a9e:	2800      	cmp	r0, #0
    3aa0:	dc01      	bgt.n	3aa6 <__aeabi_dcmpgt+0xe>
    3aa2:	2000      	movs	r0, #0
    3aa4:	bd10      	pop	{r4, pc}
    3aa6:	2001      	movs	r0, #1
    3aa8:	bd10      	pop	{r4, pc}
    3aaa:	46c0      	nop			; (mov r8, r8)

00003aac <__aeabi_dcmpge>:
    3aac:	b510      	push	{r4, lr}
    3aae:	f000 f941 	bl	3d34 <__gedf2>
    3ab2:	2800      	cmp	r0, #0
    3ab4:	da01      	bge.n	3aba <__aeabi_dcmpge+0xe>
    3ab6:	2000      	movs	r0, #0
    3ab8:	bd10      	pop	{r4, pc}
    3aba:	2001      	movs	r0, #1
    3abc:	bd10      	pop	{r4, pc}
    3abe:	46c0      	nop			; (mov r8, r8)

00003ac0 <__aeabi_cfrcmple>:
    3ac0:	4684      	mov	ip, r0
    3ac2:	1c08      	adds	r0, r1, #0
    3ac4:	4661      	mov	r1, ip
    3ac6:	e7ff      	b.n	3ac8 <__aeabi_cfcmpeq>

00003ac8 <__aeabi_cfcmpeq>:
    3ac8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3aca:	f000 f8b7 	bl	3c3c <__lesf2>
    3ace:	2800      	cmp	r0, #0
    3ad0:	d401      	bmi.n	3ad6 <__aeabi_cfcmpeq+0xe>
    3ad2:	2100      	movs	r1, #0
    3ad4:	42c8      	cmn	r0, r1
    3ad6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003ad8 <__aeabi_fcmpeq>:
    3ad8:	b510      	push	{r4, lr}
    3ada:	f000 f849 	bl	3b70 <__eqsf2>
    3ade:	4240      	negs	r0, r0
    3ae0:	3001      	adds	r0, #1
    3ae2:	bd10      	pop	{r4, pc}

00003ae4 <__aeabi_fcmplt>:
    3ae4:	b510      	push	{r4, lr}
    3ae6:	f000 f8a9 	bl	3c3c <__lesf2>
    3aea:	2800      	cmp	r0, #0
    3aec:	db01      	blt.n	3af2 <__aeabi_fcmplt+0xe>
    3aee:	2000      	movs	r0, #0
    3af0:	bd10      	pop	{r4, pc}
    3af2:	2001      	movs	r0, #1
    3af4:	bd10      	pop	{r4, pc}
    3af6:	46c0      	nop			; (mov r8, r8)

00003af8 <__aeabi_fcmple>:
    3af8:	b510      	push	{r4, lr}
    3afa:	f000 f89f 	bl	3c3c <__lesf2>
    3afe:	2800      	cmp	r0, #0
    3b00:	dd01      	ble.n	3b06 <__aeabi_fcmple+0xe>
    3b02:	2000      	movs	r0, #0
    3b04:	bd10      	pop	{r4, pc}
    3b06:	2001      	movs	r0, #1
    3b08:	bd10      	pop	{r4, pc}
    3b0a:	46c0      	nop			; (mov r8, r8)

00003b0c <__aeabi_fcmpgt>:
    3b0c:	b510      	push	{r4, lr}
    3b0e:	f000 f855 	bl	3bbc <__gesf2>
    3b12:	2800      	cmp	r0, #0
    3b14:	dc01      	bgt.n	3b1a <__aeabi_fcmpgt+0xe>
    3b16:	2000      	movs	r0, #0
    3b18:	bd10      	pop	{r4, pc}
    3b1a:	2001      	movs	r0, #1
    3b1c:	bd10      	pop	{r4, pc}
    3b1e:	46c0      	nop			; (mov r8, r8)

00003b20 <__aeabi_fcmpge>:
    3b20:	b510      	push	{r4, lr}
    3b22:	f000 f84b 	bl	3bbc <__gesf2>
    3b26:	2800      	cmp	r0, #0
    3b28:	da01      	bge.n	3b2e <__aeabi_fcmpge+0xe>
    3b2a:	2000      	movs	r0, #0
    3b2c:	bd10      	pop	{r4, pc}
    3b2e:	2001      	movs	r0, #1
    3b30:	bd10      	pop	{r4, pc}
    3b32:	46c0      	nop			; (mov r8, r8)

00003b34 <__clzsi2>:
    3b34:	211c      	movs	r1, #28
    3b36:	2301      	movs	r3, #1
    3b38:	041b      	lsls	r3, r3, #16
    3b3a:	4298      	cmp	r0, r3
    3b3c:	d301      	bcc.n	3b42 <__clzsi2+0xe>
    3b3e:	0c00      	lsrs	r0, r0, #16
    3b40:	3910      	subs	r1, #16
    3b42:	0a1b      	lsrs	r3, r3, #8
    3b44:	4298      	cmp	r0, r3
    3b46:	d301      	bcc.n	3b4c <__clzsi2+0x18>
    3b48:	0a00      	lsrs	r0, r0, #8
    3b4a:	3908      	subs	r1, #8
    3b4c:	091b      	lsrs	r3, r3, #4
    3b4e:	4298      	cmp	r0, r3
    3b50:	d301      	bcc.n	3b56 <__clzsi2+0x22>
    3b52:	0900      	lsrs	r0, r0, #4
    3b54:	3904      	subs	r1, #4
    3b56:	a202      	add	r2, pc, #8	; (adr r2, 3b60 <__clzsi2+0x2c>)
    3b58:	5c10      	ldrb	r0, [r2, r0]
    3b5a:	1840      	adds	r0, r0, r1
    3b5c:	4770      	bx	lr
    3b5e:	46c0      	nop			; (mov r8, r8)
    3b60:	02020304 	.word	0x02020304
    3b64:	01010101 	.word	0x01010101
	...

00003b70 <__eqsf2>:
    3b70:	b570      	push	{r4, r5, r6, lr}
    3b72:	0042      	lsls	r2, r0, #1
    3b74:	0245      	lsls	r5, r0, #9
    3b76:	024e      	lsls	r6, r1, #9
    3b78:	004c      	lsls	r4, r1, #1
    3b7a:	0fc3      	lsrs	r3, r0, #31
    3b7c:	0a6d      	lsrs	r5, r5, #9
    3b7e:	0e12      	lsrs	r2, r2, #24
    3b80:	0a76      	lsrs	r6, r6, #9
    3b82:	0e24      	lsrs	r4, r4, #24
    3b84:	0fc9      	lsrs	r1, r1, #31
    3b86:	2001      	movs	r0, #1
    3b88:	2aff      	cmp	r2, #255	; 0xff
    3b8a:	d006      	beq.n	3b9a <__eqsf2+0x2a>
    3b8c:	2cff      	cmp	r4, #255	; 0xff
    3b8e:	d003      	beq.n	3b98 <__eqsf2+0x28>
    3b90:	42a2      	cmp	r2, r4
    3b92:	d101      	bne.n	3b98 <__eqsf2+0x28>
    3b94:	42b5      	cmp	r5, r6
    3b96:	d006      	beq.n	3ba6 <__eqsf2+0x36>
    3b98:	bd70      	pop	{r4, r5, r6, pc}
    3b9a:	2d00      	cmp	r5, #0
    3b9c:	d1fc      	bne.n	3b98 <__eqsf2+0x28>
    3b9e:	2cff      	cmp	r4, #255	; 0xff
    3ba0:	d1fa      	bne.n	3b98 <__eqsf2+0x28>
    3ba2:	2e00      	cmp	r6, #0
    3ba4:	d1f8      	bne.n	3b98 <__eqsf2+0x28>
    3ba6:	428b      	cmp	r3, r1
    3ba8:	d006      	beq.n	3bb8 <__eqsf2+0x48>
    3baa:	2001      	movs	r0, #1
    3bac:	2a00      	cmp	r2, #0
    3bae:	d1f3      	bne.n	3b98 <__eqsf2+0x28>
    3bb0:	0028      	movs	r0, r5
    3bb2:	1e45      	subs	r5, r0, #1
    3bb4:	41a8      	sbcs	r0, r5
    3bb6:	e7ef      	b.n	3b98 <__eqsf2+0x28>
    3bb8:	2000      	movs	r0, #0
    3bba:	e7ed      	b.n	3b98 <__eqsf2+0x28>

00003bbc <__gesf2>:
    3bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3bbe:	0042      	lsls	r2, r0, #1
    3bc0:	0245      	lsls	r5, r0, #9
    3bc2:	024c      	lsls	r4, r1, #9
    3bc4:	0fc3      	lsrs	r3, r0, #31
    3bc6:	0048      	lsls	r0, r1, #1
    3bc8:	0a6d      	lsrs	r5, r5, #9
    3bca:	0e12      	lsrs	r2, r2, #24
    3bcc:	0a64      	lsrs	r4, r4, #9
    3bce:	0e00      	lsrs	r0, r0, #24
    3bd0:	0fc9      	lsrs	r1, r1, #31
    3bd2:	2aff      	cmp	r2, #255	; 0xff
    3bd4:	d01e      	beq.n	3c14 <__gesf2+0x58>
    3bd6:	28ff      	cmp	r0, #255	; 0xff
    3bd8:	d021      	beq.n	3c1e <__gesf2+0x62>
    3bda:	2a00      	cmp	r2, #0
    3bdc:	d10a      	bne.n	3bf4 <__gesf2+0x38>
    3bde:	426e      	negs	r6, r5
    3be0:	416e      	adcs	r6, r5
    3be2:	b2f6      	uxtb	r6, r6
    3be4:	2800      	cmp	r0, #0
    3be6:	d10f      	bne.n	3c08 <__gesf2+0x4c>
    3be8:	2c00      	cmp	r4, #0
    3bea:	d10d      	bne.n	3c08 <__gesf2+0x4c>
    3bec:	2000      	movs	r0, #0
    3bee:	2d00      	cmp	r5, #0
    3bf0:	d009      	beq.n	3c06 <__gesf2+0x4a>
    3bf2:	e005      	b.n	3c00 <__gesf2+0x44>
    3bf4:	2800      	cmp	r0, #0
    3bf6:	d101      	bne.n	3bfc <__gesf2+0x40>
    3bf8:	2c00      	cmp	r4, #0
    3bfa:	d001      	beq.n	3c00 <__gesf2+0x44>
    3bfc:	428b      	cmp	r3, r1
    3bfe:	d011      	beq.n	3c24 <__gesf2+0x68>
    3c00:	2101      	movs	r1, #1
    3c02:	4258      	negs	r0, r3
    3c04:	4308      	orrs	r0, r1
    3c06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c08:	2e00      	cmp	r6, #0
    3c0a:	d0f7      	beq.n	3bfc <__gesf2+0x40>
    3c0c:	2001      	movs	r0, #1
    3c0e:	3901      	subs	r1, #1
    3c10:	4308      	orrs	r0, r1
    3c12:	e7f8      	b.n	3c06 <__gesf2+0x4a>
    3c14:	2d00      	cmp	r5, #0
    3c16:	d0de      	beq.n	3bd6 <__gesf2+0x1a>
    3c18:	2002      	movs	r0, #2
    3c1a:	4240      	negs	r0, r0
    3c1c:	e7f3      	b.n	3c06 <__gesf2+0x4a>
    3c1e:	2c00      	cmp	r4, #0
    3c20:	d0db      	beq.n	3bda <__gesf2+0x1e>
    3c22:	e7f9      	b.n	3c18 <__gesf2+0x5c>
    3c24:	4282      	cmp	r2, r0
    3c26:	dceb      	bgt.n	3c00 <__gesf2+0x44>
    3c28:	db04      	blt.n	3c34 <__gesf2+0x78>
    3c2a:	42a5      	cmp	r5, r4
    3c2c:	d8e8      	bhi.n	3c00 <__gesf2+0x44>
    3c2e:	2000      	movs	r0, #0
    3c30:	42a5      	cmp	r5, r4
    3c32:	d2e8      	bcs.n	3c06 <__gesf2+0x4a>
    3c34:	2101      	movs	r1, #1
    3c36:	1e58      	subs	r0, r3, #1
    3c38:	4308      	orrs	r0, r1
    3c3a:	e7e4      	b.n	3c06 <__gesf2+0x4a>

00003c3c <__lesf2>:
    3c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c3e:	0042      	lsls	r2, r0, #1
    3c40:	024d      	lsls	r5, r1, #9
    3c42:	004c      	lsls	r4, r1, #1
    3c44:	0246      	lsls	r6, r0, #9
    3c46:	0a76      	lsrs	r6, r6, #9
    3c48:	0e12      	lsrs	r2, r2, #24
    3c4a:	0fc3      	lsrs	r3, r0, #31
    3c4c:	0a6d      	lsrs	r5, r5, #9
    3c4e:	0e24      	lsrs	r4, r4, #24
    3c50:	0fc9      	lsrs	r1, r1, #31
    3c52:	2aff      	cmp	r2, #255	; 0xff
    3c54:	d016      	beq.n	3c84 <__lesf2+0x48>
    3c56:	2cff      	cmp	r4, #255	; 0xff
    3c58:	d018      	beq.n	3c8c <__lesf2+0x50>
    3c5a:	2a00      	cmp	r2, #0
    3c5c:	d10a      	bne.n	3c74 <__lesf2+0x38>
    3c5e:	4270      	negs	r0, r6
    3c60:	4170      	adcs	r0, r6
    3c62:	b2c0      	uxtb	r0, r0
    3c64:	2c00      	cmp	r4, #0
    3c66:	d015      	beq.n	3c94 <__lesf2+0x58>
    3c68:	2800      	cmp	r0, #0
    3c6a:	d005      	beq.n	3c78 <__lesf2+0x3c>
    3c6c:	2001      	movs	r0, #1
    3c6e:	3901      	subs	r1, #1
    3c70:	4308      	orrs	r0, r1
    3c72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c74:	2c00      	cmp	r4, #0
    3c76:	d013      	beq.n	3ca0 <__lesf2+0x64>
    3c78:	4299      	cmp	r1, r3
    3c7a:	d014      	beq.n	3ca6 <__lesf2+0x6a>
    3c7c:	2001      	movs	r0, #1
    3c7e:	425b      	negs	r3, r3
    3c80:	4318      	orrs	r0, r3
    3c82:	e7f6      	b.n	3c72 <__lesf2+0x36>
    3c84:	2002      	movs	r0, #2
    3c86:	2e00      	cmp	r6, #0
    3c88:	d1f3      	bne.n	3c72 <__lesf2+0x36>
    3c8a:	e7e4      	b.n	3c56 <__lesf2+0x1a>
    3c8c:	2002      	movs	r0, #2
    3c8e:	2d00      	cmp	r5, #0
    3c90:	d1ef      	bne.n	3c72 <__lesf2+0x36>
    3c92:	e7e2      	b.n	3c5a <__lesf2+0x1e>
    3c94:	2d00      	cmp	r5, #0
    3c96:	d1e7      	bne.n	3c68 <__lesf2+0x2c>
    3c98:	2000      	movs	r0, #0
    3c9a:	2e00      	cmp	r6, #0
    3c9c:	d0e9      	beq.n	3c72 <__lesf2+0x36>
    3c9e:	e7ed      	b.n	3c7c <__lesf2+0x40>
    3ca0:	2d00      	cmp	r5, #0
    3ca2:	d1e9      	bne.n	3c78 <__lesf2+0x3c>
    3ca4:	e7ea      	b.n	3c7c <__lesf2+0x40>
    3ca6:	42a2      	cmp	r2, r4
    3ca8:	dc06      	bgt.n	3cb8 <__lesf2+0x7c>
    3caa:	dbdf      	blt.n	3c6c <__lesf2+0x30>
    3cac:	42ae      	cmp	r6, r5
    3cae:	d803      	bhi.n	3cb8 <__lesf2+0x7c>
    3cb0:	2000      	movs	r0, #0
    3cb2:	42ae      	cmp	r6, r5
    3cb4:	d3da      	bcc.n	3c6c <__lesf2+0x30>
    3cb6:	e7dc      	b.n	3c72 <__lesf2+0x36>
    3cb8:	2001      	movs	r0, #1
    3cba:	4249      	negs	r1, r1
    3cbc:	4308      	orrs	r0, r1
    3cbe:	e7d8      	b.n	3c72 <__lesf2+0x36>

00003cc0 <__eqdf2>:
    3cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cc2:	464f      	mov	r7, r9
    3cc4:	4646      	mov	r6, r8
    3cc6:	46d6      	mov	lr, sl
    3cc8:	005c      	lsls	r4, r3, #1
    3cca:	b5c0      	push	{r6, r7, lr}
    3ccc:	031f      	lsls	r7, r3, #12
    3cce:	0fdb      	lsrs	r3, r3, #31
    3cd0:	469a      	mov	sl, r3
    3cd2:	4b17      	ldr	r3, [pc, #92]	; (3d30 <__eqdf2+0x70>)
    3cd4:	030e      	lsls	r6, r1, #12
    3cd6:	004d      	lsls	r5, r1, #1
    3cd8:	4684      	mov	ip, r0
    3cda:	4680      	mov	r8, r0
    3cdc:	0b36      	lsrs	r6, r6, #12
    3cde:	0d6d      	lsrs	r5, r5, #21
    3ce0:	0fc9      	lsrs	r1, r1, #31
    3ce2:	4691      	mov	r9, r2
    3ce4:	0b3f      	lsrs	r7, r7, #12
    3ce6:	0d64      	lsrs	r4, r4, #21
    3ce8:	2001      	movs	r0, #1
    3cea:	429d      	cmp	r5, r3
    3cec:	d008      	beq.n	3d00 <__eqdf2+0x40>
    3cee:	429c      	cmp	r4, r3
    3cf0:	d001      	beq.n	3cf6 <__eqdf2+0x36>
    3cf2:	42a5      	cmp	r5, r4
    3cf4:	d00b      	beq.n	3d0e <__eqdf2+0x4e>
    3cf6:	bc1c      	pop	{r2, r3, r4}
    3cf8:	4690      	mov	r8, r2
    3cfa:	4699      	mov	r9, r3
    3cfc:	46a2      	mov	sl, r4
    3cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d00:	4663      	mov	r3, ip
    3d02:	4333      	orrs	r3, r6
    3d04:	d1f7      	bne.n	3cf6 <__eqdf2+0x36>
    3d06:	42ac      	cmp	r4, r5
    3d08:	d1f5      	bne.n	3cf6 <__eqdf2+0x36>
    3d0a:	433a      	orrs	r2, r7
    3d0c:	d1f3      	bne.n	3cf6 <__eqdf2+0x36>
    3d0e:	2001      	movs	r0, #1
    3d10:	42be      	cmp	r6, r7
    3d12:	d1f0      	bne.n	3cf6 <__eqdf2+0x36>
    3d14:	45c8      	cmp	r8, r9
    3d16:	d1ee      	bne.n	3cf6 <__eqdf2+0x36>
    3d18:	4551      	cmp	r1, sl
    3d1a:	d007      	beq.n	3d2c <__eqdf2+0x6c>
    3d1c:	2d00      	cmp	r5, #0
    3d1e:	d1ea      	bne.n	3cf6 <__eqdf2+0x36>
    3d20:	4663      	mov	r3, ip
    3d22:	431e      	orrs	r6, r3
    3d24:	0030      	movs	r0, r6
    3d26:	1e46      	subs	r6, r0, #1
    3d28:	41b0      	sbcs	r0, r6
    3d2a:	e7e4      	b.n	3cf6 <__eqdf2+0x36>
    3d2c:	2000      	movs	r0, #0
    3d2e:	e7e2      	b.n	3cf6 <__eqdf2+0x36>
    3d30:	000007ff 	.word	0x000007ff

00003d34 <__gedf2>:
    3d34:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d36:	4645      	mov	r5, r8
    3d38:	46de      	mov	lr, fp
    3d3a:	4657      	mov	r7, sl
    3d3c:	464e      	mov	r6, r9
    3d3e:	b5e0      	push	{r5, r6, r7, lr}
    3d40:	031f      	lsls	r7, r3, #12
    3d42:	0b3d      	lsrs	r5, r7, #12
    3d44:	4f2c      	ldr	r7, [pc, #176]	; (3df8 <__gedf2+0xc4>)
    3d46:	030e      	lsls	r6, r1, #12
    3d48:	004c      	lsls	r4, r1, #1
    3d4a:	46ab      	mov	fp, r5
    3d4c:	005d      	lsls	r5, r3, #1
    3d4e:	4684      	mov	ip, r0
    3d50:	0b36      	lsrs	r6, r6, #12
    3d52:	0d64      	lsrs	r4, r4, #21
    3d54:	0fc9      	lsrs	r1, r1, #31
    3d56:	4690      	mov	r8, r2
    3d58:	0d6d      	lsrs	r5, r5, #21
    3d5a:	0fdb      	lsrs	r3, r3, #31
    3d5c:	42bc      	cmp	r4, r7
    3d5e:	d02a      	beq.n	3db6 <__gedf2+0x82>
    3d60:	4f25      	ldr	r7, [pc, #148]	; (3df8 <__gedf2+0xc4>)
    3d62:	42bd      	cmp	r5, r7
    3d64:	d02d      	beq.n	3dc2 <__gedf2+0x8e>
    3d66:	2c00      	cmp	r4, #0
    3d68:	d10f      	bne.n	3d8a <__gedf2+0x56>
    3d6a:	4330      	orrs	r0, r6
    3d6c:	0007      	movs	r7, r0
    3d6e:	4681      	mov	r9, r0
    3d70:	4278      	negs	r0, r7
    3d72:	4178      	adcs	r0, r7
    3d74:	b2c0      	uxtb	r0, r0
    3d76:	2d00      	cmp	r5, #0
    3d78:	d117      	bne.n	3daa <__gedf2+0x76>
    3d7a:	465f      	mov	r7, fp
    3d7c:	433a      	orrs	r2, r7
    3d7e:	d114      	bne.n	3daa <__gedf2+0x76>
    3d80:	464b      	mov	r3, r9
    3d82:	2000      	movs	r0, #0
    3d84:	2b00      	cmp	r3, #0
    3d86:	d00a      	beq.n	3d9e <__gedf2+0x6a>
    3d88:	e006      	b.n	3d98 <__gedf2+0x64>
    3d8a:	2d00      	cmp	r5, #0
    3d8c:	d102      	bne.n	3d94 <__gedf2+0x60>
    3d8e:	4658      	mov	r0, fp
    3d90:	4302      	orrs	r2, r0
    3d92:	d001      	beq.n	3d98 <__gedf2+0x64>
    3d94:	4299      	cmp	r1, r3
    3d96:	d018      	beq.n	3dca <__gedf2+0x96>
    3d98:	4248      	negs	r0, r1
    3d9a:	2101      	movs	r1, #1
    3d9c:	4308      	orrs	r0, r1
    3d9e:	bc3c      	pop	{r2, r3, r4, r5}
    3da0:	4690      	mov	r8, r2
    3da2:	4699      	mov	r9, r3
    3da4:	46a2      	mov	sl, r4
    3da6:	46ab      	mov	fp, r5
    3da8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3daa:	2800      	cmp	r0, #0
    3dac:	d0f2      	beq.n	3d94 <__gedf2+0x60>
    3dae:	2001      	movs	r0, #1
    3db0:	3b01      	subs	r3, #1
    3db2:	4318      	orrs	r0, r3
    3db4:	e7f3      	b.n	3d9e <__gedf2+0x6a>
    3db6:	0037      	movs	r7, r6
    3db8:	4307      	orrs	r7, r0
    3dba:	d0d1      	beq.n	3d60 <__gedf2+0x2c>
    3dbc:	2002      	movs	r0, #2
    3dbe:	4240      	negs	r0, r0
    3dc0:	e7ed      	b.n	3d9e <__gedf2+0x6a>
    3dc2:	465f      	mov	r7, fp
    3dc4:	4317      	orrs	r7, r2
    3dc6:	d0ce      	beq.n	3d66 <__gedf2+0x32>
    3dc8:	e7f8      	b.n	3dbc <__gedf2+0x88>
    3dca:	42ac      	cmp	r4, r5
    3dcc:	dce4      	bgt.n	3d98 <__gedf2+0x64>
    3dce:	da03      	bge.n	3dd8 <__gedf2+0xa4>
    3dd0:	1e48      	subs	r0, r1, #1
    3dd2:	2101      	movs	r1, #1
    3dd4:	4308      	orrs	r0, r1
    3dd6:	e7e2      	b.n	3d9e <__gedf2+0x6a>
    3dd8:	455e      	cmp	r6, fp
    3dda:	d8dd      	bhi.n	3d98 <__gedf2+0x64>
    3ddc:	d006      	beq.n	3dec <__gedf2+0xb8>
    3dde:	2000      	movs	r0, #0
    3de0:	455e      	cmp	r6, fp
    3de2:	d2dc      	bcs.n	3d9e <__gedf2+0x6a>
    3de4:	2301      	movs	r3, #1
    3de6:	1e48      	subs	r0, r1, #1
    3de8:	4318      	orrs	r0, r3
    3dea:	e7d8      	b.n	3d9e <__gedf2+0x6a>
    3dec:	45c4      	cmp	ip, r8
    3dee:	d8d3      	bhi.n	3d98 <__gedf2+0x64>
    3df0:	2000      	movs	r0, #0
    3df2:	45c4      	cmp	ip, r8
    3df4:	d3f6      	bcc.n	3de4 <__gedf2+0xb0>
    3df6:	e7d2      	b.n	3d9e <__gedf2+0x6a>
    3df8:	000007ff 	.word	0x000007ff

00003dfc <__ledf2>:
    3dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3dfe:	464e      	mov	r6, r9
    3e00:	4645      	mov	r5, r8
    3e02:	46de      	mov	lr, fp
    3e04:	4657      	mov	r7, sl
    3e06:	005c      	lsls	r4, r3, #1
    3e08:	b5e0      	push	{r5, r6, r7, lr}
    3e0a:	031f      	lsls	r7, r3, #12
    3e0c:	0fdb      	lsrs	r3, r3, #31
    3e0e:	4699      	mov	r9, r3
    3e10:	4b2a      	ldr	r3, [pc, #168]	; (3ebc <__ledf2+0xc0>)
    3e12:	030e      	lsls	r6, r1, #12
    3e14:	004d      	lsls	r5, r1, #1
    3e16:	0fc9      	lsrs	r1, r1, #31
    3e18:	4684      	mov	ip, r0
    3e1a:	0b36      	lsrs	r6, r6, #12
    3e1c:	0d6d      	lsrs	r5, r5, #21
    3e1e:	468b      	mov	fp, r1
    3e20:	4690      	mov	r8, r2
    3e22:	0b3f      	lsrs	r7, r7, #12
    3e24:	0d64      	lsrs	r4, r4, #21
    3e26:	429d      	cmp	r5, r3
    3e28:	d020      	beq.n	3e6c <__ledf2+0x70>
    3e2a:	4b24      	ldr	r3, [pc, #144]	; (3ebc <__ledf2+0xc0>)
    3e2c:	429c      	cmp	r4, r3
    3e2e:	d022      	beq.n	3e76 <__ledf2+0x7a>
    3e30:	2d00      	cmp	r5, #0
    3e32:	d112      	bne.n	3e5a <__ledf2+0x5e>
    3e34:	4330      	orrs	r0, r6
    3e36:	4243      	negs	r3, r0
    3e38:	4143      	adcs	r3, r0
    3e3a:	b2db      	uxtb	r3, r3
    3e3c:	2c00      	cmp	r4, #0
    3e3e:	d01f      	beq.n	3e80 <__ledf2+0x84>
    3e40:	2b00      	cmp	r3, #0
    3e42:	d00c      	beq.n	3e5e <__ledf2+0x62>
    3e44:	464b      	mov	r3, r9
    3e46:	2001      	movs	r0, #1
    3e48:	3b01      	subs	r3, #1
    3e4a:	4303      	orrs	r3, r0
    3e4c:	0018      	movs	r0, r3
    3e4e:	bc3c      	pop	{r2, r3, r4, r5}
    3e50:	4690      	mov	r8, r2
    3e52:	4699      	mov	r9, r3
    3e54:	46a2      	mov	sl, r4
    3e56:	46ab      	mov	fp, r5
    3e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e5a:	2c00      	cmp	r4, #0
    3e5c:	d016      	beq.n	3e8c <__ledf2+0x90>
    3e5e:	45cb      	cmp	fp, r9
    3e60:	d017      	beq.n	3e92 <__ledf2+0x96>
    3e62:	465b      	mov	r3, fp
    3e64:	4259      	negs	r1, r3
    3e66:	2301      	movs	r3, #1
    3e68:	430b      	orrs	r3, r1
    3e6a:	e7ef      	b.n	3e4c <__ledf2+0x50>
    3e6c:	0031      	movs	r1, r6
    3e6e:	2302      	movs	r3, #2
    3e70:	4301      	orrs	r1, r0
    3e72:	d1eb      	bne.n	3e4c <__ledf2+0x50>
    3e74:	e7d9      	b.n	3e2a <__ledf2+0x2e>
    3e76:	0039      	movs	r1, r7
    3e78:	2302      	movs	r3, #2
    3e7a:	4311      	orrs	r1, r2
    3e7c:	d1e6      	bne.n	3e4c <__ledf2+0x50>
    3e7e:	e7d7      	b.n	3e30 <__ledf2+0x34>
    3e80:	433a      	orrs	r2, r7
    3e82:	d1dd      	bne.n	3e40 <__ledf2+0x44>
    3e84:	2300      	movs	r3, #0
    3e86:	2800      	cmp	r0, #0
    3e88:	d0e0      	beq.n	3e4c <__ledf2+0x50>
    3e8a:	e7ea      	b.n	3e62 <__ledf2+0x66>
    3e8c:	433a      	orrs	r2, r7
    3e8e:	d1e6      	bne.n	3e5e <__ledf2+0x62>
    3e90:	e7e7      	b.n	3e62 <__ledf2+0x66>
    3e92:	42a5      	cmp	r5, r4
    3e94:	dce5      	bgt.n	3e62 <__ledf2+0x66>
    3e96:	db05      	blt.n	3ea4 <__ledf2+0xa8>
    3e98:	42be      	cmp	r6, r7
    3e9a:	d8e2      	bhi.n	3e62 <__ledf2+0x66>
    3e9c:	d007      	beq.n	3eae <__ledf2+0xb2>
    3e9e:	2300      	movs	r3, #0
    3ea0:	42be      	cmp	r6, r7
    3ea2:	d2d3      	bcs.n	3e4c <__ledf2+0x50>
    3ea4:	4659      	mov	r1, fp
    3ea6:	2301      	movs	r3, #1
    3ea8:	3901      	subs	r1, #1
    3eaa:	430b      	orrs	r3, r1
    3eac:	e7ce      	b.n	3e4c <__ledf2+0x50>
    3eae:	45c4      	cmp	ip, r8
    3eb0:	d8d7      	bhi.n	3e62 <__ledf2+0x66>
    3eb2:	2300      	movs	r3, #0
    3eb4:	45c4      	cmp	ip, r8
    3eb6:	d3f5      	bcc.n	3ea4 <__ledf2+0xa8>
    3eb8:	e7c8      	b.n	3e4c <__ledf2+0x50>
    3eba:	46c0      	nop			; (mov r8, r8)
    3ebc:	000007ff 	.word	0x000007ff

00003ec0 <gcvt>:
    3ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ec2:	001c      	movs	r4, r3
    3ec4:	b085      	sub	sp, #20
    3ec6:	2300      	movs	r3, #0
    3ec8:	0015      	movs	r5, r2
    3eca:	2200      	movs	r2, #0
    3ecc:	0006      	movs	r6, r0
    3ece:	000f      	movs	r7, r1
    3ed0:	f7ff fdce 	bl	3a70 <__aeabi_dcmplt>
    3ed4:	0023      	movs	r3, r4
    3ed6:	2800      	cmp	r0, #0
    3ed8:	d003      	beq.n	3ee2 <gcvt+0x22>
    3eda:	232d      	movs	r3, #45	; 0x2d
    3edc:	3d01      	subs	r5, #1
    3ede:	7023      	strb	r3, [r4, #0]
    3ee0:	1c63      	adds	r3, r4, #1
    3ee2:	2200      	movs	r2, #0
    3ee4:	4908      	ldr	r1, [pc, #32]	; (3f08 <gcvt+0x48>)
    3ee6:	9203      	str	r2, [sp, #12]
    3ee8:	3267      	adds	r2, #103	; 0x67
    3eea:	9202      	str	r2, [sp, #8]
    3eec:	9301      	str	r3, [sp, #4]
    3eee:	9500      	str	r5, [sp, #0]
    3ef0:	003b      	movs	r3, r7
    3ef2:	0032      	movs	r2, r6
    3ef4:	6808      	ldr	r0, [r1, #0]
    3ef6:	f000 f93b 	bl	4170 <_gcvt>
    3efa:	1e43      	subs	r3, r0, #1
    3efc:	4198      	sbcs	r0, r3
    3efe:	4240      	negs	r0, r0
    3f00:	4004      	ands	r4, r0
    3f02:	0020      	movs	r0, r4
    3f04:	b005      	add	sp, #20
    3f06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f08:	200000fc 	.word	0x200000fc

00003f0c <__libc_init_array>:
    3f0c:	b570      	push	{r4, r5, r6, lr}
    3f0e:	2600      	movs	r6, #0
    3f10:	4d0c      	ldr	r5, [pc, #48]	; (3f44 <__libc_init_array+0x38>)
    3f12:	4c0d      	ldr	r4, [pc, #52]	; (3f48 <__libc_init_array+0x3c>)
    3f14:	1b64      	subs	r4, r4, r5
    3f16:	10a4      	asrs	r4, r4, #2
    3f18:	42a6      	cmp	r6, r4
    3f1a:	d109      	bne.n	3f30 <__libc_init_array+0x24>
    3f1c:	2600      	movs	r6, #0
    3f1e:	f002 f985 	bl	622c <_init>
    3f22:	4d0a      	ldr	r5, [pc, #40]	; (3f4c <__libc_init_array+0x40>)
    3f24:	4c0a      	ldr	r4, [pc, #40]	; (3f50 <__libc_init_array+0x44>)
    3f26:	1b64      	subs	r4, r4, r5
    3f28:	10a4      	asrs	r4, r4, #2
    3f2a:	42a6      	cmp	r6, r4
    3f2c:	d105      	bne.n	3f3a <__libc_init_array+0x2e>
    3f2e:	bd70      	pop	{r4, r5, r6, pc}
    3f30:	00b3      	lsls	r3, r6, #2
    3f32:	58eb      	ldr	r3, [r5, r3]
    3f34:	4798      	blx	r3
    3f36:	3601      	adds	r6, #1
    3f38:	e7ee      	b.n	3f18 <__libc_init_array+0xc>
    3f3a:	00b3      	lsls	r3, r6, #2
    3f3c:	58eb      	ldr	r3, [r5, r3]
    3f3e:	4798      	blx	r3
    3f40:	3601      	adds	r6, #1
    3f42:	e7f2      	b.n	3f2a <__libc_init_array+0x1e>
    3f44:	00006238 	.word	0x00006238
    3f48:	00006238 	.word	0x00006238
    3f4c:	00006238 	.word	0x00006238
    3f50:	0000623c 	.word	0x0000623c

00003f54 <malloc>:
    3f54:	b510      	push	{r4, lr}
    3f56:	4b03      	ldr	r3, [pc, #12]	; (3f64 <malloc+0x10>)
    3f58:	0001      	movs	r1, r0
    3f5a:	6818      	ldr	r0, [r3, #0]
    3f5c:	f000 f816 	bl	3f8c <_malloc_r>
    3f60:	bd10      	pop	{r4, pc}
    3f62:	46c0      	nop			; (mov r8, r8)
    3f64:	200000fc 	.word	0x200000fc

00003f68 <memcpy>:
    3f68:	2300      	movs	r3, #0
    3f6a:	b510      	push	{r4, lr}
    3f6c:	429a      	cmp	r2, r3
    3f6e:	d100      	bne.n	3f72 <memcpy+0xa>
    3f70:	bd10      	pop	{r4, pc}
    3f72:	5ccc      	ldrb	r4, [r1, r3]
    3f74:	54c4      	strb	r4, [r0, r3]
    3f76:	3301      	adds	r3, #1
    3f78:	e7f8      	b.n	3f6c <memcpy+0x4>

00003f7a <memset>:
    3f7a:	0003      	movs	r3, r0
    3f7c:	1882      	adds	r2, r0, r2
    3f7e:	4293      	cmp	r3, r2
    3f80:	d100      	bne.n	3f84 <memset+0xa>
    3f82:	4770      	bx	lr
    3f84:	7019      	strb	r1, [r3, #0]
    3f86:	3301      	adds	r3, #1
    3f88:	e7f9      	b.n	3f7e <memset+0x4>
	...

00003f8c <_malloc_r>:
    3f8c:	2303      	movs	r3, #3
    3f8e:	b570      	push	{r4, r5, r6, lr}
    3f90:	1ccd      	adds	r5, r1, #3
    3f92:	439d      	bics	r5, r3
    3f94:	3508      	adds	r5, #8
    3f96:	0006      	movs	r6, r0
    3f98:	2d0c      	cmp	r5, #12
    3f9a:	d21e      	bcs.n	3fda <_malloc_r+0x4e>
    3f9c:	250c      	movs	r5, #12
    3f9e:	42a9      	cmp	r1, r5
    3fa0:	d81d      	bhi.n	3fde <_malloc_r+0x52>
    3fa2:	0030      	movs	r0, r6
    3fa4:	f000 f9b2 	bl	430c <__malloc_lock>
    3fa8:	4a25      	ldr	r2, [pc, #148]	; (4040 <_malloc_r+0xb4>)
    3faa:	6814      	ldr	r4, [r2, #0]
    3fac:	0021      	movs	r1, r4
    3fae:	2900      	cmp	r1, #0
    3fb0:	d119      	bne.n	3fe6 <_malloc_r+0x5a>
    3fb2:	4c24      	ldr	r4, [pc, #144]	; (4044 <_malloc_r+0xb8>)
    3fb4:	6823      	ldr	r3, [r4, #0]
    3fb6:	2b00      	cmp	r3, #0
    3fb8:	d103      	bne.n	3fc2 <_malloc_r+0x36>
    3fba:	0030      	movs	r0, r6
    3fbc:	f000 f844 	bl	4048 <_sbrk_r>
    3fc0:	6020      	str	r0, [r4, #0]
    3fc2:	0029      	movs	r1, r5
    3fc4:	0030      	movs	r0, r6
    3fc6:	f000 f83f 	bl	4048 <_sbrk_r>
    3fca:	1c43      	adds	r3, r0, #1
    3fcc:	d12c      	bne.n	4028 <_malloc_r+0x9c>
    3fce:	230c      	movs	r3, #12
    3fd0:	0030      	movs	r0, r6
    3fd2:	6033      	str	r3, [r6, #0]
    3fd4:	f000 f99b 	bl	430e <__malloc_unlock>
    3fd8:	e003      	b.n	3fe2 <_malloc_r+0x56>
    3fda:	2d00      	cmp	r5, #0
    3fdc:	dadf      	bge.n	3f9e <_malloc_r+0x12>
    3fde:	230c      	movs	r3, #12
    3fe0:	6033      	str	r3, [r6, #0]
    3fe2:	2000      	movs	r0, #0
    3fe4:	bd70      	pop	{r4, r5, r6, pc}
    3fe6:	680b      	ldr	r3, [r1, #0]
    3fe8:	1b5b      	subs	r3, r3, r5
    3fea:	d41a      	bmi.n	4022 <_malloc_r+0x96>
    3fec:	2b0b      	cmp	r3, #11
    3fee:	d903      	bls.n	3ff8 <_malloc_r+0x6c>
    3ff0:	600b      	str	r3, [r1, #0]
    3ff2:	18cc      	adds	r4, r1, r3
    3ff4:	6025      	str	r5, [r4, #0]
    3ff6:	e003      	b.n	4000 <_malloc_r+0x74>
    3ff8:	428c      	cmp	r4, r1
    3ffa:	d10e      	bne.n	401a <_malloc_r+0x8e>
    3ffc:	6863      	ldr	r3, [r4, #4]
    3ffe:	6013      	str	r3, [r2, #0]
    4000:	0030      	movs	r0, r6
    4002:	f000 f984 	bl	430e <__malloc_unlock>
    4006:	0020      	movs	r0, r4
    4008:	2207      	movs	r2, #7
    400a:	300b      	adds	r0, #11
    400c:	1d23      	adds	r3, r4, #4
    400e:	4390      	bics	r0, r2
    4010:	1ac3      	subs	r3, r0, r3
    4012:	d0e7      	beq.n	3fe4 <_malloc_r+0x58>
    4014:	425a      	negs	r2, r3
    4016:	50e2      	str	r2, [r4, r3]
    4018:	e7e4      	b.n	3fe4 <_malloc_r+0x58>
    401a:	684b      	ldr	r3, [r1, #4]
    401c:	6063      	str	r3, [r4, #4]
    401e:	000c      	movs	r4, r1
    4020:	e7ee      	b.n	4000 <_malloc_r+0x74>
    4022:	000c      	movs	r4, r1
    4024:	6849      	ldr	r1, [r1, #4]
    4026:	e7c2      	b.n	3fae <_malloc_r+0x22>
    4028:	2303      	movs	r3, #3
    402a:	1cc4      	adds	r4, r0, #3
    402c:	439c      	bics	r4, r3
    402e:	42a0      	cmp	r0, r4
    4030:	d0e0      	beq.n	3ff4 <_malloc_r+0x68>
    4032:	1a21      	subs	r1, r4, r0
    4034:	0030      	movs	r0, r6
    4036:	f000 f807 	bl	4048 <_sbrk_r>
    403a:	1c43      	adds	r3, r0, #1
    403c:	d1da      	bne.n	3ff4 <_malloc_r+0x68>
    403e:	e7c6      	b.n	3fce <_malloc_r+0x42>
    4040:	200002c0 	.word	0x200002c0
    4044:	200002c4 	.word	0x200002c4

00004048 <_sbrk_r>:
    4048:	2300      	movs	r3, #0
    404a:	b570      	push	{r4, r5, r6, lr}
    404c:	4c06      	ldr	r4, [pc, #24]	; (4068 <_sbrk_r+0x20>)
    404e:	0005      	movs	r5, r0
    4050:	0008      	movs	r0, r1
    4052:	6023      	str	r3, [r4, #0]
    4054:	f7fc feae 	bl	db4 <_sbrk>
    4058:	1c43      	adds	r3, r0, #1
    405a:	d103      	bne.n	4064 <_sbrk_r+0x1c>
    405c:	6823      	ldr	r3, [r4, #0]
    405e:	2b00      	cmp	r3, #0
    4060:	d000      	beq.n	4064 <_sbrk_r+0x1c>
    4062:	602b      	str	r3, [r5, #0]
    4064:	bd70      	pop	{r4, r5, r6, pc}
    4066:	46c0      	nop			; (mov r8, r8)
    4068:	200003a4 	.word	0x200003a4

0000406c <strlen>:
    406c:	2300      	movs	r3, #0
    406e:	5cc2      	ldrb	r2, [r0, r3]
    4070:	3301      	adds	r3, #1
    4072:	2a00      	cmp	r2, #0
    4074:	d1fb      	bne.n	406e <strlen+0x2>
    4076:	1e58      	subs	r0, r3, #1
    4078:	4770      	bx	lr
	...

0000407c <print_e>:
    407c:	b5f0      	push	{r4, r5, r6, r7, lr}
    407e:	b08b      	sub	sp, #44	; 0x2c
    4080:	000e      	movs	r6, r1
    4082:	a910      	add	r1, sp, #64	; 0x40
    4084:	c910      	ldmia	r1!, {r4}
    4086:	780d      	ldrb	r5, [r1, #0]
    4088:	a908      	add	r1, sp, #32
    408a:	9104      	str	r1, [sp, #16]
    408c:	a907      	add	r1, sp, #28
    408e:	9103      	str	r1, [sp, #12]
    4090:	a909      	add	r1, sp, #36	; 0x24
    4092:	9102      	str	r1, [sp, #8]
    4094:	1c61      	adds	r1, r4, #1
    4096:	9101      	str	r1, [sp, #4]
    4098:	2102      	movs	r1, #2
    409a:	9100      	str	r1, [sp, #0]
    409c:	f000 fcce 	bl	4a3c <_dtoa_r>
    40a0:	9f09      	ldr	r7, [sp, #36]	; 0x24
    40a2:	4b32      	ldr	r3, [pc, #200]	; (416c <print_e+0xf0>)
    40a4:	429f      	cmp	r7, r3
    40a6:	d105      	bne.n	40b4 <print_e+0x38>
    40a8:	0001      	movs	r1, r0
    40aa:	0030      	movs	r0, r6
    40ac:	f000 fc3a 	bl	4924 <strcpy>
    40b0:	b00b      	add	sp, #44	; 0x2c
    40b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    40b4:	7803      	ldrb	r3, [r0, #0]
    40b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    40b8:	1c41      	adds	r1, r0, #1
    40ba:	7033      	strb	r3, [r6, #0]
    40bc:	4322      	orrs	r2, r4
    40be:	d109      	bne.n	40d4 <print_e+0x58>
    40c0:	0014      	movs	r4, r2
    40c2:	1c73      	adds	r3, r6, #1
    40c4:	7808      	ldrb	r0, [r1, #0]
    40c6:	001a      	movs	r2, r3
    40c8:	2800      	cmp	r0, #0
    40ca:	d107      	bne.n	40dc <print_e+0x60>
    40cc:	2d67      	cmp	r5, #103	; 0x67
    40ce:	d10c      	bne.n	40ea <print_e+0x6e>
    40d0:	2565      	movs	r5, #101	; 0x65
    40d2:	e014      	b.n	40fe <print_e+0x82>
    40d4:	222e      	movs	r2, #46	; 0x2e
    40d6:	1cb3      	adds	r3, r6, #2
    40d8:	7072      	strb	r2, [r6, #1]
    40da:	e7f3      	b.n	40c4 <print_e+0x48>
    40dc:	2c00      	cmp	r4, #0
    40de:	ddf5      	ble.n	40cc <print_e+0x50>
    40e0:	7018      	strb	r0, [r3, #0]
    40e2:	3101      	adds	r1, #1
    40e4:	3c01      	subs	r4, #1
    40e6:	3301      	adds	r3, #1
    40e8:	e7ec      	b.n	40c4 <print_e+0x48>
    40ea:	2d47      	cmp	r5, #71	; 0x47
    40ec:	d039      	beq.n	4162 <print_e+0xe6>
    40ee:	0021      	movs	r1, r4
    40f0:	2030      	movs	r0, #48	; 0x30
    40f2:	2900      	cmp	r1, #0
    40f4:	dc31      	bgt.n	415a <print_e+0xde>
    40f6:	43e3      	mvns	r3, r4
    40f8:	17db      	asrs	r3, r3, #31
    40fa:	401c      	ands	r4, r3
    40fc:	1912      	adds	r2, r2, r4
    40fe:	7015      	strb	r5, [r2, #0]
    4100:	1e7b      	subs	r3, r7, #1
    4102:	1c95      	adds	r5, r2, #2
    4104:	9309      	str	r3, [sp, #36]	; 0x24
    4106:	002c      	movs	r4, r5
    4108:	2b00      	cmp	r3, #0
    410a:	da2c      	bge.n	4166 <print_e+0xea>
    410c:	232d      	movs	r3, #45	; 0x2d
    410e:	7053      	strb	r3, [r2, #1]
    4110:	3b2c      	subs	r3, #44	; 0x2c
    4112:	1bdf      	subs	r7, r3, r7
    4114:	9709      	str	r7, [sp, #36]	; 0x24
    4116:	9e09      	ldr	r6, [sp, #36]	; 0x24
    4118:	2e63      	cmp	r6, #99	; 0x63
    411a:	dd0c      	ble.n	4136 <print_e+0xba>
    411c:	2164      	movs	r1, #100	; 0x64
    411e:	0030      	movs	r0, r6
    4120:	f7fd f841 	bl	11a6 <__aeabi_idiv>
    4124:	0003      	movs	r3, r0
    4126:	3330      	adds	r3, #48	; 0x30
    4128:	702b      	strb	r3, [r5, #0]
    412a:	2364      	movs	r3, #100	; 0x64
    412c:	425b      	negs	r3, r3
    412e:	4358      	muls	r0, r3
    4130:	1980      	adds	r0, r0, r6
    4132:	9009      	str	r0, [sp, #36]	; 0x24
    4134:	1c6c      	adds	r4, r5, #1
    4136:	9d09      	ldr	r5, [sp, #36]	; 0x24
    4138:	210a      	movs	r1, #10
    413a:	0028      	movs	r0, r5
    413c:	f7fd f833 	bl	11a6 <__aeabi_idiv>
    4140:	0003      	movs	r3, r0
    4142:	0002      	movs	r2, r0
    4144:	200a      	movs	r0, #10
    4146:	4240      	negs	r0, r0
    4148:	4358      	muls	r0, r3
    414a:	2300      	movs	r3, #0
    414c:	1940      	adds	r0, r0, r5
    414e:	3230      	adds	r2, #48	; 0x30
    4150:	3030      	adds	r0, #48	; 0x30
    4152:	7022      	strb	r2, [r4, #0]
    4154:	7060      	strb	r0, [r4, #1]
    4156:	70a3      	strb	r3, [r4, #2]
    4158:	e7aa      	b.n	40b0 <print_e+0x34>
    415a:	7018      	strb	r0, [r3, #0]
    415c:	3901      	subs	r1, #1
    415e:	3301      	adds	r3, #1
    4160:	e7c7      	b.n	40f2 <print_e+0x76>
    4162:	2545      	movs	r5, #69	; 0x45
    4164:	e7cb      	b.n	40fe <print_e+0x82>
    4166:	232b      	movs	r3, #43	; 0x2b
    4168:	7053      	strb	r3, [r2, #1]
    416a:	e7d4      	b.n	4116 <print_e+0x9a>
    416c:	0000270f 	.word	0x0000270f

00004170 <_gcvt>:
    4170:	b5f0      	push	{r4, r5, r6, r7, lr}
    4172:	0015      	movs	r5, r2
    4174:	001c      	movs	r4, r3
    4176:	b08d      	sub	sp, #52	; 0x34
    4178:	ab14      	add	r3, sp, #80	; 0x50
    417a:	781b      	ldrb	r3, [r3, #0]
    417c:	0006      	movs	r6, r0
    417e:	9307      	str	r3, [sp, #28]
    4180:	2200      	movs	r2, #0
    4182:	2300      	movs	r3, #0
    4184:	0028      	movs	r0, r5
    4186:	0021      	movs	r1, r4
    4188:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    418a:	f7ff fc71 	bl	3a70 <__aeabi_dcmplt>
    418e:	2800      	cmp	r0, #0
    4190:	d002      	beq.n	4198 <_gcvt+0x28>
    4192:	2380      	movs	r3, #128	; 0x80
    4194:	061b      	lsls	r3, r3, #24
    4196:	18e4      	adds	r4, r4, r3
    4198:	2200      	movs	r2, #0
    419a:	2300      	movs	r3, #0
    419c:	0028      	movs	r0, r5
    419e:	0021      	movs	r1, r4
    41a0:	f7ff fc60 	bl	3a64 <__aeabi_dcmpeq>
    41a4:	2800      	cmp	r0, #0
    41a6:	d006      	beq.n	41b6 <_gcvt+0x46>
    41a8:	2330      	movs	r3, #48	; 0x30
    41aa:	703b      	strb	r3, [r7, #0]
    41ac:	2300      	movs	r3, #0
    41ae:	707b      	strb	r3, [r7, #1]
    41b0:	0038      	movs	r0, r7
    41b2:	b00d      	add	sp, #52	; 0x34
    41b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    41b6:	4a51      	ldr	r2, [pc, #324]	; (42fc <_gcvt+0x18c>)
    41b8:	4b51      	ldr	r3, [pc, #324]	; (4300 <_gcvt+0x190>)
    41ba:	0028      	movs	r0, r5
    41bc:	0021      	movs	r1, r4
    41be:	f7ff fc61 	bl	3a84 <__aeabi_dcmple>
    41c2:	2800      	cmp	r0, #0
    41c4:	d00d      	beq.n	41e2 <_gcvt+0x72>
    41c6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    41c8:	002a      	movs	r2, r5
    41ca:	9302      	str	r3, [sp, #8]
    41cc:	9b07      	ldr	r3, [sp, #28]
    41ce:	0039      	movs	r1, r7
    41d0:	9301      	str	r3, [sp, #4]
    41d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    41d4:	0030      	movs	r0, r6
    41d6:	3b01      	subs	r3, #1
    41d8:	9300      	str	r3, [sp, #0]
    41da:	0023      	movs	r3, r4
    41dc:	f7ff ff4e 	bl	407c <print_e>
    41e0:	e7e6      	b.n	41b0 <_gcvt+0x40>
    41e2:	9812      	ldr	r0, [sp, #72]	; 0x48
    41e4:	f000 fb76 	bl	48d4 <_mprec_log10>
    41e8:	0002      	movs	r2, r0
    41ea:	000b      	movs	r3, r1
    41ec:	0028      	movs	r0, r5
    41ee:	0021      	movs	r1, r4
    41f0:	f7ff fc5c 	bl	3aac <__aeabi_dcmpge>
    41f4:	2800      	cmp	r0, #0
    41f6:	d1e6      	bne.n	41c6 <_gcvt+0x56>
    41f8:	2200      	movs	r2, #0
    41fa:	4b42      	ldr	r3, [pc, #264]	; (4304 <_gcvt+0x194>)
    41fc:	0028      	movs	r0, r5
    41fe:	0021      	movs	r1, r4
    4200:	f7ff fc36 	bl	3a70 <__aeabi_dcmplt>
    4204:	ab0a      	add	r3, sp, #40	; 0x28
    4206:	9303      	str	r3, [sp, #12]
    4208:	ab09      	add	r3, sp, #36	; 0x24
    420a:	9302      	str	r3, [sp, #8]
    420c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    420e:	aa0b      	add	r2, sp, #44	; 0x2c
    4210:	9301      	str	r3, [sp, #4]
    4212:	9204      	str	r2, [sp, #16]
    4214:	2303      	movs	r3, #3
    4216:	2800      	cmp	r0, #0
    4218:	d100      	bne.n	421c <_gcvt+0xac>
    421a:	2302      	movs	r3, #2
    421c:	9300      	str	r3, [sp, #0]
    421e:	002a      	movs	r2, r5
    4220:	0023      	movs	r3, r4
    4222:	0030      	movs	r0, r6
    4224:	f000 fc0a 	bl	4a3c <_dtoa_r>
    4228:	4b37      	ldr	r3, [pc, #220]	; (4308 <_gcvt+0x198>)
    422a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    422c:	429a      	cmp	r2, r3
    422e:	d013      	beq.n	4258 <_gcvt+0xe8>
    4230:	003a      	movs	r2, r7
    4232:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4234:	7804      	ldrb	r4, [r0, #0]
    4236:	1a9b      	subs	r3, r3, r2
    4238:	0011      	movs	r1, r2
    423a:	18fb      	adds	r3, r7, r3
    423c:	9d09      	ldr	r5, [sp, #36]	; 0x24
    423e:	2c00      	cmp	r4, #0
    4240:	d115      	bne.n	426e <_gcvt+0xfe>
    4242:	2101      	movs	r1, #1
    4244:	468c      	mov	ip, r1
    4246:	1aed      	subs	r5, r5, r3
    4248:	18ee      	adds	r6, r5, r3
    424a:	0011      	movs	r1, r2
    424c:	2e00      	cmp	r6, #0
    424e:	dc3b      	bgt.n	42c8 <_gcvt+0x158>
    4250:	2c00      	cmp	r4, #0
    4252:	d00e      	beq.n	4272 <_gcvt+0x102>
    4254:	9609      	str	r6, [sp, #36]	; 0x24
    4256:	e00c      	b.n	4272 <_gcvt+0x102>
    4258:	0001      	movs	r1, r0
    425a:	0038      	movs	r0, r7
    425c:	f000 fb62 	bl	4924 <strcpy>
    4260:	e7a6      	b.n	41b0 <_gcvt+0x40>
    4262:	3d01      	subs	r5, #1
    4264:	7014      	strb	r4, [r2, #0]
    4266:	3001      	adds	r0, #1
    4268:	9509      	str	r5, [sp, #36]	; 0x24
    426a:	3201      	adds	r2, #1
    426c:	e7e1      	b.n	4232 <_gcvt+0xc2>
    426e:	2d00      	cmp	r5, #0
    4270:	dcf7      	bgt.n	4262 <_gcvt+0xf2>
    4272:	9c15      	ldr	r4, [sp, #84]	; 0x54
    4274:	2c00      	cmp	r4, #0
    4276:	d102      	bne.n	427e <_gcvt+0x10e>
    4278:	7804      	ldrb	r4, [r0, #0]
    427a:	2c00      	cmp	r4, #0
    427c:	d021      	beq.n	42c2 <_gcvt+0x152>
    427e:	4297      	cmp	r7, r2
    4280:	d102      	bne.n	4288 <_gcvt+0x118>
    4282:	2230      	movs	r2, #48	; 0x30
    4284:	1c79      	adds	r1, r7, #1
    4286:	703a      	strb	r2, [r7, #0]
    4288:	222e      	movs	r2, #46	; 0x2e
    428a:	2530      	movs	r5, #48	; 0x30
    428c:	700a      	strb	r2, [r1, #0]
    428e:	2601      	movs	r6, #1
    4290:	1c4a      	adds	r2, r1, #1
    4292:	2100      	movs	r1, #0
    4294:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4296:	2c00      	cmp	r4, #0
    4298:	db1e      	blt.n	42d8 <_gcvt+0x168>
    429a:	2900      	cmp	r1, #0
    429c:	d000      	beq.n	42a0 <_gcvt+0x130>
    429e:	9409      	str	r4, [sp, #36]	; 0x24
    42a0:	7804      	ldrb	r4, [r0, #0]
    42a2:	0011      	movs	r1, r2
    42a4:	2c00      	cmp	r4, #0
    42a6:	d001      	beq.n	42ac <_gcvt+0x13c>
    42a8:	2b00      	cmp	r3, #0
    42aa:	dc1d      	bgt.n	42e8 <_gcvt+0x178>
    42ac:	9815      	ldr	r0, [sp, #84]	; 0x54
    42ae:	2800      	cmp	r0, #0
    42b0:	d007      	beq.n	42c2 <_gcvt+0x152>
    42b2:	0018      	movs	r0, r3
    42b4:	2430      	movs	r4, #48	; 0x30
    42b6:	2800      	cmp	r0, #0
    42b8:	dc1b      	bgt.n	42f2 <_gcvt+0x182>
    42ba:	43da      	mvns	r2, r3
    42bc:	17d2      	asrs	r2, r2, #31
    42be:	4013      	ands	r3, r2
    42c0:	18c9      	adds	r1, r1, r3
    42c2:	2300      	movs	r3, #0
    42c4:	700b      	strb	r3, [r1, #0]
    42c6:	e773      	b.n	41b0 <_gcvt+0x40>
    42c8:	2b00      	cmp	r3, #0
    42ca:	ddc1      	ble.n	4250 <_gcvt+0xe0>
    42cc:	2130      	movs	r1, #48	; 0x30
    42ce:	3b01      	subs	r3, #1
    42d0:	7011      	strb	r1, [r2, #0]
    42d2:	4664      	mov	r4, ip
    42d4:	3201      	adds	r2, #1
    42d6:	e7b7      	b.n	4248 <_gcvt+0xd8>
    42d8:	2b00      	cmp	r3, #0
    42da:	ddde      	ble.n	429a <_gcvt+0x12a>
    42dc:	7015      	strb	r5, [r2, #0]
    42de:	3401      	adds	r4, #1
    42e0:	3b01      	subs	r3, #1
    42e2:	3201      	adds	r2, #1
    42e4:	0031      	movs	r1, r6
    42e6:	e7d6      	b.n	4296 <_gcvt+0x126>
    42e8:	7014      	strb	r4, [r2, #0]
    42ea:	3001      	adds	r0, #1
    42ec:	3b01      	subs	r3, #1
    42ee:	3201      	adds	r2, #1
    42f0:	e7d6      	b.n	42a0 <_gcvt+0x130>
    42f2:	7014      	strb	r4, [r2, #0]
    42f4:	3801      	subs	r0, #1
    42f6:	3201      	adds	r2, #1
    42f8:	e7dd      	b.n	42b6 <_gcvt+0x146>
    42fa:	46c0      	nop			; (mov r8, r8)
    42fc:	eb1c432d 	.word	0xeb1c432d
    4300:	3f1a36e2 	.word	0x3f1a36e2
    4304:	3ff00000 	.word	0x3ff00000
    4308:	0000270f 	.word	0x0000270f

0000430c <__malloc_lock>:
    430c:	4770      	bx	lr

0000430e <__malloc_unlock>:
    430e:	4770      	bx	lr

00004310 <_Balloc>:
    4310:	b570      	push	{r4, r5, r6, lr}
    4312:	6a46      	ldr	r6, [r0, #36]	; 0x24
    4314:	0004      	movs	r4, r0
    4316:	000d      	movs	r5, r1
    4318:	2e00      	cmp	r6, #0
    431a:	d107      	bne.n	432c <_Balloc+0x1c>
    431c:	2010      	movs	r0, #16
    431e:	f7ff fe19 	bl	3f54 <malloc>
    4322:	6260      	str	r0, [r4, #36]	; 0x24
    4324:	6046      	str	r6, [r0, #4]
    4326:	6086      	str	r6, [r0, #8]
    4328:	6006      	str	r6, [r0, #0]
    432a:	60c6      	str	r6, [r0, #12]
    432c:	6a66      	ldr	r6, [r4, #36]	; 0x24
    432e:	68f3      	ldr	r3, [r6, #12]
    4330:	2b00      	cmp	r3, #0
    4332:	d013      	beq.n	435c <_Balloc+0x4c>
    4334:	6a63      	ldr	r3, [r4, #36]	; 0x24
    4336:	00aa      	lsls	r2, r5, #2
    4338:	68db      	ldr	r3, [r3, #12]
    433a:	189b      	adds	r3, r3, r2
    433c:	6818      	ldr	r0, [r3, #0]
    433e:	2800      	cmp	r0, #0
    4340:	d118      	bne.n	4374 <_Balloc+0x64>
    4342:	2101      	movs	r1, #1
    4344:	000e      	movs	r6, r1
    4346:	40ae      	lsls	r6, r5
    4348:	1d72      	adds	r2, r6, #5
    434a:	0092      	lsls	r2, r2, #2
    434c:	0020      	movs	r0, r4
    434e:	f000 fadb 	bl	4908 <_calloc_r>
    4352:	2800      	cmp	r0, #0
    4354:	d00c      	beq.n	4370 <_Balloc+0x60>
    4356:	6045      	str	r5, [r0, #4]
    4358:	6086      	str	r6, [r0, #8]
    435a:	e00d      	b.n	4378 <_Balloc+0x68>
    435c:	2221      	movs	r2, #33	; 0x21
    435e:	2104      	movs	r1, #4
    4360:	0020      	movs	r0, r4
    4362:	f000 fad1 	bl	4908 <_calloc_r>
    4366:	6a63      	ldr	r3, [r4, #36]	; 0x24
    4368:	60f0      	str	r0, [r6, #12]
    436a:	68db      	ldr	r3, [r3, #12]
    436c:	2b00      	cmp	r3, #0
    436e:	d1e1      	bne.n	4334 <_Balloc+0x24>
    4370:	2000      	movs	r0, #0
    4372:	bd70      	pop	{r4, r5, r6, pc}
    4374:	6802      	ldr	r2, [r0, #0]
    4376:	601a      	str	r2, [r3, #0]
    4378:	2300      	movs	r3, #0
    437a:	6103      	str	r3, [r0, #16]
    437c:	60c3      	str	r3, [r0, #12]
    437e:	e7f8      	b.n	4372 <_Balloc+0x62>

00004380 <_Bfree>:
    4380:	b570      	push	{r4, r5, r6, lr}
    4382:	6a44      	ldr	r4, [r0, #36]	; 0x24
    4384:	0006      	movs	r6, r0
    4386:	000d      	movs	r5, r1
    4388:	2c00      	cmp	r4, #0
    438a:	d107      	bne.n	439c <_Bfree+0x1c>
    438c:	2010      	movs	r0, #16
    438e:	f7ff fde1 	bl	3f54 <malloc>
    4392:	6270      	str	r0, [r6, #36]	; 0x24
    4394:	6044      	str	r4, [r0, #4]
    4396:	6084      	str	r4, [r0, #8]
    4398:	6004      	str	r4, [r0, #0]
    439a:	60c4      	str	r4, [r0, #12]
    439c:	2d00      	cmp	r5, #0
    439e:	d007      	beq.n	43b0 <_Bfree+0x30>
    43a0:	6a73      	ldr	r3, [r6, #36]	; 0x24
    43a2:	686a      	ldr	r2, [r5, #4]
    43a4:	68db      	ldr	r3, [r3, #12]
    43a6:	0092      	lsls	r2, r2, #2
    43a8:	189b      	adds	r3, r3, r2
    43aa:	681a      	ldr	r2, [r3, #0]
    43ac:	602a      	str	r2, [r5, #0]
    43ae:	601d      	str	r5, [r3, #0]
    43b0:	bd70      	pop	{r4, r5, r6, pc}

000043b2 <__multadd>:
    43b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    43b4:	001e      	movs	r6, r3
    43b6:	2314      	movs	r3, #20
    43b8:	469c      	mov	ip, r3
    43ba:	0007      	movs	r7, r0
    43bc:	000c      	movs	r4, r1
    43be:	2000      	movs	r0, #0
    43c0:	690d      	ldr	r5, [r1, #16]
    43c2:	448c      	add	ip, r1
    43c4:	4663      	mov	r3, ip
    43c6:	8819      	ldrh	r1, [r3, #0]
    43c8:	681b      	ldr	r3, [r3, #0]
    43ca:	4351      	muls	r1, r2
    43cc:	0c1b      	lsrs	r3, r3, #16
    43ce:	4353      	muls	r3, r2
    43d0:	1989      	adds	r1, r1, r6
    43d2:	0c0e      	lsrs	r6, r1, #16
    43d4:	199b      	adds	r3, r3, r6
    43d6:	b289      	uxth	r1, r1
    43d8:	0c1e      	lsrs	r6, r3, #16
    43da:	041b      	lsls	r3, r3, #16
    43dc:	185b      	adds	r3, r3, r1
    43de:	4661      	mov	r1, ip
    43e0:	3001      	adds	r0, #1
    43e2:	c108      	stmia	r1!, {r3}
    43e4:	468c      	mov	ip, r1
    43e6:	4285      	cmp	r5, r0
    43e8:	dcec      	bgt.n	43c4 <__multadd+0x12>
    43ea:	2e00      	cmp	r6, #0
    43ec:	d01b      	beq.n	4426 <__multadd+0x74>
    43ee:	68a3      	ldr	r3, [r4, #8]
    43f0:	429d      	cmp	r5, r3
    43f2:	db12      	blt.n	441a <__multadd+0x68>
    43f4:	6863      	ldr	r3, [r4, #4]
    43f6:	0038      	movs	r0, r7
    43f8:	1c59      	adds	r1, r3, #1
    43fa:	f7ff ff89 	bl	4310 <_Balloc>
    43fe:	0021      	movs	r1, r4
    4400:	6923      	ldr	r3, [r4, #16]
    4402:	9001      	str	r0, [sp, #4]
    4404:	1c9a      	adds	r2, r3, #2
    4406:	0092      	lsls	r2, r2, #2
    4408:	310c      	adds	r1, #12
    440a:	300c      	adds	r0, #12
    440c:	f7ff fdac 	bl	3f68 <memcpy>
    4410:	0021      	movs	r1, r4
    4412:	0038      	movs	r0, r7
    4414:	f7ff ffb4 	bl	4380 <_Bfree>
    4418:	9c01      	ldr	r4, [sp, #4]
    441a:	1d2b      	adds	r3, r5, #4
    441c:	009b      	lsls	r3, r3, #2
    441e:	18e3      	adds	r3, r4, r3
    4420:	3501      	adds	r5, #1
    4422:	605e      	str	r6, [r3, #4]
    4424:	6125      	str	r5, [r4, #16]
    4426:	0020      	movs	r0, r4
    4428:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000442a <__hi0bits>:
    442a:	0003      	movs	r3, r0
    442c:	0c02      	lsrs	r2, r0, #16
    442e:	2000      	movs	r0, #0
    4430:	4282      	cmp	r2, r0
    4432:	d101      	bne.n	4438 <__hi0bits+0xe>
    4434:	041b      	lsls	r3, r3, #16
    4436:	3010      	adds	r0, #16
    4438:	0e1a      	lsrs	r2, r3, #24
    443a:	d101      	bne.n	4440 <__hi0bits+0x16>
    443c:	3008      	adds	r0, #8
    443e:	021b      	lsls	r3, r3, #8
    4440:	0f1a      	lsrs	r2, r3, #28
    4442:	d101      	bne.n	4448 <__hi0bits+0x1e>
    4444:	3004      	adds	r0, #4
    4446:	011b      	lsls	r3, r3, #4
    4448:	0f9a      	lsrs	r2, r3, #30
    444a:	d101      	bne.n	4450 <__hi0bits+0x26>
    444c:	3002      	adds	r0, #2
    444e:	009b      	lsls	r3, r3, #2
    4450:	2b00      	cmp	r3, #0
    4452:	db03      	blt.n	445c <__hi0bits+0x32>
    4454:	3001      	adds	r0, #1
    4456:	005b      	lsls	r3, r3, #1
    4458:	d400      	bmi.n	445c <__hi0bits+0x32>
    445a:	2020      	movs	r0, #32
    445c:	4770      	bx	lr

0000445e <__lo0bits>:
    445e:	2207      	movs	r2, #7
    4460:	6803      	ldr	r3, [r0, #0]
    4462:	b510      	push	{r4, lr}
    4464:	0001      	movs	r1, r0
    4466:	401a      	ands	r2, r3
    4468:	d00d      	beq.n	4486 <__lo0bits+0x28>
    446a:	2401      	movs	r4, #1
    446c:	2000      	movs	r0, #0
    446e:	4223      	tst	r3, r4
    4470:	d105      	bne.n	447e <__lo0bits+0x20>
    4472:	3002      	adds	r0, #2
    4474:	4203      	tst	r3, r0
    4476:	d003      	beq.n	4480 <__lo0bits+0x22>
    4478:	40e3      	lsrs	r3, r4
    447a:	0020      	movs	r0, r4
    447c:	600b      	str	r3, [r1, #0]
    447e:	bd10      	pop	{r4, pc}
    4480:	089b      	lsrs	r3, r3, #2
    4482:	600b      	str	r3, [r1, #0]
    4484:	e7fb      	b.n	447e <__lo0bits+0x20>
    4486:	b29c      	uxth	r4, r3
    4488:	0010      	movs	r0, r2
    448a:	2c00      	cmp	r4, #0
    448c:	d101      	bne.n	4492 <__lo0bits+0x34>
    448e:	2010      	movs	r0, #16
    4490:	0c1b      	lsrs	r3, r3, #16
    4492:	b2da      	uxtb	r2, r3
    4494:	2a00      	cmp	r2, #0
    4496:	d101      	bne.n	449c <__lo0bits+0x3e>
    4498:	3008      	adds	r0, #8
    449a:	0a1b      	lsrs	r3, r3, #8
    449c:	071a      	lsls	r2, r3, #28
    449e:	d101      	bne.n	44a4 <__lo0bits+0x46>
    44a0:	3004      	adds	r0, #4
    44a2:	091b      	lsrs	r3, r3, #4
    44a4:	079a      	lsls	r2, r3, #30
    44a6:	d101      	bne.n	44ac <__lo0bits+0x4e>
    44a8:	3002      	adds	r0, #2
    44aa:	089b      	lsrs	r3, r3, #2
    44ac:	07da      	lsls	r2, r3, #31
    44ae:	d4e8      	bmi.n	4482 <__lo0bits+0x24>
    44b0:	085b      	lsrs	r3, r3, #1
    44b2:	d001      	beq.n	44b8 <__lo0bits+0x5a>
    44b4:	3001      	adds	r0, #1
    44b6:	e7e4      	b.n	4482 <__lo0bits+0x24>
    44b8:	2020      	movs	r0, #32
    44ba:	e7e0      	b.n	447e <__lo0bits+0x20>

000044bc <__i2b>:
    44bc:	b510      	push	{r4, lr}
    44be:	000c      	movs	r4, r1
    44c0:	2101      	movs	r1, #1
    44c2:	f7ff ff25 	bl	4310 <_Balloc>
    44c6:	2301      	movs	r3, #1
    44c8:	6144      	str	r4, [r0, #20]
    44ca:	6103      	str	r3, [r0, #16]
    44cc:	bd10      	pop	{r4, pc}

000044ce <__multiply>:
    44ce:	b5f0      	push	{r4, r5, r6, r7, lr}
    44d0:	690b      	ldr	r3, [r1, #16]
    44d2:	0015      	movs	r5, r2
    44d4:	6912      	ldr	r2, [r2, #16]
    44d6:	b089      	sub	sp, #36	; 0x24
    44d8:	000c      	movs	r4, r1
    44da:	4293      	cmp	r3, r2
    44dc:	da01      	bge.n	44e2 <__multiply+0x14>
    44de:	002c      	movs	r4, r5
    44e0:	000d      	movs	r5, r1
    44e2:	6927      	ldr	r7, [r4, #16]
    44e4:	692e      	ldr	r6, [r5, #16]
    44e6:	68a2      	ldr	r2, [r4, #8]
    44e8:	19bb      	adds	r3, r7, r6
    44ea:	6861      	ldr	r1, [r4, #4]
    44ec:	9301      	str	r3, [sp, #4]
    44ee:	4293      	cmp	r3, r2
    44f0:	dd00      	ble.n	44f4 <__multiply+0x26>
    44f2:	3101      	adds	r1, #1
    44f4:	f7ff ff0c 	bl	4310 <_Balloc>
    44f8:	0003      	movs	r3, r0
    44fa:	3314      	adds	r3, #20
    44fc:	9300      	str	r3, [sp, #0]
    44fe:	9a00      	ldr	r2, [sp, #0]
    4500:	19bb      	adds	r3, r7, r6
    4502:	4694      	mov	ip, r2
    4504:	009b      	lsls	r3, r3, #2
    4506:	449c      	add	ip, r3
    4508:	0013      	movs	r3, r2
    450a:	2200      	movs	r2, #0
    450c:	9004      	str	r0, [sp, #16]
    450e:	4563      	cmp	r3, ip
    4510:	d31c      	bcc.n	454c <__multiply+0x7e>
    4512:	002a      	movs	r2, r5
    4514:	3414      	adds	r4, #20
    4516:	00bf      	lsls	r7, r7, #2
    4518:	19e3      	adds	r3, r4, r7
    451a:	3214      	adds	r2, #20
    451c:	00b6      	lsls	r6, r6, #2
    451e:	9305      	str	r3, [sp, #20]
    4520:	1993      	adds	r3, r2, r6
    4522:	9402      	str	r4, [sp, #8]
    4524:	9306      	str	r3, [sp, #24]
    4526:	9b06      	ldr	r3, [sp, #24]
    4528:	429a      	cmp	r2, r3
    452a:	d311      	bcc.n	4550 <__multiply+0x82>
    452c:	9b01      	ldr	r3, [sp, #4]
    452e:	2b00      	cmp	r3, #0
    4530:	dd06      	ble.n	4540 <__multiply+0x72>
    4532:	2304      	movs	r3, #4
    4534:	425b      	negs	r3, r3
    4536:	449c      	add	ip, r3
    4538:	4663      	mov	r3, ip
    453a:	681b      	ldr	r3, [r3, #0]
    453c:	2b00      	cmp	r3, #0
    453e:	d051      	beq.n	45e4 <__multiply+0x116>
    4540:	9b04      	ldr	r3, [sp, #16]
    4542:	9a01      	ldr	r2, [sp, #4]
    4544:	0018      	movs	r0, r3
    4546:	611a      	str	r2, [r3, #16]
    4548:	b009      	add	sp, #36	; 0x24
    454a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    454c:	c304      	stmia	r3!, {r2}
    454e:	e7de      	b.n	450e <__multiply+0x40>
    4550:	8814      	ldrh	r4, [r2, #0]
    4552:	2c00      	cmp	r4, #0
    4554:	d01e      	beq.n	4594 <__multiply+0xc6>
    4556:	2600      	movs	r6, #0
    4558:	9d00      	ldr	r5, [sp, #0]
    455a:	9f02      	ldr	r7, [sp, #8]
    455c:	cf01      	ldmia	r7!, {r0}
    455e:	9507      	str	r5, [sp, #28]
    4560:	cd08      	ldmia	r5!, {r3}
    4562:	9303      	str	r3, [sp, #12]
    4564:	b283      	uxth	r3, r0
    4566:	4363      	muls	r3, r4
    4568:	0019      	movs	r1, r3
    456a:	466b      	mov	r3, sp
    456c:	0c00      	lsrs	r0, r0, #16
    456e:	899b      	ldrh	r3, [r3, #12]
    4570:	4360      	muls	r0, r4
    4572:	18cb      	adds	r3, r1, r3
    4574:	9903      	ldr	r1, [sp, #12]
    4576:	199b      	adds	r3, r3, r6
    4578:	0c09      	lsrs	r1, r1, #16
    457a:	1841      	adds	r1, r0, r1
    457c:	0c18      	lsrs	r0, r3, #16
    457e:	1809      	adds	r1, r1, r0
    4580:	0c0e      	lsrs	r6, r1, #16
    4582:	b29b      	uxth	r3, r3
    4584:	0409      	lsls	r1, r1, #16
    4586:	430b      	orrs	r3, r1
    4588:	9907      	ldr	r1, [sp, #28]
    458a:	600b      	str	r3, [r1, #0]
    458c:	9b05      	ldr	r3, [sp, #20]
    458e:	42bb      	cmp	r3, r7
    4590:	d8e4      	bhi.n	455c <__multiply+0x8e>
    4592:	602e      	str	r6, [r5, #0]
    4594:	6813      	ldr	r3, [r2, #0]
    4596:	0c1b      	lsrs	r3, r3, #16
    4598:	9303      	str	r3, [sp, #12]
    459a:	d01e      	beq.n	45da <__multiply+0x10c>
    459c:	2600      	movs	r6, #0
    459e:	9b00      	ldr	r3, [sp, #0]
    45a0:	9c02      	ldr	r4, [sp, #8]
    45a2:	681b      	ldr	r3, [r3, #0]
    45a4:	9800      	ldr	r0, [sp, #0]
    45a6:	0007      	movs	r7, r0
    45a8:	8821      	ldrh	r1, [r4, #0]
    45aa:	9d03      	ldr	r5, [sp, #12]
    45ac:	b29b      	uxth	r3, r3
    45ae:	4369      	muls	r1, r5
    45b0:	c820      	ldmia	r0!, {r5}
    45b2:	0c2d      	lsrs	r5, r5, #16
    45b4:	1949      	adds	r1, r1, r5
    45b6:	198e      	adds	r6, r1, r6
    45b8:	0431      	lsls	r1, r6, #16
    45ba:	430b      	orrs	r3, r1
    45bc:	603b      	str	r3, [r7, #0]
    45be:	cc08      	ldmia	r4!, {r3}
    45c0:	9903      	ldr	r1, [sp, #12]
    45c2:	0c1b      	lsrs	r3, r3, #16
    45c4:	434b      	muls	r3, r1
    45c6:	6879      	ldr	r1, [r7, #4]
    45c8:	0c36      	lsrs	r6, r6, #16
    45ca:	b289      	uxth	r1, r1
    45cc:	185b      	adds	r3, r3, r1
    45ce:	9905      	ldr	r1, [sp, #20]
    45d0:	199b      	adds	r3, r3, r6
    45d2:	0c1e      	lsrs	r6, r3, #16
    45d4:	42a1      	cmp	r1, r4
    45d6:	d8e6      	bhi.n	45a6 <__multiply+0xd8>
    45d8:	6003      	str	r3, [r0, #0]
    45da:	9b00      	ldr	r3, [sp, #0]
    45dc:	3204      	adds	r2, #4
    45de:	3304      	adds	r3, #4
    45e0:	9300      	str	r3, [sp, #0]
    45e2:	e7a0      	b.n	4526 <__multiply+0x58>
    45e4:	9b01      	ldr	r3, [sp, #4]
    45e6:	3b01      	subs	r3, #1
    45e8:	9301      	str	r3, [sp, #4]
    45ea:	e79f      	b.n	452c <__multiply+0x5e>

000045ec <__pow5mult>:
    45ec:	2303      	movs	r3, #3
    45ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    45f0:	4013      	ands	r3, r2
    45f2:	0005      	movs	r5, r0
    45f4:	000e      	movs	r6, r1
    45f6:	0014      	movs	r4, r2
    45f8:	2b00      	cmp	r3, #0
    45fa:	d008      	beq.n	460e <__pow5mult+0x22>
    45fc:	4922      	ldr	r1, [pc, #136]	; (4688 <__pow5mult+0x9c>)
    45fe:	3b01      	subs	r3, #1
    4600:	009a      	lsls	r2, r3, #2
    4602:	5852      	ldr	r2, [r2, r1]
    4604:	2300      	movs	r3, #0
    4606:	0031      	movs	r1, r6
    4608:	f7ff fed3 	bl	43b2 <__multadd>
    460c:	0006      	movs	r6, r0
    460e:	10a3      	asrs	r3, r4, #2
    4610:	9301      	str	r3, [sp, #4]
    4612:	d036      	beq.n	4682 <__pow5mult+0x96>
    4614:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    4616:	2c00      	cmp	r4, #0
    4618:	d107      	bne.n	462a <__pow5mult+0x3e>
    461a:	2010      	movs	r0, #16
    461c:	f7ff fc9a 	bl	3f54 <malloc>
    4620:	6268      	str	r0, [r5, #36]	; 0x24
    4622:	6044      	str	r4, [r0, #4]
    4624:	6084      	str	r4, [r0, #8]
    4626:	6004      	str	r4, [r0, #0]
    4628:	60c4      	str	r4, [r0, #12]
    462a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    462c:	68bc      	ldr	r4, [r7, #8]
    462e:	2c00      	cmp	r4, #0
    4630:	d107      	bne.n	4642 <__pow5mult+0x56>
    4632:	4916      	ldr	r1, [pc, #88]	; (468c <__pow5mult+0xa0>)
    4634:	0028      	movs	r0, r5
    4636:	f7ff ff41 	bl	44bc <__i2b>
    463a:	2300      	movs	r3, #0
    463c:	0004      	movs	r4, r0
    463e:	60b8      	str	r0, [r7, #8]
    4640:	6003      	str	r3, [r0, #0]
    4642:	2201      	movs	r2, #1
    4644:	9b01      	ldr	r3, [sp, #4]
    4646:	4213      	tst	r3, r2
    4648:	d00a      	beq.n	4660 <__pow5mult+0x74>
    464a:	0031      	movs	r1, r6
    464c:	0022      	movs	r2, r4
    464e:	0028      	movs	r0, r5
    4650:	f7ff ff3d 	bl	44ce <__multiply>
    4654:	0007      	movs	r7, r0
    4656:	0031      	movs	r1, r6
    4658:	0028      	movs	r0, r5
    465a:	f7ff fe91 	bl	4380 <_Bfree>
    465e:	003e      	movs	r6, r7
    4660:	9b01      	ldr	r3, [sp, #4]
    4662:	105b      	asrs	r3, r3, #1
    4664:	9301      	str	r3, [sp, #4]
    4666:	d00c      	beq.n	4682 <__pow5mult+0x96>
    4668:	6820      	ldr	r0, [r4, #0]
    466a:	2800      	cmp	r0, #0
    466c:	d107      	bne.n	467e <__pow5mult+0x92>
    466e:	0022      	movs	r2, r4
    4670:	0021      	movs	r1, r4
    4672:	0028      	movs	r0, r5
    4674:	f7ff ff2b 	bl	44ce <__multiply>
    4678:	2300      	movs	r3, #0
    467a:	6020      	str	r0, [r4, #0]
    467c:	6003      	str	r3, [r0, #0]
    467e:	0004      	movs	r4, r0
    4680:	e7df      	b.n	4642 <__pow5mult+0x56>
    4682:	0030      	movs	r0, r6
    4684:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    4686:	46c0      	nop			; (mov r8, r8)
    4688:	00006210 	.word	0x00006210
    468c:	00000271 	.word	0x00000271

00004690 <__lshift>:
    4690:	b5f0      	push	{r4, r5, r6, r7, lr}
    4692:	000d      	movs	r5, r1
    4694:	0017      	movs	r7, r2
    4696:	692b      	ldr	r3, [r5, #16]
    4698:	1154      	asrs	r4, r2, #5
    469a:	b085      	sub	sp, #20
    469c:	18e3      	adds	r3, r4, r3
    469e:	9302      	str	r3, [sp, #8]
    46a0:	3301      	adds	r3, #1
    46a2:	9301      	str	r3, [sp, #4]
    46a4:	6849      	ldr	r1, [r1, #4]
    46a6:	68ab      	ldr	r3, [r5, #8]
    46a8:	9003      	str	r0, [sp, #12]
    46aa:	9a01      	ldr	r2, [sp, #4]
    46ac:	4293      	cmp	r3, r2
    46ae:	db34      	blt.n	471a <__lshift+0x8a>
    46b0:	9803      	ldr	r0, [sp, #12]
    46b2:	f7ff fe2d 	bl	4310 <_Balloc>
    46b6:	2300      	movs	r3, #0
    46b8:	0002      	movs	r2, r0
    46ba:	0006      	movs	r6, r0
    46bc:	0019      	movs	r1, r3
    46be:	3214      	adds	r2, #20
    46c0:	42a3      	cmp	r3, r4
    46c2:	db2d      	blt.n	4720 <__lshift+0x90>
    46c4:	43e3      	mvns	r3, r4
    46c6:	17db      	asrs	r3, r3, #31
    46c8:	401c      	ands	r4, r3
    46ca:	002b      	movs	r3, r5
    46cc:	211f      	movs	r1, #31
    46ce:	00a4      	lsls	r4, r4, #2
    46d0:	1914      	adds	r4, r2, r4
    46d2:	692a      	ldr	r2, [r5, #16]
    46d4:	3314      	adds	r3, #20
    46d6:	0092      	lsls	r2, r2, #2
    46d8:	189a      	adds	r2, r3, r2
    46da:	400f      	ands	r7, r1
    46dc:	d024      	beq.n	4728 <__lshift+0x98>
    46de:	3101      	adds	r1, #1
    46e0:	1bc9      	subs	r1, r1, r7
    46e2:	468c      	mov	ip, r1
    46e4:	2100      	movs	r1, #0
    46e6:	6818      	ldr	r0, [r3, #0]
    46e8:	40b8      	lsls	r0, r7
    46ea:	4301      	orrs	r1, r0
    46ec:	4660      	mov	r0, ip
    46ee:	6021      	str	r1, [r4, #0]
    46f0:	cb02      	ldmia	r3!, {r1}
    46f2:	3404      	adds	r4, #4
    46f4:	40c1      	lsrs	r1, r0
    46f6:	429a      	cmp	r2, r3
    46f8:	d8f5      	bhi.n	46e6 <__lshift+0x56>
    46fa:	6021      	str	r1, [r4, #0]
    46fc:	2900      	cmp	r1, #0
    46fe:	d002      	beq.n	4706 <__lshift+0x76>
    4700:	9b02      	ldr	r3, [sp, #8]
    4702:	3302      	adds	r3, #2
    4704:	9301      	str	r3, [sp, #4]
    4706:	9b01      	ldr	r3, [sp, #4]
    4708:	9803      	ldr	r0, [sp, #12]
    470a:	3b01      	subs	r3, #1
    470c:	6133      	str	r3, [r6, #16]
    470e:	0029      	movs	r1, r5
    4710:	f7ff fe36 	bl	4380 <_Bfree>
    4714:	0030      	movs	r0, r6
    4716:	b005      	add	sp, #20
    4718:	bdf0      	pop	{r4, r5, r6, r7, pc}
    471a:	3101      	adds	r1, #1
    471c:	005b      	lsls	r3, r3, #1
    471e:	e7c4      	b.n	46aa <__lshift+0x1a>
    4720:	0098      	lsls	r0, r3, #2
    4722:	5011      	str	r1, [r2, r0]
    4724:	3301      	adds	r3, #1
    4726:	e7cb      	b.n	46c0 <__lshift+0x30>
    4728:	cb02      	ldmia	r3!, {r1}
    472a:	c402      	stmia	r4!, {r1}
    472c:	429a      	cmp	r2, r3
    472e:	d8fb      	bhi.n	4728 <__lshift+0x98>
    4730:	e7e9      	b.n	4706 <__lshift+0x76>

00004732 <__mcmp>:
    4732:	690a      	ldr	r2, [r1, #16]
    4734:	6903      	ldr	r3, [r0, #16]
    4736:	b530      	push	{r4, r5, lr}
    4738:	1a9b      	subs	r3, r3, r2
    473a:	d10e      	bne.n	475a <__mcmp+0x28>
    473c:	0092      	lsls	r2, r2, #2
    473e:	3014      	adds	r0, #20
    4740:	3114      	adds	r1, #20
    4742:	1884      	adds	r4, r0, r2
    4744:	1889      	adds	r1, r1, r2
    4746:	3c04      	subs	r4, #4
    4748:	3904      	subs	r1, #4
    474a:	6822      	ldr	r2, [r4, #0]
    474c:	680d      	ldr	r5, [r1, #0]
    474e:	42aa      	cmp	r2, r5
    4750:	d005      	beq.n	475e <__mcmp+0x2c>
    4752:	42aa      	cmp	r2, r5
    4754:	4192      	sbcs	r2, r2
    4756:	2301      	movs	r3, #1
    4758:	4313      	orrs	r3, r2
    475a:	0018      	movs	r0, r3
    475c:	bd30      	pop	{r4, r5, pc}
    475e:	42a0      	cmp	r0, r4
    4760:	d3f1      	bcc.n	4746 <__mcmp+0x14>
    4762:	e7fa      	b.n	475a <__mcmp+0x28>

00004764 <__mdiff>:
    4764:	b5f0      	push	{r4, r5, r6, r7, lr}
    4766:	000d      	movs	r5, r1
    4768:	b085      	sub	sp, #20
    476a:	0007      	movs	r7, r0
    476c:	0011      	movs	r1, r2
    476e:	0028      	movs	r0, r5
    4770:	0014      	movs	r4, r2
    4772:	f7ff ffde 	bl	4732 <__mcmp>
    4776:	1e06      	subs	r6, r0, #0
    4778:	d108      	bne.n	478c <__mdiff+0x28>
    477a:	0001      	movs	r1, r0
    477c:	0038      	movs	r0, r7
    477e:	f7ff fdc7 	bl	4310 <_Balloc>
    4782:	2301      	movs	r3, #1
    4784:	6146      	str	r6, [r0, #20]
    4786:	6103      	str	r3, [r0, #16]
    4788:	b005      	add	sp, #20
    478a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    478c:	2301      	movs	r3, #1
    478e:	9301      	str	r3, [sp, #4]
    4790:	2800      	cmp	r0, #0
    4792:	db04      	blt.n	479e <__mdiff+0x3a>
    4794:	0023      	movs	r3, r4
    4796:	002c      	movs	r4, r5
    4798:	001d      	movs	r5, r3
    479a:	2300      	movs	r3, #0
    479c:	9301      	str	r3, [sp, #4]
    479e:	6861      	ldr	r1, [r4, #4]
    47a0:	0038      	movs	r0, r7
    47a2:	f7ff fdb5 	bl	4310 <_Balloc>
    47a6:	002f      	movs	r7, r5
    47a8:	2200      	movs	r2, #0
    47aa:	9b01      	ldr	r3, [sp, #4]
    47ac:	6926      	ldr	r6, [r4, #16]
    47ae:	60c3      	str	r3, [r0, #12]
    47b0:	3414      	adds	r4, #20
    47b2:	00b3      	lsls	r3, r6, #2
    47b4:	18e3      	adds	r3, r4, r3
    47b6:	9302      	str	r3, [sp, #8]
    47b8:	692b      	ldr	r3, [r5, #16]
    47ba:	3714      	adds	r7, #20
    47bc:	009b      	lsls	r3, r3, #2
    47be:	18fb      	adds	r3, r7, r3
    47c0:	9303      	str	r3, [sp, #12]
    47c2:	0003      	movs	r3, r0
    47c4:	4694      	mov	ip, r2
    47c6:	3314      	adds	r3, #20
    47c8:	cc20      	ldmia	r4!, {r5}
    47ca:	cf04      	ldmia	r7!, {r2}
    47cc:	9201      	str	r2, [sp, #4]
    47ce:	b2aa      	uxth	r2, r5
    47d0:	4494      	add	ip, r2
    47d2:	466a      	mov	r2, sp
    47d4:	4661      	mov	r1, ip
    47d6:	8892      	ldrh	r2, [r2, #4]
    47d8:	0c2d      	lsrs	r5, r5, #16
    47da:	1a8a      	subs	r2, r1, r2
    47dc:	9901      	ldr	r1, [sp, #4]
    47de:	0c09      	lsrs	r1, r1, #16
    47e0:	1a69      	subs	r1, r5, r1
    47e2:	1415      	asrs	r5, r2, #16
    47e4:	1949      	adds	r1, r1, r5
    47e6:	140d      	asrs	r5, r1, #16
    47e8:	b292      	uxth	r2, r2
    47ea:	0409      	lsls	r1, r1, #16
    47ec:	430a      	orrs	r2, r1
    47ee:	601a      	str	r2, [r3, #0]
    47f0:	9a03      	ldr	r2, [sp, #12]
    47f2:	46ac      	mov	ip, r5
    47f4:	3304      	adds	r3, #4
    47f6:	42ba      	cmp	r2, r7
    47f8:	d8e6      	bhi.n	47c8 <__mdiff+0x64>
    47fa:	9902      	ldr	r1, [sp, #8]
    47fc:	001a      	movs	r2, r3
    47fe:	428c      	cmp	r4, r1
    4800:	d305      	bcc.n	480e <__mdiff+0xaa>
    4802:	3a04      	subs	r2, #4
    4804:	6813      	ldr	r3, [r2, #0]
    4806:	2b00      	cmp	r3, #0
    4808:	d00e      	beq.n	4828 <__mdiff+0xc4>
    480a:	6106      	str	r6, [r0, #16]
    480c:	e7bc      	b.n	4788 <__mdiff+0x24>
    480e:	cc04      	ldmia	r4!, {r2}
    4810:	b291      	uxth	r1, r2
    4812:	4461      	add	r1, ip
    4814:	140d      	asrs	r5, r1, #16
    4816:	0c12      	lsrs	r2, r2, #16
    4818:	1952      	adds	r2, r2, r5
    481a:	1415      	asrs	r5, r2, #16
    481c:	b289      	uxth	r1, r1
    481e:	0412      	lsls	r2, r2, #16
    4820:	430a      	orrs	r2, r1
    4822:	46ac      	mov	ip, r5
    4824:	c304      	stmia	r3!, {r2}
    4826:	e7e8      	b.n	47fa <__mdiff+0x96>
    4828:	3e01      	subs	r6, #1
    482a:	e7ea      	b.n	4802 <__mdiff+0x9e>

0000482c <__d2b>:
    482c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    482e:	001d      	movs	r5, r3
    4830:	2101      	movs	r1, #1
    4832:	9f08      	ldr	r7, [sp, #32]
    4834:	0014      	movs	r4, r2
    4836:	f7ff fd6b 	bl	4310 <_Balloc>
    483a:	032b      	lsls	r3, r5, #12
    483c:	006d      	lsls	r5, r5, #1
    483e:	0006      	movs	r6, r0
    4840:	0b1b      	lsrs	r3, r3, #12
    4842:	0d6d      	lsrs	r5, r5, #21
    4844:	d124      	bne.n	4890 <__d2b+0x64>
    4846:	9301      	str	r3, [sp, #4]
    4848:	2c00      	cmp	r4, #0
    484a:	d027      	beq.n	489c <__d2b+0x70>
    484c:	4668      	mov	r0, sp
    484e:	9400      	str	r4, [sp, #0]
    4850:	f7ff fe05 	bl	445e <__lo0bits>
    4854:	9c00      	ldr	r4, [sp, #0]
    4856:	2800      	cmp	r0, #0
    4858:	d01e      	beq.n	4898 <__d2b+0x6c>
    485a:	9b01      	ldr	r3, [sp, #4]
    485c:	2120      	movs	r1, #32
    485e:	001a      	movs	r2, r3
    4860:	1a09      	subs	r1, r1, r0
    4862:	408a      	lsls	r2, r1
    4864:	40c3      	lsrs	r3, r0
    4866:	4322      	orrs	r2, r4
    4868:	6172      	str	r2, [r6, #20]
    486a:	9301      	str	r3, [sp, #4]
    486c:	9c01      	ldr	r4, [sp, #4]
    486e:	61b4      	str	r4, [r6, #24]
    4870:	1e63      	subs	r3, r4, #1
    4872:	419c      	sbcs	r4, r3
    4874:	3401      	adds	r4, #1
    4876:	6134      	str	r4, [r6, #16]
    4878:	2d00      	cmp	r5, #0
    487a:	d018      	beq.n	48ae <__d2b+0x82>
    487c:	4b12      	ldr	r3, [pc, #72]	; (48c8 <__d2b+0x9c>)
    487e:	18ed      	adds	r5, r5, r3
    4880:	2335      	movs	r3, #53	; 0x35
    4882:	182d      	adds	r5, r5, r0
    4884:	603d      	str	r5, [r7, #0]
    4886:	1a18      	subs	r0, r3, r0
    4888:	9b09      	ldr	r3, [sp, #36]	; 0x24
    488a:	6018      	str	r0, [r3, #0]
    488c:	0030      	movs	r0, r6
    488e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    4890:	2280      	movs	r2, #128	; 0x80
    4892:	0352      	lsls	r2, r2, #13
    4894:	4313      	orrs	r3, r2
    4896:	e7d6      	b.n	4846 <__d2b+0x1a>
    4898:	6174      	str	r4, [r6, #20]
    489a:	e7e7      	b.n	486c <__d2b+0x40>
    489c:	a801      	add	r0, sp, #4
    489e:	f7ff fdde 	bl	445e <__lo0bits>
    48a2:	2401      	movs	r4, #1
    48a4:	9b01      	ldr	r3, [sp, #4]
    48a6:	6134      	str	r4, [r6, #16]
    48a8:	6173      	str	r3, [r6, #20]
    48aa:	3020      	adds	r0, #32
    48ac:	e7e4      	b.n	4878 <__d2b+0x4c>
    48ae:	4b07      	ldr	r3, [pc, #28]	; (48cc <__d2b+0xa0>)
    48b0:	18c0      	adds	r0, r0, r3
    48b2:	4b07      	ldr	r3, [pc, #28]	; (48d0 <__d2b+0xa4>)
    48b4:	6038      	str	r0, [r7, #0]
    48b6:	18e3      	adds	r3, r4, r3
    48b8:	009b      	lsls	r3, r3, #2
    48ba:	18f3      	adds	r3, r6, r3
    48bc:	6958      	ldr	r0, [r3, #20]
    48be:	f7ff fdb4 	bl	442a <__hi0bits>
    48c2:	0164      	lsls	r4, r4, #5
    48c4:	1a20      	subs	r0, r4, r0
    48c6:	e7df      	b.n	4888 <__d2b+0x5c>
    48c8:	fffffbcd 	.word	0xfffffbcd
    48cc:	fffffbce 	.word	0xfffffbce
    48d0:	3fffffff 	.word	0x3fffffff

000048d4 <_mprec_log10>:
    48d4:	b510      	push	{r4, lr}
    48d6:	0004      	movs	r4, r0
    48d8:	2817      	cmp	r0, #23
    48da:	dc05      	bgt.n	48e8 <_mprec_log10+0x14>
    48dc:	4b07      	ldr	r3, [pc, #28]	; (48fc <_mprec_log10+0x28>)
    48de:	00c4      	lsls	r4, r0, #3
    48e0:	191c      	adds	r4, r3, r4
    48e2:	6820      	ldr	r0, [r4, #0]
    48e4:	6861      	ldr	r1, [r4, #4]
    48e6:	bd10      	pop	{r4, pc}
    48e8:	2000      	movs	r0, #0
    48ea:	4905      	ldr	r1, [pc, #20]	; (4900 <_mprec_log10+0x2c>)
    48ec:	2200      	movs	r2, #0
    48ee:	4b05      	ldr	r3, [pc, #20]	; (4904 <_mprec_log10+0x30>)
    48f0:	3c01      	subs	r4, #1
    48f2:	f7fe fa11 	bl	2d18 <__aeabi_dmul>
    48f6:	2c00      	cmp	r4, #0
    48f8:	d1f8      	bne.n	48ec <_mprec_log10+0x18>
    48fa:	e7f4      	b.n	48e6 <_mprec_log10+0x12>
    48fc:	00006148 	.word	0x00006148
    4900:	3ff00000 	.word	0x3ff00000
    4904:	40240000 	.word	0x40240000

00004908 <_calloc_r>:
    4908:	434a      	muls	r2, r1
    490a:	b570      	push	{r4, r5, r6, lr}
    490c:	0011      	movs	r1, r2
    490e:	0014      	movs	r4, r2
    4910:	f7ff fb3c 	bl	3f8c <_malloc_r>
    4914:	1e05      	subs	r5, r0, #0
    4916:	d003      	beq.n	4920 <_calloc_r+0x18>
    4918:	0022      	movs	r2, r4
    491a:	2100      	movs	r1, #0
    491c:	f7ff fb2d 	bl	3f7a <memset>
    4920:	0028      	movs	r0, r5
    4922:	bd70      	pop	{r4, r5, r6, pc}

00004924 <strcpy>:
    4924:	1c03      	adds	r3, r0, #0
    4926:	780a      	ldrb	r2, [r1, #0]
    4928:	3101      	adds	r1, #1
    492a:	701a      	strb	r2, [r3, #0]
    492c:	3301      	adds	r3, #1
    492e:	2a00      	cmp	r2, #0
    4930:	d1f9      	bne.n	4926 <strcpy+0x2>
    4932:	4770      	bx	lr

00004934 <quorem>:
    4934:	b5f0      	push	{r4, r5, r6, r7, lr}
    4936:	6903      	ldr	r3, [r0, #16]
    4938:	690c      	ldr	r4, [r1, #16]
    493a:	b089      	sub	sp, #36	; 0x24
    493c:	0007      	movs	r7, r0
    493e:	9105      	str	r1, [sp, #20]
    4940:	2600      	movs	r6, #0
    4942:	429c      	cmp	r4, r3
    4944:	dc6d      	bgt.n	4a22 <quorem+0xee>
    4946:	000b      	movs	r3, r1
    4948:	3c01      	subs	r4, #1
    494a:	3314      	adds	r3, #20
    494c:	00a5      	lsls	r5, r4, #2
    494e:	9303      	str	r3, [sp, #12]
    4950:	195b      	adds	r3, r3, r5
    4952:	9304      	str	r3, [sp, #16]
    4954:	0003      	movs	r3, r0
    4956:	3314      	adds	r3, #20
    4958:	9302      	str	r3, [sp, #8]
    495a:	195d      	adds	r5, r3, r5
    495c:	9b04      	ldr	r3, [sp, #16]
    495e:	6828      	ldr	r0, [r5, #0]
    4960:	681b      	ldr	r3, [r3, #0]
    4962:	1c59      	adds	r1, r3, #1
    4964:	9301      	str	r3, [sp, #4]
    4966:	f7fc fc38 	bl	11da <__aeabi_uidiv>
    496a:	9001      	str	r0, [sp, #4]
    496c:	42b0      	cmp	r0, r6
    496e:	d02d      	beq.n	49cc <quorem+0x98>
    4970:	9b03      	ldr	r3, [sp, #12]
    4972:	9802      	ldr	r0, [sp, #8]
    4974:	469c      	mov	ip, r3
    4976:	9606      	str	r6, [sp, #24]
    4978:	4662      	mov	r2, ip
    497a:	ca08      	ldmia	r2!, {r3}
    497c:	4694      	mov	ip, r2
    497e:	9a01      	ldr	r2, [sp, #4]
    4980:	b299      	uxth	r1, r3
    4982:	4351      	muls	r1, r2
    4984:	0c1b      	lsrs	r3, r3, #16
    4986:	4353      	muls	r3, r2
    4988:	1989      	adds	r1, r1, r6
    498a:	0c0a      	lsrs	r2, r1, #16
    498c:	189b      	adds	r3, r3, r2
    498e:	9307      	str	r3, [sp, #28]
    4990:	8802      	ldrh	r2, [r0, #0]
    4992:	0c1e      	lsrs	r6, r3, #16
    4994:	9b06      	ldr	r3, [sp, #24]
    4996:	b289      	uxth	r1, r1
    4998:	18d2      	adds	r2, r2, r3
    499a:	6803      	ldr	r3, [r0, #0]
    499c:	1a52      	subs	r2, r2, r1
    499e:	0c19      	lsrs	r1, r3, #16
    49a0:	466b      	mov	r3, sp
    49a2:	8b9b      	ldrh	r3, [r3, #28]
    49a4:	1acb      	subs	r3, r1, r3
    49a6:	1411      	asrs	r1, r2, #16
    49a8:	185b      	adds	r3, r3, r1
    49aa:	1419      	asrs	r1, r3, #16
    49ac:	b292      	uxth	r2, r2
    49ae:	041b      	lsls	r3, r3, #16
    49b0:	431a      	orrs	r2, r3
    49b2:	9b04      	ldr	r3, [sp, #16]
    49b4:	9106      	str	r1, [sp, #24]
    49b6:	c004      	stmia	r0!, {r2}
    49b8:	4563      	cmp	r3, ip
    49ba:	d2dd      	bcs.n	4978 <quorem+0x44>
    49bc:	682b      	ldr	r3, [r5, #0]
    49be:	2b00      	cmp	r3, #0
    49c0:	d104      	bne.n	49cc <quorem+0x98>
    49c2:	9b02      	ldr	r3, [sp, #8]
    49c4:	3d04      	subs	r5, #4
    49c6:	42ab      	cmp	r3, r5
    49c8:	d32e      	bcc.n	4a28 <quorem+0xf4>
    49ca:	613c      	str	r4, [r7, #16]
    49cc:	9905      	ldr	r1, [sp, #20]
    49ce:	0038      	movs	r0, r7
    49d0:	f7ff feaf 	bl	4732 <__mcmp>
    49d4:	2800      	cmp	r0, #0
    49d6:	db23      	blt.n	4a20 <quorem+0xec>
    49d8:	2500      	movs	r5, #0
    49da:	9b01      	ldr	r3, [sp, #4]
    49dc:	9802      	ldr	r0, [sp, #8]
    49de:	3301      	adds	r3, #1
    49e0:	9903      	ldr	r1, [sp, #12]
    49e2:	9301      	str	r3, [sp, #4]
    49e4:	c908      	ldmia	r1!, {r3}
    49e6:	8802      	ldrh	r2, [r0, #0]
    49e8:	1955      	adds	r5, r2, r5
    49ea:	b29a      	uxth	r2, r3
    49ec:	1aaa      	subs	r2, r5, r2
    49ee:	6805      	ldr	r5, [r0, #0]
    49f0:	0c1b      	lsrs	r3, r3, #16
    49f2:	0c2d      	lsrs	r5, r5, #16
    49f4:	1aeb      	subs	r3, r5, r3
    49f6:	1415      	asrs	r5, r2, #16
    49f8:	195b      	adds	r3, r3, r5
    49fa:	141d      	asrs	r5, r3, #16
    49fc:	b292      	uxth	r2, r2
    49fe:	041b      	lsls	r3, r3, #16
    4a00:	4313      	orrs	r3, r2
    4a02:	c008      	stmia	r0!, {r3}
    4a04:	9b04      	ldr	r3, [sp, #16]
    4a06:	428b      	cmp	r3, r1
    4a08:	d2ec      	bcs.n	49e4 <quorem+0xb0>
    4a0a:	9a02      	ldr	r2, [sp, #8]
    4a0c:	00a3      	lsls	r3, r4, #2
    4a0e:	18d3      	adds	r3, r2, r3
    4a10:	681a      	ldr	r2, [r3, #0]
    4a12:	2a00      	cmp	r2, #0
    4a14:	d104      	bne.n	4a20 <quorem+0xec>
    4a16:	9a02      	ldr	r2, [sp, #8]
    4a18:	3b04      	subs	r3, #4
    4a1a:	429a      	cmp	r2, r3
    4a1c:	d309      	bcc.n	4a32 <quorem+0xfe>
    4a1e:	613c      	str	r4, [r7, #16]
    4a20:	9e01      	ldr	r6, [sp, #4]
    4a22:	0030      	movs	r0, r6
    4a24:	b009      	add	sp, #36	; 0x24
    4a26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a28:	682b      	ldr	r3, [r5, #0]
    4a2a:	2b00      	cmp	r3, #0
    4a2c:	d1cd      	bne.n	49ca <quorem+0x96>
    4a2e:	3c01      	subs	r4, #1
    4a30:	e7c7      	b.n	49c2 <quorem+0x8e>
    4a32:	681a      	ldr	r2, [r3, #0]
    4a34:	2a00      	cmp	r2, #0
    4a36:	d1f2      	bne.n	4a1e <quorem+0xea>
    4a38:	3c01      	subs	r4, #1
    4a3a:	e7ec      	b.n	4a16 <quorem+0xe2>

00004a3c <_dtoa_r>:
    4a3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a3e:	0016      	movs	r6, r2
    4a40:	001f      	movs	r7, r3
    4a42:	6a44      	ldr	r4, [r0, #36]	; 0x24
    4a44:	b09d      	sub	sp, #116	; 0x74
    4a46:	9004      	str	r0, [sp, #16]
    4a48:	9d25      	ldr	r5, [sp, #148]	; 0x94
    4a4a:	9606      	str	r6, [sp, #24]
    4a4c:	9707      	str	r7, [sp, #28]
    4a4e:	2c00      	cmp	r4, #0
    4a50:	d108      	bne.n	4a64 <_dtoa_r+0x28>
    4a52:	2010      	movs	r0, #16
    4a54:	f7ff fa7e 	bl	3f54 <malloc>
    4a58:	9b04      	ldr	r3, [sp, #16]
    4a5a:	6258      	str	r0, [r3, #36]	; 0x24
    4a5c:	6044      	str	r4, [r0, #4]
    4a5e:	6084      	str	r4, [r0, #8]
    4a60:	6004      	str	r4, [r0, #0]
    4a62:	60c4      	str	r4, [r0, #12]
    4a64:	9b04      	ldr	r3, [sp, #16]
    4a66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4a68:	6819      	ldr	r1, [r3, #0]
    4a6a:	2900      	cmp	r1, #0
    4a6c:	d00b      	beq.n	4a86 <_dtoa_r+0x4a>
    4a6e:	685a      	ldr	r2, [r3, #4]
    4a70:	2301      	movs	r3, #1
    4a72:	4093      	lsls	r3, r2
    4a74:	604a      	str	r2, [r1, #4]
    4a76:	608b      	str	r3, [r1, #8]
    4a78:	9804      	ldr	r0, [sp, #16]
    4a7a:	f7ff fc81 	bl	4380 <_Bfree>
    4a7e:	2200      	movs	r2, #0
    4a80:	9b04      	ldr	r3, [sp, #16]
    4a82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4a84:	601a      	str	r2, [r3, #0]
    4a86:	9b07      	ldr	r3, [sp, #28]
    4a88:	2b00      	cmp	r3, #0
    4a8a:	da1f      	bge.n	4acc <_dtoa_r+0x90>
    4a8c:	2301      	movs	r3, #1
    4a8e:	602b      	str	r3, [r5, #0]
    4a90:	007b      	lsls	r3, r7, #1
    4a92:	085b      	lsrs	r3, r3, #1
    4a94:	9307      	str	r3, [sp, #28]
    4a96:	9c07      	ldr	r4, [sp, #28]
    4a98:	4bb7      	ldr	r3, [pc, #732]	; (4d78 <_dtoa_r+0x33c>)
    4a9a:	0022      	movs	r2, r4
    4a9c:	9319      	str	r3, [sp, #100]	; 0x64
    4a9e:	401a      	ands	r2, r3
    4aa0:	429a      	cmp	r2, r3
    4aa2:	d116      	bne.n	4ad2 <_dtoa_r+0x96>
    4aa4:	4bb5      	ldr	r3, [pc, #724]	; (4d7c <_dtoa_r+0x340>)
    4aa6:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4aa8:	6013      	str	r3, [r2, #0]
    4aaa:	9b06      	ldr	r3, [sp, #24]
    4aac:	2b00      	cmp	r3, #0
    4aae:	d103      	bne.n	4ab8 <_dtoa_r+0x7c>
    4ab0:	0324      	lsls	r4, r4, #12
    4ab2:	d101      	bne.n	4ab8 <_dtoa_r+0x7c>
    4ab4:	f000 fd91 	bl	55da <_dtoa_r+0xb9e>
    4ab8:	4bb1      	ldr	r3, [pc, #708]	; (4d80 <_dtoa_r+0x344>)
    4aba:	9a26      	ldr	r2, [sp, #152]	; 0x98
    4abc:	930a      	str	r3, [sp, #40]	; 0x28
    4abe:	4bb1      	ldr	r3, [pc, #708]	; (4d84 <_dtoa_r+0x348>)
    4ac0:	2a00      	cmp	r2, #0
    4ac2:	d001      	beq.n	4ac8 <_dtoa_r+0x8c>
    4ac4:	f000 fd8f 	bl	55e6 <_dtoa_r+0xbaa>
    4ac8:	f000 fd8f 	bl	55ea <_dtoa_r+0xbae>
    4acc:	2300      	movs	r3, #0
    4ace:	602b      	str	r3, [r5, #0]
    4ad0:	e7e1      	b.n	4a96 <_dtoa_r+0x5a>
    4ad2:	9e06      	ldr	r6, [sp, #24]
    4ad4:	9f07      	ldr	r7, [sp, #28]
    4ad6:	2200      	movs	r2, #0
    4ad8:	2300      	movs	r3, #0
    4ada:	0030      	movs	r0, r6
    4adc:	0039      	movs	r1, r7
    4ade:	f7fe ffc1 	bl	3a64 <__aeabi_dcmpeq>
    4ae2:	1e05      	subs	r5, r0, #0
    4ae4:	d00e      	beq.n	4b04 <_dtoa_r+0xc8>
    4ae6:	2301      	movs	r3, #1
    4ae8:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4aea:	6013      	str	r3, [r2, #0]
    4aec:	4ba6      	ldr	r3, [pc, #664]	; (4d88 <_dtoa_r+0x34c>)
    4aee:	9a26      	ldr	r2, [sp, #152]	; 0x98
    4af0:	930a      	str	r3, [sp, #40]	; 0x28
    4af2:	2a00      	cmp	r2, #0
    4af4:	d101      	bne.n	4afa <_dtoa_r+0xbe>
    4af6:	f000 fd78 	bl	55ea <_dtoa_r+0xbae>
    4afa:	4aa4      	ldr	r2, [pc, #656]	; (4d8c <_dtoa_r+0x350>)
    4afc:	9926      	ldr	r1, [sp, #152]	; 0x98
    4afe:	600a      	str	r2, [r1, #0]
    4b00:	f000 fd73 	bl	55ea <_dtoa_r+0xbae>
    4b04:	ab1a      	add	r3, sp, #104	; 0x68
    4b06:	9301      	str	r3, [sp, #4]
    4b08:	ab1b      	add	r3, sp, #108	; 0x6c
    4b0a:	9300      	str	r3, [sp, #0]
    4b0c:	0032      	movs	r2, r6
    4b0e:	003b      	movs	r3, r7
    4b10:	9804      	ldr	r0, [sp, #16]
    4b12:	f7ff fe8b 	bl	482c <__d2b>
    4b16:	0063      	lsls	r3, r4, #1
    4b18:	9005      	str	r0, [sp, #20]
    4b1a:	0d5b      	lsrs	r3, r3, #21
    4b1c:	d100      	bne.n	4b20 <_dtoa_r+0xe4>
    4b1e:	e07f      	b.n	4c20 <_dtoa_r+0x1e4>
    4b20:	033a      	lsls	r2, r7, #12
    4b22:	4c9b      	ldr	r4, [pc, #620]	; (4d90 <_dtoa_r+0x354>)
    4b24:	0b12      	lsrs	r2, r2, #12
    4b26:	4314      	orrs	r4, r2
    4b28:	0021      	movs	r1, r4
    4b2a:	4a9a      	ldr	r2, [pc, #616]	; (4d94 <_dtoa_r+0x358>)
    4b2c:	0030      	movs	r0, r6
    4b2e:	9518      	str	r5, [sp, #96]	; 0x60
    4b30:	189e      	adds	r6, r3, r2
    4b32:	2200      	movs	r2, #0
    4b34:	4b98      	ldr	r3, [pc, #608]	; (4d98 <_dtoa_r+0x35c>)
    4b36:	f7fe fb6f 	bl	3218 <__aeabi_dsub>
    4b3a:	4a98      	ldr	r2, [pc, #608]	; (4d9c <_dtoa_r+0x360>)
    4b3c:	4b98      	ldr	r3, [pc, #608]	; (4da0 <_dtoa_r+0x364>)
    4b3e:	f7fe f8eb 	bl	2d18 <__aeabi_dmul>
    4b42:	4a98      	ldr	r2, [pc, #608]	; (4da4 <_dtoa_r+0x368>)
    4b44:	4b98      	ldr	r3, [pc, #608]	; (4da8 <_dtoa_r+0x36c>)
    4b46:	f000 fd6b 	bl	5620 <__aeabi_dadd>
    4b4a:	0004      	movs	r4, r0
    4b4c:	0030      	movs	r0, r6
    4b4e:	000d      	movs	r5, r1
    4b50:	f7fe feac 	bl	38ac <__aeabi_i2d>
    4b54:	4a95      	ldr	r2, [pc, #596]	; (4dac <_dtoa_r+0x370>)
    4b56:	4b96      	ldr	r3, [pc, #600]	; (4db0 <_dtoa_r+0x374>)
    4b58:	f7fe f8de 	bl	2d18 <__aeabi_dmul>
    4b5c:	0002      	movs	r2, r0
    4b5e:	000b      	movs	r3, r1
    4b60:	0020      	movs	r0, r4
    4b62:	0029      	movs	r1, r5
    4b64:	f000 fd5c 	bl	5620 <__aeabi_dadd>
    4b68:	0004      	movs	r4, r0
    4b6a:	000d      	movs	r5, r1
    4b6c:	f7fe fe6a 	bl	3844 <__aeabi_d2iz>
    4b70:	2200      	movs	r2, #0
    4b72:	9003      	str	r0, [sp, #12]
    4b74:	2300      	movs	r3, #0
    4b76:	0020      	movs	r0, r4
    4b78:	0029      	movs	r1, r5
    4b7a:	f7fe ff79 	bl	3a70 <__aeabi_dcmplt>
    4b7e:	2800      	cmp	r0, #0
    4b80:	d00e      	beq.n	4ba0 <_dtoa_r+0x164>
    4b82:	9803      	ldr	r0, [sp, #12]
    4b84:	f7fe fe92 	bl	38ac <__aeabi_i2d>
    4b88:	000b      	movs	r3, r1
    4b8a:	0002      	movs	r2, r0
    4b8c:	0029      	movs	r1, r5
    4b8e:	0020      	movs	r0, r4
    4b90:	f7fe ff68 	bl	3a64 <__aeabi_dcmpeq>
    4b94:	0003      	movs	r3, r0
    4b96:	4258      	negs	r0, r3
    4b98:	4158      	adcs	r0, r3
    4b9a:	9b03      	ldr	r3, [sp, #12]
    4b9c:	1a1b      	subs	r3, r3, r0
    4b9e:	9303      	str	r3, [sp, #12]
    4ba0:	2301      	movs	r3, #1
    4ba2:	9316      	str	r3, [sp, #88]	; 0x58
    4ba4:	9b03      	ldr	r3, [sp, #12]
    4ba6:	2b16      	cmp	r3, #22
    4ba8:	d80f      	bhi.n	4bca <_dtoa_r+0x18e>
    4baa:	4982      	ldr	r1, [pc, #520]	; (4db4 <_dtoa_r+0x378>)
    4bac:	00db      	lsls	r3, r3, #3
    4bae:	18c9      	adds	r1, r1, r3
    4bb0:	6808      	ldr	r0, [r1, #0]
    4bb2:	6849      	ldr	r1, [r1, #4]
    4bb4:	9a06      	ldr	r2, [sp, #24]
    4bb6:	9b07      	ldr	r3, [sp, #28]
    4bb8:	f7fe ff6e 	bl	3a98 <__aeabi_dcmpgt>
    4bbc:	2800      	cmp	r0, #0
    4bbe:	d04b      	beq.n	4c58 <_dtoa_r+0x21c>
    4bc0:	9b03      	ldr	r3, [sp, #12]
    4bc2:	3b01      	subs	r3, #1
    4bc4:	9303      	str	r3, [sp, #12]
    4bc6:	2300      	movs	r3, #0
    4bc8:	9316      	str	r3, [sp, #88]	; 0x58
    4bca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4bcc:	1b9e      	subs	r6, r3, r6
    4bce:	2300      	movs	r3, #0
    4bd0:	930b      	str	r3, [sp, #44]	; 0x2c
    4bd2:	0033      	movs	r3, r6
    4bd4:	3b01      	subs	r3, #1
    4bd6:	930c      	str	r3, [sp, #48]	; 0x30
    4bd8:	d504      	bpl.n	4be4 <_dtoa_r+0x1a8>
    4bda:	2301      	movs	r3, #1
    4bdc:	1b9b      	subs	r3, r3, r6
    4bde:	930b      	str	r3, [sp, #44]	; 0x2c
    4be0:	2300      	movs	r3, #0
    4be2:	930c      	str	r3, [sp, #48]	; 0x30
    4be4:	9b03      	ldr	r3, [sp, #12]
    4be6:	2b00      	cmp	r3, #0
    4be8:	db38      	blt.n	4c5c <_dtoa_r+0x220>
    4bea:	9a03      	ldr	r2, [sp, #12]
    4bec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4bee:	4694      	mov	ip, r2
    4bf0:	4463      	add	r3, ip
    4bf2:	930c      	str	r3, [sp, #48]	; 0x30
    4bf4:	2300      	movs	r3, #0
    4bf6:	920f      	str	r2, [sp, #60]	; 0x3c
    4bf8:	9308      	str	r3, [sp, #32]
    4bfa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4bfc:	2501      	movs	r5, #1
    4bfe:	2b09      	cmp	r3, #9
    4c00:	d900      	bls.n	4c04 <_dtoa_r+0x1c8>
    4c02:	e091      	b.n	4d28 <_dtoa_r+0x2ec>
    4c04:	2b05      	cmp	r3, #5
    4c06:	dd02      	ble.n	4c0e <_dtoa_r+0x1d2>
    4c08:	2500      	movs	r5, #0
    4c0a:	3b04      	subs	r3, #4
    4c0c:	9322      	str	r3, [sp, #136]	; 0x88
    4c0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4c10:	1e98      	subs	r0, r3, #2
    4c12:	2803      	cmp	r0, #3
    4c14:	d900      	bls.n	4c18 <_dtoa_r+0x1dc>
    4c16:	e091      	b.n	4d3c <_dtoa_r+0x300>
    4c18:	f000 fcf8 	bl	560c <__gnu_thumb1_case_uqi>
    4c1c:	76298482 	.word	0x76298482
    4c20:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4c22:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    4c24:	189e      	adds	r6, r3, r2
    4c26:	4b64      	ldr	r3, [pc, #400]	; (4db8 <_dtoa_r+0x37c>)
    4c28:	18f2      	adds	r2, r6, r3
    4c2a:	2a20      	cmp	r2, #32
    4c2c:	dd0f      	ble.n	4c4e <_dtoa_r+0x212>
    4c2e:	4b63      	ldr	r3, [pc, #396]	; (4dbc <_dtoa_r+0x380>)
    4c30:	9806      	ldr	r0, [sp, #24]
    4c32:	18f3      	adds	r3, r6, r3
    4c34:	40d8      	lsrs	r0, r3
    4c36:	2340      	movs	r3, #64	; 0x40
    4c38:	1a9b      	subs	r3, r3, r2
    4c3a:	409c      	lsls	r4, r3
    4c3c:	4320      	orrs	r0, r4
    4c3e:	f7fe fe77 	bl	3930 <__aeabi_ui2d>
    4c42:	2301      	movs	r3, #1
    4c44:	4c5e      	ldr	r4, [pc, #376]	; (4dc0 <_dtoa_r+0x384>)
    4c46:	3e01      	subs	r6, #1
    4c48:	1909      	adds	r1, r1, r4
    4c4a:	9318      	str	r3, [sp, #96]	; 0x60
    4c4c:	e771      	b.n	4b32 <_dtoa_r+0xf6>
    4c4e:	2320      	movs	r3, #32
    4c50:	9806      	ldr	r0, [sp, #24]
    4c52:	1a9b      	subs	r3, r3, r2
    4c54:	4098      	lsls	r0, r3
    4c56:	e7f2      	b.n	4c3e <_dtoa_r+0x202>
    4c58:	9016      	str	r0, [sp, #88]	; 0x58
    4c5a:	e7b6      	b.n	4bca <_dtoa_r+0x18e>
    4c5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4c5e:	9a03      	ldr	r2, [sp, #12]
    4c60:	1a9b      	subs	r3, r3, r2
    4c62:	930b      	str	r3, [sp, #44]	; 0x2c
    4c64:	4253      	negs	r3, r2
    4c66:	9308      	str	r3, [sp, #32]
    4c68:	2300      	movs	r3, #0
    4c6a:	930f      	str	r3, [sp, #60]	; 0x3c
    4c6c:	e7c5      	b.n	4bfa <_dtoa_r+0x1be>
    4c6e:	2301      	movs	r3, #1
    4c70:	930e      	str	r3, [sp, #56]	; 0x38
    4c72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4c74:	2b00      	cmp	r3, #0
    4c76:	dd65      	ble.n	4d44 <_dtoa_r+0x308>
    4c78:	001f      	movs	r7, r3
    4c7a:	930d      	str	r3, [sp, #52]	; 0x34
    4c7c:	9a04      	ldr	r2, [sp, #16]
    4c7e:	6a54      	ldr	r4, [r2, #36]	; 0x24
    4c80:	2200      	movs	r2, #0
    4c82:	6062      	str	r2, [r4, #4]
    4c84:	3204      	adds	r2, #4
    4c86:	0011      	movs	r1, r2
    4c88:	3114      	adds	r1, #20
    4c8a:	4299      	cmp	r1, r3
    4c8c:	d95f      	bls.n	4d4e <_dtoa_r+0x312>
    4c8e:	6861      	ldr	r1, [r4, #4]
    4c90:	9804      	ldr	r0, [sp, #16]
    4c92:	f7ff fb3d 	bl	4310 <_Balloc>
    4c96:	9b04      	ldr	r3, [sp, #16]
    4c98:	6020      	str	r0, [r4, #0]
    4c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4c9c:	681b      	ldr	r3, [r3, #0]
    4c9e:	930a      	str	r3, [sp, #40]	; 0x28
    4ca0:	2f0e      	cmp	r7, #14
    4ca2:	d900      	bls.n	4ca6 <_dtoa_r+0x26a>
    4ca4:	e105      	b.n	4eb2 <_dtoa_r+0x476>
    4ca6:	2d00      	cmp	r5, #0
    4ca8:	d100      	bne.n	4cac <_dtoa_r+0x270>
    4caa:	e102      	b.n	4eb2 <_dtoa_r+0x476>
    4cac:	9b06      	ldr	r3, [sp, #24]
    4cae:	9c07      	ldr	r4, [sp, #28]
    4cb0:	9314      	str	r3, [sp, #80]	; 0x50
    4cb2:	9415      	str	r4, [sp, #84]	; 0x54
    4cb4:	9b03      	ldr	r3, [sp, #12]
    4cb6:	2b00      	cmp	r3, #0
    4cb8:	dc00      	bgt.n	4cbc <_dtoa_r+0x280>
    4cba:	e085      	b.n	4dc8 <_dtoa_r+0x38c>
    4cbc:	001a      	movs	r2, r3
    4cbe:	210f      	movs	r1, #15
    4cc0:	4b3c      	ldr	r3, [pc, #240]	; (4db4 <_dtoa_r+0x378>)
    4cc2:	400a      	ands	r2, r1
    4cc4:	00d2      	lsls	r2, r2, #3
    4cc6:	189b      	adds	r3, r3, r2
    4cc8:	685c      	ldr	r4, [r3, #4]
    4cca:	681b      	ldr	r3, [r3, #0]
    4ccc:	9310      	str	r3, [sp, #64]	; 0x40
    4cce:	9411      	str	r4, [sp, #68]	; 0x44
    4cd0:	9b03      	ldr	r3, [sp, #12]
    4cd2:	2402      	movs	r4, #2
    4cd4:	111d      	asrs	r5, r3, #4
    4cd6:	06eb      	lsls	r3, r5, #27
    4cd8:	d50a      	bpl.n	4cf0 <_dtoa_r+0x2b4>
    4cda:	4b3a      	ldr	r3, [pc, #232]	; (4dc4 <_dtoa_r+0x388>)
    4cdc:	400d      	ands	r5, r1
    4cde:	6a1a      	ldr	r2, [r3, #32]
    4ce0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4ce2:	9814      	ldr	r0, [sp, #80]	; 0x50
    4ce4:	9915      	ldr	r1, [sp, #84]	; 0x54
    4ce6:	f7fd fce3 	bl	26b0 <__aeabi_ddiv>
    4cea:	9006      	str	r0, [sp, #24]
    4cec:	9107      	str	r1, [sp, #28]
    4cee:	3401      	adds	r4, #1
    4cf0:	4e34      	ldr	r6, [pc, #208]	; (4dc4 <_dtoa_r+0x388>)
    4cf2:	2d00      	cmp	r5, #0
    4cf4:	d130      	bne.n	4d58 <_dtoa_r+0x31c>
    4cf6:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4cf8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4cfa:	9806      	ldr	r0, [sp, #24]
    4cfc:	9907      	ldr	r1, [sp, #28]
    4cfe:	f7fd fcd7 	bl	26b0 <__aeabi_ddiv>
    4d02:	9006      	str	r0, [sp, #24]
    4d04:	9107      	str	r1, [sp, #28]
    4d06:	e07a      	b.n	4dfe <_dtoa_r+0x3c2>
    4d08:	2301      	movs	r3, #1
    4d0a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    4d0c:	930e      	str	r3, [sp, #56]	; 0x38
    4d0e:	4694      	mov	ip, r2
    4d10:	9b03      	ldr	r3, [sp, #12]
    4d12:	4463      	add	r3, ip
    4d14:	1c5f      	adds	r7, r3, #1
    4d16:	930d      	str	r3, [sp, #52]	; 0x34
    4d18:	1e3b      	subs	r3, r7, #0
    4d1a:	dcaf      	bgt.n	4c7c <_dtoa_r+0x240>
    4d1c:	2301      	movs	r3, #1
    4d1e:	e7ad      	b.n	4c7c <_dtoa_r+0x240>
    4d20:	2300      	movs	r3, #0
    4d22:	e7a5      	b.n	4c70 <_dtoa_r+0x234>
    4d24:	2300      	movs	r3, #0
    4d26:	e7f0      	b.n	4d0a <_dtoa_r+0x2ce>
    4d28:	2300      	movs	r3, #0
    4d2a:	950e      	str	r5, [sp, #56]	; 0x38
    4d2c:	9322      	str	r3, [sp, #136]	; 0x88
    4d2e:	3b01      	subs	r3, #1
    4d30:	2200      	movs	r2, #0
    4d32:	930d      	str	r3, [sp, #52]	; 0x34
    4d34:	001f      	movs	r7, r3
    4d36:	3313      	adds	r3, #19
    4d38:	9223      	str	r2, [sp, #140]	; 0x8c
    4d3a:	e79f      	b.n	4c7c <_dtoa_r+0x240>
    4d3c:	2301      	movs	r3, #1
    4d3e:	930e      	str	r3, [sp, #56]	; 0x38
    4d40:	3b02      	subs	r3, #2
    4d42:	e7f5      	b.n	4d30 <_dtoa_r+0x2f4>
    4d44:	2301      	movs	r3, #1
    4d46:	930d      	str	r3, [sp, #52]	; 0x34
    4d48:	001f      	movs	r7, r3
    4d4a:	001a      	movs	r2, r3
    4d4c:	e7f4      	b.n	4d38 <_dtoa_r+0x2fc>
    4d4e:	6861      	ldr	r1, [r4, #4]
    4d50:	0052      	lsls	r2, r2, #1
    4d52:	3101      	adds	r1, #1
    4d54:	6061      	str	r1, [r4, #4]
    4d56:	e796      	b.n	4c86 <_dtoa_r+0x24a>
    4d58:	2301      	movs	r3, #1
    4d5a:	421d      	tst	r5, r3
    4d5c:	d008      	beq.n	4d70 <_dtoa_r+0x334>
    4d5e:	9810      	ldr	r0, [sp, #64]	; 0x40
    4d60:	9911      	ldr	r1, [sp, #68]	; 0x44
    4d62:	18e4      	adds	r4, r4, r3
    4d64:	6832      	ldr	r2, [r6, #0]
    4d66:	6873      	ldr	r3, [r6, #4]
    4d68:	f7fd ffd6 	bl	2d18 <__aeabi_dmul>
    4d6c:	9010      	str	r0, [sp, #64]	; 0x40
    4d6e:	9111      	str	r1, [sp, #68]	; 0x44
    4d70:	106d      	asrs	r5, r5, #1
    4d72:	3608      	adds	r6, #8
    4d74:	e7bd      	b.n	4cf2 <_dtoa_r+0x2b6>
    4d76:	46c0      	nop			; (mov r8, r8)
    4d78:	7ff00000 	.word	0x7ff00000
    4d7c:	0000270f 	.word	0x0000270f
    4d80:	00006225 	.word	0x00006225
    4d84:	00006228 	.word	0x00006228
    4d88:	00006229 	.word	0x00006229
    4d8c:	0000622a 	.word	0x0000622a
    4d90:	3ff00000 	.word	0x3ff00000
    4d94:	fffffc01 	.word	0xfffffc01
    4d98:	3ff80000 	.word	0x3ff80000
    4d9c:	636f4361 	.word	0x636f4361
    4da0:	3fd287a7 	.word	0x3fd287a7
    4da4:	8b60c8b3 	.word	0x8b60c8b3
    4da8:	3fc68a28 	.word	0x3fc68a28
    4dac:	509f79fb 	.word	0x509f79fb
    4db0:	3fd34413 	.word	0x3fd34413
    4db4:	00006148 	.word	0x00006148
    4db8:	00000432 	.word	0x00000432
    4dbc:	00000412 	.word	0x00000412
    4dc0:	fe100000 	.word	0xfe100000
    4dc4:	00006120 	.word	0x00006120
    4dc8:	9b03      	ldr	r3, [sp, #12]
    4dca:	2402      	movs	r4, #2
    4dcc:	2b00      	cmp	r3, #0
    4dce:	d016      	beq.n	4dfe <_dtoa_r+0x3c2>
    4dd0:	9814      	ldr	r0, [sp, #80]	; 0x50
    4dd2:	9915      	ldr	r1, [sp, #84]	; 0x54
    4dd4:	425d      	negs	r5, r3
    4dd6:	230f      	movs	r3, #15
    4dd8:	4aca      	ldr	r2, [pc, #808]	; (5104 <_dtoa_r+0x6c8>)
    4dda:	402b      	ands	r3, r5
    4ddc:	00db      	lsls	r3, r3, #3
    4dde:	18d3      	adds	r3, r2, r3
    4de0:	681a      	ldr	r2, [r3, #0]
    4de2:	685b      	ldr	r3, [r3, #4]
    4de4:	f7fd ff98 	bl	2d18 <__aeabi_dmul>
    4de8:	2300      	movs	r3, #0
    4dea:	9006      	str	r0, [sp, #24]
    4dec:	9107      	str	r1, [sp, #28]
    4dee:	4ec6      	ldr	r6, [pc, #792]	; (5108 <_dtoa_r+0x6cc>)
    4df0:	112d      	asrs	r5, r5, #4
    4df2:	2d00      	cmp	r5, #0
    4df4:	d000      	beq.n	4df8 <_dtoa_r+0x3bc>
    4df6:	e08c      	b.n	4f12 <_dtoa_r+0x4d6>
    4df8:	2b00      	cmp	r3, #0
    4dfa:	d000      	beq.n	4dfe <_dtoa_r+0x3c2>
    4dfc:	e781      	b.n	4d02 <_dtoa_r+0x2c6>
    4dfe:	9b16      	ldr	r3, [sp, #88]	; 0x58
    4e00:	2b00      	cmp	r3, #0
    4e02:	d100      	bne.n	4e06 <_dtoa_r+0x3ca>
    4e04:	e091      	b.n	4f2a <_dtoa_r+0x4ee>
    4e06:	9a06      	ldr	r2, [sp, #24]
    4e08:	9b07      	ldr	r3, [sp, #28]
    4e0a:	9210      	str	r2, [sp, #64]	; 0x40
    4e0c:	9311      	str	r3, [sp, #68]	; 0x44
    4e0e:	9810      	ldr	r0, [sp, #64]	; 0x40
    4e10:	9911      	ldr	r1, [sp, #68]	; 0x44
    4e12:	2200      	movs	r2, #0
    4e14:	4bbd      	ldr	r3, [pc, #756]	; (510c <_dtoa_r+0x6d0>)
    4e16:	f7fe fe2b 	bl	3a70 <__aeabi_dcmplt>
    4e1a:	2800      	cmp	r0, #0
    4e1c:	d100      	bne.n	4e20 <_dtoa_r+0x3e4>
    4e1e:	e084      	b.n	4f2a <_dtoa_r+0x4ee>
    4e20:	2f00      	cmp	r7, #0
    4e22:	d100      	bne.n	4e26 <_dtoa_r+0x3ea>
    4e24:	e081      	b.n	4f2a <_dtoa_r+0x4ee>
    4e26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e28:	2b00      	cmp	r3, #0
    4e2a:	dd3e      	ble.n	4eaa <_dtoa_r+0x46e>
    4e2c:	9810      	ldr	r0, [sp, #64]	; 0x40
    4e2e:	9911      	ldr	r1, [sp, #68]	; 0x44
    4e30:	9b03      	ldr	r3, [sp, #12]
    4e32:	2200      	movs	r2, #0
    4e34:	1e5e      	subs	r6, r3, #1
    4e36:	4bb6      	ldr	r3, [pc, #728]	; (5110 <_dtoa_r+0x6d4>)
    4e38:	f7fd ff6e 	bl	2d18 <__aeabi_dmul>
    4e3c:	9006      	str	r0, [sp, #24]
    4e3e:	9107      	str	r1, [sp, #28]
    4e40:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4e42:	3401      	adds	r4, #1
    4e44:	0020      	movs	r0, r4
    4e46:	f7fe fd31 	bl	38ac <__aeabi_i2d>
    4e4a:	9a06      	ldr	r2, [sp, #24]
    4e4c:	9b07      	ldr	r3, [sp, #28]
    4e4e:	f7fd ff63 	bl	2d18 <__aeabi_dmul>
    4e52:	2200      	movs	r2, #0
    4e54:	4baf      	ldr	r3, [pc, #700]	; (5114 <_dtoa_r+0x6d8>)
    4e56:	f000 fbe3 	bl	5620 <__aeabi_dadd>
    4e5a:	9012      	str	r0, [sp, #72]	; 0x48
    4e5c:	9113      	str	r1, [sp, #76]	; 0x4c
    4e5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4e60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    4e62:	4aad      	ldr	r2, [pc, #692]	; (5118 <_dtoa_r+0x6dc>)
    4e64:	9310      	str	r3, [sp, #64]	; 0x40
    4e66:	9411      	str	r4, [sp, #68]	; 0x44
    4e68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4e6a:	189c      	adds	r4, r3, r2
    4e6c:	9411      	str	r4, [sp, #68]	; 0x44
    4e6e:	2d00      	cmp	r5, #0
    4e70:	d15e      	bne.n	4f30 <_dtoa_r+0x4f4>
    4e72:	9806      	ldr	r0, [sp, #24]
    4e74:	9907      	ldr	r1, [sp, #28]
    4e76:	2200      	movs	r2, #0
    4e78:	4ba8      	ldr	r3, [pc, #672]	; (511c <_dtoa_r+0x6e0>)
    4e7a:	f7fe f9cd 	bl	3218 <__aeabi_dsub>
    4e7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4e80:	0023      	movs	r3, r4
    4e82:	9006      	str	r0, [sp, #24]
    4e84:	9107      	str	r1, [sp, #28]
    4e86:	f7fe fe07 	bl	3a98 <__aeabi_dcmpgt>
    4e8a:	2800      	cmp	r0, #0
    4e8c:	d000      	beq.n	4e90 <_dtoa_r+0x454>
    4e8e:	e301      	b.n	5494 <_dtoa_r+0xa58>
    4e90:	48a3      	ldr	r0, [pc, #652]	; (5120 <_dtoa_r+0x6e4>)
    4e92:	9913      	ldr	r1, [sp, #76]	; 0x4c
    4e94:	4684      	mov	ip, r0
    4e96:	4461      	add	r1, ip
    4e98:	000b      	movs	r3, r1
    4e9a:	9806      	ldr	r0, [sp, #24]
    4e9c:	9907      	ldr	r1, [sp, #28]
    4e9e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4ea0:	f7fe fde6 	bl	3a70 <__aeabi_dcmplt>
    4ea4:	2800      	cmp	r0, #0
    4ea6:	d000      	beq.n	4eaa <_dtoa_r+0x46e>
    4ea8:	e2e8      	b.n	547c <_dtoa_r+0xa40>
    4eaa:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4eac:	9c15      	ldr	r4, [sp, #84]	; 0x54
    4eae:	9306      	str	r3, [sp, #24]
    4eb0:	9407      	str	r4, [sp, #28]
    4eb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    4eb4:	2b00      	cmp	r3, #0
    4eb6:	da00      	bge.n	4eba <_dtoa_r+0x47e>
    4eb8:	e157      	b.n	516a <_dtoa_r+0x72e>
    4eba:	9a03      	ldr	r2, [sp, #12]
    4ebc:	2a0e      	cmp	r2, #14
    4ebe:	dd00      	ble.n	4ec2 <_dtoa_r+0x486>
    4ec0:	e153      	b.n	516a <_dtoa_r+0x72e>
    4ec2:	4b90      	ldr	r3, [pc, #576]	; (5104 <_dtoa_r+0x6c8>)
    4ec4:	00d2      	lsls	r2, r2, #3
    4ec6:	189b      	adds	r3, r3, r2
    4ec8:	685c      	ldr	r4, [r3, #4]
    4eca:	681b      	ldr	r3, [r3, #0]
    4ecc:	9308      	str	r3, [sp, #32]
    4ece:	9409      	str	r4, [sp, #36]	; 0x24
    4ed0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4ed2:	2b00      	cmp	r3, #0
    4ed4:	db00      	blt.n	4ed8 <_dtoa_r+0x49c>
    4ed6:	e0ce      	b.n	5076 <_dtoa_r+0x63a>
    4ed8:	2f00      	cmp	r7, #0
    4eda:	dd00      	ble.n	4ede <_dtoa_r+0x4a2>
    4edc:	e0cb      	b.n	5076 <_dtoa_r+0x63a>
    4ede:	d000      	beq.n	4ee2 <_dtoa_r+0x4a6>
    4ee0:	e2cf      	b.n	5482 <_dtoa_r+0xa46>
    4ee2:	9808      	ldr	r0, [sp, #32]
    4ee4:	9909      	ldr	r1, [sp, #36]	; 0x24
    4ee6:	2200      	movs	r2, #0
    4ee8:	4b8c      	ldr	r3, [pc, #560]	; (511c <_dtoa_r+0x6e0>)
    4eea:	f7fd ff15 	bl	2d18 <__aeabi_dmul>
    4eee:	9a06      	ldr	r2, [sp, #24]
    4ef0:	9b07      	ldr	r3, [sp, #28]
    4ef2:	f7fe fddb 	bl	3aac <__aeabi_dcmpge>
    4ef6:	003e      	movs	r6, r7
    4ef8:	9708      	str	r7, [sp, #32]
    4efa:	2800      	cmp	r0, #0
    4efc:	d000      	beq.n	4f00 <_dtoa_r+0x4c4>
    4efe:	e2a4      	b.n	544a <_dtoa_r+0xa0e>
    4f00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4f02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4f04:	1c5d      	adds	r5, r3, #1
    4f06:	2331      	movs	r3, #49	; 0x31
    4f08:	7013      	strb	r3, [r2, #0]
    4f0a:	9b03      	ldr	r3, [sp, #12]
    4f0c:	3301      	adds	r3, #1
    4f0e:	9303      	str	r3, [sp, #12]
    4f10:	e29f      	b.n	5452 <_dtoa_r+0xa16>
    4f12:	2201      	movs	r2, #1
    4f14:	4215      	tst	r5, r2
    4f16:	d005      	beq.n	4f24 <_dtoa_r+0x4e8>
    4f18:	18a4      	adds	r4, r4, r2
    4f1a:	6832      	ldr	r2, [r6, #0]
    4f1c:	6873      	ldr	r3, [r6, #4]
    4f1e:	f7fd fefb 	bl	2d18 <__aeabi_dmul>
    4f22:	2301      	movs	r3, #1
    4f24:	106d      	asrs	r5, r5, #1
    4f26:	3608      	adds	r6, #8
    4f28:	e763      	b.n	4df2 <_dtoa_r+0x3b6>
    4f2a:	9e03      	ldr	r6, [sp, #12]
    4f2c:	003d      	movs	r5, r7
    4f2e:	e789      	b.n	4e44 <_dtoa_r+0x408>
    4f30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4f32:	1e69      	subs	r1, r5, #1
    4f34:	1952      	adds	r2, r2, r5
    4f36:	9217      	str	r2, [sp, #92]	; 0x5c
    4f38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4f3a:	4b72      	ldr	r3, [pc, #456]	; (5104 <_dtoa_r+0x6c8>)
    4f3c:	00c9      	lsls	r1, r1, #3
    4f3e:	2a00      	cmp	r2, #0
    4f40:	d04a      	beq.n	4fd8 <_dtoa_r+0x59c>
    4f42:	185b      	adds	r3, r3, r1
    4f44:	681a      	ldr	r2, [r3, #0]
    4f46:	685b      	ldr	r3, [r3, #4]
    4f48:	2000      	movs	r0, #0
    4f4a:	4976      	ldr	r1, [pc, #472]	; (5124 <_dtoa_r+0x6e8>)
    4f4c:	f7fd fbb0 	bl	26b0 <__aeabi_ddiv>
    4f50:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4f52:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4f54:	f7fe f960 	bl	3218 <__aeabi_dsub>
    4f58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4f5a:	9010      	str	r0, [sp, #64]	; 0x40
    4f5c:	9111      	str	r1, [sp, #68]	; 0x44
    4f5e:	9312      	str	r3, [sp, #72]	; 0x48
    4f60:	9806      	ldr	r0, [sp, #24]
    4f62:	9907      	ldr	r1, [sp, #28]
    4f64:	f7fe fc6e 	bl	3844 <__aeabi_d2iz>
    4f68:	0004      	movs	r4, r0
    4f6a:	f7fe fc9f 	bl	38ac <__aeabi_i2d>
    4f6e:	0002      	movs	r2, r0
    4f70:	000b      	movs	r3, r1
    4f72:	9806      	ldr	r0, [sp, #24]
    4f74:	9907      	ldr	r1, [sp, #28]
    4f76:	f7fe f94f 	bl	3218 <__aeabi_dsub>
    4f7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4f7c:	3430      	adds	r4, #48	; 0x30
    4f7e:	1c5d      	adds	r5, r3, #1
    4f80:	701c      	strb	r4, [r3, #0]
    4f82:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4f84:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4f86:	9006      	str	r0, [sp, #24]
    4f88:	9107      	str	r1, [sp, #28]
    4f8a:	f7fe fd71 	bl	3a70 <__aeabi_dcmplt>
    4f8e:	2800      	cmp	r0, #0
    4f90:	d165      	bne.n	505e <_dtoa_r+0x622>
    4f92:	9a06      	ldr	r2, [sp, #24]
    4f94:	9b07      	ldr	r3, [sp, #28]
    4f96:	2000      	movs	r0, #0
    4f98:	495c      	ldr	r1, [pc, #368]	; (510c <_dtoa_r+0x6d0>)
    4f9a:	f7fe f93d 	bl	3218 <__aeabi_dsub>
    4f9e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4fa2:	f7fe fd65 	bl	3a70 <__aeabi_dcmplt>
    4fa6:	2800      	cmp	r0, #0
    4fa8:	d000      	beq.n	4fac <_dtoa_r+0x570>
    4faa:	e0be      	b.n	512a <_dtoa_r+0x6ee>
    4fac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    4fae:	429d      	cmp	r5, r3
    4fb0:	d100      	bne.n	4fb4 <_dtoa_r+0x578>
    4fb2:	e77a      	b.n	4eaa <_dtoa_r+0x46e>
    4fb4:	9810      	ldr	r0, [sp, #64]	; 0x40
    4fb6:	9911      	ldr	r1, [sp, #68]	; 0x44
    4fb8:	2200      	movs	r2, #0
    4fba:	4b55      	ldr	r3, [pc, #340]	; (5110 <_dtoa_r+0x6d4>)
    4fbc:	f7fd feac 	bl	2d18 <__aeabi_dmul>
    4fc0:	2200      	movs	r2, #0
    4fc2:	9010      	str	r0, [sp, #64]	; 0x40
    4fc4:	9111      	str	r1, [sp, #68]	; 0x44
    4fc6:	9806      	ldr	r0, [sp, #24]
    4fc8:	9907      	ldr	r1, [sp, #28]
    4fca:	4b51      	ldr	r3, [pc, #324]	; (5110 <_dtoa_r+0x6d4>)
    4fcc:	f7fd fea4 	bl	2d18 <__aeabi_dmul>
    4fd0:	9512      	str	r5, [sp, #72]	; 0x48
    4fd2:	9006      	str	r0, [sp, #24]
    4fd4:	9107      	str	r1, [sp, #28]
    4fd6:	e7c3      	b.n	4f60 <_dtoa_r+0x524>
    4fd8:	1859      	adds	r1, r3, r1
    4fda:	6808      	ldr	r0, [r1, #0]
    4fdc:	6849      	ldr	r1, [r1, #4]
    4fde:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4fe0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4fe2:	f7fd fe99 	bl	2d18 <__aeabi_dmul>
    4fe6:	9010      	str	r0, [sp, #64]	; 0x40
    4fe8:	9111      	str	r1, [sp, #68]	; 0x44
    4fea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    4fec:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    4fee:	9806      	ldr	r0, [sp, #24]
    4ff0:	9907      	ldr	r1, [sp, #28]
    4ff2:	f7fe fc27 	bl	3844 <__aeabi_d2iz>
    4ff6:	9012      	str	r0, [sp, #72]	; 0x48
    4ff8:	f7fe fc58 	bl	38ac <__aeabi_i2d>
    4ffc:	0002      	movs	r2, r0
    4ffe:	000b      	movs	r3, r1
    5000:	9806      	ldr	r0, [sp, #24]
    5002:	9907      	ldr	r1, [sp, #28]
    5004:	f7fe f908 	bl	3218 <__aeabi_dsub>
    5008:	9b12      	ldr	r3, [sp, #72]	; 0x48
    500a:	9006      	str	r0, [sp, #24]
    500c:	9107      	str	r1, [sp, #28]
    500e:	3330      	adds	r3, #48	; 0x30
    5010:	7023      	strb	r3, [r4, #0]
    5012:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5014:	3401      	adds	r4, #1
    5016:	2200      	movs	r2, #0
    5018:	42a3      	cmp	r3, r4
    501a:	d124      	bne.n	5066 <_dtoa_r+0x62a>
    501c:	4b41      	ldr	r3, [pc, #260]	; (5124 <_dtoa_r+0x6e8>)
    501e:	9810      	ldr	r0, [sp, #64]	; 0x40
    5020:	9911      	ldr	r1, [sp, #68]	; 0x44
    5022:	f000 fafd 	bl	5620 <__aeabi_dadd>
    5026:	0002      	movs	r2, r0
    5028:	000b      	movs	r3, r1
    502a:	9806      	ldr	r0, [sp, #24]
    502c:	9907      	ldr	r1, [sp, #28]
    502e:	f7fe fd33 	bl	3a98 <__aeabi_dcmpgt>
    5032:	2800      	cmp	r0, #0
    5034:	d000      	beq.n	5038 <_dtoa_r+0x5fc>
    5036:	e078      	b.n	512a <_dtoa_r+0x6ee>
    5038:	9a10      	ldr	r2, [sp, #64]	; 0x40
    503a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    503c:	2000      	movs	r0, #0
    503e:	4939      	ldr	r1, [pc, #228]	; (5124 <_dtoa_r+0x6e8>)
    5040:	f7fe f8ea 	bl	3218 <__aeabi_dsub>
    5044:	0002      	movs	r2, r0
    5046:	000b      	movs	r3, r1
    5048:	9806      	ldr	r0, [sp, #24]
    504a:	9907      	ldr	r1, [sp, #28]
    504c:	f7fe fd10 	bl	3a70 <__aeabi_dcmplt>
    5050:	2800      	cmp	r0, #0
    5052:	d100      	bne.n	5056 <_dtoa_r+0x61a>
    5054:	e729      	b.n	4eaa <_dtoa_r+0x46e>
    5056:	1e6b      	subs	r3, r5, #1
    5058:	781a      	ldrb	r2, [r3, #0]
    505a:	2a30      	cmp	r2, #48	; 0x30
    505c:	d001      	beq.n	5062 <_dtoa_r+0x626>
    505e:	9603      	str	r6, [sp, #12]
    5060:	e03f      	b.n	50e2 <_dtoa_r+0x6a6>
    5062:	001d      	movs	r5, r3
    5064:	e7f7      	b.n	5056 <_dtoa_r+0x61a>
    5066:	9806      	ldr	r0, [sp, #24]
    5068:	9907      	ldr	r1, [sp, #28]
    506a:	4b29      	ldr	r3, [pc, #164]	; (5110 <_dtoa_r+0x6d4>)
    506c:	f7fd fe54 	bl	2d18 <__aeabi_dmul>
    5070:	9006      	str	r0, [sp, #24]
    5072:	9107      	str	r1, [sp, #28]
    5074:	e7bb      	b.n	4fee <_dtoa_r+0x5b2>
    5076:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    5078:	9a08      	ldr	r2, [sp, #32]
    507a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    507c:	9806      	ldr	r0, [sp, #24]
    507e:	9907      	ldr	r1, [sp, #28]
    5080:	f7fd fb16 	bl	26b0 <__aeabi_ddiv>
    5084:	f7fe fbde 	bl	3844 <__aeabi_d2iz>
    5088:	0004      	movs	r4, r0
    508a:	f7fe fc0f 	bl	38ac <__aeabi_i2d>
    508e:	9a08      	ldr	r2, [sp, #32]
    5090:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5092:	f7fd fe41 	bl	2d18 <__aeabi_dmul>
    5096:	000b      	movs	r3, r1
    5098:	0002      	movs	r2, r0
    509a:	9806      	ldr	r0, [sp, #24]
    509c:	9907      	ldr	r1, [sp, #28]
    509e:	f7fe f8bb 	bl	3218 <__aeabi_dsub>
    50a2:	0023      	movs	r3, r4
    50a4:	3330      	adds	r3, #48	; 0x30
    50a6:	7033      	strb	r3, [r6, #0]
    50a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    50aa:	1c75      	adds	r5, r6, #1
    50ac:	1aeb      	subs	r3, r5, r3
    50ae:	429f      	cmp	r7, r3
    50b0:	d14c      	bne.n	514c <_dtoa_r+0x710>
    50b2:	0002      	movs	r2, r0
    50b4:	000b      	movs	r3, r1
    50b6:	f000 fab3 	bl	5620 <__aeabi_dadd>
    50ba:	0006      	movs	r6, r0
    50bc:	000f      	movs	r7, r1
    50be:	0002      	movs	r2, r0
    50c0:	000b      	movs	r3, r1
    50c2:	9808      	ldr	r0, [sp, #32]
    50c4:	9909      	ldr	r1, [sp, #36]	; 0x24
    50c6:	f7fe fcd3 	bl	3a70 <__aeabi_dcmplt>
    50ca:	2800      	cmp	r0, #0
    50cc:	d12c      	bne.n	5128 <_dtoa_r+0x6ec>
    50ce:	9808      	ldr	r0, [sp, #32]
    50d0:	9909      	ldr	r1, [sp, #36]	; 0x24
    50d2:	0032      	movs	r2, r6
    50d4:	003b      	movs	r3, r7
    50d6:	f7fe fcc5 	bl	3a64 <__aeabi_dcmpeq>
    50da:	2800      	cmp	r0, #0
    50dc:	d001      	beq.n	50e2 <_dtoa_r+0x6a6>
    50de:	07e3      	lsls	r3, r4, #31
    50e0:	d422      	bmi.n	5128 <_dtoa_r+0x6ec>
    50e2:	9905      	ldr	r1, [sp, #20]
    50e4:	9804      	ldr	r0, [sp, #16]
    50e6:	f7ff f94b 	bl	4380 <_Bfree>
    50ea:	2300      	movs	r3, #0
    50ec:	702b      	strb	r3, [r5, #0]
    50ee:	9b03      	ldr	r3, [sp, #12]
    50f0:	9a24      	ldr	r2, [sp, #144]	; 0x90
    50f2:	3301      	adds	r3, #1
    50f4:	6013      	str	r3, [r2, #0]
    50f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    50f8:	2b00      	cmp	r3, #0
    50fa:	d100      	bne.n	50fe <_dtoa_r+0x6c2>
    50fc:	e275      	b.n	55ea <_dtoa_r+0xbae>
    50fe:	601d      	str	r5, [r3, #0]
    5100:	e273      	b.n	55ea <_dtoa_r+0xbae>
    5102:	46c0      	nop			; (mov r8, r8)
    5104:	00006148 	.word	0x00006148
    5108:	00006120 	.word	0x00006120
    510c:	3ff00000 	.word	0x3ff00000
    5110:	40240000 	.word	0x40240000
    5114:	401c0000 	.word	0x401c0000
    5118:	fcc00000 	.word	0xfcc00000
    511c:	40140000 	.word	0x40140000
    5120:	7cc00000 	.word	0x7cc00000
    5124:	3fe00000 	.word	0x3fe00000
    5128:	9e03      	ldr	r6, [sp, #12]
    512a:	1e6b      	subs	r3, r5, #1
    512c:	781a      	ldrb	r2, [r3, #0]
    512e:	2a39      	cmp	r2, #57	; 0x39
    5130:	d106      	bne.n	5140 <_dtoa_r+0x704>
    5132:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5134:	429a      	cmp	r2, r3
    5136:	d107      	bne.n	5148 <_dtoa_r+0x70c>
    5138:	2330      	movs	r3, #48	; 0x30
    513a:	7013      	strb	r3, [r2, #0]
    513c:	0013      	movs	r3, r2
    513e:	3601      	adds	r6, #1
    5140:	781a      	ldrb	r2, [r3, #0]
    5142:	3201      	adds	r2, #1
    5144:	701a      	strb	r2, [r3, #0]
    5146:	e78a      	b.n	505e <_dtoa_r+0x622>
    5148:	001d      	movs	r5, r3
    514a:	e7ee      	b.n	512a <_dtoa_r+0x6ee>
    514c:	2200      	movs	r2, #0
    514e:	4bcf      	ldr	r3, [pc, #828]	; (548c <_dtoa_r+0xa50>)
    5150:	f7fd fde2 	bl	2d18 <__aeabi_dmul>
    5154:	2200      	movs	r2, #0
    5156:	2300      	movs	r3, #0
    5158:	9006      	str	r0, [sp, #24]
    515a:	9107      	str	r1, [sp, #28]
    515c:	002e      	movs	r6, r5
    515e:	f7fe fc81 	bl	3a64 <__aeabi_dcmpeq>
    5162:	2800      	cmp	r0, #0
    5164:	d100      	bne.n	5168 <_dtoa_r+0x72c>
    5166:	e787      	b.n	5078 <_dtoa_r+0x63c>
    5168:	e7bb      	b.n	50e2 <_dtoa_r+0x6a6>
    516a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    516c:	2a00      	cmp	r2, #0
    516e:	d100      	bne.n	5172 <_dtoa_r+0x736>
    5170:	e087      	b.n	5282 <_dtoa_r+0x846>
    5172:	9a22      	ldr	r2, [sp, #136]	; 0x88
    5174:	2a01      	cmp	r2, #1
    5176:	dc6e      	bgt.n	5256 <_dtoa_r+0x81a>
    5178:	9a18      	ldr	r2, [sp, #96]	; 0x60
    517a:	2a00      	cmp	r2, #0
    517c:	d067      	beq.n	524e <_dtoa_r+0x812>
    517e:	4ac4      	ldr	r2, [pc, #784]	; (5490 <_dtoa_r+0xa54>)
    5180:	189b      	adds	r3, r3, r2
    5182:	9d08      	ldr	r5, [sp, #32]
    5184:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    5186:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5188:	2101      	movs	r1, #1
    518a:	18d2      	adds	r2, r2, r3
    518c:	920b      	str	r2, [sp, #44]	; 0x2c
    518e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5190:	9804      	ldr	r0, [sp, #16]
    5192:	18d3      	adds	r3, r2, r3
    5194:	930c      	str	r3, [sp, #48]	; 0x30
    5196:	f7ff f991 	bl	44bc <__i2b>
    519a:	0006      	movs	r6, r0
    519c:	2c00      	cmp	r4, #0
    519e:	dd0e      	ble.n	51be <_dtoa_r+0x782>
    51a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    51a2:	2b00      	cmp	r3, #0
    51a4:	dd0b      	ble.n	51be <_dtoa_r+0x782>
    51a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    51a8:	0023      	movs	r3, r4
    51aa:	4294      	cmp	r4, r2
    51ac:	dd00      	ble.n	51b0 <_dtoa_r+0x774>
    51ae:	0013      	movs	r3, r2
    51b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    51b2:	1ae4      	subs	r4, r4, r3
    51b4:	1ad2      	subs	r2, r2, r3
    51b6:	920b      	str	r2, [sp, #44]	; 0x2c
    51b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    51ba:	1ad3      	subs	r3, r2, r3
    51bc:	930c      	str	r3, [sp, #48]	; 0x30
    51be:	9b08      	ldr	r3, [sp, #32]
    51c0:	2b00      	cmp	r3, #0
    51c2:	d01e      	beq.n	5202 <_dtoa_r+0x7c6>
    51c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    51c6:	2b00      	cmp	r3, #0
    51c8:	d05f      	beq.n	528a <_dtoa_r+0x84e>
    51ca:	2d00      	cmp	r5, #0
    51cc:	dd11      	ble.n	51f2 <_dtoa_r+0x7b6>
    51ce:	0031      	movs	r1, r6
    51d0:	002a      	movs	r2, r5
    51d2:	9804      	ldr	r0, [sp, #16]
    51d4:	f7ff fa0a 	bl	45ec <__pow5mult>
    51d8:	9a05      	ldr	r2, [sp, #20]
    51da:	0001      	movs	r1, r0
    51dc:	0006      	movs	r6, r0
    51de:	9804      	ldr	r0, [sp, #16]
    51e0:	f7ff f975 	bl	44ce <__multiply>
    51e4:	9905      	ldr	r1, [sp, #20]
    51e6:	9010      	str	r0, [sp, #64]	; 0x40
    51e8:	9804      	ldr	r0, [sp, #16]
    51ea:	f7ff f8c9 	bl	4380 <_Bfree>
    51ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
    51f0:	9305      	str	r3, [sp, #20]
    51f2:	9b08      	ldr	r3, [sp, #32]
    51f4:	1b5a      	subs	r2, r3, r5
    51f6:	d004      	beq.n	5202 <_dtoa_r+0x7c6>
    51f8:	9905      	ldr	r1, [sp, #20]
    51fa:	9804      	ldr	r0, [sp, #16]
    51fc:	f7ff f9f6 	bl	45ec <__pow5mult>
    5200:	9005      	str	r0, [sp, #20]
    5202:	2101      	movs	r1, #1
    5204:	9804      	ldr	r0, [sp, #16]
    5206:	f7ff f959 	bl	44bc <__i2b>
    520a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    520c:	9008      	str	r0, [sp, #32]
    520e:	2b00      	cmp	r3, #0
    5210:	dd3d      	ble.n	528e <_dtoa_r+0x852>
    5212:	001a      	movs	r2, r3
    5214:	0001      	movs	r1, r0
    5216:	9804      	ldr	r0, [sp, #16]
    5218:	f7ff f9e8 	bl	45ec <__pow5mult>
    521c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    521e:	9008      	str	r0, [sp, #32]
    5220:	2500      	movs	r5, #0
    5222:	2b01      	cmp	r3, #1
    5224:	dc3b      	bgt.n	529e <_dtoa_r+0x862>
    5226:	2500      	movs	r5, #0
    5228:	9b06      	ldr	r3, [sp, #24]
    522a:	42ab      	cmp	r3, r5
    522c:	d133      	bne.n	5296 <_dtoa_r+0x85a>
    522e:	9b07      	ldr	r3, [sp, #28]
    5230:	031b      	lsls	r3, r3, #12
    5232:	42ab      	cmp	r3, r5
    5234:	d12f      	bne.n	5296 <_dtoa_r+0x85a>
    5236:	9b19      	ldr	r3, [sp, #100]	; 0x64
    5238:	9a07      	ldr	r2, [sp, #28]
    523a:	4213      	tst	r3, r2
    523c:	d02b      	beq.n	5296 <_dtoa_r+0x85a>
    523e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5240:	3501      	adds	r5, #1
    5242:	3301      	adds	r3, #1
    5244:	930b      	str	r3, [sp, #44]	; 0x2c
    5246:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5248:	3301      	adds	r3, #1
    524a:	930c      	str	r3, [sp, #48]	; 0x30
    524c:	e023      	b.n	5296 <_dtoa_r+0x85a>
    524e:	2336      	movs	r3, #54	; 0x36
    5250:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    5252:	1a9b      	subs	r3, r3, r2
    5254:	e795      	b.n	5182 <_dtoa_r+0x746>
    5256:	9b08      	ldr	r3, [sp, #32]
    5258:	1e7d      	subs	r5, r7, #1
    525a:	42ab      	cmp	r3, r5
    525c:	db06      	blt.n	526c <_dtoa_r+0x830>
    525e:	1b5d      	subs	r5, r3, r5
    5260:	2f00      	cmp	r7, #0
    5262:	da0b      	bge.n	527c <_dtoa_r+0x840>
    5264:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5266:	1bdc      	subs	r4, r3, r7
    5268:	2300      	movs	r3, #0
    526a:	e78c      	b.n	5186 <_dtoa_r+0x74a>
    526c:	9b08      	ldr	r3, [sp, #32]
    526e:	9508      	str	r5, [sp, #32]
    5270:	1aea      	subs	r2, r5, r3
    5272:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5274:	2500      	movs	r5, #0
    5276:	189b      	adds	r3, r3, r2
    5278:	930f      	str	r3, [sp, #60]	; 0x3c
    527a:	e7f1      	b.n	5260 <_dtoa_r+0x824>
    527c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    527e:	003b      	movs	r3, r7
    5280:	e781      	b.n	5186 <_dtoa_r+0x74a>
    5282:	9d08      	ldr	r5, [sp, #32]
    5284:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    5286:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    5288:	e788      	b.n	519c <_dtoa_r+0x760>
    528a:	9a08      	ldr	r2, [sp, #32]
    528c:	e7b4      	b.n	51f8 <_dtoa_r+0x7bc>
    528e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5290:	2500      	movs	r5, #0
    5292:	2b01      	cmp	r3, #1
    5294:	ddc7      	ble.n	5226 <_dtoa_r+0x7ea>
    5296:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5298:	2001      	movs	r0, #1
    529a:	2b00      	cmp	r3, #0
    529c:	d00b      	beq.n	52b6 <_dtoa_r+0x87a>
    529e:	9b08      	ldr	r3, [sp, #32]
    52a0:	9a08      	ldr	r2, [sp, #32]
    52a2:	691b      	ldr	r3, [r3, #16]
    52a4:	930f      	str	r3, [sp, #60]	; 0x3c
    52a6:	3303      	adds	r3, #3
    52a8:	009b      	lsls	r3, r3, #2
    52aa:	18d3      	adds	r3, r2, r3
    52ac:	6858      	ldr	r0, [r3, #4]
    52ae:	f7ff f8bc 	bl	442a <__hi0bits>
    52b2:	2320      	movs	r3, #32
    52b4:	1a18      	subs	r0, r3, r0
    52b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    52b8:	18c0      	adds	r0, r0, r3
    52ba:	231f      	movs	r3, #31
    52bc:	4018      	ands	r0, r3
    52be:	d100      	bne.n	52c2 <_dtoa_r+0x886>
    52c0:	e0ab      	b.n	541a <_dtoa_r+0x9de>
    52c2:	3301      	adds	r3, #1
    52c4:	1a1b      	subs	r3, r3, r0
    52c6:	2b04      	cmp	r3, #4
    52c8:	dc00      	bgt.n	52cc <_dtoa_r+0x890>
    52ca:	e09b      	b.n	5404 <_dtoa_r+0x9c8>
    52cc:	231c      	movs	r3, #28
    52ce:	1a18      	subs	r0, r3, r0
    52d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    52d2:	1824      	adds	r4, r4, r0
    52d4:	181b      	adds	r3, r3, r0
    52d6:	930b      	str	r3, [sp, #44]	; 0x2c
    52d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    52da:	181b      	adds	r3, r3, r0
    52dc:	930c      	str	r3, [sp, #48]	; 0x30
    52de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    52e0:	2b00      	cmp	r3, #0
    52e2:	dd05      	ble.n	52f0 <_dtoa_r+0x8b4>
    52e4:	001a      	movs	r2, r3
    52e6:	9905      	ldr	r1, [sp, #20]
    52e8:	9804      	ldr	r0, [sp, #16]
    52ea:	f7ff f9d1 	bl	4690 <__lshift>
    52ee:	9005      	str	r0, [sp, #20]
    52f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    52f2:	2b00      	cmp	r3, #0
    52f4:	dd05      	ble.n	5302 <_dtoa_r+0x8c6>
    52f6:	001a      	movs	r2, r3
    52f8:	9908      	ldr	r1, [sp, #32]
    52fa:	9804      	ldr	r0, [sp, #16]
    52fc:	f7ff f9c8 	bl	4690 <__lshift>
    5300:	9008      	str	r0, [sp, #32]
    5302:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5304:	2b00      	cmp	r3, #0
    5306:	d100      	bne.n	530a <_dtoa_r+0x8ce>
    5308:	e089      	b.n	541e <_dtoa_r+0x9e2>
    530a:	9908      	ldr	r1, [sp, #32]
    530c:	9805      	ldr	r0, [sp, #20]
    530e:	f7ff fa10 	bl	4732 <__mcmp>
    5312:	2800      	cmp	r0, #0
    5314:	db00      	blt.n	5318 <_dtoa_r+0x8dc>
    5316:	e082      	b.n	541e <_dtoa_r+0x9e2>
    5318:	9b03      	ldr	r3, [sp, #12]
    531a:	220a      	movs	r2, #10
    531c:	3b01      	subs	r3, #1
    531e:	9303      	str	r3, [sp, #12]
    5320:	9905      	ldr	r1, [sp, #20]
    5322:	2300      	movs	r3, #0
    5324:	9804      	ldr	r0, [sp, #16]
    5326:	f7ff f844 	bl	43b2 <__multadd>
    532a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    532c:	9005      	str	r0, [sp, #20]
    532e:	2b00      	cmp	r3, #0
    5330:	d100      	bne.n	5334 <_dtoa_r+0x8f8>
    5332:	e15d      	b.n	55f0 <_dtoa_r+0xbb4>
    5334:	2300      	movs	r3, #0
    5336:	0031      	movs	r1, r6
    5338:	220a      	movs	r2, #10
    533a:	9804      	ldr	r0, [sp, #16]
    533c:	f7ff f839 	bl	43b2 <__multadd>
    5340:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5342:	0006      	movs	r6, r0
    5344:	2b00      	cmp	r3, #0
    5346:	dc02      	bgt.n	534e <_dtoa_r+0x912>
    5348:	9b22      	ldr	r3, [sp, #136]	; 0x88
    534a:	2b02      	cmp	r3, #2
    534c:	dc6d      	bgt.n	542a <_dtoa_r+0x9ee>
    534e:	2c00      	cmp	r4, #0
    5350:	dd05      	ble.n	535e <_dtoa_r+0x922>
    5352:	0031      	movs	r1, r6
    5354:	0022      	movs	r2, r4
    5356:	9804      	ldr	r0, [sp, #16]
    5358:	f7ff f99a 	bl	4690 <__lshift>
    535c:	0006      	movs	r6, r0
    535e:	0030      	movs	r0, r6
    5360:	2d00      	cmp	r5, #0
    5362:	d011      	beq.n	5388 <_dtoa_r+0x94c>
    5364:	6871      	ldr	r1, [r6, #4]
    5366:	9804      	ldr	r0, [sp, #16]
    5368:	f7fe ffd2 	bl	4310 <_Balloc>
    536c:	0031      	movs	r1, r6
    536e:	0004      	movs	r4, r0
    5370:	6933      	ldr	r3, [r6, #16]
    5372:	310c      	adds	r1, #12
    5374:	1c9a      	adds	r2, r3, #2
    5376:	0092      	lsls	r2, r2, #2
    5378:	300c      	adds	r0, #12
    537a:	f7fe fdf5 	bl	3f68 <memcpy>
    537e:	2201      	movs	r2, #1
    5380:	0021      	movs	r1, r4
    5382:	9804      	ldr	r0, [sp, #16]
    5384:	f7ff f984 	bl	4690 <__lshift>
    5388:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    538a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    538c:	3f01      	subs	r7, #1
    538e:	930b      	str	r3, [sp, #44]	; 0x2c
    5390:	19db      	adds	r3, r3, r7
    5392:	0037      	movs	r7, r6
    5394:	0006      	movs	r6, r0
    5396:	930f      	str	r3, [sp, #60]	; 0x3c
    5398:	9908      	ldr	r1, [sp, #32]
    539a:	9805      	ldr	r0, [sp, #20]
    539c:	f7ff faca 	bl	4934 <quorem>
    53a0:	0039      	movs	r1, r7
    53a2:	900d      	str	r0, [sp, #52]	; 0x34
    53a4:	0004      	movs	r4, r0
    53a6:	9805      	ldr	r0, [sp, #20]
    53a8:	f7ff f9c3 	bl	4732 <__mcmp>
    53ac:	0032      	movs	r2, r6
    53ae:	900e      	str	r0, [sp, #56]	; 0x38
    53b0:	9908      	ldr	r1, [sp, #32]
    53b2:	9804      	ldr	r0, [sp, #16]
    53b4:	f7ff f9d6 	bl	4764 <__mdiff>
    53b8:	2301      	movs	r3, #1
    53ba:	930c      	str	r3, [sp, #48]	; 0x30
    53bc:	68c3      	ldr	r3, [r0, #12]
    53be:	3430      	adds	r4, #48	; 0x30
    53c0:	0005      	movs	r5, r0
    53c2:	2b00      	cmp	r3, #0
    53c4:	d104      	bne.n	53d0 <_dtoa_r+0x994>
    53c6:	0001      	movs	r1, r0
    53c8:	9805      	ldr	r0, [sp, #20]
    53ca:	f7ff f9b2 	bl	4732 <__mcmp>
    53ce:	900c      	str	r0, [sp, #48]	; 0x30
    53d0:	0029      	movs	r1, r5
    53d2:	9804      	ldr	r0, [sp, #16]
    53d4:	f7fe ffd4 	bl	4380 <_Bfree>
    53d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    53da:	9a22      	ldr	r2, [sp, #136]	; 0x88
    53dc:	4313      	orrs	r3, r2
    53de:	d000      	beq.n	53e2 <_dtoa_r+0x9a6>
    53e0:	e089      	b.n	54f6 <_dtoa_r+0xaba>
    53e2:	9a06      	ldr	r2, [sp, #24]
    53e4:	3301      	adds	r3, #1
    53e6:	4213      	tst	r3, r2
    53e8:	d000      	beq.n	53ec <_dtoa_r+0x9b0>
    53ea:	e084      	b.n	54f6 <_dtoa_r+0xaba>
    53ec:	2c39      	cmp	r4, #57	; 0x39
    53ee:	d100      	bne.n	53f2 <_dtoa_r+0x9b6>
    53f0:	e0a3      	b.n	553a <_dtoa_r+0xafe>
    53f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    53f4:	2b00      	cmp	r3, #0
    53f6:	dd01      	ble.n	53fc <_dtoa_r+0x9c0>
    53f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    53fa:	3431      	adds	r4, #49	; 0x31
    53fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    53fe:	1c5d      	adds	r5, r3, #1
    5400:	701c      	strb	r4, [r3, #0]
    5402:	e027      	b.n	5454 <_dtoa_r+0xa18>
    5404:	2b04      	cmp	r3, #4
    5406:	d100      	bne.n	540a <_dtoa_r+0x9ce>
    5408:	e769      	b.n	52de <_dtoa_r+0x8a2>
    540a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    540c:	331c      	adds	r3, #28
    540e:	18d2      	adds	r2, r2, r3
    5410:	920b      	str	r2, [sp, #44]	; 0x2c
    5412:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5414:	18e4      	adds	r4, r4, r3
    5416:	18d3      	adds	r3, r2, r3
    5418:	e760      	b.n	52dc <_dtoa_r+0x8a0>
    541a:	0003      	movs	r3, r0
    541c:	e7f5      	b.n	540a <_dtoa_r+0x9ce>
    541e:	2f00      	cmp	r7, #0
    5420:	dc3c      	bgt.n	549c <_dtoa_r+0xa60>
    5422:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5424:	2b02      	cmp	r3, #2
    5426:	dd39      	ble.n	549c <_dtoa_r+0xa60>
    5428:	970d      	str	r7, [sp, #52]	; 0x34
    542a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    542c:	2b00      	cmp	r3, #0
    542e:	d10c      	bne.n	544a <_dtoa_r+0xa0e>
    5430:	9908      	ldr	r1, [sp, #32]
    5432:	2205      	movs	r2, #5
    5434:	9804      	ldr	r0, [sp, #16]
    5436:	f7fe ffbc 	bl	43b2 <__multadd>
    543a:	9008      	str	r0, [sp, #32]
    543c:	0001      	movs	r1, r0
    543e:	9805      	ldr	r0, [sp, #20]
    5440:	f7ff f977 	bl	4732 <__mcmp>
    5444:	2800      	cmp	r0, #0
    5446:	dd00      	ble.n	544a <_dtoa_r+0xa0e>
    5448:	e55a      	b.n	4f00 <_dtoa_r+0x4c4>
    544a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    544c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    544e:	43db      	mvns	r3, r3
    5450:	9303      	str	r3, [sp, #12]
    5452:	2700      	movs	r7, #0
    5454:	9908      	ldr	r1, [sp, #32]
    5456:	9804      	ldr	r0, [sp, #16]
    5458:	f7fe ff92 	bl	4380 <_Bfree>
    545c:	2e00      	cmp	r6, #0
    545e:	d100      	bne.n	5462 <_dtoa_r+0xa26>
    5460:	e63f      	b.n	50e2 <_dtoa_r+0x6a6>
    5462:	2f00      	cmp	r7, #0
    5464:	d005      	beq.n	5472 <_dtoa_r+0xa36>
    5466:	42b7      	cmp	r7, r6
    5468:	d003      	beq.n	5472 <_dtoa_r+0xa36>
    546a:	0039      	movs	r1, r7
    546c:	9804      	ldr	r0, [sp, #16]
    546e:	f7fe ff87 	bl	4380 <_Bfree>
    5472:	0031      	movs	r1, r6
    5474:	9804      	ldr	r0, [sp, #16]
    5476:	f7fe ff83 	bl	4380 <_Bfree>
    547a:	e632      	b.n	50e2 <_dtoa_r+0x6a6>
    547c:	9508      	str	r5, [sp, #32]
    547e:	002e      	movs	r6, r5
    5480:	e7e3      	b.n	544a <_dtoa_r+0xa0e>
    5482:	2300      	movs	r3, #0
    5484:	9308      	str	r3, [sp, #32]
    5486:	001e      	movs	r6, r3
    5488:	e7df      	b.n	544a <_dtoa_r+0xa0e>
    548a:	46c0      	nop			; (mov r8, r8)
    548c:	40240000 	.word	0x40240000
    5490:	00000433 	.word	0x00000433
    5494:	9603      	str	r6, [sp, #12]
    5496:	9508      	str	r5, [sp, #32]
    5498:	002e      	movs	r6, r5
    549a:	e531      	b.n	4f00 <_dtoa_r+0x4c4>
    549c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    549e:	970d      	str	r7, [sp, #52]	; 0x34
    54a0:	2b00      	cmp	r3, #0
    54a2:	d000      	beq.n	54a6 <_dtoa_r+0xa6a>
    54a4:	e753      	b.n	534e <_dtoa_r+0x912>
    54a6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    54a8:	9908      	ldr	r1, [sp, #32]
    54aa:	9805      	ldr	r0, [sp, #20]
    54ac:	f7ff fa42 	bl	4934 <quorem>
    54b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    54b2:	3030      	adds	r0, #48	; 0x30
    54b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    54b6:	7028      	strb	r0, [r5, #0]
    54b8:	3501      	adds	r5, #1
    54ba:	0004      	movs	r4, r0
    54bc:	1aeb      	subs	r3, r5, r3
    54be:	429a      	cmp	r2, r3
    54c0:	dc78      	bgt.n	55b4 <_dtoa_r+0xb78>
    54c2:	1e15      	subs	r5, r2, #0
    54c4:	dc00      	bgt.n	54c8 <_dtoa_r+0xa8c>
    54c6:	2501      	movs	r5, #1
    54c8:	2700      	movs	r7, #0
    54ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    54cc:	195d      	adds	r5, r3, r5
    54ce:	9905      	ldr	r1, [sp, #20]
    54d0:	2201      	movs	r2, #1
    54d2:	9804      	ldr	r0, [sp, #16]
    54d4:	f7ff f8dc 	bl	4690 <__lshift>
    54d8:	9908      	ldr	r1, [sp, #32]
    54da:	9005      	str	r0, [sp, #20]
    54dc:	f7ff f929 	bl	4732 <__mcmp>
    54e0:	2800      	cmp	r0, #0
    54e2:	dc2f      	bgt.n	5544 <_dtoa_r+0xb08>
    54e4:	d101      	bne.n	54ea <_dtoa_r+0xaae>
    54e6:	07e3      	lsls	r3, r4, #31
    54e8:	d42c      	bmi.n	5544 <_dtoa_r+0xb08>
    54ea:	1e6b      	subs	r3, r5, #1
    54ec:	781a      	ldrb	r2, [r3, #0]
    54ee:	2a30      	cmp	r2, #48	; 0x30
    54f0:	d1b0      	bne.n	5454 <_dtoa_r+0xa18>
    54f2:	001d      	movs	r5, r3
    54f4:	e7f9      	b.n	54ea <_dtoa_r+0xaae>
    54f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    54f8:	2b00      	cmp	r3, #0
    54fa:	db07      	blt.n	550c <_dtoa_r+0xad0>
    54fc:	001d      	movs	r5, r3
    54fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5500:	431d      	orrs	r5, r3
    5502:	d126      	bne.n	5552 <_dtoa_r+0xb16>
    5504:	2301      	movs	r3, #1
    5506:	9a06      	ldr	r2, [sp, #24]
    5508:	4213      	tst	r3, r2
    550a:	d122      	bne.n	5552 <_dtoa_r+0xb16>
    550c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    550e:	2b00      	cmp	r3, #0
    5510:	dc00      	bgt.n	5514 <_dtoa_r+0xad8>
    5512:	e773      	b.n	53fc <_dtoa_r+0x9c0>
    5514:	9905      	ldr	r1, [sp, #20]
    5516:	2201      	movs	r2, #1
    5518:	9804      	ldr	r0, [sp, #16]
    551a:	f7ff f8b9 	bl	4690 <__lshift>
    551e:	9908      	ldr	r1, [sp, #32]
    5520:	9005      	str	r0, [sp, #20]
    5522:	f7ff f906 	bl	4732 <__mcmp>
    5526:	2800      	cmp	r0, #0
    5528:	dc04      	bgt.n	5534 <_dtoa_r+0xaf8>
    552a:	d000      	beq.n	552e <_dtoa_r+0xaf2>
    552c:	e766      	b.n	53fc <_dtoa_r+0x9c0>
    552e:	07e3      	lsls	r3, r4, #31
    5530:	d400      	bmi.n	5534 <_dtoa_r+0xaf8>
    5532:	e763      	b.n	53fc <_dtoa_r+0x9c0>
    5534:	2c39      	cmp	r4, #57	; 0x39
    5536:	d000      	beq.n	553a <_dtoa_r+0xafe>
    5538:	e75e      	b.n	53f8 <_dtoa_r+0x9bc>
    553a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    553c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    553e:	1c5d      	adds	r5, r3, #1
    5540:	2339      	movs	r3, #57	; 0x39
    5542:	7013      	strb	r3, [r2, #0]
    5544:	1e6b      	subs	r3, r5, #1
    5546:	781a      	ldrb	r2, [r3, #0]
    5548:	2a39      	cmp	r2, #57	; 0x39
    554a:	d03b      	beq.n	55c4 <_dtoa_r+0xb88>
    554c:	3201      	adds	r2, #1
    554e:	701a      	strb	r2, [r3, #0]
    5550:	e780      	b.n	5454 <_dtoa_r+0xa18>
    5552:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5554:	3301      	adds	r3, #1
    5556:	930d      	str	r3, [sp, #52]	; 0x34
    5558:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    555a:	2b00      	cmp	r3, #0
    555c:	dd05      	ble.n	556a <_dtoa_r+0xb2e>
    555e:	2c39      	cmp	r4, #57	; 0x39
    5560:	d0eb      	beq.n	553a <_dtoa_r+0xafe>
    5562:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    5564:	3401      	adds	r4, #1
    5566:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5568:	e74a      	b.n	5400 <_dtoa_r+0x9c4>
    556a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    556c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    556e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    5570:	701c      	strb	r4, [r3, #0]
    5572:	4293      	cmp	r3, r2
    5574:	d0ab      	beq.n	54ce <_dtoa_r+0xa92>
    5576:	2300      	movs	r3, #0
    5578:	220a      	movs	r2, #10
    557a:	9905      	ldr	r1, [sp, #20]
    557c:	9804      	ldr	r0, [sp, #16]
    557e:	f7fe ff18 	bl	43b2 <__multadd>
    5582:	2300      	movs	r3, #0
    5584:	9005      	str	r0, [sp, #20]
    5586:	220a      	movs	r2, #10
    5588:	0039      	movs	r1, r7
    558a:	9804      	ldr	r0, [sp, #16]
    558c:	42b7      	cmp	r7, r6
    558e:	d106      	bne.n	559e <_dtoa_r+0xb62>
    5590:	f7fe ff0f 	bl	43b2 <__multadd>
    5594:	0007      	movs	r7, r0
    5596:	0006      	movs	r6, r0
    5598:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    559a:	930b      	str	r3, [sp, #44]	; 0x2c
    559c:	e6fc      	b.n	5398 <_dtoa_r+0x95c>
    559e:	f7fe ff08 	bl	43b2 <__multadd>
    55a2:	0031      	movs	r1, r6
    55a4:	0007      	movs	r7, r0
    55a6:	2300      	movs	r3, #0
    55a8:	220a      	movs	r2, #10
    55aa:	9804      	ldr	r0, [sp, #16]
    55ac:	f7fe ff01 	bl	43b2 <__multadd>
    55b0:	0006      	movs	r6, r0
    55b2:	e7f1      	b.n	5598 <_dtoa_r+0xb5c>
    55b4:	2300      	movs	r3, #0
    55b6:	220a      	movs	r2, #10
    55b8:	9905      	ldr	r1, [sp, #20]
    55ba:	9804      	ldr	r0, [sp, #16]
    55bc:	f7fe fef9 	bl	43b2 <__multadd>
    55c0:	9005      	str	r0, [sp, #20]
    55c2:	e771      	b.n	54a8 <_dtoa_r+0xa6c>
    55c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    55c6:	429a      	cmp	r2, r3
    55c8:	d105      	bne.n	55d6 <_dtoa_r+0xb9a>
    55ca:	9b03      	ldr	r3, [sp, #12]
    55cc:	3301      	adds	r3, #1
    55ce:	9303      	str	r3, [sp, #12]
    55d0:	2331      	movs	r3, #49	; 0x31
    55d2:	7013      	strb	r3, [r2, #0]
    55d4:	e73e      	b.n	5454 <_dtoa_r+0xa18>
    55d6:	001d      	movs	r5, r3
    55d8:	e7b4      	b.n	5544 <_dtoa_r+0xb08>
    55da:	4b0a      	ldr	r3, [pc, #40]	; (5604 <_dtoa_r+0xbc8>)
    55dc:	9a26      	ldr	r2, [sp, #152]	; 0x98
    55de:	930a      	str	r3, [sp, #40]	; 0x28
    55e0:	4b09      	ldr	r3, [pc, #36]	; (5608 <_dtoa_r+0xbcc>)
    55e2:	2a00      	cmp	r2, #0
    55e4:	d001      	beq.n	55ea <_dtoa_r+0xbae>
    55e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
    55e8:	6013      	str	r3, [r2, #0]
    55ea:	980a      	ldr	r0, [sp, #40]	; 0x28
    55ec:	b01d      	add	sp, #116	; 0x74
    55ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    55f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    55f2:	2b00      	cmp	r3, #0
    55f4:	dd00      	ble.n	55f8 <_dtoa_r+0xbbc>
    55f6:	e756      	b.n	54a6 <_dtoa_r+0xa6a>
    55f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    55fa:	2b02      	cmp	r3, #2
    55fc:	dc00      	bgt.n	5600 <_dtoa_r+0xbc4>
    55fe:	e752      	b.n	54a6 <_dtoa_r+0xa6a>
    5600:	e713      	b.n	542a <_dtoa_r+0x9ee>
    5602:	46c0      	nop			; (mov r8, r8)
    5604:	0000621c 	.word	0x0000621c
    5608:	00006224 	.word	0x00006224

0000560c <__gnu_thumb1_case_uqi>:
    560c:	b402      	push	{r1}
    560e:	4671      	mov	r1, lr
    5610:	0849      	lsrs	r1, r1, #1
    5612:	0049      	lsls	r1, r1, #1
    5614:	5c09      	ldrb	r1, [r1, r0]
    5616:	0049      	lsls	r1, r1, #1
    5618:	448e      	add	lr, r1
    561a:	bc02      	pop	{r1}
    561c:	4770      	bx	lr
    561e:	46c0      	nop			; (mov r8, r8)

00005620 <__aeabi_dadd>:
    5620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5622:	4645      	mov	r5, r8
    5624:	46de      	mov	lr, fp
    5626:	4657      	mov	r7, sl
    5628:	464e      	mov	r6, r9
    562a:	030c      	lsls	r4, r1, #12
    562c:	b5e0      	push	{r5, r6, r7, lr}
    562e:	004e      	lsls	r6, r1, #1
    5630:	0fc9      	lsrs	r1, r1, #31
    5632:	4688      	mov	r8, r1
    5634:	000d      	movs	r5, r1
    5636:	0a61      	lsrs	r1, r4, #9
    5638:	0f44      	lsrs	r4, r0, #29
    563a:	430c      	orrs	r4, r1
    563c:	00c7      	lsls	r7, r0, #3
    563e:	0319      	lsls	r1, r3, #12
    5640:	0058      	lsls	r0, r3, #1
    5642:	0fdb      	lsrs	r3, r3, #31
    5644:	469b      	mov	fp, r3
    5646:	0a4b      	lsrs	r3, r1, #9
    5648:	0f51      	lsrs	r1, r2, #29
    564a:	430b      	orrs	r3, r1
    564c:	0d76      	lsrs	r6, r6, #21
    564e:	0d40      	lsrs	r0, r0, #21
    5650:	0019      	movs	r1, r3
    5652:	00d2      	lsls	r2, r2, #3
    5654:	45d8      	cmp	r8, fp
    5656:	d100      	bne.n	565a <__aeabi_dadd+0x3a>
    5658:	e0ae      	b.n	57b8 <__aeabi_dadd+0x198>
    565a:	1a35      	subs	r5, r6, r0
    565c:	2d00      	cmp	r5, #0
    565e:	dc00      	bgt.n	5662 <__aeabi_dadd+0x42>
    5660:	e0f6      	b.n	5850 <__aeabi_dadd+0x230>
    5662:	2800      	cmp	r0, #0
    5664:	d10f      	bne.n	5686 <__aeabi_dadd+0x66>
    5666:	4313      	orrs	r3, r2
    5668:	d100      	bne.n	566c <__aeabi_dadd+0x4c>
    566a:	e0db      	b.n	5824 <__aeabi_dadd+0x204>
    566c:	1e6b      	subs	r3, r5, #1
    566e:	2b00      	cmp	r3, #0
    5670:	d000      	beq.n	5674 <__aeabi_dadd+0x54>
    5672:	e137      	b.n	58e4 <__aeabi_dadd+0x2c4>
    5674:	1aba      	subs	r2, r7, r2
    5676:	4297      	cmp	r7, r2
    5678:	41bf      	sbcs	r7, r7
    567a:	1a64      	subs	r4, r4, r1
    567c:	427f      	negs	r7, r7
    567e:	1be4      	subs	r4, r4, r7
    5680:	2601      	movs	r6, #1
    5682:	0017      	movs	r7, r2
    5684:	e024      	b.n	56d0 <__aeabi_dadd+0xb0>
    5686:	4bc6      	ldr	r3, [pc, #792]	; (59a0 <__aeabi_dadd+0x380>)
    5688:	429e      	cmp	r6, r3
    568a:	d04d      	beq.n	5728 <__aeabi_dadd+0x108>
    568c:	2380      	movs	r3, #128	; 0x80
    568e:	041b      	lsls	r3, r3, #16
    5690:	4319      	orrs	r1, r3
    5692:	2d38      	cmp	r5, #56	; 0x38
    5694:	dd00      	ble.n	5698 <__aeabi_dadd+0x78>
    5696:	e107      	b.n	58a8 <__aeabi_dadd+0x288>
    5698:	2d1f      	cmp	r5, #31
    569a:	dd00      	ble.n	569e <__aeabi_dadd+0x7e>
    569c:	e138      	b.n	5910 <__aeabi_dadd+0x2f0>
    569e:	2020      	movs	r0, #32
    56a0:	1b43      	subs	r3, r0, r5
    56a2:	469a      	mov	sl, r3
    56a4:	000b      	movs	r3, r1
    56a6:	4650      	mov	r0, sl
    56a8:	4083      	lsls	r3, r0
    56aa:	4699      	mov	r9, r3
    56ac:	0013      	movs	r3, r2
    56ae:	4648      	mov	r0, r9
    56b0:	40eb      	lsrs	r3, r5
    56b2:	4318      	orrs	r0, r3
    56b4:	0003      	movs	r3, r0
    56b6:	4650      	mov	r0, sl
    56b8:	4082      	lsls	r2, r0
    56ba:	1e50      	subs	r0, r2, #1
    56bc:	4182      	sbcs	r2, r0
    56be:	40e9      	lsrs	r1, r5
    56c0:	431a      	orrs	r2, r3
    56c2:	1aba      	subs	r2, r7, r2
    56c4:	1a61      	subs	r1, r4, r1
    56c6:	4297      	cmp	r7, r2
    56c8:	41a4      	sbcs	r4, r4
    56ca:	0017      	movs	r7, r2
    56cc:	4264      	negs	r4, r4
    56ce:	1b0c      	subs	r4, r1, r4
    56d0:	0223      	lsls	r3, r4, #8
    56d2:	d562      	bpl.n	579a <__aeabi_dadd+0x17a>
    56d4:	0264      	lsls	r4, r4, #9
    56d6:	0a65      	lsrs	r5, r4, #9
    56d8:	2d00      	cmp	r5, #0
    56da:	d100      	bne.n	56de <__aeabi_dadd+0xbe>
    56dc:	e0df      	b.n	589e <__aeabi_dadd+0x27e>
    56de:	0028      	movs	r0, r5
    56e0:	f7fe fa28 	bl	3b34 <__clzsi2>
    56e4:	0003      	movs	r3, r0
    56e6:	3b08      	subs	r3, #8
    56e8:	2b1f      	cmp	r3, #31
    56ea:	dd00      	ble.n	56ee <__aeabi_dadd+0xce>
    56ec:	e0d2      	b.n	5894 <__aeabi_dadd+0x274>
    56ee:	2220      	movs	r2, #32
    56f0:	003c      	movs	r4, r7
    56f2:	1ad2      	subs	r2, r2, r3
    56f4:	409d      	lsls	r5, r3
    56f6:	40d4      	lsrs	r4, r2
    56f8:	409f      	lsls	r7, r3
    56fa:	4325      	orrs	r5, r4
    56fc:	429e      	cmp	r6, r3
    56fe:	dd00      	ble.n	5702 <__aeabi_dadd+0xe2>
    5700:	e0c4      	b.n	588c <__aeabi_dadd+0x26c>
    5702:	1b9e      	subs	r6, r3, r6
    5704:	1c73      	adds	r3, r6, #1
    5706:	2b1f      	cmp	r3, #31
    5708:	dd00      	ble.n	570c <__aeabi_dadd+0xec>
    570a:	e0f1      	b.n	58f0 <__aeabi_dadd+0x2d0>
    570c:	2220      	movs	r2, #32
    570e:	0038      	movs	r0, r7
    5710:	0029      	movs	r1, r5
    5712:	1ad2      	subs	r2, r2, r3
    5714:	40d8      	lsrs	r0, r3
    5716:	4091      	lsls	r1, r2
    5718:	4097      	lsls	r7, r2
    571a:	002c      	movs	r4, r5
    571c:	4301      	orrs	r1, r0
    571e:	1e78      	subs	r0, r7, #1
    5720:	4187      	sbcs	r7, r0
    5722:	40dc      	lsrs	r4, r3
    5724:	2600      	movs	r6, #0
    5726:	430f      	orrs	r7, r1
    5728:	077b      	lsls	r3, r7, #29
    572a:	d009      	beq.n	5740 <__aeabi_dadd+0x120>
    572c:	230f      	movs	r3, #15
    572e:	403b      	ands	r3, r7
    5730:	2b04      	cmp	r3, #4
    5732:	d005      	beq.n	5740 <__aeabi_dadd+0x120>
    5734:	1d3b      	adds	r3, r7, #4
    5736:	42bb      	cmp	r3, r7
    5738:	41bf      	sbcs	r7, r7
    573a:	427f      	negs	r7, r7
    573c:	19e4      	adds	r4, r4, r7
    573e:	001f      	movs	r7, r3
    5740:	0223      	lsls	r3, r4, #8
    5742:	d52c      	bpl.n	579e <__aeabi_dadd+0x17e>
    5744:	4b96      	ldr	r3, [pc, #600]	; (59a0 <__aeabi_dadd+0x380>)
    5746:	3601      	adds	r6, #1
    5748:	429e      	cmp	r6, r3
    574a:	d100      	bne.n	574e <__aeabi_dadd+0x12e>
    574c:	e09a      	b.n	5884 <__aeabi_dadd+0x264>
    574e:	4645      	mov	r5, r8
    5750:	4b94      	ldr	r3, [pc, #592]	; (59a4 <__aeabi_dadd+0x384>)
    5752:	08ff      	lsrs	r7, r7, #3
    5754:	401c      	ands	r4, r3
    5756:	0760      	lsls	r0, r4, #29
    5758:	0576      	lsls	r6, r6, #21
    575a:	0264      	lsls	r4, r4, #9
    575c:	4307      	orrs	r7, r0
    575e:	0b24      	lsrs	r4, r4, #12
    5760:	0d76      	lsrs	r6, r6, #21
    5762:	2100      	movs	r1, #0
    5764:	0324      	lsls	r4, r4, #12
    5766:	0b23      	lsrs	r3, r4, #12
    5768:	0d0c      	lsrs	r4, r1, #20
    576a:	4a8f      	ldr	r2, [pc, #572]	; (59a8 <__aeabi_dadd+0x388>)
    576c:	0524      	lsls	r4, r4, #20
    576e:	431c      	orrs	r4, r3
    5770:	4014      	ands	r4, r2
    5772:	0533      	lsls	r3, r6, #20
    5774:	4323      	orrs	r3, r4
    5776:	005b      	lsls	r3, r3, #1
    5778:	07ed      	lsls	r5, r5, #31
    577a:	085b      	lsrs	r3, r3, #1
    577c:	432b      	orrs	r3, r5
    577e:	0038      	movs	r0, r7
    5780:	0019      	movs	r1, r3
    5782:	bc3c      	pop	{r2, r3, r4, r5}
    5784:	4690      	mov	r8, r2
    5786:	4699      	mov	r9, r3
    5788:	46a2      	mov	sl, r4
    578a:	46ab      	mov	fp, r5
    578c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    578e:	4664      	mov	r4, ip
    5790:	4304      	orrs	r4, r0
    5792:	d100      	bne.n	5796 <__aeabi_dadd+0x176>
    5794:	e211      	b.n	5bba <__aeabi_dadd+0x59a>
    5796:	0004      	movs	r4, r0
    5798:	4667      	mov	r7, ip
    579a:	077b      	lsls	r3, r7, #29
    579c:	d1c6      	bne.n	572c <__aeabi_dadd+0x10c>
    579e:	4645      	mov	r5, r8
    57a0:	0760      	lsls	r0, r4, #29
    57a2:	08ff      	lsrs	r7, r7, #3
    57a4:	4307      	orrs	r7, r0
    57a6:	08e4      	lsrs	r4, r4, #3
    57a8:	4b7d      	ldr	r3, [pc, #500]	; (59a0 <__aeabi_dadd+0x380>)
    57aa:	429e      	cmp	r6, r3
    57ac:	d030      	beq.n	5810 <__aeabi_dadd+0x1f0>
    57ae:	0324      	lsls	r4, r4, #12
    57b0:	0576      	lsls	r6, r6, #21
    57b2:	0b24      	lsrs	r4, r4, #12
    57b4:	0d76      	lsrs	r6, r6, #21
    57b6:	e7d4      	b.n	5762 <__aeabi_dadd+0x142>
    57b8:	1a33      	subs	r3, r6, r0
    57ba:	469a      	mov	sl, r3
    57bc:	2b00      	cmp	r3, #0
    57be:	dd78      	ble.n	58b2 <__aeabi_dadd+0x292>
    57c0:	2800      	cmp	r0, #0
    57c2:	d031      	beq.n	5828 <__aeabi_dadd+0x208>
    57c4:	4876      	ldr	r0, [pc, #472]	; (59a0 <__aeabi_dadd+0x380>)
    57c6:	4286      	cmp	r6, r0
    57c8:	d0ae      	beq.n	5728 <__aeabi_dadd+0x108>
    57ca:	2080      	movs	r0, #128	; 0x80
    57cc:	0400      	lsls	r0, r0, #16
    57ce:	4301      	orrs	r1, r0
    57d0:	4653      	mov	r3, sl
    57d2:	2b38      	cmp	r3, #56	; 0x38
    57d4:	dc00      	bgt.n	57d8 <__aeabi_dadd+0x1b8>
    57d6:	e0e9      	b.n	59ac <__aeabi_dadd+0x38c>
    57d8:	430a      	orrs	r2, r1
    57da:	1e51      	subs	r1, r2, #1
    57dc:	418a      	sbcs	r2, r1
    57de:	2100      	movs	r1, #0
    57e0:	19d2      	adds	r2, r2, r7
    57e2:	42ba      	cmp	r2, r7
    57e4:	41bf      	sbcs	r7, r7
    57e6:	1909      	adds	r1, r1, r4
    57e8:	427c      	negs	r4, r7
    57ea:	0017      	movs	r7, r2
    57ec:	190c      	adds	r4, r1, r4
    57ee:	0223      	lsls	r3, r4, #8
    57f0:	d5d3      	bpl.n	579a <__aeabi_dadd+0x17a>
    57f2:	4b6b      	ldr	r3, [pc, #428]	; (59a0 <__aeabi_dadd+0x380>)
    57f4:	3601      	adds	r6, #1
    57f6:	429e      	cmp	r6, r3
    57f8:	d100      	bne.n	57fc <__aeabi_dadd+0x1dc>
    57fa:	e13a      	b.n	5a72 <__aeabi_dadd+0x452>
    57fc:	2001      	movs	r0, #1
    57fe:	4b69      	ldr	r3, [pc, #420]	; (59a4 <__aeabi_dadd+0x384>)
    5800:	401c      	ands	r4, r3
    5802:	087b      	lsrs	r3, r7, #1
    5804:	4007      	ands	r7, r0
    5806:	431f      	orrs	r7, r3
    5808:	07e0      	lsls	r0, r4, #31
    580a:	4307      	orrs	r7, r0
    580c:	0864      	lsrs	r4, r4, #1
    580e:	e78b      	b.n	5728 <__aeabi_dadd+0x108>
    5810:	0023      	movs	r3, r4
    5812:	433b      	orrs	r3, r7
    5814:	d100      	bne.n	5818 <__aeabi_dadd+0x1f8>
    5816:	e1cb      	b.n	5bb0 <__aeabi_dadd+0x590>
    5818:	2280      	movs	r2, #128	; 0x80
    581a:	0312      	lsls	r2, r2, #12
    581c:	4314      	orrs	r4, r2
    581e:	0324      	lsls	r4, r4, #12
    5820:	0b24      	lsrs	r4, r4, #12
    5822:	e79e      	b.n	5762 <__aeabi_dadd+0x142>
    5824:	002e      	movs	r6, r5
    5826:	e77f      	b.n	5728 <__aeabi_dadd+0x108>
    5828:	0008      	movs	r0, r1
    582a:	4310      	orrs	r0, r2
    582c:	d100      	bne.n	5830 <__aeabi_dadd+0x210>
    582e:	e0b4      	b.n	599a <__aeabi_dadd+0x37a>
    5830:	1e58      	subs	r0, r3, #1
    5832:	2800      	cmp	r0, #0
    5834:	d000      	beq.n	5838 <__aeabi_dadd+0x218>
    5836:	e0de      	b.n	59f6 <__aeabi_dadd+0x3d6>
    5838:	18ba      	adds	r2, r7, r2
    583a:	42ba      	cmp	r2, r7
    583c:	419b      	sbcs	r3, r3
    583e:	1864      	adds	r4, r4, r1
    5840:	425b      	negs	r3, r3
    5842:	18e4      	adds	r4, r4, r3
    5844:	0017      	movs	r7, r2
    5846:	2601      	movs	r6, #1
    5848:	0223      	lsls	r3, r4, #8
    584a:	d5a6      	bpl.n	579a <__aeabi_dadd+0x17a>
    584c:	2602      	movs	r6, #2
    584e:	e7d5      	b.n	57fc <__aeabi_dadd+0x1dc>
    5850:	2d00      	cmp	r5, #0
    5852:	d16e      	bne.n	5932 <__aeabi_dadd+0x312>
    5854:	1c70      	adds	r0, r6, #1
    5856:	0540      	lsls	r0, r0, #21
    5858:	0d40      	lsrs	r0, r0, #21
    585a:	2801      	cmp	r0, #1
    585c:	dc00      	bgt.n	5860 <__aeabi_dadd+0x240>
    585e:	e0f9      	b.n	5a54 <__aeabi_dadd+0x434>
    5860:	1ab8      	subs	r0, r7, r2
    5862:	4684      	mov	ip, r0
    5864:	4287      	cmp	r7, r0
    5866:	4180      	sbcs	r0, r0
    5868:	1ae5      	subs	r5, r4, r3
    586a:	4240      	negs	r0, r0
    586c:	1a2d      	subs	r5, r5, r0
    586e:	0228      	lsls	r0, r5, #8
    5870:	d400      	bmi.n	5874 <__aeabi_dadd+0x254>
    5872:	e089      	b.n	5988 <__aeabi_dadd+0x368>
    5874:	1bd7      	subs	r7, r2, r7
    5876:	42ba      	cmp	r2, r7
    5878:	4192      	sbcs	r2, r2
    587a:	1b1c      	subs	r4, r3, r4
    587c:	4252      	negs	r2, r2
    587e:	1aa5      	subs	r5, r4, r2
    5880:	46d8      	mov	r8, fp
    5882:	e729      	b.n	56d8 <__aeabi_dadd+0xb8>
    5884:	4645      	mov	r5, r8
    5886:	2400      	movs	r4, #0
    5888:	2700      	movs	r7, #0
    588a:	e76a      	b.n	5762 <__aeabi_dadd+0x142>
    588c:	4c45      	ldr	r4, [pc, #276]	; (59a4 <__aeabi_dadd+0x384>)
    588e:	1af6      	subs	r6, r6, r3
    5890:	402c      	ands	r4, r5
    5892:	e749      	b.n	5728 <__aeabi_dadd+0x108>
    5894:	003d      	movs	r5, r7
    5896:	3828      	subs	r0, #40	; 0x28
    5898:	4085      	lsls	r5, r0
    589a:	2700      	movs	r7, #0
    589c:	e72e      	b.n	56fc <__aeabi_dadd+0xdc>
    589e:	0038      	movs	r0, r7
    58a0:	f7fe f948 	bl	3b34 <__clzsi2>
    58a4:	3020      	adds	r0, #32
    58a6:	e71d      	b.n	56e4 <__aeabi_dadd+0xc4>
    58a8:	430a      	orrs	r2, r1
    58aa:	1e51      	subs	r1, r2, #1
    58ac:	418a      	sbcs	r2, r1
    58ae:	2100      	movs	r1, #0
    58b0:	e707      	b.n	56c2 <__aeabi_dadd+0xa2>
    58b2:	2b00      	cmp	r3, #0
    58b4:	d000      	beq.n	58b8 <__aeabi_dadd+0x298>
    58b6:	e0f3      	b.n	5aa0 <__aeabi_dadd+0x480>
    58b8:	1c70      	adds	r0, r6, #1
    58ba:	0543      	lsls	r3, r0, #21
    58bc:	0d5b      	lsrs	r3, r3, #21
    58be:	2b01      	cmp	r3, #1
    58c0:	dc00      	bgt.n	58c4 <__aeabi_dadd+0x2a4>
    58c2:	e0ad      	b.n	5a20 <__aeabi_dadd+0x400>
    58c4:	4b36      	ldr	r3, [pc, #216]	; (59a0 <__aeabi_dadd+0x380>)
    58c6:	4298      	cmp	r0, r3
    58c8:	d100      	bne.n	58cc <__aeabi_dadd+0x2ac>
    58ca:	e0d1      	b.n	5a70 <__aeabi_dadd+0x450>
    58cc:	18ba      	adds	r2, r7, r2
    58ce:	42ba      	cmp	r2, r7
    58d0:	41bf      	sbcs	r7, r7
    58d2:	1864      	adds	r4, r4, r1
    58d4:	427f      	negs	r7, r7
    58d6:	19e4      	adds	r4, r4, r7
    58d8:	07e7      	lsls	r7, r4, #31
    58da:	0852      	lsrs	r2, r2, #1
    58dc:	4317      	orrs	r7, r2
    58de:	0864      	lsrs	r4, r4, #1
    58e0:	0006      	movs	r6, r0
    58e2:	e721      	b.n	5728 <__aeabi_dadd+0x108>
    58e4:	482e      	ldr	r0, [pc, #184]	; (59a0 <__aeabi_dadd+0x380>)
    58e6:	4285      	cmp	r5, r0
    58e8:	d100      	bne.n	58ec <__aeabi_dadd+0x2cc>
    58ea:	e093      	b.n	5a14 <__aeabi_dadd+0x3f4>
    58ec:	001d      	movs	r5, r3
    58ee:	e6d0      	b.n	5692 <__aeabi_dadd+0x72>
    58f0:	0029      	movs	r1, r5
    58f2:	3e1f      	subs	r6, #31
    58f4:	40f1      	lsrs	r1, r6
    58f6:	2b20      	cmp	r3, #32
    58f8:	d100      	bne.n	58fc <__aeabi_dadd+0x2dc>
    58fa:	e08d      	b.n	5a18 <__aeabi_dadd+0x3f8>
    58fc:	2240      	movs	r2, #64	; 0x40
    58fe:	1ad3      	subs	r3, r2, r3
    5900:	409d      	lsls	r5, r3
    5902:	432f      	orrs	r7, r5
    5904:	1e7d      	subs	r5, r7, #1
    5906:	41af      	sbcs	r7, r5
    5908:	2400      	movs	r4, #0
    590a:	430f      	orrs	r7, r1
    590c:	2600      	movs	r6, #0
    590e:	e744      	b.n	579a <__aeabi_dadd+0x17a>
    5910:	002b      	movs	r3, r5
    5912:	0008      	movs	r0, r1
    5914:	3b20      	subs	r3, #32
    5916:	40d8      	lsrs	r0, r3
    5918:	0003      	movs	r3, r0
    591a:	2d20      	cmp	r5, #32
    591c:	d100      	bne.n	5920 <__aeabi_dadd+0x300>
    591e:	e07d      	b.n	5a1c <__aeabi_dadd+0x3fc>
    5920:	2040      	movs	r0, #64	; 0x40
    5922:	1b45      	subs	r5, r0, r5
    5924:	40a9      	lsls	r1, r5
    5926:	430a      	orrs	r2, r1
    5928:	1e51      	subs	r1, r2, #1
    592a:	418a      	sbcs	r2, r1
    592c:	2100      	movs	r1, #0
    592e:	431a      	orrs	r2, r3
    5930:	e6c7      	b.n	56c2 <__aeabi_dadd+0xa2>
    5932:	2e00      	cmp	r6, #0
    5934:	d050      	beq.n	59d8 <__aeabi_dadd+0x3b8>
    5936:	4e1a      	ldr	r6, [pc, #104]	; (59a0 <__aeabi_dadd+0x380>)
    5938:	42b0      	cmp	r0, r6
    593a:	d057      	beq.n	59ec <__aeabi_dadd+0x3cc>
    593c:	2680      	movs	r6, #128	; 0x80
    593e:	426b      	negs	r3, r5
    5940:	4699      	mov	r9, r3
    5942:	0436      	lsls	r6, r6, #16
    5944:	4334      	orrs	r4, r6
    5946:	464b      	mov	r3, r9
    5948:	2b38      	cmp	r3, #56	; 0x38
    594a:	dd00      	ble.n	594e <__aeabi_dadd+0x32e>
    594c:	e0d6      	b.n	5afc <__aeabi_dadd+0x4dc>
    594e:	2b1f      	cmp	r3, #31
    5950:	dd00      	ble.n	5954 <__aeabi_dadd+0x334>
    5952:	e135      	b.n	5bc0 <__aeabi_dadd+0x5a0>
    5954:	2620      	movs	r6, #32
    5956:	1af5      	subs	r5, r6, r3
    5958:	0026      	movs	r6, r4
    595a:	40ae      	lsls	r6, r5
    595c:	46b2      	mov	sl, r6
    595e:	003e      	movs	r6, r7
    5960:	40de      	lsrs	r6, r3
    5962:	46ac      	mov	ip, r5
    5964:	0035      	movs	r5, r6
    5966:	4656      	mov	r6, sl
    5968:	432e      	orrs	r6, r5
    596a:	4665      	mov	r5, ip
    596c:	40af      	lsls	r7, r5
    596e:	1e7d      	subs	r5, r7, #1
    5970:	41af      	sbcs	r7, r5
    5972:	40dc      	lsrs	r4, r3
    5974:	4337      	orrs	r7, r6
    5976:	1bd7      	subs	r7, r2, r7
    5978:	42ba      	cmp	r2, r7
    597a:	4192      	sbcs	r2, r2
    597c:	1b0c      	subs	r4, r1, r4
    597e:	4252      	negs	r2, r2
    5980:	1aa4      	subs	r4, r4, r2
    5982:	0006      	movs	r6, r0
    5984:	46d8      	mov	r8, fp
    5986:	e6a3      	b.n	56d0 <__aeabi_dadd+0xb0>
    5988:	4664      	mov	r4, ip
    598a:	4667      	mov	r7, ip
    598c:	432c      	orrs	r4, r5
    598e:	d000      	beq.n	5992 <__aeabi_dadd+0x372>
    5990:	e6a2      	b.n	56d8 <__aeabi_dadd+0xb8>
    5992:	2500      	movs	r5, #0
    5994:	2600      	movs	r6, #0
    5996:	2700      	movs	r7, #0
    5998:	e706      	b.n	57a8 <__aeabi_dadd+0x188>
    599a:	001e      	movs	r6, r3
    599c:	e6c4      	b.n	5728 <__aeabi_dadd+0x108>
    599e:	46c0      	nop			; (mov r8, r8)
    59a0:	000007ff 	.word	0x000007ff
    59a4:	ff7fffff 	.word	0xff7fffff
    59a8:	800fffff 	.word	0x800fffff
    59ac:	2b1f      	cmp	r3, #31
    59ae:	dc63      	bgt.n	5a78 <__aeabi_dadd+0x458>
    59b0:	2020      	movs	r0, #32
    59b2:	1ac3      	subs	r3, r0, r3
    59b4:	0008      	movs	r0, r1
    59b6:	4098      	lsls	r0, r3
    59b8:	469c      	mov	ip, r3
    59ba:	4683      	mov	fp, r0
    59bc:	4653      	mov	r3, sl
    59be:	0010      	movs	r0, r2
    59c0:	40d8      	lsrs	r0, r3
    59c2:	0003      	movs	r3, r0
    59c4:	4658      	mov	r0, fp
    59c6:	4318      	orrs	r0, r3
    59c8:	4663      	mov	r3, ip
    59ca:	409a      	lsls	r2, r3
    59cc:	1e53      	subs	r3, r2, #1
    59ce:	419a      	sbcs	r2, r3
    59d0:	4653      	mov	r3, sl
    59d2:	4302      	orrs	r2, r0
    59d4:	40d9      	lsrs	r1, r3
    59d6:	e703      	b.n	57e0 <__aeabi_dadd+0x1c0>
    59d8:	0026      	movs	r6, r4
    59da:	433e      	orrs	r6, r7
    59dc:	d006      	beq.n	59ec <__aeabi_dadd+0x3cc>
    59de:	43eb      	mvns	r3, r5
    59e0:	4699      	mov	r9, r3
    59e2:	2b00      	cmp	r3, #0
    59e4:	d0c7      	beq.n	5976 <__aeabi_dadd+0x356>
    59e6:	4e94      	ldr	r6, [pc, #592]	; (5c38 <__aeabi_dadd+0x618>)
    59e8:	42b0      	cmp	r0, r6
    59ea:	d1ac      	bne.n	5946 <__aeabi_dadd+0x326>
    59ec:	000c      	movs	r4, r1
    59ee:	0017      	movs	r7, r2
    59f0:	0006      	movs	r6, r0
    59f2:	46d8      	mov	r8, fp
    59f4:	e698      	b.n	5728 <__aeabi_dadd+0x108>
    59f6:	4b90      	ldr	r3, [pc, #576]	; (5c38 <__aeabi_dadd+0x618>)
    59f8:	459a      	cmp	sl, r3
    59fa:	d00b      	beq.n	5a14 <__aeabi_dadd+0x3f4>
    59fc:	4682      	mov	sl, r0
    59fe:	e6e7      	b.n	57d0 <__aeabi_dadd+0x1b0>
    5a00:	2800      	cmp	r0, #0
    5a02:	d000      	beq.n	5a06 <__aeabi_dadd+0x3e6>
    5a04:	e09e      	b.n	5b44 <__aeabi_dadd+0x524>
    5a06:	0018      	movs	r0, r3
    5a08:	4310      	orrs	r0, r2
    5a0a:	d100      	bne.n	5a0e <__aeabi_dadd+0x3ee>
    5a0c:	e0e9      	b.n	5be2 <__aeabi_dadd+0x5c2>
    5a0e:	001c      	movs	r4, r3
    5a10:	0017      	movs	r7, r2
    5a12:	46d8      	mov	r8, fp
    5a14:	4e88      	ldr	r6, [pc, #544]	; (5c38 <__aeabi_dadd+0x618>)
    5a16:	e687      	b.n	5728 <__aeabi_dadd+0x108>
    5a18:	2500      	movs	r5, #0
    5a1a:	e772      	b.n	5902 <__aeabi_dadd+0x2e2>
    5a1c:	2100      	movs	r1, #0
    5a1e:	e782      	b.n	5926 <__aeabi_dadd+0x306>
    5a20:	0023      	movs	r3, r4
    5a22:	433b      	orrs	r3, r7
    5a24:	2e00      	cmp	r6, #0
    5a26:	d000      	beq.n	5a2a <__aeabi_dadd+0x40a>
    5a28:	e0ab      	b.n	5b82 <__aeabi_dadd+0x562>
    5a2a:	2b00      	cmp	r3, #0
    5a2c:	d100      	bne.n	5a30 <__aeabi_dadd+0x410>
    5a2e:	e0e7      	b.n	5c00 <__aeabi_dadd+0x5e0>
    5a30:	000b      	movs	r3, r1
    5a32:	4313      	orrs	r3, r2
    5a34:	d100      	bne.n	5a38 <__aeabi_dadd+0x418>
    5a36:	e677      	b.n	5728 <__aeabi_dadd+0x108>
    5a38:	18ba      	adds	r2, r7, r2
    5a3a:	42ba      	cmp	r2, r7
    5a3c:	41bf      	sbcs	r7, r7
    5a3e:	1864      	adds	r4, r4, r1
    5a40:	427f      	negs	r7, r7
    5a42:	19e4      	adds	r4, r4, r7
    5a44:	0223      	lsls	r3, r4, #8
    5a46:	d400      	bmi.n	5a4a <__aeabi_dadd+0x42a>
    5a48:	e0f2      	b.n	5c30 <__aeabi_dadd+0x610>
    5a4a:	4b7c      	ldr	r3, [pc, #496]	; (5c3c <__aeabi_dadd+0x61c>)
    5a4c:	0017      	movs	r7, r2
    5a4e:	401c      	ands	r4, r3
    5a50:	0006      	movs	r6, r0
    5a52:	e669      	b.n	5728 <__aeabi_dadd+0x108>
    5a54:	0020      	movs	r0, r4
    5a56:	4338      	orrs	r0, r7
    5a58:	2e00      	cmp	r6, #0
    5a5a:	d1d1      	bne.n	5a00 <__aeabi_dadd+0x3e0>
    5a5c:	2800      	cmp	r0, #0
    5a5e:	d15b      	bne.n	5b18 <__aeabi_dadd+0x4f8>
    5a60:	001c      	movs	r4, r3
    5a62:	4314      	orrs	r4, r2
    5a64:	d100      	bne.n	5a68 <__aeabi_dadd+0x448>
    5a66:	e0a8      	b.n	5bba <__aeabi_dadd+0x59a>
    5a68:	001c      	movs	r4, r3
    5a6a:	0017      	movs	r7, r2
    5a6c:	46d8      	mov	r8, fp
    5a6e:	e65b      	b.n	5728 <__aeabi_dadd+0x108>
    5a70:	0006      	movs	r6, r0
    5a72:	2400      	movs	r4, #0
    5a74:	2700      	movs	r7, #0
    5a76:	e697      	b.n	57a8 <__aeabi_dadd+0x188>
    5a78:	4650      	mov	r0, sl
    5a7a:	000b      	movs	r3, r1
    5a7c:	3820      	subs	r0, #32
    5a7e:	40c3      	lsrs	r3, r0
    5a80:	4699      	mov	r9, r3
    5a82:	4653      	mov	r3, sl
    5a84:	2b20      	cmp	r3, #32
    5a86:	d100      	bne.n	5a8a <__aeabi_dadd+0x46a>
    5a88:	e095      	b.n	5bb6 <__aeabi_dadd+0x596>
    5a8a:	2340      	movs	r3, #64	; 0x40
    5a8c:	4650      	mov	r0, sl
    5a8e:	1a1b      	subs	r3, r3, r0
    5a90:	4099      	lsls	r1, r3
    5a92:	430a      	orrs	r2, r1
    5a94:	1e51      	subs	r1, r2, #1
    5a96:	418a      	sbcs	r2, r1
    5a98:	464b      	mov	r3, r9
    5a9a:	2100      	movs	r1, #0
    5a9c:	431a      	orrs	r2, r3
    5a9e:	e69f      	b.n	57e0 <__aeabi_dadd+0x1c0>
    5aa0:	2e00      	cmp	r6, #0
    5aa2:	d130      	bne.n	5b06 <__aeabi_dadd+0x4e6>
    5aa4:	0026      	movs	r6, r4
    5aa6:	433e      	orrs	r6, r7
    5aa8:	d067      	beq.n	5b7a <__aeabi_dadd+0x55a>
    5aaa:	43db      	mvns	r3, r3
    5aac:	469a      	mov	sl, r3
    5aae:	2b00      	cmp	r3, #0
    5ab0:	d01c      	beq.n	5aec <__aeabi_dadd+0x4cc>
    5ab2:	4e61      	ldr	r6, [pc, #388]	; (5c38 <__aeabi_dadd+0x618>)
    5ab4:	42b0      	cmp	r0, r6
    5ab6:	d060      	beq.n	5b7a <__aeabi_dadd+0x55a>
    5ab8:	4653      	mov	r3, sl
    5aba:	2b38      	cmp	r3, #56	; 0x38
    5abc:	dd00      	ble.n	5ac0 <__aeabi_dadd+0x4a0>
    5abe:	e096      	b.n	5bee <__aeabi_dadd+0x5ce>
    5ac0:	2b1f      	cmp	r3, #31
    5ac2:	dd00      	ble.n	5ac6 <__aeabi_dadd+0x4a6>
    5ac4:	e09f      	b.n	5c06 <__aeabi_dadd+0x5e6>
    5ac6:	2620      	movs	r6, #32
    5ac8:	1af3      	subs	r3, r6, r3
    5aca:	0026      	movs	r6, r4
    5acc:	409e      	lsls	r6, r3
    5ace:	469c      	mov	ip, r3
    5ad0:	46b3      	mov	fp, r6
    5ad2:	4653      	mov	r3, sl
    5ad4:	003e      	movs	r6, r7
    5ad6:	40de      	lsrs	r6, r3
    5ad8:	0033      	movs	r3, r6
    5ada:	465e      	mov	r6, fp
    5adc:	431e      	orrs	r6, r3
    5ade:	4663      	mov	r3, ip
    5ae0:	409f      	lsls	r7, r3
    5ae2:	1e7b      	subs	r3, r7, #1
    5ae4:	419f      	sbcs	r7, r3
    5ae6:	4653      	mov	r3, sl
    5ae8:	40dc      	lsrs	r4, r3
    5aea:	4337      	orrs	r7, r6
    5aec:	18bf      	adds	r7, r7, r2
    5aee:	4297      	cmp	r7, r2
    5af0:	4192      	sbcs	r2, r2
    5af2:	1864      	adds	r4, r4, r1
    5af4:	4252      	negs	r2, r2
    5af6:	18a4      	adds	r4, r4, r2
    5af8:	0006      	movs	r6, r0
    5afa:	e678      	b.n	57ee <__aeabi_dadd+0x1ce>
    5afc:	4327      	orrs	r7, r4
    5afe:	1e7c      	subs	r4, r7, #1
    5b00:	41a7      	sbcs	r7, r4
    5b02:	2400      	movs	r4, #0
    5b04:	e737      	b.n	5976 <__aeabi_dadd+0x356>
    5b06:	4e4c      	ldr	r6, [pc, #304]	; (5c38 <__aeabi_dadd+0x618>)
    5b08:	42b0      	cmp	r0, r6
    5b0a:	d036      	beq.n	5b7a <__aeabi_dadd+0x55a>
    5b0c:	2680      	movs	r6, #128	; 0x80
    5b0e:	425b      	negs	r3, r3
    5b10:	0436      	lsls	r6, r6, #16
    5b12:	469a      	mov	sl, r3
    5b14:	4334      	orrs	r4, r6
    5b16:	e7cf      	b.n	5ab8 <__aeabi_dadd+0x498>
    5b18:	0018      	movs	r0, r3
    5b1a:	4310      	orrs	r0, r2
    5b1c:	d100      	bne.n	5b20 <__aeabi_dadd+0x500>
    5b1e:	e603      	b.n	5728 <__aeabi_dadd+0x108>
    5b20:	1ab8      	subs	r0, r7, r2
    5b22:	4684      	mov	ip, r0
    5b24:	4567      	cmp	r7, ip
    5b26:	41ad      	sbcs	r5, r5
    5b28:	1ae0      	subs	r0, r4, r3
    5b2a:	426d      	negs	r5, r5
    5b2c:	1b40      	subs	r0, r0, r5
    5b2e:	0205      	lsls	r5, r0, #8
    5b30:	d400      	bmi.n	5b34 <__aeabi_dadd+0x514>
    5b32:	e62c      	b.n	578e <__aeabi_dadd+0x16e>
    5b34:	1bd7      	subs	r7, r2, r7
    5b36:	42ba      	cmp	r2, r7
    5b38:	4192      	sbcs	r2, r2
    5b3a:	1b1c      	subs	r4, r3, r4
    5b3c:	4252      	negs	r2, r2
    5b3e:	1aa4      	subs	r4, r4, r2
    5b40:	46d8      	mov	r8, fp
    5b42:	e5f1      	b.n	5728 <__aeabi_dadd+0x108>
    5b44:	0018      	movs	r0, r3
    5b46:	4310      	orrs	r0, r2
    5b48:	d100      	bne.n	5b4c <__aeabi_dadd+0x52c>
    5b4a:	e763      	b.n	5a14 <__aeabi_dadd+0x3f4>
    5b4c:	08f8      	lsrs	r0, r7, #3
    5b4e:	0767      	lsls	r7, r4, #29
    5b50:	4307      	orrs	r7, r0
    5b52:	2080      	movs	r0, #128	; 0x80
    5b54:	08e4      	lsrs	r4, r4, #3
    5b56:	0300      	lsls	r0, r0, #12
    5b58:	4204      	tst	r4, r0
    5b5a:	d008      	beq.n	5b6e <__aeabi_dadd+0x54e>
    5b5c:	08dd      	lsrs	r5, r3, #3
    5b5e:	4205      	tst	r5, r0
    5b60:	d105      	bne.n	5b6e <__aeabi_dadd+0x54e>
    5b62:	08d2      	lsrs	r2, r2, #3
    5b64:	0759      	lsls	r1, r3, #29
    5b66:	4311      	orrs	r1, r2
    5b68:	000f      	movs	r7, r1
    5b6a:	002c      	movs	r4, r5
    5b6c:	46d8      	mov	r8, fp
    5b6e:	0f7b      	lsrs	r3, r7, #29
    5b70:	00e4      	lsls	r4, r4, #3
    5b72:	431c      	orrs	r4, r3
    5b74:	00ff      	lsls	r7, r7, #3
    5b76:	4e30      	ldr	r6, [pc, #192]	; (5c38 <__aeabi_dadd+0x618>)
    5b78:	e5d6      	b.n	5728 <__aeabi_dadd+0x108>
    5b7a:	000c      	movs	r4, r1
    5b7c:	0017      	movs	r7, r2
    5b7e:	0006      	movs	r6, r0
    5b80:	e5d2      	b.n	5728 <__aeabi_dadd+0x108>
    5b82:	2b00      	cmp	r3, #0
    5b84:	d038      	beq.n	5bf8 <__aeabi_dadd+0x5d8>
    5b86:	000b      	movs	r3, r1
    5b88:	4313      	orrs	r3, r2
    5b8a:	d100      	bne.n	5b8e <__aeabi_dadd+0x56e>
    5b8c:	e742      	b.n	5a14 <__aeabi_dadd+0x3f4>
    5b8e:	08f8      	lsrs	r0, r7, #3
    5b90:	0767      	lsls	r7, r4, #29
    5b92:	4307      	orrs	r7, r0
    5b94:	2080      	movs	r0, #128	; 0x80
    5b96:	08e4      	lsrs	r4, r4, #3
    5b98:	0300      	lsls	r0, r0, #12
    5b9a:	4204      	tst	r4, r0
    5b9c:	d0e7      	beq.n	5b6e <__aeabi_dadd+0x54e>
    5b9e:	08cb      	lsrs	r3, r1, #3
    5ba0:	4203      	tst	r3, r0
    5ba2:	d1e4      	bne.n	5b6e <__aeabi_dadd+0x54e>
    5ba4:	08d2      	lsrs	r2, r2, #3
    5ba6:	0749      	lsls	r1, r1, #29
    5ba8:	4311      	orrs	r1, r2
    5baa:	000f      	movs	r7, r1
    5bac:	001c      	movs	r4, r3
    5bae:	e7de      	b.n	5b6e <__aeabi_dadd+0x54e>
    5bb0:	2700      	movs	r7, #0
    5bb2:	2400      	movs	r4, #0
    5bb4:	e5d5      	b.n	5762 <__aeabi_dadd+0x142>
    5bb6:	2100      	movs	r1, #0
    5bb8:	e76b      	b.n	5a92 <__aeabi_dadd+0x472>
    5bba:	2500      	movs	r5, #0
    5bbc:	2700      	movs	r7, #0
    5bbe:	e5f3      	b.n	57a8 <__aeabi_dadd+0x188>
    5bc0:	464e      	mov	r6, r9
    5bc2:	0025      	movs	r5, r4
    5bc4:	3e20      	subs	r6, #32
    5bc6:	40f5      	lsrs	r5, r6
    5bc8:	464b      	mov	r3, r9
    5bca:	002e      	movs	r6, r5
    5bcc:	2b20      	cmp	r3, #32
    5bce:	d02d      	beq.n	5c2c <__aeabi_dadd+0x60c>
    5bd0:	2540      	movs	r5, #64	; 0x40
    5bd2:	1aed      	subs	r5, r5, r3
    5bd4:	40ac      	lsls	r4, r5
    5bd6:	4327      	orrs	r7, r4
    5bd8:	1e7c      	subs	r4, r7, #1
    5bda:	41a7      	sbcs	r7, r4
    5bdc:	2400      	movs	r4, #0
    5bde:	4337      	orrs	r7, r6
    5be0:	e6c9      	b.n	5976 <__aeabi_dadd+0x356>
    5be2:	2480      	movs	r4, #128	; 0x80
    5be4:	2500      	movs	r5, #0
    5be6:	0324      	lsls	r4, r4, #12
    5be8:	4e13      	ldr	r6, [pc, #76]	; (5c38 <__aeabi_dadd+0x618>)
    5bea:	2700      	movs	r7, #0
    5bec:	e5dc      	b.n	57a8 <__aeabi_dadd+0x188>
    5bee:	4327      	orrs	r7, r4
    5bf0:	1e7c      	subs	r4, r7, #1
    5bf2:	41a7      	sbcs	r7, r4
    5bf4:	2400      	movs	r4, #0
    5bf6:	e779      	b.n	5aec <__aeabi_dadd+0x4cc>
    5bf8:	000c      	movs	r4, r1
    5bfa:	0017      	movs	r7, r2
    5bfc:	4e0e      	ldr	r6, [pc, #56]	; (5c38 <__aeabi_dadd+0x618>)
    5bfe:	e593      	b.n	5728 <__aeabi_dadd+0x108>
    5c00:	000c      	movs	r4, r1
    5c02:	0017      	movs	r7, r2
    5c04:	e590      	b.n	5728 <__aeabi_dadd+0x108>
    5c06:	4656      	mov	r6, sl
    5c08:	0023      	movs	r3, r4
    5c0a:	3e20      	subs	r6, #32
    5c0c:	40f3      	lsrs	r3, r6
    5c0e:	4699      	mov	r9, r3
    5c10:	4653      	mov	r3, sl
    5c12:	2b20      	cmp	r3, #32
    5c14:	d00e      	beq.n	5c34 <__aeabi_dadd+0x614>
    5c16:	2340      	movs	r3, #64	; 0x40
    5c18:	4656      	mov	r6, sl
    5c1a:	1b9b      	subs	r3, r3, r6
    5c1c:	409c      	lsls	r4, r3
    5c1e:	4327      	orrs	r7, r4
    5c20:	1e7c      	subs	r4, r7, #1
    5c22:	41a7      	sbcs	r7, r4
    5c24:	464b      	mov	r3, r9
    5c26:	2400      	movs	r4, #0
    5c28:	431f      	orrs	r7, r3
    5c2a:	e75f      	b.n	5aec <__aeabi_dadd+0x4cc>
    5c2c:	2400      	movs	r4, #0
    5c2e:	e7d2      	b.n	5bd6 <__aeabi_dadd+0x5b6>
    5c30:	0017      	movs	r7, r2
    5c32:	e5b2      	b.n	579a <__aeabi_dadd+0x17a>
    5c34:	2400      	movs	r4, #0
    5c36:	e7f2      	b.n	5c1e <__aeabi_dadd+0x5fe>
    5c38:	000007ff 	.word	0x000007ff
    5c3c:	ff7fffff 	.word	0xff7fffff
    5c40:	682f2e2e 	.word	0x682f2e2e
    5c44:	732f6c61 	.word	0x732f6c61
    5c48:	682f6372 	.word	0x682f6372
    5c4c:	615f6c61 	.word	0x615f6c61
    5c50:	735f6364 	.word	0x735f6364
    5c54:	2e636e79 	.word	0x2e636e79
    5c58:	00000063 	.word	0x00000063
    5c5c:	682f2e2e 	.word	0x682f2e2e
    5c60:	732f6c61 	.word	0x732f6c61
    5c64:	682f6372 	.word	0x682f6372
    5c68:	635f6c61 	.word	0x635f6c61
    5c6c:	615f6e61 	.word	0x615f6e61
    5c70:	636e7973 	.word	0x636e7973
    5c74:	0000632e 	.word	0x0000632e
    5c78:	682f2e2e 	.word	0x682f2e2e
    5c7c:	732f6c61 	.word	0x732f6c61
    5c80:	682f6372 	.word	0x682f6372
    5c84:	695f6c61 	.word	0x695f6c61
    5c88:	00632e6f 	.word	0x00632e6f
    5c8c:	682f2e2e 	.word	0x682f2e2e
    5c90:	732f6c61 	.word	0x732f6c61
    5c94:	682f6372 	.word	0x682f6372
    5c98:	735f6c61 	.word	0x735f6c61
    5c9c:	6d5f6970 	.word	0x6d5f6970
    5ca0:	6e79735f 	.word	0x6e79735f
    5ca4:	00632e63 	.word	0x00632e63
    5ca8:	682f2e2e 	.word	0x682f2e2e
    5cac:	732f6c61 	.word	0x732f6c61
    5cb0:	682f6372 	.word	0x682f6372
    5cb4:	745f6c61 	.word	0x745f6c61
    5cb8:	5f706d65 	.word	0x5f706d65
    5cbc:	636e7973 	.word	0x636e7973
    5cc0:	0000632e 	.word	0x0000632e
    5cc4:	682f2e2e 	.word	0x682f2e2e
    5cc8:	732f6c61 	.word	0x732f6c61
    5ccc:	682f6372 	.word	0x682f6372
    5cd0:	755f6c61 	.word	0x755f6c61
    5cd4:	74726173 	.word	0x74726173
    5cd8:	7973615f 	.word	0x7973615f
    5cdc:	632e636e 	.word	0x632e636e
    5ce0:	00000000 	.word	0x00000000
    5ce4:	682f2e2e 	.word	0x682f2e2e
    5ce8:	752f6c61 	.word	0x752f6c61
    5cec:	736c6974 	.word	0x736c6974
    5cf0:	6372732f 	.word	0x6372732f
    5cf4:	6974752f 	.word	0x6974752f
    5cf8:	725f736c 	.word	0x725f736c
    5cfc:	62676e69 	.word	0x62676e69
    5d00:	65666675 	.word	0x65666675
    5d04:	00632e72 	.word	0x00632e72

00005d08 <_adcs>:
    5d08:	05000000 18000000 00000000 00000000     ................
	...
    5d24:	682f2e2e 612f6c70 682f6364 615f6c70     ../hpl/adc/hpl_a
    5d34:	632e6364 00000000 682f2e2e 732f6c70     dc.c....../hpl/s
    5d44:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    5d54:	0000632e                                .c..

00005d58 <crc15Table>:
    5d58:	c5990000 0b32ceab 1d56d8cf d3fd1664     ......2...V.d...
    5d68:	319ef407 ff353aac e9512cc8 27fae263     ...1.:5..,Q.c..'
    5d78:	680ead97 a6a5633c b0c17558 7e6abbf3     ...h<c..Xu....j~
    5d88:	9c095990 52a2973b 44c6815f 8a6d4ff4     .Y..;..R_..D.Om.
    5d98:	9eb75b2e 501c9585 467883e1 88d34d4a     .[.....P..xFJM..
    5da8:	6ab0af29 a41b6182 b27f77e6 7cd4b94d     )..j.a...w..M..|
    5db8:	3320f6b9 fd8b3812 ebef2e76 2544e0dd     .. 3.8..v.....D%
    5dc8:	c72702be 098ccc15 1fe8da71 d14314da     ..'.....q.....C.
    5dd8:	365cf3c5 f8f73d6e ee932b0a 2038e5a1     ..\6n=...+....8 
    5de8:	c25b07c2 0cf0c969 1a94df0d d43f11a6     ..[.i.........?.
    5df8:	9bcb5e52 556090f9 4304869d 8daf4836     R^....`U...C6H..
    5e08:	6fccaa55 a16764fe b703729a 79a8bc31     U..o.dg..r..1..y
    5e18:	6d72a8eb a3d96640 b5bd7024 7b16be8f     ..rm@f..$p.....{
    5e28:	99755cec 57de9247 41ba8423 8f114a88     .\u.G..W#..A.J..
    5e38:	c0e5057c 0e4ecbd7 182addb3 d6811318     |.....N...*.....
    5e48:	34e2f17b fa493fd0 ec2d29b4 2286e71f     {..4.?I..)-...."
    5e58:	678aa213 a9216cb8 bf457adc 71eeb477     ...g.l!..zE.w..q
    5e68:	938d5614 5d2698bf 4b428edb 85e94070     .V....&]..BKp@..
    5e78:	ca1d0f84 04b6c12f 12d2d74b dc7919e0     ..../...K.....y.
    5e88:	3e1afb83 f0b13528 e6d5234c 287eede7     ...>(5..L#....~(
    5e98:	3ca4f93d f20f3796 e46b21f2 2ac0ef59     =..<.7...!k.Y..*
    5ea8:	c8a30d3a 0608c391 106cd5f5 dec71b5e     :.........l.^...
    5eb8:	913354aa 5f989a01 49fc8c65 875742ce     .T3...._e..I.BW.
    5ec8:	6534a0ad ab9f6e06 bdfb7862 7350b6c9     ..4e.n..bx....Ps
    5ed8:	944f51d6 5ae49f7d 4c808919 822b47b2     .QO.}..Z...L.G+.
    5ee8:	6048a5d1 aee36b7a b8877d1e 762cb3b5     ..H`zk...}....,v
    5ef8:	39d8fc41 f77332ea e117248e 2fbcea25     A..9.2s..$..%../
    5f08:	cddf0846 0374c6ed 1510d089 dbbb1e22     F.....t....."...
    5f18:	cf610af8 01cac453 17aed237 d9051c9c     ..a.S...7.......
    5f28:	3b66feff f5cd3054 e3a92630 2d02e89b     ..f;T0..0&.....-
    5f38:	62f6a76f ac5d69c4 ba397fa0 7492b10b     o..b.i]...9....t
    5f48:	96f15368 585a9dc3 4e3e8ba7 8095450c     hS....ZX..>N.E..
    5f58:	0000a006 616c6552 65742079 00007473     ....Relay test..
    5f68:	6f727245 4e203a72 7573206f 63206863     Error: No such c
    5f78:	616d6d6f 0000646e 00001f68 00001f38     ommand..h...8...
    5f88:	00001f4a 00001e8c 00001f4a 00001f2e     J.......J.......
    5f98:	00001f4a 00001e8c 00001f38 00001f38     J.......8...8...
    5fa8:	00001f2e 00001e8c 00001e94 00001e94     ................
    5fb8:	00001e94 00001f50 00001f38 00001f38     ....P...8...8...
    5fc8:	00001f0c 00001ff0 00001f0c 00001f2e     ................
    5fd8:	00001f0c 00001ff0 00001f38 00001f38     ........8...8...
    5fe8:	00001f2e 00001ff0 00001e94 00001e94     ................
    5ff8:	00001e94 00001ffa 00002198 000020e8     .........!... ..
    6008:	000020e8 000020e6 0000218a 0000218a     . ... ...!...!..
    6018:	00002180 000020e6 0000218a 00002180     .!... ...!...!..
    6028:	0000218a 000020e6 00002190 00002190     .!... ...!...!..
    6038:	00002190 00002220 000028a8 0000288a     .!.. "...(...(..
    6048:	00002844 00002762 00002844 0000287c     D(..b'..D(..|(..
    6058:	00002844 00002762 0000288a 0000288a     D(..b'...(...(..
    6068:	0000287c 00002762 0000275a 0000275a     |(..b'..Z'..Z'..
    6078:	0000275a 00002ac0 00002f08 00002dc8     Z'...*.../...-..
    6088:	00002dc8 00002dc4 00002ee0 00002ee0     .-...-..........
    6098:	00002ed2 00002dc4 00002ee0 00002ed2     .....-..........
    60a8:	00002ee0 00002dc4 00002ee8 00002ee8     .....-..........
    60b8:	00002ee8 000030ec                       .....0..

000060c0 <__sf_fake_stderr>:
	...

000060e0 <__sf_fake_stdin>:
	...

00006100 <__sf_fake_stdout>:
	...

00006120 <__mprec_bigtens>:
    6120:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    6130:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    6140:	7f73bf3c 75154fdd                       <.s..O.u

00006148 <__mprec_tens>:
    6148:	00000000 3ff00000 00000000 40240000     .......?......$@
    6158:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    6168:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    6178:	00000000 412e8480 00000000 416312d0     .......A......cA
    6188:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    6198:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    61a8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    61b8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    61c8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    61d8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    61e8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    61f8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    6208:	79d99db4 44ea7843                       ...yCx.D

00006210 <p05.6047>:
    6210:	00000005 00000019 0000007d 69666e49     ........}...Infi
    6220:	7974696e 4e614e00 00003000              nity.NaN.0..

0000622c <_init>:
    622c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    622e:	46c0      	nop			; (mov r8, r8)
    6230:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6232:	bc08      	pop	{r3}
    6234:	469e      	mov	lr, r3
    6236:	4770      	bx	lr

00006238 <__init_array_start>:
    6238:	000000e5 	.word	0x000000e5

0000623c <_fini>:
    623c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    623e:	46c0      	nop			; (mov r8, r8)
    6240:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6242:	bc08      	pop	{r3}
    6244:	469e      	mov	lr, r3
    6246:	4770      	bx	lr

00006248 <__fini_array_start>:
    6248:	000000bd 	.word	0x000000bd

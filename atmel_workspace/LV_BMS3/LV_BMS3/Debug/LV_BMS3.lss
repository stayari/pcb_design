
LV_BMS3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005ed4  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000016c  20000000  00005ed4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000244  2000016c  00006040  0002016c  2**2
                  ALLOC
  3 .stack        00002000  200003b0  00006284  0002016c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002016c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020194  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002d556  00000000  00000000  000201ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003eba  00000000  00000000  0004d743  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00010aed  00000000  00000000  000515fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000ec0  00000000  00000000  000620ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001478  00000000  00000000  00062faa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000224c8  00000000  00000000  00064422  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00018177  00000000  00000000  000868ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0009fb33  00000000  00000000  0009ea61  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002f28  00000000  00000000  0013e594  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b0 23 00 20 2d 01 00 00 29 01 00 00 29 01 00 00     .#. -...)...)...
	...
      2c:	29 01 00 00 00 00 00 00 00 00 00 00 29 01 00 00     )...........)...
      3c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      4c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      5c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      6c:	29 01 00 00 29 01 00 00 e1 14 00 00 29 01 00 00     )...).......)...
      7c:	a9 10 00 00 29 01 00 00 29 01 00 00 29 01 00 00     ....)...)...)...
      8c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      9c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      ac:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...

000000bc <__do_global_dtors_aux>:
      bc:	b510      	push	{r4, lr}
      be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
      c0:	7823      	ldrb	r3, [r4, #0]
      c2:	2b00      	cmp	r3, #0
      c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
      c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
      c8:	2b00      	cmp	r3, #0
      ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
      cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
      ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
      d0:	bf00      	nop
      d2:	2301      	movs	r3, #1
      d4:	7023      	strb	r3, [r4, #0]
      d6:	bd10      	pop	{r4, pc}
      d8:	2000016c 	.word	0x2000016c
      dc:	00000000 	.word	0x00000000
      e0:	00005ed4 	.word	0x00005ed4

000000e4 <frame_dummy>:
      e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
      e6:	b510      	push	{r4, lr}
      e8:	2b00      	cmp	r3, #0
      ea:	d003      	beq.n	f4 <frame_dummy+0x10>
      ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
      ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
      f0:	e000      	b.n	f4 <frame_dummy+0x10>
      f2:	bf00      	nop
      f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
      f6:	6803      	ldr	r3, [r0, #0]
      f8:	2b00      	cmp	r3, #0
      fa:	d100      	bne.n	fe <frame_dummy+0x1a>
      fc:	bd10      	pop	{r4, pc}
      fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
     100:	2b00      	cmp	r3, #0
     102:	d0fb      	beq.n	fc <frame_dummy+0x18>
     104:	4798      	blx	r3
     106:	e7f9      	b.n	fc <frame_dummy+0x18>
     108:	00000000 	.word	0x00000000
     10c:	20000170 	.word	0x20000170
     110:	00005ed4 	.word	0x00005ed4
     114:	00005ed4 	.word	0x00005ed4
     118:	00000000 	.word	0x00000000

0000011c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     11c:	b510      	push	{r4, lr}
	system_init();
     11e:	4b01      	ldr	r3, [pc, #4]	; (124 <atmel_start_init+0x8>)
     120:	4798      	blx	r3
}
     122:	bd10      	pop	{r4, pc}
     124:	00000495 	.word	0x00000495

00000128 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     128:	e7fe      	b.n	128 <Dummy_Handler>
	...

0000012c <Reset_Handler>:
{
     12c:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     12e:	4a17      	ldr	r2, [pc, #92]	; (18c <Reset_Handler+0x60>)
     130:	4b17      	ldr	r3, [pc, #92]	; (190 <Reset_Handler+0x64>)
     132:	429a      	cmp	r2, r3
     134:	d011      	beq.n	15a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     136:	001a      	movs	r2, r3
     138:	4b16      	ldr	r3, [pc, #88]	; (194 <Reset_Handler+0x68>)
     13a:	429a      	cmp	r2, r3
     13c:	d20d      	bcs.n	15a <Reset_Handler+0x2e>
     13e:	4a16      	ldr	r2, [pc, #88]	; (198 <Reset_Handler+0x6c>)
     140:	3303      	adds	r3, #3
     142:	1a9b      	subs	r3, r3, r2
     144:	089b      	lsrs	r3, r3, #2
     146:	3301      	adds	r3, #1
     148:	009b      	lsls	r3, r3, #2
     14a:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     14c:	4810      	ldr	r0, [pc, #64]	; (190 <Reset_Handler+0x64>)
     14e:	490f      	ldr	r1, [pc, #60]	; (18c <Reset_Handler+0x60>)
     150:	588c      	ldr	r4, [r1, r2]
     152:	5084      	str	r4, [r0, r2]
     154:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     156:	429a      	cmp	r2, r3
     158:	d1fa      	bne.n	150 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     15a:	4a10      	ldr	r2, [pc, #64]	; (19c <Reset_Handler+0x70>)
     15c:	4b10      	ldr	r3, [pc, #64]	; (1a0 <Reset_Handler+0x74>)
     15e:	429a      	cmp	r2, r3
     160:	d20a      	bcs.n	178 <Reset_Handler+0x4c>
     162:	43d3      	mvns	r3, r2
     164:	490e      	ldr	r1, [pc, #56]	; (1a0 <Reset_Handler+0x74>)
     166:	185b      	adds	r3, r3, r1
     168:	2103      	movs	r1, #3
     16a:	438b      	bics	r3, r1
     16c:	3304      	adds	r3, #4
     16e:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     170:	2100      	movs	r1, #0
     172:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     174:	4293      	cmp	r3, r2
     176:	d1fc      	bne.n	172 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     178:	4a0a      	ldr	r2, [pc, #40]	; (1a4 <Reset_Handler+0x78>)
     17a:	21ff      	movs	r1, #255	; 0xff
     17c:	4b0a      	ldr	r3, [pc, #40]	; (1a8 <Reset_Handler+0x7c>)
     17e:	438b      	bics	r3, r1
     180:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     182:	4b0a      	ldr	r3, [pc, #40]	; (1ac <Reset_Handler+0x80>)
     184:	4798      	blx	r3
        main();
     186:	4b0a      	ldr	r3, [pc, #40]	; (1b0 <Reset_Handler+0x84>)
     188:	4798      	blx	r3
     18a:	e7fe      	b.n	18a <Reset_Handler+0x5e>
     18c:	00005ed4 	.word	0x00005ed4
     190:	20000000 	.word	0x20000000
     194:	2000016c 	.word	0x2000016c
     198:	20000004 	.word	0x20000004
     19c:	2000016c 	.word	0x2000016c
     1a0:	200003b0 	.word	0x200003b0
     1a4:	e000ed00 	.word	0xe000ed00
     1a8:	00000000 	.word	0x00000000
     1ac:	00003d99 	.word	0x00003d99
     1b0:	0000183d 	.word	0x0000183d

000001b4 <ADC_0_PORT_init>:
struct adc_sync_descriptor ADC_0;

struct temp_sync_descriptor TEMPERATURE_SENSOR_0;

void ADC_0_PORT_init(void)
{
     1b4:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = ~data;
}

static inline void hri_port_clear_DIR_reg(const void *const hw, uint8_t submodule_index, hri_port_dir_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     1b6:	2204      	movs	r2, #4
     1b8:	23c0      	movs	r3, #192	; 0xc0
     1ba:	05db      	lsls	r3, r3, #23
     1bc:	605a      	str	r2, [r3, #4]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     1be:	2182      	movs	r1, #130	; 0x82
     1c0:	05c9      	lsls	r1, r1, #23
     1c2:	4b0a      	ldr	r3, [pc, #40]	; (1ec <ADC_0_PORT_init+0x38>)
     1c4:	628b      	str	r3, [r1, #40]	; 0x28
     1c6:	23c0      	movs	r3, #192	; 0xc0
     1c8:	061b      	lsls	r3, r3, #24
     1ca:	628b      	str	r3, [r1, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     1cc:	2342      	movs	r3, #66	; 0x42
     1ce:	5cca      	ldrb	r2, [r1, r3]
	tmp &= ~PORT_PINCFG_PMUXEN;
     1d0:	2001      	movs	r0, #1
     1d2:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     1d4:	4302      	orrs	r2, r0
     1d6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     1d8:	54ca      	strb	r2, [r1, r3]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     1da:	2231      	movs	r2, #49	; 0x31
     1dc:	5c8b      	ldrb	r3, [r1, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     1de:	240f      	movs	r4, #15
     1e0:	43a3      	bics	r3, r4
	tmp |= PORT_PMUX_PMUXE(data);
     1e2:	4303      	orrs	r3, r0
     1e4:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     1e6:	548b      	strb	r3, [r1, r2]

	// Disable digital pin circuitry
	gpio_set_pin_direction(v_sense, GPIO_DIRECTION_OFF);

	gpio_set_pin_function(v_sense, PINMUX_PA02B_ADC0_AIN0);
}
     1e8:	bd10      	pop	{r4, pc}
     1ea:	46c0      	nop			; (mov r8, r8)
     1ec:	40000004 	.word	0x40000004

000001f0 <ADC_0_CLOCK_init>:
}

static inline void hri_mclk_set_APBCMASK_ADC0_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_ADC0;
     1f0:	4a05      	ldr	r2, [pc, #20]	; (208 <ADC_0_CLOCK_init+0x18>)
     1f2:	69d1      	ldr	r1, [r2, #28]
     1f4:	2380      	movs	r3, #128	; 0x80
     1f6:	029b      	lsls	r3, r3, #10
     1f8:	430b      	orrs	r3, r1
     1fa:	61d3      	str	r3, [r2, #28]
}

static inline void hri_gclk_write_PCHCTRL_reg(const void *const hw, uint8_t index, hri_gclk_pchctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->PCHCTRL[index].reg = data;
     1fc:	2141      	movs	r1, #65	; 0x41
     1fe:	2382      	movs	r3, #130	; 0x82
     200:	005b      	lsls	r3, r3, #1
     202:	4a02      	ldr	r2, [pc, #8]	; (20c <ADC_0_CLOCK_init+0x1c>)
     204:	50d1      	str	r1, [r2, r3]

void ADC_0_CLOCK_init(void)
{
	hri_mclk_set_APBCMASK_ADC0_bit(MCLK);
	hri_gclk_write_PCHCTRL_reg(GCLK, ADC0_GCLK_ID, CONF_GCLK_ADC0_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
}
     206:	4770      	bx	lr
     208:	40000800 	.word	0x40000800
     20c:	40001c00 	.word	0x40001c00

00000210 <ADC_0_init>:

void ADC_0_init(void)
{
     210:	b510      	push	{r4, lr}
	ADC_0_CLOCK_init();
     212:	4b06      	ldr	r3, [pc, #24]	; (22c <ADC_0_init+0x1c>)
     214:	4798      	blx	r3
	ADC_0_PORT_init();
     216:	4b06      	ldr	r3, [pc, #24]	; (230 <ADC_0_init+0x20>)
     218:	4798      	blx	r3
	adc_sync_init(&ADC_0, ADC0, _adc_get_adc_sync());
     21a:	4b06      	ldr	r3, [pc, #24]	; (234 <ADC_0_init+0x24>)
     21c:	4798      	blx	r3
     21e:	0002      	movs	r2, r0
     220:	4905      	ldr	r1, [pc, #20]	; (238 <ADC_0_init+0x28>)
     222:	4806      	ldr	r0, [pc, #24]	; (23c <ADC_0_init+0x2c>)
     224:	4b06      	ldr	r3, [pc, #24]	; (240 <ADC_0_init+0x30>)
     226:	4798      	blx	r3
}
     228:	bd10      	pop	{r4, pc}
     22a:	46c0      	nop			; (mov r8, r8)
     22c:	000001f1 	.word	0x000001f1
     230:	000001b5 	.word	0x000001b5
     234:	00000f93 	.word	0x00000f93
     238:	42004400 	.word	0x42004400
     23c:	20000300 	.word	0x20000300
     240:	000005b9 	.word	0x000005b9

00000244 <SPI_0_PORT_init>:

void SPI_0_PORT_init(void)
{
     244:	b5f0      	push	{r4, r5, r6, r7, lr}
     246:	46c6      	mov	lr, r8
     248:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     24a:	24c0      	movs	r4, #192	; 0xc0
     24c:	05e4      	lsls	r4, r4, #23
     24e:	2380      	movs	r3, #128	; 0x80
     250:	005b      	lsls	r3, r3, #1
     252:	6063      	str	r3, [r4, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     254:	2382      	movs	r3, #130	; 0x82
     256:	05db      	lsls	r3, r3, #23
     258:	4a23      	ldr	r2, [pc, #140]	; (2e8 <SPI_0_PORT_init+0xa4>)
     25a:	629a      	str	r2, [r3, #40]	; 0x28
     25c:	4a23      	ldr	r2, [pc, #140]	; (2ec <SPI_0_PORT_init+0xa8>)
     25e:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     260:	2148      	movs	r1, #72	; 0x48
     262:	5c5a      	ldrb	r2, [r3, r1]
     264:	2004      	movs	r0, #4
     266:	4382      	bics	r2, r0
     268:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     26a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     26c:	2601      	movs	r6, #1
     26e:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     270:	2501      	movs	r5, #1
     272:	432a      	orrs	r2, r5
     274:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     276:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     278:	3914      	subs	r1, #20
     27a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     27c:	300b      	adds	r0, #11
     27e:	4684      	mov	ip, r0
     280:	4382      	bics	r2, r0
	tmp |= PORT_PMUX_PMUXE(data);
     282:	2703      	movs	r7, #3
     284:	433a      	orrs	r2, r7
     286:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     288:	545a      	strb	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     28a:	2280      	movs	r2, #128	; 0x80
     28c:	00d2      	lsls	r2, r2, #3
     28e:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     290:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     292:	4a17      	ldr	r2, [pc, #92]	; (2f0 <SPI_0_PORT_init+0xac>)
     294:	629a      	str	r2, [r3, #40]	; 0x28
     296:	22c0      	movs	r2, #192	; 0xc0
     298:	0612      	lsls	r2, r2, #24
     29a:	4690      	mov	r8, r2
     29c:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     29e:	3116      	adds	r1, #22
     2a0:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2a2:	43b0      	bics	r0, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2a4:	4328      	orrs	r0, r5
     2a6:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2a8:	5458      	strb	r0, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2aa:	2035      	movs	r0, #53	; 0x35
     2ac:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     2ae:	4662      	mov	r2, ip
     2b0:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     2b2:	4339      	orrs	r1, r7
     2b4:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2b6:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     2b8:	2180      	movs	r1, #128	; 0x80
     2ba:	0109      	lsls	r1, r1, #4
     2bc:	6161      	str	r1, [r4, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     2be:	60a1      	str	r1, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     2c0:	490c      	ldr	r1, [pc, #48]	; (2f4 <SPI_0_PORT_init+0xb0>)
     2c2:	6299      	str	r1, [r3, #40]	; 0x28
     2c4:	4642      	mov	r2, r8
     2c6:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2c8:	214b      	movs	r1, #75	; 0x4b
     2ca:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2cc:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2ce:	432a      	orrs	r2, r5
     2d0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2d2:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     2d4:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     2d6:	393c      	subs	r1, #60	; 0x3c
     2d8:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     2da:	3121      	adds	r1, #33	; 0x21
     2dc:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     2de:	541a      	strb	r2, [r3, r0]

	// Set pin direction to output
	gpio_set_pin_direction(spi_sck, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(spi_sck, PINMUX_PA11D_SERCOM2_PAD3);
}
     2e0:	bc04      	pop	{r2}
     2e2:	4690      	mov	r8, r2
     2e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	40020100 	.word	0x40020100
     2ec:	c0020000 	.word	0xc0020000
     2f0:	40000400 	.word	0x40000400
     2f4:	40000800 	.word	0x40000800

000002f8 <SPI_0_CLOCK_init>:
     2f8:	4b05      	ldr	r3, [pc, #20]	; (310 <SPI_0_CLOCK_init+0x18>)
     2fa:	2241      	movs	r2, #65	; 0x41
     2fc:	21d4      	movs	r1, #212	; 0xd4
     2fe:	505a      	str	r2, [r3, r1]
     300:	390c      	subs	r1, #12
     302:	505a      	str	r2, [r3, r1]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM2;
     304:	4a03      	ldr	r2, [pc, #12]	; (314 <SPI_0_CLOCK_init+0x1c>)
     306:	69d3      	ldr	r3, [r2, #28]
     308:	39c0      	subs	r1, #192	; 0xc0
     30a:	430b      	orrs	r3, r1
     30c:	61d3      	str	r3, [r2, #28]
void SPI_0_CLOCK_init(void)
{
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM2_GCLK_ID_CORE, CONF_GCLK_SERCOM2_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM2_GCLK_ID_SLOW, CONF_GCLK_SERCOM2_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM2_bit(MCLK);
}
     30e:	4770      	bx	lr
     310:	40001c00 	.word	0x40001c00
     314:	40000800 	.word	0x40000800

00000318 <SPI_0_init>:

void SPI_0_init(void)
{
     318:	b510      	push	{r4, lr}
	SPI_0_CLOCK_init();
     31a:	4b04      	ldr	r3, [pc, #16]	; (32c <SPI_0_init+0x14>)
     31c:	4798      	blx	r3
	spi_m_sync_init(&SPI_0, SERCOM2);
     31e:	4904      	ldr	r1, [pc, #16]	; (330 <SPI_0_init+0x18>)
     320:	4804      	ldr	r0, [pc, #16]	; (334 <SPI_0_init+0x1c>)
     322:	4b05      	ldr	r3, [pc, #20]	; (338 <SPI_0_init+0x20>)
     324:	4798      	blx	r3
	SPI_0_PORT_init();
     326:	4b05      	ldr	r3, [pc, #20]	; (33c <SPI_0_init+0x24>)
     328:	4798      	blx	r3
}
     32a:	bd10      	pop	{r4, pc}
     32c:	000002f9 	.word	0x000002f9
     330:	42000c00 	.word	0x42000c00
     334:	20000304 	.word	0x20000304
     338:	000007f1 	.word	0x000007f1
     33c:	00000245 	.word	0x00000245

00000340 <USART_0_CLOCK_init>:
     340:	4b05      	ldr	r3, [pc, #20]	; (358 <USART_0_CLOCK_init+0x18>)
     342:	2241      	movs	r2, #65	; 0x41
     344:	21dc      	movs	r1, #220	; 0xdc
     346:	505a      	str	r2, [r3, r1]
     348:	3914      	subs	r1, #20
     34a:	505a      	str	r2, [r3, r1]
	((Mclk *)hw)->APBCMASK.reg |= MCLK_APBCMASK_SERCOM4;
     34c:	4a03      	ldr	r2, [pc, #12]	; (35c <USART_0_CLOCK_init+0x1c>)
     34e:	69d3      	ldr	r3, [r2, #28]
     350:	39a8      	subs	r1, #168	; 0xa8
     352:	430b      	orrs	r3, r1
     354:	61d3      	str	r3, [r2, #28]
{

	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM4_GCLK_ID_CORE, CONF_GCLK_SERCOM4_CORE_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_gclk_write_PCHCTRL_reg(GCLK, SERCOM4_GCLK_ID_SLOW, CONF_GCLK_SERCOM4_SLOW_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	hri_mclk_set_APBCMASK_SERCOM4_bit(MCLK);
}
     356:	4770      	bx	lr
     358:	40001c00 	.word	0x40001c00
     35c:	40000800 	.word	0x40000800

00000360 <USART_0_PORT_init>:
 * \brief USART pinmux initialization function
 *
 * Set each required pin to USART functionality
 */
void USART_0_PORT_init()
{
     360:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     362:	2382      	movs	r3, #130	; 0x82
     364:	05db      	lsls	r3, r3, #23
     366:	22c8      	movs	r2, #200	; 0xc8
     368:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     36a:	2501      	movs	r5, #1
     36c:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     36e:	2401      	movs	r4, #1
     370:	4321      	orrs	r1, r4
     372:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     374:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     376:	20b4      	movs	r0, #180	; 0xb4
     378:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     37a:	3ab9      	subs	r2, #185	; 0xb9
     37c:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     37e:	3a0c      	subs	r2, #12
     380:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     382:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     384:	21c9      	movs	r1, #201	; 0xc9
     386:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     388:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     38a:	4322      	orrs	r2, r4
     38c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     38e:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     390:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     392:	39ba      	subs	r1, #186	; 0xba
     394:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     396:	3121      	adds	r1, #33	; 0x21
     398:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     39a:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(usb_tx, PINMUX_PB08D_SERCOM4_PAD0);

	gpio_set_pin_function(usb_rx, PINMUX_PB09D_SERCOM4_PAD1);
}
     39c:	bd30      	pop	{r4, r5, pc}
	...

000003a0 <USART_0_init>:
 * \brief USART initialization function
 *
 * Enables USART peripheral, clocks and initializes USART driver
 */
void USART_0_init(void)
{
     3a0:	b510      	push	{r4, lr}
     3a2:	b082      	sub	sp, #8
	USART_0_CLOCK_init();
     3a4:	4b06      	ldr	r3, [pc, #24]	; (3c0 <USART_0_init+0x20>)
     3a6:	4798      	blx	r3
	usart_async_init(&USART_0, SERCOM4, USART_0_buffer, USART_0_BUFFER_SIZE, (void *)NULL);
     3a8:	2300      	movs	r3, #0
     3aa:	9300      	str	r3, [sp, #0]
     3ac:	3310      	adds	r3, #16
     3ae:	4a05      	ldr	r2, [pc, #20]	; (3c4 <USART_0_init+0x24>)
     3b0:	4905      	ldr	r1, [pc, #20]	; (3c8 <USART_0_init+0x28>)
     3b2:	4806      	ldr	r0, [pc, #24]	; (3cc <USART_0_init+0x2c>)
     3b4:	4c06      	ldr	r4, [pc, #24]	; (3d0 <USART_0_init+0x30>)
     3b6:	47a0      	blx	r4
	USART_0_PORT_init();
     3b8:	4b06      	ldr	r3, [pc, #24]	; (3d4 <USART_0_init+0x34>)
     3ba:	4798      	blx	r3
}
     3bc:	b002      	add	sp, #8
     3be:	bd10      	pop	{r4, pc}
     3c0:	00000341 	.word	0x00000341
     3c4:	20000188 	.word	0x20000188
     3c8:	42001400 	.word	0x42001400
     3cc:	2000031c 	.word	0x2000031c
     3d0:	00000b55 	.word	0x00000b55
     3d4:	00000361 	.word	0x00000361

000003d8 <CAN_0_PORT_init>:

void CAN_0_PORT_init(void)
{
     3d8:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3da:	2382      	movs	r3, #130	; 0x82
     3dc:	05db      	lsls	r3, r3, #23
     3de:	2259      	movs	r2, #89	; 0x59
     3e0:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     3e2:	2501      	movs	r5, #1
     3e4:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     3e6:	2401      	movs	r4, #1
     3e8:	4321      	orrs	r1, r4
     3ea:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     3ec:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     3ee:	203c      	movs	r0, #60	; 0x3c
     3f0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     3f2:	3a4a      	subs	r2, #74	; 0x4a
     3f4:	4011      	ands	r1, r2
	tmp |= PORT_PMUX_PMUXO(data);
     3f6:	3251      	adds	r2, #81	; 0x51
     3f8:	4311      	orrs	r1, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     3fa:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     3fc:	2158      	movs	r1, #88	; 0x58
     3fe:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     400:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     402:	4322      	orrs	r2, r4
     404:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     406:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     408:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     40a:	3949      	subs	r1, #73	; 0x49
     40c:	438a      	bics	r2, r1
	tmp |= PORT_PMUX_PMUXE(data);
     40e:	3909      	subs	r1, #9
     410:	430a      	orrs	r2, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     412:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(can_rx, PINMUX_PA25G_CAN0_RX);

	gpio_set_pin_function(can_tx, PINMUX_PA24G_CAN0_TX);
}
     414:	bd30      	pop	{r4, r5, pc}
	...

00000418 <CAN_0_init>:
 * \brief CAN initialization function
 *
 * Enables CAN peripheral, clocks and initializes CAN driver
 */
void CAN_0_init(void)
{
     418:	b510      	push	{r4, lr}
	((Mclk *)hw)->AHBMASK.reg |= MCLK_AHBMASK_CAN0;
     41a:	4a08      	ldr	r2, [pc, #32]	; (43c <CAN_0_init+0x24>)
     41c:	6911      	ldr	r1, [r2, #16]
     41e:	2380      	movs	r3, #128	; 0x80
     420:	005b      	lsls	r3, r3, #1
     422:	430b      	orrs	r3, r1
     424:	6113      	str	r3, [r2, #16]
     426:	2141      	movs	r1, #65	; 0x41
     428:	23e8      	movs	r3, #232	; 0xe8
     42a:	4a05      	ldr	r2, [pc, #20]	; (440 <CAN_0_init+0x28>)
     42c:	50d1      	str	r1, [r2, r3]
	hri_mclk_set_AHBMASK_CAN0_bit(MCLK);
	hri_gclk_write_PCHCTRL_reg(GCLK, CAN0_GCLK_ID, CONF_GCLK_CAN0_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
	can_async_init(&CAN_0, CAN0);
     42e:	4905      	ldr	r1, [pc, #20]	; (444 <CAN_0_init+0x2c>)
     430:	4805      	ldr	r0, [pc, #20]	; (448 <CAN_0_init+0x30>)
     432:	4b06      	ldr	r3, [pc, #24]	; (44c <CAN_0_init+0x34>)
     434:	4798      	blx	r3
	CAN_0_PORT_init();
     436:	4b06      	ldr	r3, [pc, #24]	; (450 <CAN_0_init+0x38>)
     438:	4798      	blx	r3
}
     43a:	bd10      	pop	{r4, pc}
     43c:	40000800 	.word	0x40000800
     440:	40001c00 	.word	0x40001c00
     444:	42001c00 	.word	0x42001c00
     448:	200002d4 	.word	0x200002d4
     44c:	00000719 	.word	0x00000719
     450:	000003d9 	.word	0x000003d9

00000454 <TEMPERATURE_SENSOR_0_CLOCK_init>:
	((Mclk *)hw)->APBAMASK.reg |= MCLK_APBAMASK_TSENS;
     454:	4a05      	ldr	r2, [pc, #20]	; (46c <TEMPERATURE_SENSOR_0_CLOCK_init+0x18>)
     456:	6951      	ldr	r1, [r2, #20]
     458:	2380      	movs	r3, #128	; 0x80
     45a:	015b      	lsls	r3, r3, #5
     45c:	430b      	orrs	r3, r1
     45e:	6153      	str	r3, [r2, #20]
     460:	2141      	movs	r1, #65	; 0x41
     462:	2394      	movs	r3, #148	; 0x94
     464:	4a02      	ldr	r2, [pc, #8]	; (470 <TEMPERATURE_SENSOR_0_CLOCK_init+0x1c>)
     466:	50d1      	str	r1, [r2, r3]
void TEMPERATURE_SENSOR_0_CLOCK_init(void)
{
	hri_mclk_set_APBAMASK_TSENS_bit(MCLK);

	hri_gclk_write_PCHCTRL_reg(GCLK, TSENS_GCLK_ID, CONF_GCLK_TSENS_SRC | (1 << GCLK_PCHCTRL_CHEN_Pos));
}
     468:	4770      	bx	lr
     46a:	46c0      	nop			; (mov r8, r8)
     46c:	40000800 	.word	0x40000800
     470:	40001c00 	.word	0x40001c00

00000474 <TEMPERATURE_SENSOR_0_init>:

void TEMPERATURE_SENSOR_0_init(void)
{
     474:	b510      	push	{r4, lr}
	TEMPERATURE_SENSOR_0_CLOCK_init();
     476:	4b03      	ldr	r3, [pc, #12]	; (484 <TEMPERATURE_SENSOR_0_init+0x10>)
     478:	4798      	blx	r3
	temp_sync_init(&TEMPERATURE_SENSOR_0, TSENS);
     47a:	4903      	ldr	r1, [pc, #12]	; (488 <TEMPERATURE_SENSOR_0_init+0x14>)
     47c:	4803      	ldr	r0, [pc, #12]	; (48c <TEMPERATURE_SENSOR_0_init+0x18>)
     47e:	4b04      	ldr	r3, [pc, #16]	; (490 <TEMPERATURE_SENSOR_0_init+0x1c>)
     480:	4798      	blx	r3
}
     482:	bd10      	pop	{r4, pc}
     484:	00000455 	.word	0x00000455
     488:	40003000 	.word	0x40003000
     48c:	200002fc 	.word	0x200002fc
     490:	0000095d 	.word	0x0000095d

00000494 <system_init>:

void system_init(void)
{
     494:	b5f0      	push	{r4, r5, r6, r7, lr}
     496:	46c6      	mov	lr, r8
     498:	b500      	push	{lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     49a:	4b39      	ldr	r3, [pc, #228]	; (580 <system_init+0xec>)
     49c:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     49e:	22c0      	movs	r2, #192	; 0xc0
     4a0:	05d2      	lsls	r2, r2, #23
     4a2:	2320      	movs	r3, #32
     4a4:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4a6:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4a8:	2382      	movs	r3, #130	; 0x82
     4aa:	05db      	lsls	r3, r3, #23
     4ac:	4935      	ldr	r1, [pc, #212]	; (584 <system_init+0xf0>)
     4ae:	6299      	str	r1, [r3, #40]	; 0x28
     4b0:	21c0      	movs	r1, #192	; 0xc0
     4b2:	0609      	lsls	r1, r1, #24
     4b4:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4b6:	2445      	movs	r4, #69	; 0x45
     4b8:	5d19      	ldrb	r1, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4ba:	2001      	movs	r0, #1
     4bc:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4be:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     4c0:	2180      	movs	r1, #128	; 0x80
     4c2:	0509      	lsls	r1, r1, #20
     4c4:	6151      	str	r1, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4c6:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4c8:	2480      	movs	r4, #128	; 0x80
     4ca:	05e4      	lsls	r4, r4, #23
     4cc:	629c      	str	r4, [r3, #40]	; 0x28
     4ce:	492e      	ldr	r1, [pc, #184]	; (588 <system_init+0xf4>)
     4d0:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4d2:	255b      	movs	r5, #91	; 0x5b
     4d4:	5d59      	ldrb	r1, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4d6:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4d8:	5559      	strb	r1, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     4da:	2180      	movs	r1, #128	; 0x80
     4dc:	0549      	lsls	r1, r1, #21
     4de:	6151      	str	r1, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     4e0:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4e2:	629c      	str	r4, [r3, #40]	; 0x28
     4e4:	4929      	ldr	r1, [pc, #164]	; (58c <system_init+0xf8>)
     4e6:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     4e8:	3501      	adds	r5, #1
     4ea:	5d59      	ldrb	r1, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     4ec:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     4ee:	5559      	strb	r1, [r3, r5]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     4f0:	2184      	movs	r1, #132	; 0x84
     4f2:	4688      	mov	r8, r1
     4f4:	2704      	movs	r7, #4
     4f6:	5057      	str	r7, [r2, r1]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     4f8:	3124      	adds	r1, #36	; 0x24
     4fa:	4d25      	ldr	r5, [pc, #148]	; (590 <system_init+0xfc>)
     4fc:	505d      	str	r5, [r3, r1]
     4fe:	4d25      	ldr	r5, [pc, #148]	; (594 <system_init+0x100>)
     500:	46ac      	mov	ip, r5
     502:	505d      	str	r5, [r3, r1]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     504:	25c2      	movs	r5, #194	; 0xc2
     506:	5d5e      	ldrb	r6, [r3, r5]
     508:	43be      	bics	r6, r7
     50a:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     50c:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     50e:	4386      	bics	r6, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     510:	555e      	strb	r6, [r3, r5]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     512:	3dba      	subs	r5, #186	; 0xba
     514:	4646      	mov	r6, r8
     516:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     518:	4d1f      	ldr	r5, [pc, #124]	; (598 <system_init+0x104>)
     51a:	505d      	str	r5, [r3, r1]
     51c:	4665      	mov	r5, ip
     51e:	505d      	str	r5, [r3, r1]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     520:	25c3      	movs	r5, #195	; 0xc3
     522:	5d5e      	ldrb	r6, [r3, r5]
     524:	43be      	bics	r6, r7
     526:	555e      	strb	r6, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     528:	5d5e      	ldrb	r6, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     52a:	4386      	bics	r6, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     52c:	555e      	strb	r6, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     52e:	3790      	adds	r7, #144	; 0x90
     530:	2580      	movs	r5, #128	; 0x80
     532:	03ed      	lsls	r5, r5, #15
     534:	51d5      	str	r5, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     536:	2688      	movs	r6, #136	; 0x88
     538:	46b0      	mov	r8, r6
     53a:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     53c:	505c      	str	r4, [r3, r1]
     53e:	4d17      	ldr	r5, [pc, #92]	; (59c <system_init+0x108>)
     540:	505d      	str	r5, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     542:	25d6      	movs	r5, #214	; 0xd6
     544:	46ac      	mov	ip, r5
     546:	5d5d      	ldrb	r5, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
     548:	4385      	bics	r5, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     54a:	4666      	mov	r6, ip
     54c:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     54e:	2580      	movs	r5, #128	; 0x80
     550:	042d      	lsls	r5, r5, #16
     552:	51d5      	str	r5, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     554:	4646      	mov	r6, r8
     556:	5195      	str	r5, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     558:	505c      	str	r4, [r3, r1]
     55a:	4a11      	ldr	r2, [pc, #68]	; (5a0 <system_init+0x10c>)
     55c:	505a      	str	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     55e:	312f      	adds	r1, #47	; 0x2f
     560:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     562:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     564:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(led_2, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(led_2, GPIO_PIN_FUNCTION_OFF);

	ADC_0_init();
     566:	4b0f      	ldr	r3, [pc, #60]	; (5a4 <system_init+0x110>)
     568:	4798      	blx	r3

	SPI_0_init();
     56a:	4b0f      	ldr	r3, [pc, #60]	; (5a8 <system_init+0x114>)
     56c:	4798      	blx	r3
	USART_0_init();
     56e:	4b0f      	ldr	r3, [pc, #60]	; (5ac <system_init+0x118>)
     570:	4798      	blx	r3
	CAN_0_init();
     572:	4b0f      	ldr	r3, [pc, #60]	; (5b0 <system_init+0x11c>)
     574:	4798      	blx	r3

	TEMPERATURE_SENSOR_0_init();
     576:	4b0f      	ldr	r3, [pc, #60]	; (5b4 <system_init+0x120>)
     578:	4798      	blx	r3
}
     57a:	bc04      	pop	{r2}
     57c:	4690      	mov	r8, r2
     57e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     580:	0000113d 	.word	0x0000113d
     584:	40000020 	.word	0x40000020
     588:	c0000800 	.word	0xc0000800
     58c:	c0001000 	.word	0xc0001000
     590:	40020004 	.word	0x40020004
     594:	c0020000 	.word	0xc0020000
     598:	40020008 	.word	0x40020008
     59c:	c0000040 	.word	0xc0000040
     5a0:	c0000080 	.word	0xc0000080
     5a4:	00000211 	.word	0x00000211
     5a8:	00000319 	.word	0x00000319
     5ac:	000003a1 	.word	0x000003a1
     5b0:	00000419 	.word	0x00000419
     5b4:	00000475 	.word	0x00000475

000005b8 <adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t adc_sync_init(struct adc_sync_descriptor *const descr, void *const hw, void *const func)
{
     5b8:	b570      	push	{r4, r5, r6, lr}
     5ba:	0004      	movs	r4, r0
     5bc:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     5be:	2800      	cmp	r0, #0
     5c0:	d00c      	beq.n	5dc <adc_sync_init+0x24>
     5c2:	0008      	movs	r0, r1
     5c4:	1e43      	subs	r3, r0, #1
     5c6:	4198      	sbcs	r0, r3
     5c8:	b2c0      	uxtb	r0, r0
     5ca:	2239      	movs	r2, #57	; 0x39
     5cc:	4904      	ldr	r1, [pc, #16]	; (5e0 <adc_sync_init+0x28>)
     5ce:	4b05      	ldr	r3, [pc, #20]	; (5e4 <adc_sync_init+0x2c>)
     5d0:	4798      	blx	r3

	return _adc_sync_init(&descr->device, hw);
     5d2:	0029      	movs	r1, r5
     5d4:	0020      	movs	r0, r4
     5d6:	4b04      	ldr	r3, [pc, #16]	; (5e8 <adc_sync_init+0x30>)
     5d8:	4798      	blx	r3
}
     5da:	bd70      	pop	{r4, r5, r6, pc}
     5dc:	2000      	movs	r0, #0
     5de:	e7f4      	b.n	5ca <adc_sync_init+0x12>
     5e0:	00005ac8 	.word	0x00005ac8
     5e4:	00000c91 	.word	0x00000c91
     5e8:	00000f11 	.word	0x00000f11

000005ec <adc_sync_enable_channel>:

/**
 * \brief Enable ADC
 */
int32_t adc_sync_enable_channel(struct adc_sync_descriptor *const descr, const uint8_t channel)
{
     5ec:	b570      	push	{r4, r5, r6, lr}
     5ee:	0004      	movs	r4, r0
     5f0:	000d      	movs	r5, r1
	ASSERT(descr);
     5f2:	1e43      	subs	r3, r0, #1
     5f4:	4198      	sbcs	r0, r3
     5f6:	b2c0      	uxtb	r0, r0
     5f8:	224e      	movs	r2, #78	; 0x4e
     5fa:	4904      	ldr	r1, [pc, #16]	; (60c <adc_sync_enable_channel+0x20>)
     5fc:	4b04      	ldr	r3, [pc, #16]	; (610 <adc_sync_enable_channel+0x24>)
     5fe:	4798      	blx	r3
	_adc_sync_enable_channel(&descr->device, channel);
     600:	0029      	movs	r1, r5
     602:	0020      	movs	r0, r4
     604:	4b03      	ldr	r3, [pc, #12]	; (614 <adc_sync_enable_channel+0x28>)
     606:	4798      	blx	r3

	return ERR_NONE;
}
     608:	2000      	movs	r0, #0
     60a:	bd70      	pop	{r4, r5, r6, pc}
     60c:	00005ac8 	.word	0x00005ac8
     610:	00000c91 	.word	0x00000c91
     614:	00000f49 	.word	0x00000f49

00000618 <adc_sync_read_channel>:
/*
 * \brief Read data from ADC
 */
int32_t adc_sync_read_channel(struct adc_sync_descriptor *const descr, const uint8_t channel, uint8_t *const buffer,
                              const uint16_t length)
{
     618:	b5f0      	push	{r4, r5, r6, r7, lr}
     61a:	46de      	mov	lr, fp
     61c:	4657      	mov	r7, sl
     61e:	464e      	mov	r6, r9
     620:	4645      	mov	r5, r8
     622:	b5e0      	push	{r5, r6, r7, lr}
     624:	b083      	sub	sp, #12
     626:	0006      	movs	r6, r0
     628:	000d      	movs	r5, r1
     62a:	4691      	mov	r9, r2
     62c:	9301      	str	r3, [sp, #4]
	uint8_t  data_size;
	uint16_t offset = 0;

	ASSERT(descr && buffer && length);
     62e:	2800      	cmp	r0, #0
     630:	d01e      	beq.n	670 <adc_sync_read_channel+0x58>
     632:	2a00      	cmp	r2, #0
     634:	d01e      	beq.n	674 <adc_sync_read_channel+0x5c>
     636:	0018      	movs	r0, r3
     638:	1e43      	subs	r3, r0, #1
     63a:	4198      	sbcs	r0, r3
     63c:	2267      	movs	r2, #103	; 0x67
     63e:	491f      	ldr	r1, [pc, #124]	; (6bc <adc_sync_read_channel+0xa4>)
     640:	4f1f      	ldr	r7, [pc, #124]	; (6c0 <adc_sync_read_channel+0xa8>)
     642:	47b8      	blx	r7
	data_size = _adc_sync_get_data_size(&descr->device);
     644:	0034      	movs	r4, r6
     646:	0030      	movs	r0, r6
     648:	4b1e      	ldr	r3, [pc, #120]	; (6c4 <adc_sync_read_channel+0xac>)
     64a:	4798      	blx	r3
     64c:	0001      	movs	r1, r0
     64e:	4680      	mov	r8, r0
	ASSERT(!(length % data_size));
     650:	9801      	ldr	r0, [sp, #4]
     652:	4b1d      	ldr	r3, [pc, #116]	; (6c8 <adc_sync_read_channel+0xb0>)
     654:	4798      	blx	r3
     656:	4248      	negs	r0, r1
     658:	4148      	adcs	r0, r1
     65a:	b2c0      	uxtb	r0, r0
     65c:	2269      	movs	r2, #105	; 0x69
     65e:	4917      	ldr	r1, [pc, #92]	; (6bc <adc_sync_read_channel+0xa4>)
     660:	47b8      	blx	r7
	uint16_t offset = 0;
     662:	2700      	movs	r7, #0

	do {
		uint16_t result;
		_adc_sync_convert(&descr->device);
     664:	4b19      	ldr	r3, [pc, #100]	; (6cc <adc_sync_read_channel+0xb4>)
     666:	469b      	mov	fp, r3

		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
     668:	4e19      	ldr	r6, [pc, #100]	; (6d0 <adc_sync_read_channel+0xb8>)
			;

		result         = _adc_sync_read_channel_data(&descr->device, channel);
     66a:	4b1a      	ldr	r3, [pc, #104]	; (6d4 <adc_sync_read_channel+0xbc>)
     66c:	469a      	mov	sl, r3
     66e:	e008      	b.n	682 <adc_sync_read_channel+0x6a>
	ASSERT(descr && buffer && length);
     670:	2000      	movs	r0, #0
     672:	e7e3      	b.n	63c <adc_sync_read_channel+0x24>
     674:	2000      	movs	r0, #0
     676:	e7e1      	b.n	63c <adc_sync_read_channel+0x24>
     678:	4447      	add	r7, r8
     67a:	b2bf      	uxth	r7, r7
		buffer[offset] = result;
		if (1 < data_size) {
			buffer[offset + 1] = result >> 8;
		}
		offset += data_size;
	} while (offset < length);
     67c:	9b01      	ldr	r3, [sp, #4]
     67e:	42bb      	cmp	r3, r7
     680:	d913      	bls.n	6aa <adc_sync_read_channel+0x92>
		_adc_sync_convert(&descr->device);
     682:	0020      	movs	r0, r4
     684:	47d8      	blx	fp
		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
     686:	0029      	movs	r1, r5
     688:	0020      	movs	r0, r4
     68a:	47b0      	blx	r6
     68c:	2800      	cmp	r0, #0
     68e:	d0fa      	beq.n	686 <adc_sync_read_channel+0x6e>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
     690:	0029      	movs	r1, r5
     692:	0020      	movs	r0, r4
     694:	47d0      	blx	sl
		buffer[offset] = result;
     696:	464b      	mov	r3, r9
     698:	55d8      	strb	r0, [r3, r7]
		if (1 < data_size) {
     69a:	4643      	mov	r3, r8
     69c:	2b01      	cmp	r3, #1
     69e:	d9eb      	bls.n	678 <adc_sync_read_channel+0x60>
			buffer[offset + 1] = result >> 8;
     6a0:	464b      	mov	r3, r9
     6a2:	19db      	adds	r3, r3, r7
     6a4:	0a00      	lsrs	r0, r0, #8
     6a6:	7058      	strb	r0, [r3, #1]
     6a8:	e7e6      	b.n	678 <adc_sync_read_channel+0x60>

	return offset;
}
     6aa:	0038      	movs	r0, r7
     6ac:	b003      	add	sp, #12
     6ae:	bc3c      	pop	{r2, r3, r4, r5}
     6b0:	4690      	mov	r8, r2
     6b2:	4699      	mov	r9, r3
     6b4:	46a2      	mov	sl, r4
     6b6:	46ab      	mov	fp, r5
     6b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     6ba:	46c0      	nop			; (mov r8, r8)
     6bc:	00005ac8 	.word	0x00005ac8
     6c0:	00000c91 	.word	0x00000c91
     6c4:	00000f5d 	.word	0x00000f5d
     6c8:	000011f5 	.word	0x000011f5
     6cc:	00000f79 	.word	0x00000f79
     6d0:	00000f6f 	.word	0x00000f6f
     6d4:	00000f8b 	.word	0x00000f8b

000006d8 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     6d8:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     6dc:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     6de:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     6e0:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     6e4:	4770      	bx	lr

000006e6 <atomic_leave_critical>:
     6e6:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     6ea:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     6ec:	f383 8810 	msr	PRIMASK, r3
}
     6f0:	4770      	bx	lr

000006f2 <can_tx_done>:

/**
 * \internal Callback of CAN Message Write finished
 */
static void can_tx_done(struct _can_async_device *dev)
{
     6f2:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.tx_done) {
     6f4:	69c3      	ldr	r3, [r0, #28]
     6f6:	2b00      	cmp	r3, #0
     6f8:	d000      	beq.n	6fc <can_tx_done+0xa>
		descr->cb.tx_done(descr);
     6fa:	4798      	blx	r3
	}
}
     6fc:	bd10      	pop	{r4, pc}

000006fe <can_rx_done>:

/**
 * \internal Callback of CAN Message Read finished
 */
static void can_rx_done(struct _can_async_device *dev)
{
     6fe:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.rx_done) {
     700:	6a03      	ldr	r3, [r0, #32]
     702:	2b00      	cmp	r3, #0
     704:	d000      	beq.n	708 <can_rx_done+0xa>
		descr->cb.rx_done(descr);
     706:	4798      	blx	r3
	}
}
     708:	bd10      	pop	{r4, pc}

0000070a <can_irq_handler>:

/**
 * \internal Callback of CAN Interrupt
 */
static void can_irq_handler(struct _can_async_device *dev, enum can_async_interrupt_type type)
{
     70a:	b510      	push	{r4, lr}
	struct can_async_descriptor *const descr = CONTAINER_OF(dev, struct can_async_descriptor, dev);

	if (descr->cb.irq_handler) {
     70c:	6a43      	ldr	r3, [r0, #36]	; 0x24
     70e:	2b00      	cmp	r3, #0
     710:	d000      	beq.n	714 <can_irq_handler+0xa>
		descr->cb.irq_handler(descr, type);
     712:	4798      	blx	r3
	}
}
     714:	bd10      	pop	{r4, pc}
	...

00000718 <can_async_init>:
{
     718:	b570      	push	{r4, r5, r6, lr}
     71a:	0005      	movs	r5, r0
     71c:	000c      	movs	r4, r1
	ASSERT(descr && hw);
     71e:	2800      	cmp	r0, #0
     720:	d014      	beq.n	74c <can_async_init+0x34>
     722:	0008      	movs	r0, r1
     724:	1e43      	subs	r3, r0, #1
     726:	4198      	sbcs	r0, r3
     728:	b2c0      	uxtb	r0, r0
     72a:	2241      	movs	r2, #65	; 0x41
     72c:	4908      	ldr	r1, [pc, #32]	; (750 <can_async_init+0x38>)
     72e:	4b09      	ldr	r3, [pc, #36]	; (754 <can_async_init+0x3c>)
     730:	4798      	blx	r3
	rc = _can_async_init(&descr->dev, hw);
     732:	0021      	movs	r1, r4
     734:	0028      	movs	r0, r5
     736:	4b08      	ldr	r3, [pc, #32]	; (758 <can_async_init+0x40>)
     738:	4798      	blx	r3
	if (rc) {
     73a:	2800      	cmp	r0, #0
     73c:	d105      	bne.n	74a <can_async_init+0x32>
	descr->dev.cb.tx_done     = can_tx_done;
     73e:	4b07      	ldr	r3, [pc, #28]	; (75c <can_async_init+0x44>)
     740:	606b      	str	r3, [r5, #4]
	descr->dev.cb.rx_done     = can_rx_done;
     742:	4b07      	ldr	r3, [pc, #28]	; (760 <can_async_init+0x48>)
     744:	60ab      	str	r3, [r5, #8]
	descr->dev.cb.irq_handler = can_irq_handler;
     746:	4b07      	ldr	r3, [pc, #28]	; (764 <can_async_init+0x4c>)
     748:	60eb      	str	r3, [r5, #12]
}
     74a:	bd70      	pop	{r4, r5, r6, pc}
     74c:	2000      	movs	r0, #0
     74e:	e7ec      	b.n	72a <can_async_init+0x12>
     750:	00005ae4 	.word	0x00005ae4
     754:	00000c91 	.word	0x00000c91
     758:	00000f99 	.word	0x00000f99
     75c:	000006f3 	.word	0x000006f3
     760:	000006ff 	.word	0x000006ff
     764:	0000070b 	.word	0x0000070b

00000768 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     768:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     76a:	4b04      	ldr	r3, [pc, #16]	; (77c <delay_ms+0x14>)
     76c:	681c      	ldr	r4, [r3, #0]
     76e:	4b04      	ldr	r3, [pc, #16]	; (780 <delay_ms+0x18>)
     770:	4798      	blx	r3
     772:	0001      	movs	r1, r0
     774:	0020      	movs	r0, r4
     776:	4b03      	ldr	r3, [pc, #12]	; (784 <delay_ms+0x1c>)
     778:	4798      	blx	r3
}
     77a:	bd10      	pop	{r4, pc}
     77c:	20000198 	.word	0x20000198
     780:	00001115 	.word	0x00001115
     784:	00001135 	.word	0x00001135

00000788 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     788:	b570      	push	{r4, r5, r6, lr}
     78a:	0006      	movs	r6, r0
     78c:	000c      	movs	r4, r1
     78e:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     790:	2800      	cmp	r0, #0
     792:	d00d      	beq.n	7b0 <io_write+0x28>
     794:	0008      	movs	r0, r1
     796:	1e43      	subs	r3, r0, #1
     798:	4198      	sbcs	r0, r3
     79a:	b2c0      	uxtb	r0, r0
     79c:	2234      	movs	r2, #52	; 0x34
     79e:	4905      	ldr	r1, [pc, #20]	; (7b4 <io_write+0x2c>)
     7a0:	4b05      	ldr	r3, [pc, #20]	; (7b8 <io_write+0x30>)
     7a2:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     7a4:	6833      	ldr	r3, [r6, #0]
     7a6:	002a      	movs	r2, r5
     7a8:	0021      	movs	r1, r4
     7aa:	0030      	movs	r0, r6
     7ac:	4798      	blx	r3
}
     7ae:	bd70      	pop	{r4, r5, r6, pc}
     7b0:	2000      	movs	r0, #0
     7b2:	e7f3      	b.n	79c <io_write+0x14>
     7b4:	00005b00 	.word	0x00005b00
     7b8:	00000c91 	.word	0x00000c91

000007bc <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     7bc:	b570      	push	{r4, r5, r6, lr}
     7be:	0006      	movs	r6, r0
     7c0:	000c      	movs	r4, r1
     7c2:	0015      	movs	r5, r2
	ASSERT(io_descr && buf);
     7c4:	2800      	cmp	r0, #0
     7c6:	d00d      	beq.n	7e4 <io_read+0x28>
     7c8:	0008      	movs	r0, r1
     7ca:	1e43      	subs	r3, r0, #1
     7cc:	4198      	sbcs	r0, r3
     7ce:	b2c0      	uxtb	r0, r0
     7d0:	223d      	movs	r2, #61	; 0x3d
     7d2:	4905      	ldr	r1, [pc, #20]	; (7e8 <io_read+0x2c>)
     7d4:	4b05      	ldr	r3, [pc, #20]	; (7ec <io_read+0x30>)
     7d6:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     7d8:	6873      	ldr	r3, [r6, #4]
     7da:	002a      	movs	r2, r5
     7dc:	0021      	movs	r1, r4
     7de:	0030      	movs	r0, r6
     7e0:	4798      	blx	r3
}
     7e2:	bd70      	pop	{r4, r5, r6, pc}
     7e4:	2000      	movs	r0, #0
     7e6:	e7f3      	b.n	7d0 <io_read+0x14>
     7e8:	00005b00 	.word	0x00005b00
     7ec:	00000c91 	.word	0x00000c91

000007f0 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     7f0:	b570      	push	{r4, r5, r6, lr}
     7f2:	0004      	movs	r4, r0
     7f4:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     7f6:	2800      	cmp	r0, #0
     7f8:	d016      	beq.n	828 <spi_m_sync_init+0x38>
     7fa:	0008      	movs	r0, r1
     7fc:	1e43      	subs	r3, r0, #1
     7fe:	4198      	sbcs	r0, r3
     800:	b2c0      	uxtb	r0, r0
     802:	2240      	movs	r2, #64	; 0x40
     804:	4909      	ldr	r1, [pc, #36]	; (82c <spi_m_sync_init+0x3c>)
     806:	4b0a      	ldr	r3, [pc, #40]	; (830 <spi_m_sync_init+0x40>)
     808:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
     80a:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     80c:	1d20      	adds	r0, r4, #4
     80e:	0029      	movs	r1, r5
     810:	4b08      	ldr	r3, [pc, #32]	; (834 <spi_m_sync_init+0x44>)
     812:	4798      	blx	r3

	if (rc < 0) {
     814:	2800      	cmp	r0, #0
     816:	db06      	blt.n	826 <spi_m_sync_init+0x36>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     818:	4b07      	ldr	r3, [pc, #28]	; (838 <spi_m_sync_init+0x48>)
     81a:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     81c:	4b07      	ldr	r3, [pc, #28]	; (83c <spi_m_sync_init+0x4c>)
     81e:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     820:	4b07      	ldr	r3, [pc, #28]	; (840 <spi_m_sync_init+0x50>)
     822:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     824:	2000      	movs	r0, #0
}
     826:	bd70      	pop	{r4, r5, r6, pc}
     828:	2000      	movs	r0, #0
     82a:	e7ea      	b.n	802 <spi_m_sync_init+0x12>
     82c:	00005b14 	.word	0x00005b14
     830:	00000c91 	.word	0x00000c91
     834:	0000154d 	.word	0x0000154d
     838:	ffff8000 	.word	0xffff8000
     83c:	000008f1 	.word	0x000008f1
     840:	000008b5 	.word	0x000008b5

00000844 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     844:	b510      	push	{r4, lr}
     846:	0004      	movs	r4, r0
	ASSERT(spi);
     848:	1e43      	subs	r3, r0, #1
     84a:	4198      	sbcs	r0, r3
     84c:	b2c0      	uxtb	r0, r0
     84e:	2257      	movs	r2, #87	; 0x57
     850:	4903      	ldr	r1, [pc, #12]	; (860 <spi_m_sync_enable+0x1c>)
     852:	4b04      	ldr	r3, [pc, #16]	; (864 <spi_m_sync_enable+0x20>)
     854:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
     856:	1d20      	adds	r0, r4, #4
     858:	4b03      	ldr	r3, [pc, #12]	; (868 <spi_m_sync_enable+0x24>)
     85a:	4798      	blx	r3
}
     85c:	bd10      	pop	{r4, pc}
     85e:	46c0      	nop			; (mov r8, r8)
     860:	00005b14 	.word	0x00005b14
     864:	00000c91 	.word	0x00000c91
     868:	00001645 	.word	0x00001645

0000086c <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     86c:	b530      	push	{r4, r5, lr}
     86e:	b087      	sub	sp, #28
     870:	0004      	movs	r4, r0
     872:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     874:	2800      	cmp	r0, #0
     876:	d014      	beq.n	8a2 <spi_m_sync_transfer+0x36>
     878:	0008      	movs	r0, r1
     87a:	1e43      	subs	r3, r0, #1
     87c:	4198      	sbcs	r0, r3
     87e:	b2c0      	uxtb	r0, r0
     880:	22b3      	movs	r2, #179	; 0xb3
     882:	4909      	ldr	r1, [pc, #36]	; (8a8 <spi_m_sync_transfer+0x3c>)
     884:	4b09      	ldr	r3, [pc, #36]	; (8ac <spi_m_sync_transfer+0x40>)
     886:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
     888:	682b      	ldr	r3, [r5, #0]
     88a:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     88c:	686b      	ldr	r3, [r5, #4]
     88e:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     890:	68ab      	ldr	r3, [r5, #8]
     892:	9301      	str	r3, [sp, #4]
     894:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     896:	1d20      	adds	r0, r4, #4
     898:	a903      	add	r1, sp, #12
     89a:	4b05      	ldr	r3, [pc, #20]	; (8b0 <spi_m_sync_transfer+0x44>)
     89c:	4798      	blx	r3
}
     89e:	b007      	add	sp, #28
     8a0:	bd30      	pop	{r4, r5, pc}
     8a2:	2000      	movs	r0, #0
     8a4:	e7ec      	b.n	880 <spi_m_sync_transfer+0x14>
     8a6:	46c0      	nop			; (mov r8, r8)
     8a8:	00005b14 	.word	0x00005b14
     8ac:	00000c91 	.word	0x00000c91
     8b0:	00001679 	.word	0x00001679

000008b4 <_spi_m_sync_io_write>:
{
     8b4:	b570      	push	{r4, r5, r6, lr}
     8b6:	b084      	sub	sp, #16
     8b8:	0004      	movs	r4, r0
     8ba:	000e      	movs	r6, r1
     8bc:	0015      	movs	r5, r2
	ASSERT(io);
     8be:	1e43      	subs	r3, r0, #1
     8c0:	4198      	sbcs	r0, r3
     8c2:	b2c0      	uxtb	r0, r0
     8c4:	22a3      	movs	r2, #163	; 0xa3
     8c6:	4907      	ldr	r1, [pc, #28]	; (8e4 <_spi_m_sync_io_write+0x30>)
     8c8:	4b07      	ldr	r3, [pc, #28]	; (8e8 <_spi_m_sync_io_write+0x34>)
     8ca:	4798      	blx	r3
	xfer.rxbuf = 0;
     8cc:	2300      	movs	r3, #0
     8ce:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     8d0:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     8d2:	9503      	str	r5, [sp, #12]
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     8d4:	0020      	movs	r0, r4
     8d6:	380c      	subs	r0, #12
	return spi_m_sync_transfer(spi, &xfer);
     8d8:	a901      	add	r1, sp, #4
     8da:	4b04      	ldr	r3, [pc, #16]	; (8ec <_spi_m_sync_io_write+0x38>)
     8dc:	4798      	blx	r3
}
     8de:	b004      	add	sp, #16
     8e0:	bd70      	pop	{r4, r5, r6, pc}
     8e2:	46c0      	nop			; (mov r8, r8)
     8e4:	00005b14 	.word	0x00005b14
     8e8:	00000c91 	.word	0x00000c91
     8ec:	0000086d 	.word	0x0000086d

000008f0 <_spi_m_sync_io_read>:
{
     8f0:	b570      	push	{r4, r5, r6, lr}
     8f2:	b084      	sub	sp, #16
     8f4:	0004      	movs	r4, r0
     8f6:	000e      	movs	r6, r1
     8f8:	0015      	movs	r5, r2
	ASSERT(io);
     8fa:	1e43      	subs	r3, r0, #1
     8fc:	4198      	sbcs	r0, r3
     8fe:	b2c0      	uxtb	r0, r0
     900:	2287      	movs	r2, #135	; 0x87
     902:	4907      	ldr	r1, [pc, #28]	; (920 <_spi_m_sync_io_read+0x30>)
     904:	4b07      	ldr	r3, [pc, #28]	; (924 <_spi_m_sync_io_read+0x34>)
     906:	4798      	blx	r3
	xfer.rxbuf = buf;
     908:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     90a:	2300      	movs	r3, #0
     90c:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     90e:	9503      	str	r5, [sp, #12]
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     910:	0020      	movs	r0, r4
     912:	380c      	subs	r0, #12
	return spi_m_sync_transfer(spi, &xfer);
     914:	a901      	add	r1, sp, #4
     916:	4b04      	ldr	r3, [pc, #16]	; (928 <_spi_m_sync_io_read+0x38>)
     918:	4798      	blx	r3
}
     91a:	b004      	add	sp, #16
     91c:	bd70      	pop	{r4, r5, r6, pc}
     91e:	46c0      	nop			; (mov r8, r8)
     920:	00005b14 	.word	0x00005b14
     924:	00000c91 	.word	0x00000c91
     928:	0000086d 	.word	0x0000086d

0000092c <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     92c:	b570      	push	{r4, r5, r6, lr}
     92e:	0004      	movs	r4, r0
     930:	000d      	movs	r5, r1
	ASSERT(spi && io);
     932:	2800      	cmp	r0, #0
     934:	d00b      	beq.n	94e <spi_m_sync_get_io_descriptor+0x22>
     936:	0008      	movs	r0, r1
     938:	1e43      	subs	r3, r0, #1
     93a:	4198      	sbcs	r0, r3
     93c:	b2c0      	uxtb	r0, r0
     93e:	22bd      	movs	r2, #189	; 0xbd
     940:	4904      	ldr	r1, [pc, #16]	; (954 <spi_m_sync_get_io_descriptor+0x28>)
     942:	4b05      	ldr	r3, [pc, #20]	; (958 <spi_m_sync_get_io_descriptor+0x2c>)
     944:	4798      	blx	r3
	*io = &spi->io;
     946:	340c      	adds	r4, #12
     948:	602c      	str	r4, [r5, #0]
	return 0;
}
     94a:	2000      	movs	r0, #0
     94c:	bd70      	pop	{r4, r5, r6, pc}
     94e:	2000      	movs	r0, #0
     950:	e7f5      	b.n	93e <spi_m_sync_get_io_descriptor+0x12>
     952:	46c0      	nop			; (mov r8, r8)
     954:	00005b14 	.word	0x00005b14
     958:	00000c91 	.word	0x00000c91

0000095c <temp_sync_init>:

/**
 * \brief              Initialize Temperature Descriptor
 */
int32_t temp_sync_init(struct temp_sync_descriptor *const descr, void *const hw)
{
     95c:	b570      	push	{r4, r5, r6, lr}
     95e:	0004      	movs	r4, r0
     960:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     962:	2800      	cmp	r0, #0
     964:	d00c      	beq.n	980 <temp_sync_init+0x24>
     966:	0008      	movs	r0, r1
     968:	1e43      	subs	r3, r0, #1
     96a:	4198      	sbcs	r0, r3
     96c:	b2c0      	uxtb	r0, r0
     96e:	222b      	movs	r2, #43	; 0x2b
     970:	4904      	ldr	r1, [pc, #16]	; (984 <temp_sync_init+0x28>)
     972:	4b05      	ldr	r3, [pc, #20]	; (988 <temp_sync_init+0x2c>)
     974:	4798      	blx	r3
	return _temp_sync_init(&descr->dev, hw);
     976:	0029      	movs	r1, r5
     978:	0020      	movs	r0, r4
     97a:	4b04      	ldr	r3, [pc, #16]	; (98c <temp_sync_init+0x30>)
     97c:	4798      	blx	r3
}
     97e:	bd70      	pop	{r4, r5, r6, pc}
     980:	2000      	movs	r0, #0
     982:	e7f4      	b.n	96e <temp_sync_init+0x12>
     984:	00005b30 	.word	0x00005b30
     988:	00000c91 	.word	0x00000c91
     98c:	00001789 	.word	0x00001789

00000990 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     990:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     992:	3808      	subs	r0, #8

	descr->stat = 0;
     994:	2300      	movs	r3, #0
     996:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     998:	6a43      	ldr	r3, [r0, #36]	; 0x24
     99a:	2b00      	cmp	r3, #0
     99c:	d000      	beq.n	9a0 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     99e:	4798      	blx	r3
	}
}
     9a0:	bd10      	pop	{r4, pc}

000009a2 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     9a2:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9a4:	3808      	subs	r0, #8

	descr->stat = 0;
     9a6:	2300      	movs	r3, #0
     9a8:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     9aa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     9ac:	2b00      	cmp	r3, #0
     9ae:	d000      	beq.n	9b2 <usart_error+0x10>
		descr->usart_cb.error(descr);
     9b0:	4798      	blx	r3
	}
}
     9b2:	bd10      	pop	{r4, pc}

000009b4 <usart_fill_rx_buffer>:
{
     9b4:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9b6:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     9b8:	302c      	adds	r0, #44	; 0x2c
     9ba:	4b04      	ldr	r3, [pc, #16]	; (9cc <usart_fill_rx_buffer+0x18>)
     9bc:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     9be:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     9c0:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     9c2:	2b00      	cmp	r3, #0
     9c4:	d001      	beq.n	9ca <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     9c6:	0020      	movs	r0, r4
     9c8:	4798      	blx	r3
}
     9ca:	bd10      	pop	{r4, pc}
     9cc:	00000d35 	.word	0x00000d35

000009d0 <usart_async_write>:
{
     9d0:	b570      	push	{r4, r5, r6, lr}
     9d2:	0004      	movs	r4, r0
     9d4:	000e      	movs	r6, r1
     9d6:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     9d8:	2800      	cmp	r0, #0
     9da:	d01d      	beq.n	a18 <usart_async_write+0x48>
     9dc:	2900      	cmp	r1, #0
     9de:	d01d      	beq.n	a1c <usart_async_write+0x4c>
     9e0:	0010      	movs	r0, r2
     9e2:	1e43      	subs	r3, r0, #1
     9e4:	4198      	sbcs	r0, r3
     9e6:	223c      	movs	r2, #60	; 0x3c
     9e8:	32ff      	adds	r2, #255	; 0xff
     9ea:	490f      	ldr	r1, [pc, #60]	; (a28 <usart_async_write+0x58>)
     9ec:	4b0f      	ldr	r3, [pc, #60]	; (a2c <usart_async_write+0x5c>)
     9ee:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     9f0:	2344      	movs	r3, #68	; 0x44
     9f2:	5ae2      	ldrh	r2, [r4, r3]
     9f4:	3308      	adds	r3, #8
     9f6:	5ae3      	ldrh	r3, [r4, r3]
     9f8:	429a      	cmp	r2, r3
     9fa:	d111      	bne.n	a20 <usart_async_write+0x50>
	descr->tx_buffer        = (uint8_t *)buf;
     9fc:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     9fe:	234c      	movs	r3, #76	; 0x4c
     a00:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     a02:	2200      	movs	r2, #0
     a04:	3b08      	subs	r3, #8
     a06:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     a08:	3b43      	subs	r3, #67	; 0x43
     a0a:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     a0c:	0020      	movs	r0, r4
     a0e:	3008      	adds	r0, #8
     a10:	4b07      	ldr	r3, [pc, #28]	; (a30 <usart_async_write+0x60>)
     a12:	4798      	blx	r3
	return (int32_t)length;
     a14:	0028      	movs	r0, r5
}
     a16:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     a18:	2000      	movs	r0, #0
     a1a:	e7e4      	b.n	9e6 <usart_async_write+0x16>
     a1c:	2000      	movs	r0, #0
     a1e:	e7e2      	b.n	9e6 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     a20:	201c      	movs	r0, #28
     a22:	4240      	negs	r0, r0
     a24:	e7f7      	b.n	a16 <usart_async_write+0x46>
     a26:	46c0      	nop			; (mov r8, r8)
     a28:	00005b4c 	.word	0x00005b4c
     a2c:	00000c91 	.word	0x00000c91
     a30:	0000145d 	.word	0x0000145d

00000a34 <usart_process_byte_sent>:
{
     a34:	b570      	push	{r4, r5, r6, lr}
     a36:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     a38:	0001      	movs	r1, r0
     a3a:	3908      	subs	r1, #8
     a3c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
     a3e:	224c      	movs	r2, #76	; 0x4c
     a40:	5a8a      	ldrh	r2, [r1, r2]
     a42:	429a      	cmp	r2, r3
     a44:	d00c      	beq.n	a60 <usart_process_byte_sent+0x2c>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     a46:	000a      	movs	r2, r1
     a48:	6c89      	ldr	r1, [r1, #72]	; 0x48
     a4a:	1c5d      	adds	r5, r3, #1
     a4c:	2044      	movs	r0, #68	; 0x44
     a4e:	5215      	strh	r5, [r2, r0]
     a50:	5cc9      	ldrb	r1, [r1, r3]
     a52:	0020      	movs	r0, r4
     a54:	4b04      	ldr	r3, [pc, #16]	; (a68 <usart_process_byte_sent+0x34>)
     a56:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     a58:	0020      	movs	r0, r4
     a5a:	4b04      	ldr	r3, [pc, #16]	; (a6c <usart_process_byte_sent+0x38>)
     a5c:	4798      	blx	r3
}
     a5e:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     a60:	4b03      	ldr	r3, [pc, #12]	; (a70 <usart_process_byte_sent+0x3c>)
     a62:	4798      	blx	r3
}
     a64:	e7fb      	b.n	a5e <usart_process_byte_sent+0x2a>
     a66:	46c0      	nop			; (mov r8, r8)
     a68:	00001455 	.word	0x00001455
     a6c:	0000145d 	.word	0x0000145d
     a70:	00001465 	.word	0x00001465

00000a74 <usart_async_read>:
{
     a74:	b5f0      	push	{r4, r5, r6, r7, lr}
     a76:	46ce      	mov	lr, r9
     a78:	4647      	mov	r7, r8
     a7a:	b580      	push	{r7, lr}
     a7c:	b085      	sub	sp, #20
     a7e:	0005      	movs	r5, r0
     a80:	000e      	movs	r6, r1
     a82:	0017      	movs	r7, r2
	ASSERT(descr && buf && length);
     a84:	2800      	cmp	r0, #0
     a86:	d015      	beq.n	ab4 <usart_async_read+0x40>
     a88:	2900      	cmp	r1, #0
     a8a:	d013      	beq.n	ab4 <usart_async_read+0x40>
     a8c:	2a00      	cmp	r2, #0
     a8e:	d12a      	bne.n	ae6 <usart_async_read+0x72>
     a90:	22ac      	movs	r2, #172	; 0xac
     a92:	0052      	lsls	r2, r2, #1
     a94:	4929      	ldr	r1, [pc, #164]	; (b3c <usart_async_read+0xc8>)
     a96:	2000      	movs	r0, #0
     a98:	4b29      	ldr	r3, [pc, #164]	; (b40 <usart_async_read+0xcc>)
     a9a:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     a9c:	a803      	add	r0, sp, #12
     a9e:	4b29      	ldr	r3, [pc, #164]	; (b44 <usart_async_read+0xd0>)
     aa0:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     aa2:	0028      	movs	r0, r5
     aa4:	3034      	adds	r0, #52	; 0x34
     aa6:	4b28      	ldr	r3, [pc, #160]	; (b48 <usart_async_read+0xd4>)
     aa8:	4798      	blx	r3
	CRITICAL_SECTION_LEAVE()
     aaa:	a803      	add	r0, sp, #12
     aac:	4b27      	ldr	r3, [pc, #156]	; (b4c <usart_async_read+0xd8>)
     aae:	4798      	blx	r3
	uint16_t                       was_read = 0;
     ab0:	2500      	movs	r5, #0
	return (int32_t)was_read;
     ab2:	e03c      	b.n	b2e <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     ab4:	22ac      	movs	r2, #172	; 0xac
     ab6:	0052      	lsls	r2, r2, #1
     ab8:	4920      	ldr	r1, [pc, #128]	; (b3c <usart_async_read+0xc8>)
     aba:	2000      	movs	r0, #0
     abc:	4b20      	ldr	r3, [pc, #128]	; (b40 <usart_async_read+0xcc>)
     abe:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     ac0:	a803      	add	r0, sp, #12
     ac2:	4b20      	ldr	r3, [pc, #128]	; (b44 <usart_async_read+0xd0>)
     ac4:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     ac6:	3534      	adds	r5, #52	; 0x34
     ac8:	0028      	movs	r0, r5
     aca:	9501      	str	r5, [sp, #4]
     acc:	4b1e      	ldr	r3, [pc, #120]	; (b48 <usart_async_read+0xd4>)
     ace:	4798      	blx	r3
     ad0:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     ad2:	a803      	add	r0, sp, #12
     ad4:	4b1d      	ldr	r3, [pc, #116]	; (b4c <usart_async_read+0xd8>)
     ad6:	4798      	blx	r3
	uint16_t                       was_read = 0;
     ad8:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     ada:	4643      	mov	r3, r8
     adc:	2b00      	cmp	r3, #0
     ade:	d026      	beq.n	b2e <usart_async_read+0xba>
     ae0:	2f00      	cmp	r7, #0
     ae2:	d116      	bne.n	b12 <usart_async_read+0x9e>
     ae4:	e023      	b.n	b2e <usart_async_read+0xba>
	ASSERT(descr && buf && length);
     ae6:	22ac      	movs	r2, #172	; 0xac
     ae8:	0052      	lsls	r2, r2, #1
     aea:	4914      	ldr	r1, [pc, #80]	; (b3c <usart_async_read+0xc8>)
     aec:	2001      	movs	r0, #1
     aee:	4b14      	ldr	r3, [pc, #80]	; (b40 <usart_async_read+0xcc>)
     af0:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     af2:	a803      	add	r0, sp, #12
     af4:	4b13      	ldr	r3, [pc, #76]	; (b44 <usart_async_read+0xd0>)
     af6:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     af8:	3534      	adds	r5, #52	; 0x34
     afa:	0028      	movs	r0, r5
     afc:	9501      	str	r5, [sp, #4]
     afe:	4b12      	ldr	r3, [pc, #72]	; (b48 <usart_async_read+0xd4>)
     b00:	4798      	blx	r3
     b02:	4680      	mov	r8, r0
	CRITICAL_SECTION_LEAVE()
     b04:	a803      	add	r0, sp, #12
     b06:	4b11      	ldr	r3, [pc, #68]	; (b4c <usart_async_read+0xd8>)
     b08:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     b0a:	4643      	mov	r3, r8
	uint16_t                       was_read = 0;
     b0c:	2500      	movs	r5, #0
	while ((was_read < num) && (was_read < length)) {
     b0e:	2b00      	cmp	r3, #0
     b10:	d00d      	beq.n	b2e <usart_async_read+0xba>
{
     b12:	2400      	movs	r4, #0
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     b14:	4b0e      	ldr	r3, [pc, #56]	; (b50 <usart_async_read+0xdc>)
     b16:	4699      	mov	r9, r3
     b18:	1c65      	adds	r5, r4, #1
     b1a:	b2ad      	uxth	r5, r5
     b1c:	1931      	adds	r1, r6, r4
     b1e:	9801      	ldr	r0, [sp, #4]
     b20:	47c8      	blx	r9
     b22:	3401      	adds	r4, #1
	while ((was_read < num) && (was_read < length)) {
     b24:	4544      	cmp	r4, r8
     b26:	d202      	bcs.n	b2e <usart_async_read+0xba>
     b28:	b2a3      	uxth	r3, r4
     b2a:	429f      	cmp	r7, r3
     b2c:	d8f4      	bhi.n	b18 <usart_async_read+0xa4>
}
     b2e:	0028      	movs	r0, r5
     b30:	b005      	add	sp, #20
     b32:	bc0c      	pop	{r2, r3}
     b34:	4690      	mov	r8, r2
     b36:	4699      	mov	r9, r3
     b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b3a:	46c0      	nop			; (mov r8, r8)
     b3c:	00005b4c 	.word	0x00005b4c
     b40:	00000c91 	.word	0x00000c91
     b44:	000006d9 	.word	0x000006d9
     b48:	00000d75 	.word	0x00000d75
     b4c:	000006e7 	.word	0x000006e7
     b50:	00000ced 	.word	0x00000ced

00000b54 <usart_async_init>:
{
     b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     b56:	0004      	movs	r4, r0
     b58:	000d      	movs	r5, r1
     b5a:	0016      	movs	r6, r2
     b5c:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     b5e:	2800      	cmp	r0, #0
     b60:	d026      	beq.n	bb0 <usart_async_init+0x5c>
     b62:	2900      	cmp	r1, #0
     b64:	d026      	beq.n	bb4 <usart_async_init+0x60>
     b66:	2a00      	cmp	r2, #0
     b68:	d026      	beq.n	bb8 <usart_async_init+0x64>
     b6a:	0018      	movs	r0, r3
     b6c:	1e43      	subs	r3, r0, #1
     b6e:	4198      	sbcs	r0, r3
     b70:	223a      	movs	r2, #58	; 0x3a
     b72:	4914      	ldr	r1, [pc, #80]	; (bc4 <usart_async_init+0x70>)
     b74:	4b14      	ldr	r3, [pc, #80]	; (bc8 <usart_async_init+0x74>)
     b76:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     b78:	0020      	movs	r0, r4
     b7a:	3034      	adds	r0, #52	; 0x34
     b7c:	003a      	movs	r2, r7
     b7e:	0031      	movs	r1, r6
     b80:	4b12      	ldr	r3, [pc, #72]	; (bcc <usart_async_init+0x78>)
     b82:	4798      	blx	r3
     b84:	2800      	cmp	r0, #0
     b86:	d119      	bne.n	bbc <usart_async_init+0x68>
	init_status = _usart_async_init(&descr->device, hw);
     b88:	0020      	movs	r0, r4
     b8a:	3008      	adds	r0, #8
     b8c:	0029      	movs	r1, r5
     b8e:	4b10      	ldr	r3, [pc, #64]	; (bd0 <usart_async_init+0x7c>)
     b90:	4798      	blx	r3
	if (init_status) {
     b92:	2800      	cmp	r0, #0
     b94:	d10b      	bne.n	bae <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     b96:	4b0f      	ldr	r3, [pc, #60]	; (bd4 <usart_async_init+0x80>)
     b98:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     b9a:	4b0f      	ldr	r3, [pc, #60]	; (bd8 <usart_async_init+0x84>)
     b9c:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     b9e:	4b0f      	ldr	r3, [pc, #60]	; (bdc <usart_async_init+0x88>)
     ba0:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     ba2:	4b0f      	ldr	r3, [pc, #60]	; (be0 <usart_async_init+0x8c>)
     ba4:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     ba6:	4b0f      	ldr	r3, [pc, #60]	; (be4 <usart_async_init+0x90>)
     ba8:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     baa:	4b0f      	ldr	r3, [pc, #60]	; (be8 <usart_async_init+0x94>)
     bac:	6163      	str	r3, [r4, #20]
}
     bae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     bb0:	2000      	movs	r0, #0
     bb2:	e7dd      	b.n	b70 <usart_async_init+0x1c>
     bb4:	2000      	movs	r0, #0
     bb6:	e7db      	b.n	b70 <usart_async_init+0x1c>
     bb8:	2000      	movs	r0, #0
     bba:	e7d9      	b.n	b70 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     bbc:	200d      	movs	r0, #13
     bbe:	4240      	negs	r0, r0
     bc0:	e7f5      	b.n	bae <usart_async_init+0x5a>
     bc2:	46c0      	nop			; (mov r8, r8)
     bc4:	00005b4c 	.word	0x00005b4c
     bc8:	00000c91 	.word	0x00000c91
     bcc:	00000c99 	.word	0x00000c99
     bd0:	000013c5 	.word	0x000013c5
     bd4:	00000a75 	.word	0x00000a75
     bd8:	000009d1 	.word	0x000009d1
     bdc:	00000a35 	.word	0x00000a35
     be0:	000009b5 	.word	0x000009b5
     be4:	00000991 	.word	0x00000991
     be8:	000009a3 	.word	0x000009a3

00000bec <usart_async_enable>:
{
     bec:	b510      	push	{r4, lr}
     bee:	0004      	movs	r4, r0
	ASSERT(descr);
     bf0:	1e43      	subs	r3, r0, #1
     bf2:	4198      	sbcs	r0, r3
     bf4:	b2c0      	uxtb	r0, r0
     bf6:	2261      	movs	r2, #97	; 0x61
     bf8:	4904      	ldr	r1, [pc, #16]	; (c0c <usart_async_enable+0x20>)
     bfa:	4b05      	ldr	r3, [pc, #20]	; (c10 <usart_async_enable+0x24>)
     bfc:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     bfe:	0020      	movs	r0, r4
     c00:	3008      	adds	r0, #8
     c02:	4b04      	ldr	r3, [pc, #16]	; (c14 <usart_async_enable+0x28>)
     c04:	4798      	blx	r3
}
     c06:	2000      	movs	r0, #0
     c08:	bd10      	pop	{r4, pc}
     c0a:	46c0      	nop			; (mov r8, r8)
     c0c:	00005b4c 	.word	0x00005b4c
     c10:	00000c91 	.word	0x00000c91
     c14:	00001441 	.word	0x00001441

00000c18 <usart_async_register_callback>:
{
     c18:	b570      	push	{r4, r5, r6, lr}
     c1a:	0005      	movs	r5, r0
     c1c:	000e      	movs	r6, r1
     c1e:	0014      	movs	r4, r2
	ASSERT(descr);
     c20:	1e43      	subs	r3, r0, #1
     c22:	4198      	sbcs	r0, r3
     c24:	b2c0      	uxtb	r0, r0
     c26:	2283      	movs	r2, #131	; 0x83
     c28:	4916      	ldr	r1, [pc, #88]	; (c84 <usart_async_register_callback+0x6c>)
     c2a:	4b17      	ldr	r3, [pc, #92]	; (c88 <usart_async_register_callback+0x70>)
     c2c:	4798      	blx	r3
	switch (type) {
     c2e:	2e01      	cmp	r6, #1
     c30:	d011      	beq.n	c56 <usart_async_register_callback+0x3e>
     c32:	2e00      	cmp	r6, #0
     c34:	d004      	beq.n	c40 <usart_async_register_callback+0x28>
     c36:	2e02      	cmp	r6, #2
     c38:	d018      	beq.n	c6c <usart_async_register_callback+0x54>
		return ERR_INVALID_ARG;
     c3a:	200d      	movs	r0, #13
     c3c:	4240      	negs	r0, r0
     c3e:	e009      	b.n	c54 <usart_async_register_callback+0x3c>
		descr->usart_cb.rx_done = cb;
     c40:	62ac      	str	r4, [r5, #40]	; 0x28
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_RX_DONE, NULL != cb);
     c42:	1e62      	subs	r2, r4, #1
     c44:	4194      	sbcs	r4, r2
     c46:	b2e2      	uxtb	r2, r4
     c48:	0028      	movs	r0, r5
     c4a:	3008      	adds	r0, #8
     c4c:	2101      	movs	r1, #1
     c4e:	4b0f      	ldr	r3, [pc, #60]	; (c8c <usart_async_register_callback+0x74>)
     c50:	4798      	blx	r3
	return ERR_NONE;
     c52:	2000      	movs	r0, #0
}
     c54:	bd70      	pop	{r4, r5, r6, pc}
		descr->usart_cb.tx_done = cb;
     c56:	626c      	str	r4, [r5, #36]	; 0x24
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_TX_DONE, NULL != cb);
     c58:	1e62      	subs	r2, r4, #1
     c5a:	4194      	sbcs	r4, r2
     c5c:	b2e2      	uxtb	r2, r4
     c5e:	0028      	movs	r0, r5
     c60:	3008      	adds	r0, #8
     c62:	2102      	movs	r1, #2
     c64:	4b09      	ldr	r3, [pc, #36]	; (c8c <usart_async_register_callback+0x74>)
     c66:	4798      	blx	r3
	return ERR_NONE;
     c68:	2000      	movs	r0, #0
		break;
     c6a:	e7f3      	b.n	c54 <usart_async_register_callback+0x3c>
		descr->usart_cb.error = cb;
     c6c:	62ec      	str	r4, [r5, #44]	; 0x2c
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_ERROR, NULL != cb);
     c6e:	1e62      	subs	r2, r4, #1
     c70:	4194      	sbcs	r4, r2
     c72:	b2e2      	uxtb	r2, r4
     c74:	0028      	movs	r0, r5
     c76:	3008      	adds	r0, #8
     c78:	2103      	movs	r1, #3
     c7a:	4b04      	ldr	r3, [pc, #16]	; (c8c <usart_async_register_callback+0x74>)
     c7c:	4798      	blx	r3
	return ERR_NONE;
     c7e:	2000      	movs	r0, #0
		break;
     c80:	e7e8      	b.n	c54 <usart_async_register_callback+0x3c>
     c82:	46c0      	nop			; (mov r8, r8)
     c84:	00005b4c 	.word	0x00005b4c
     c88:	00000c91 	.word	0x00000c91
     c8c:	0000146d 	.word	0x0000146d

00000c90 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     c90:	2800      	cmp	r0, #0
     c92:	d100      	bne.n	c96 <assert+0x6>
		__asm("BKPT #0");
     c94:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     c96:	4770      	bx	lr

00000c98 <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
     c98:	b570      	push	{r4, r5, r6, lr}
     c9a:	0004      	movs	r4, r0
     c9c:	000e      	movs	r6, r1
     c9e:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
     ca0:	2800      	cmp	r0, #0
     ca2:	d00b      	beq.n	cbc <ringbuffer_init+0x24>
     ca4:	2900      	cmp	r1, #0
     ca6:	d018      	beq.n	cda <ringbuffer_init+0x42>
     ca8:	2001      	movs	r0, #1
     caa:	2a00      	cmp	r2, #0
     cac:	d107      	bne.n	cbe <ringbuffer_init+0x26>
     cae:	2228      	movs	r2, #40	; 0x28
     cb0:	490c      	ldr	r1, [pc, #48]	; (ce4 <ringbuffer_init+0x4c>)
     cb2:	2000      	movs	r0, #0
     cb4:	4b0c      	ldr	r3, [pc, #48]	; (ce8 <ringbuffer_init+0x50>)
     cb6:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
     cb8:	1e6b      	subs	r3, r5, #1
     cba:	e007      	b.n	ccc <ringbuffer_init+0x34>
	ASSERT(rb && buf && size);
     cbc:	2000      	movs	r0, #0
     cbe:	2228      	movs	r2, #40	; 0x28
     cc0:	4908      	ldr	r1, [pc, #32]	; (ce4 <ringbuffer_init+0x4c>)
     cc2:	4b09      	ldr	r3, [pc, #36]	; (ce8 <ringbuffer_init+0x50>)
     cc4:	4798      	blx	r3
	if ((size & (size - 1)) != 0) {
     cc6:	1e6b      	subs	r3, r5, #1
     cc8:	422b      	tst	r3, r5
     cca:	d108      	bne.n	cde <ringbuffer_init+0x46>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
     ccc:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
     cce:	2300      	movs	r3, #0
     cd0:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
     cd2:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
     cd4:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
     cd6:	2000      	movs	r0, #0
}
     cd8:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
     cda:	2000      	movs	r0, #0
     cdc:	e7ef      	b.n	cbe <ringbuffer_init+0x26>
		return ERR_INVALID_ARG;
     cde:	200d      	movs	r0, #13
     ce0:	4240      	negs	r0, r0
     ce2:	e7f9      	b.n	cd8 <ringbuffer_init+0x40>
     ce4:	00005b6c 	.word	0x00005b6c
     ce8:	00000c91 	.word	0x00000c91

00000cec <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
     cec:	b570      	push	{r4, r5, r6, lr}
     cee:	0004      	movs	r4, r0
     cf0:	000d      	movs	r5, r1
	ASSERT(rb && data);
     cf2:	2800      	cmp	r0, #0
     cf4:	d015      	beq.n	d22 <ringbuffer_get+0x36>
     cf6:	0008      	movs	r0, r1
     cf8:	1e43      	subs	r3, r0, #1
     cfa:	4198      	sbcs	r0, r3
     cfc:	b2c0      	uxtb	r0, r0
     cfe:	2240      	movs	r2, #64	; 0x40
     d00:	490a      	ldr	r1, [pc, #40]	; (d2c <ringbuffer_get+0x40>)
     d02:	4b0b      	ldr	r3, [pc, #44]	; (d30 <ringbuffer_get+0x44>)
     d04:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
     d06:	68a3      	ldr	r3, [r4, #8]
     d08:	68e2      	ldr	r2, [r4, #12]
     d0a:	429a      	cmp	r2, r3
     d0c:	d00b      	beq.n	d26 <ringbuffer_get+0x3a>
		*data = rb->buf[rb->read_index & rb->size];
     d0e:	6862      	ldr	r2, [r4, #4]
     d10:	4013      	ands	r3, r2
     d12:	6822      	ldr	r2, [r4, #0]
     d14:	5cd3      	ldrb	r3, [r2, r3]
     d16:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
     d18:	68a3      	ldr	r3, [r4, #8]
     d1a:	3301      	adds	r3, #1
     d1c:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
     d1e:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
     d20:	bd70      	pop	{r4, r5, r6, pc}
     d22:	2000      	movs	r0, #0
     d24:	e7eb      	b.n	cfe <ringbuffer_get+0x12>
	return ERR_NOT_FOUND;
     d26:	200a      	movs	r0, #10
     d28:	4240      	negs	r0, r0
     d2a:	e7f9      	b.n	d20 <ringbuffer_get+0x34>
     d2c:	00005b6c 	.word	0x00005b6c
     d30:	00000c91 	.word	0x00000c91

00000d34 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
     d34:	b570      	push	{r4, r5, r6, lr}
     d36:	0004      	movs	r4, r0
     d38:	000d      	movs	r5, r1
	ASSERT(rb);
     d3a:	1e43      	subs	r3, r0, #1
     d3c:	4198      	sbcs	r0, r3
     d3e:	b2c0      	uxtb	r0, r0
     d40:	2251      	movs	r2, #81	; 0x51
     d42:	490a      	ldr	r1, [pc, #40]	; (d6c <ringbuffer_put+0x38>)
     d44:	4b0a      	ldr	r3, [pc, #40]	; (d70 <ringbuffer_put+0x3c>)
     d46:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
     d48:	6863      	ldr	r3, [r4, #4]
     d4a:	68e2      	ldr	r2, [r4, #12]
     d4c:	4013      	ands	r3, r2
     d4e:	6822      	ldr	r2, [r4, #0]
     d50:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
     d52:	68e3      	ldr	r3, [r4, #12]
     d54:	6861      	ldr	r1, [r4, #4]
     d56:	68a2      	ldr	r2, [r4, #8]
     d58:	1a9a      	subs	r2, r3, r2
     d5a:	428a      	cmp	r2, r1
     d5c:	d901      	bls.n	d62 <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
     d5e:	1a59      	subs	r1, r3, r1
     d60:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
     d62:	3301      	adds	r3, #1
     d64:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
     d66:	2000      	movs	r0, #0
     d68:	bd70      	pop	{r4, r5, r6, pc}
     d6a:	46c0      	nop			; (mov r8, r8)
     d6c:	00005b6c 	.word	0x00005b6c
     d70:	00000c91 	.word	0x00000c91

00000d74 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
     d74:	b510      	push	{r4, lr}
     d76:	0004      	movs	r4, r0
	ASSERT(rb);
     d78:	1e43      	subs	r3, r0, #1
     d7a:	4198      	sbcs	r0, r3
     d7c:	b2c0      	uxtb	r0, r0
     d7e:	2267      	movs	r2, #103	; 0x67
     d80:	4903      	ldr	r1, [pc, #12]	; (d90 <ringbuffer_num+0x1c>)
     d82:	4b04      	ldr	r3, [pc, #16]	; (d94 <ringbuffer_num+0x20>)
     d84:	4798      	blx	r3

	return rb->write_index - rb->read_index;
     d86:	68e0      	ldr	r0, [r4, #12]
     d88:	68a3      	ldr	r3, [r4, #8]
     d8a:	1ac0      	subs	r0, r0, r3
}
     d8c:	bd10      	pop	{r4, pc}
     d8e:	46c0      	nop			; (mov r8, r8)
     d90:	00005b6c 	.word	0x00005b6c
     d94:	00000c91 	.word	0x00000c91

00000d98 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     d98:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     d9a:	4a06      	ldr	r2, [pc, #24]	; (db4 <_sbrk+0x1c>)
     d9c:	6812      	ldr	r2, [r2, #0]
     d9e:	2a00      	cmp	r2, #0
     da0:	d004      	beq.n	dac <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     da2:	4a04      	ldr	r2, [pc, #16]	; (db4 <_sbrk+0x1c>)
     da4:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     da6:	18c3      	adds	r3, r0, r3
     da8:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     daa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     dac:	4902      	ldr	r1, [pc, #8]	; (db8 <_sbrk+0x20>)
     dae:	4a01      	ldr	r2, [pc, #4]	; (db4 <_sbrk+0x1c>)
     db0:	6011      	str	r1, [r2, #0]
     db2:	e7f6      	b.n	da2 <_sbrk+0xa>
     db4:	2000019c 	.word	0x2000019c
     db8:	200023b0 	.word	0x200023b0

00000dbc <_adc_init>:
 *
 * \param[in] hw The pointer to hardware instance
 * \param[in] i The number of hardware instance
 */
static int32_t _adc_init(void *const hw, const uint8_t i)
{
     dbc:	b510      	push	{r4, lr}
	};
}

static inline bool hri_adc_is_syncing(const void *const hw, hri_adc_syncbusy_reg_t reg)
{
	return ((Adc *)hw)->SYNCBUSY.reg & reg;
     dbe:	8c03      	ldrh	r3, [r0, #32]

	if (!hri_adc_is_syncing(hw, ADC_SYNCBUSY_SWRST)) {
     dc0:	07db      	lsls	r3, r3, #31
     dc2:	d418      	bmi.n	df6 <_adc_init+0x3a>
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     dc4:	2203      	movs	r2, #3
     dc6:	8c03      	ldrh	r3, [r0, #32]
     dc8:	4213      	tst	r3, r2
     dca:	d1fc      	bne.n	dc6 <_adc_init+0xa>

static inline hri_adc_ctrla_reg_t hri_adc_get_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_adc_wait_for_sync(hw, ADC_SYNCBUSY_SWRST | ADC_SYNCBUSY_ENABLE);
	tmp = ((Adc *)hw)->CTRLA.reg;
     dcc:	7803      	ldrb	r3, [r0, #0]
		if (hri_adc_get_CTRLA_reg(hw, ADC_CTRLA_ENABLE)) {
     dce:	079b      	lsls	r3, r3, #30
     dd0:	d50b      	bpl.n	dea <_adc_init+0x2e>
	((Adc *)hw)->CTRLA.reg &= ~ADC_CTRLA_ENABLE;
     dd2:	7803      	ldrb	r3, [r0, #0]
     dd4:	2202      	movs	r2, #2
     dd6:	4393      	bics	r3, r2
     dd8:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     dda:	3201      	adds	r2, #1
     ddc:	8c03      	ldrh	r3, [r0, #32]
     dde:	4213      	tst	r3, r2
     de0:	d1fc      	bne.n	ddc <_adc_init+0x20>
     de2:	2202      	movs	r2, #2
     de4:	8c03      	ldrh	r3, [r0, #32]
     de6:	4213      	tst	r3, r2
     de8:	d1fc      	bne.n	de4 <_adc_init+0x28>
}

static inline void hri_adc_write_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLA.reg = data;
     dea:	2301      	movs	r3, #1
     dec:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     dee:	2203      	movs	r2, #3
     df0:	8c03      	ldrh	r3, [r0, #32]
     df2:	4213      	tst	r3, r2
     df4:	d1fc      	bne.n	df0 <_adc_init+0x34>
     df6:	2201      	movs	r2, #1
     df8:	8c03      	ldrh	r3, [r0, #32]
     dfa:	4213      	tst	r3, r2
     dfc:	d1fc      	bne.n	df8 <_adc_init+0x3c>
		}
		hri_adc_write_CTRLA_reg(hw, ADC_CTRLA_SWRST);
	}
	hri_adc_wait_for_sync(hw, ADC_SYNCBUSY_SWRST);

	hri_adc_write_CTRLB_reg(hw, _adcs[i].ctrl_b);
     dfe:	00ca      	lsls	r2, r1, #3
     e00:	1a52      	subs	r2, r2, r1
     e02:	0092      	lsls	r2, r2, #2
     e04:	4b36      	ldr	r3, [pc, #216]	; (ee0 <_adc_init+0x124>)
     e06:	189b      	adds	r3, r3, r2
     e08:	789a      	ldrb	r2, [r3, #2]
}

static inline void hri_adc_write_CTRLB_reg(const void *const hw, hri_adc_ctrlb_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLB.reg = data;
     e0a:	7042      	strb	r2, [r0, #1]
	hri_adc_write_REFCTRL_reg(hw, _adcs[i].ref_ctrl);
     e0c:	78da      	ldrb	r2, [r3, #3]
}

static inline void hri_adc_write_REFCTRL_reg(const void *const hw, hri_adc_refctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->REFCTRL.reg = data;
     e0e:	7082      	strb	r2, [r0, #2]
	hri_adc_write_EVCTRL_reg(hw, _adcs[i].ev_ctrl);
     e10:	791a      	ldrb	r2, [r3, #4]
}

static inline void hri_adc_write_EVCTRL_reg(const void *const hw, hri_adc_evctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->EVCTRL.reg = data;
     e12:	70c2      	strb	r2, [r0, #3]
	hri_adc_write_INPUTCTRL_reg(hw, _adcs[i].input_ctrl);
     e14:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_adc_write_INPUTCTRL_reg(const void *const hw, hri_adc_inputctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->INPUTCTRL.reg = data;
     e16:	8103      	strh	r3, [r0, #8]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e18:	8c03      	ldrh	r3, [r0, #32]
     e1a:	055b      	lsls	r3, r3, #21
     e1c:	d1fc      	bne.n	e18 <_adc_init+0x5c>
	hri_adc_write_CTRLC_reg(hw, _adcs[i].ctrl_c);
     e1e:	00cb      	lsls	r3, r1, #3
     e20:	1a5b      	subs	r3, r3, r1
     e22:	009b      	lsls	r3, r3, #2
     e24:	4a2e      	ldr	r2, [pc, #184]	; (ee0 <_adc_init+0x124>)
     e26:	18d3      	adds	r3, r2, r3
     e28:	891b      	ldrh	r3, [r3, #8]
}

static inline void hri_adc_write_CTRLC_reg(const void *const hw, hri_adc_ctrlc_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLC.reg = data;
     e2a:	8143      	strh	r3, [r0, #10]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e2c:	8c03      	ldrh	r3, [r0, #32]
     e2e:	055b      	lsls	r3, r3, #21
     e30:	d1fc      	bne.n	e2c <_adc_init+0x70>
	hri_adc_write_AVGCTRL_reg(hw, _adcs[i].avg_ctrl);
     e32:	00cb      	lsls	r3, r1, #3
     e34:	1a5b      	subs	r3, r3, r1
     e36:	009b      	lsls	r3, r3, #2
     e38:	4a29      	ldr	r2, [pc, #164]	; (ee0 <_adc_init+0x124>)
     e3a:	18d3      	adds	r3, r2, r3
     e3c:	7a9b      	ldrb	r3, [r3, #10]
}

static inline void hri_adc_write_AVGCTRL_reg(const void *const hw, hri_adc_avgctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->AVGCTRL.reg = data;
     e3e:	7303      	strb	r3, [r0, #12]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e40:	8c03      	ldrh	r3, [r0, #32]
     e42:	055b      	lsls	r3, r3, #21
     e44:	d1fc      	bne.n	e40 <_adc_init+0x84>
	hri_adc_write_SAMPCTRL_reg(hw, _adcs[i].samp_ctrl);
     e46:	00cb      	lsls	r3, r1, #3
     e48:	1a5b      	subs	r3, r3, r1
     e4a:	009b      	lsls	r3, r3, #2
     e4c:	4a24      	ldr	r2, [pc, #144]	; (ee0 <_adc_init+0x124>)
     e4e:	18d3      	adds	r3, r2, r3
     e50:	7adb      	ldrb	r3, [r3, #11]
}

static inline void hri_adc_write_SAMPCTRL_reg(const void *const hw, hri_adc_sampctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->SAMPCTRL.reg = data;
     e52:	7343      	strb	r3, [r0, #13]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e54:	8c03      	ldrh	r3, [r0, #32]
     e56:	055b      	lsls	r3, r3, #21
     e58:	d1fc      	bne.n	e54 <_adc_init+0x98>
	hri_adc_write_WINLT_reg(hw, _adcs[i].win_lt);
     e5a:	00cb      	lsls	r3, r1, #3
     e5c:	1a5b      	subs	r3, r3, r1
     e5e:	009b      	lsls	r3, r3, #2
     e60:	4a1f      	ldr	r2, [pc, #124]	; (ee0 <_adc_init+0x124>)
     e62:	18d3      	adds	r3, r2, r3
     e64:	899b      	ldrh	r3, [r3, #12]
}

static inline void hri_adc_write_WINLT_reg(const void *const hw, hri_adc_winlt_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->WINLT.reg = data;
     e66:	81c3      	strh	r3, [r0, #14]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e68:	2240      	movs	r2, #64	; 0x40
     e6a:	8c03      	ldrh	r3, [r0, #32]
     e6c:	4213      	tst	r3, r2
     e6e:	d1fc      	bne.n	e6a <_adc_init+0xae>
	hri_adc_write_WINUT_reg(hw, _adcs[i].win_ut);
     e70:	00cb      	lsls	r3, r1, #3
     e72:	1a5b      	subs	r3, r3, r1
     e74:	009b      	lsls	r3, r3, #2
     e76:	4a1a      	ldr	r2, [pc, #104]	; (ee0 <_adc_init+0x124>)
     e78:	18d3      	adds	r3, r2, r3
     e7a:	89db      	ldrh	r3, [r3, #14]
}

static inline void hri_adc_write_WINUT_reg(const void *const hw, hri_adc_winut_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->WINUT.reg = data;
     e7c:	8203      	strh	r3, [r0, #16]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e7e:	2280      	movs	r2, #128	; 0x80
     e80:	8c03      	ldrh	r3, [r0, #32]
     e82:	4213      	tst	r3, r2
     e84:	d1fc      	bne.n	e80 <_adc_init+0xc4>
	hri_adc_write_GAINCORR_reg(hw, _adcs[i].gain_corr);
     e86:	00cb      	lsls	r3, r1, #3
     e88:	1a5b      	subs	r3, r3, r1
     e8a:	009b      	lsls	r3, r3, #2
     e8c:	4a14      	ldr	r2, [pc, #80]	; (ee0 <_adc_init+0x124>)
     e8e:	18d3      	adds	r3, r2, r3
     e90:	8a1b      	ldrh	r3, [r3, #16]
}

static inline void hri_adc_write_GAINCORR_reg(const void *const hw, hri_adc_gaincorr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->GAINCORR.reg = data;
     e92:	8243      	strh	r3, [r0, #18]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     e94:	2280      	movs	r2, #128	; 0x80
     e96:	0052      	lsls	r2, r2, #1
     e98:	8c03      	ldrh	r3, [r0, #32]
     e9a:	4213      	tst	r3, r2
     e9c:	d1fc      	bne.n	e98 <_adc_init+0xdc>
	hri_adc_write_OFFSETCORR_reg(hw, _adcs[i].offset_corr);
     e9e:	00cb      	lsls	r3, r1, #3
     ea0:	1a5b      	subs	r3, r3, r1
     ea2:	009b      	lsls	r3, r3, #2
     ea4:	4a0e      	ldr	r2, [pc, #56]	; (ee0 <_adc_init+0x124>)
     ea6:	18d3      	adds	r3, r2, r3
     ea8:	8a5b      	ldrh	r3, [r3, #18]
}

static inline void hri_adc_write_OFFSETCORR_reg(const void *const hw, hri_adc_offsetcorr_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->OFFSETCORR.reg = data;
     eaa:	8283      	strh	r3, [r0, #20]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     eac:	2280      	movs	r2, #128	; 0x80
     eae:	0092      	lsls	r2, r2, #2
     eb0:	8c03      	ldrh	r3, [r0, #32]
     eb2:	4213      	tst	r3, r2
     eb4:	d1fc      	bne.n	eb0 <_adc_init+0xf4>
	hri_adc_write_DBGCTRL_reg(hw, _adcs[i].dbg_ctrl);
     eb6:	4c0a      	ldr	r4, [pc, #40]	; (ee0 <_adc_init+0x124>)
     eb8:	00cb      	lsls	r3, r1, #3
     eba:	1a5a      	subs	r2, r3, r1
     ebc:	0092      	lsls	r2, r2, #2
     ebe:	18a2      	adds	r2, r4, r2
     ec0:	7d12      	ldrb	r2, [r2, #20]
}

static inline void hri_adc_write_DBGCTRL_reg(const void *const hw, hri_adc_dbgctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->DBGCTRL.reg = data;
     ec2:	7702      	strb	r2, [r0, #28]
}

static inline void hri_adc_write_SEQCTRL_reg(const void *const hw, hri_adc_seqctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->SEQCTRL.reg = data;
     ec4:	2200      	movs	r2, #0
     ec6:	6282      	str	r2, [r0, #40]	; 0x28
	hri_adc_write_SEQCTRL_reg(hw, _adcs[i].seq_ctrl);
	hri_adc_write_CTRLA_reg(hw, _adcs[i].ctrl_a);
     ec8:	1a59      	subs	r1, r3, r1
     eca:	0089      	lsls	r1, r1, #2
     ecc:	1861      	adds	r1, r4, r1
     ece:	784b      	ldrb	r3, [r1, #1]
	((Adc *)hw)->CTRLA.reg = data;
     ed0:	7003      	strb	r3, [r0, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     ed2:	3203      	adds	r2, #3
     ed4:	8c03      	ldrh	r3, [r0, #32]
     ed6:	4213      	tst	r3, r2
     ed8:	d1fc      	bne.n	ed4 <_adc_init+0x118>

	return ERR_NONE;
}
     eda:	2000      	movs	r0, #0
     edc:	bd10      	pop	{r4, pc}
     ede:	46c0      	nop			; (mov r8, r8)
     ee0:	00005b90 	.word	0x00005b90

00000ee4 <_adc_get_regs>:
{
     ee4:	b510      	push	{r4, lr}
	return ((uint32_t)hw - (uint32_t)ADC0) >> 10;
     ee6:	4b07      	ldr	r3, [pc, #28]	; (f04 <_adc_get_regs+0x20>)
     ee8:	469c      	mov	ip, r3
     eea:	4460      	add	r0, ip
     eec:	0a80      	lsrs	r0, r0, #10
		if (_adcs[i].number == n) {
     eee:	b2c0      	uxtb	r0, r0
     ef0:	2800      	cmp	r0, #0
     ef2:	d004      	beq.n	efe <_adc_get_regs+0x1a>
	ASSERT(false);
     ef4:	228d      	movs	r2, #141	; 0x8d
     ef6:	4904      	ldr	r1, [pc, #16]	; (f08 <_adc_get_regs+0x24>)
     ef8:	2000      	movs	r0, #0
     efa:	4b04      	ldr	r3, [pc, #16]	; (f0c <_adc_get_regs+0x28>)
     efc:	4798      	blx	r3
}
     efe:	2000      	movs	r0, #0
     f00:	bd10      	pop	{r4, pc}
     f02:	46c0      	nop			; (mov r8, r8)
     f04:	bdffbc00 	.word	0xbdffbc00
     f08:	00005bac 	.word	0x00005bac
     f0c:	00000c91 	.word	0x00000c91

00000f10 <_adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t _adc_sync_init(struct _adc_sync_device *const device, void *const hw)
{
     f10:	b570      	push	{r4, r5, r6, lr}
     f12:	0005      	movs	r5, r0
     f14:	000c      	movs	r4, r1
	ASSERT(device);
     f16:	1e43      	subs	r3, r0, #1
     f18:	4198      	sbcs	r0, r3
     f1a:	b2c0      	uxtb	r0, r0
     f1c:	22d4      	movs	r2, #212	; 0xd4
     f1e:	4906      	ldr	r1, [pc, #24]	; (f38 <_adc_sync_init+0x28>)
     f20:	4b06      	ldr	r3, [pc, #24]	; (f3c <_adc_sync_init+0x2c>)
     f22:	4798      	blx	r3

	device->hw = hw;
     f24:	602c      	str	r4, [r5, #0]

	return _adc_init(hw, _adc_get_regs((uint32_t)hw));
     f26:	0020      	movs	r0, r4
     f28:	4b05      	ldr	r3, [pc, #20]	; (f40 <_adc_sync_init+0x30>)
     f2a:	4798      	blx	r3
     f2c:	0001      	movs	r1, r0
     f2e:	0020      	movs	r0, r4
     f30:	4b04      	ldr	r3, [pc, #16]	; (f44 <_adc_sync_init+0x34>)
     f32:	4798      	blx	r3
}
     f34:	bd70      	pop	{r4, r5, r6, pc}
     f36:	46c0      	nop			; (mov r8, r8)
     f38:	00005bac 	.word	0x00005bac
     f3c:	00000c91 	.word	0x00000c91
     f40:	00000ee5 	.word	0x00000ee5
     f44:	00000dbd 	.word	0x00000dbd

00000f48 <_adc_sync_enable_channel>:
 */
void _adc_sync_enable_channel(struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	hri_adc_set_CTRLA_ENABLE_bit(device->hw);
     f48:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->CTRLA.reg |= ADC_CTRLA_ENABLE;
     f4a:	7813      	ldrb	r3, [r2, #0]
     f4c:	2102      	movs	r1, #2
     f4e:	430b      	orrs	r3, r1
     f50:	7013      	strb	r3, [r2, #0]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     f52:	3101      	adds	r1, #1
     f54:	8c13      	ldrh	r3, [r2, #32]
     f56:	420b      	tst	r3, r1
     f58:	d1fc      	bne.n	f54 <_adc_sync_enable_channel+0xc>
}
     f5a:	4770      	bx	lr

00000f5c <_adc_sync_get_data_size>:
/**
 * \brief Retrieve ADC conversion data size
 */
uint8_t _adc_sync_get_data_size(const struct _adc_sync_device *const device)
{
	return hri_adc_read_CTRLC_RESSEL_bf(device->hw) == ADC_CTRLC_RESSEL_8BIT_Val ? 1 : 2;
     f5c:	6803      	ldr	r3, [r0, #0]
	tmp = ((Adc *)hw)->CTRLC.reg;
     f5e:	8958      	ldrh	r0, [r3, #10]
	tmp = (tmp & ADC_CTRLC_RESSEL_Msk) >> ADC_CTRLC_RESSEL_Pos;
     f60:	0680      	lsls	r0, r0, #26
     f62:	0f80      	lsrs	r0, r0, #30
     f64:	3803      	subs	r0, #3
     f66:	1e43      	subs	r3, r0, #1
     f68:	4198      	sbcs	r0, r3
     f6a:	3001      	adds	r0, #1
}
     f6c:	4770      	bx	lr

00000f6e <_adc_sync_is_channel_conversion_done>:
 */
bool _adc_sync_is_channel_conversion_done(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_get_interrupt_RESRDY_bit(device->hw);
     f6e:	6803      	ldr	r3, [r0, #0]
	return (((Adc *)hw)->INTFLAG.reg & ADC_INTFLAG_RESRDY) >> ADC_INTFLAG_RESRDY_Pos;
     f70:	7998      	ldrb	r0, [r3, #6]
     f72:	2301      	movs	r3, #1
     f74:	4018      	ands	r0, r3
}
     f76:	4770      	bx	lr

00000f78 <_adc_sync_convert>:
/**
 * \brief Make conversion
 */
void _adc_sync_convert(struct _adc_sync_device *const device)
{
	hri_adc_set_SWTRIG_START_bit(device->hw);
     f78:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->SWTRIG.reg |= ADC_SWTRIG_START;
     f7a:	7e13      	ldrb	r3, [r2, #24]
     f7c:	2102      	movs	r1, #2
     f7e:	430b      	orrs	r3, r1
     f80:	7613      	strb	r3, [r2, #24]
	while (((Adc *)hw)->SYNCBUSY.reg & reg) {
     f82:	8c13      	ldrh	r3, [r2, #32]
     f84:	055b      	lsls	r3, r3, #21
     f86:	d1fc      	bne.n	f82 <_adc_sync_convert+0xa>
}
     f88:	4770      	bx	lr

00000f8a <_adc_sync_read_channel_data>:
 */
uint16_t _adc_sync_read_channel_data(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_read_RESULT_reg(device->hw);
     f8a:	6803      	ldr	r3, [r0, #0]
	return ((Adc *)hw)->RESULT.reg;
     f8c:	8c98      	ldrh	r0, [r3, #36]	; 0x24
     f8e:	b280      	uxth	r0, r0
}
     f90:	4770      	bx	lr

00000f92 <_adc_get_adc_sync>:
 * \brief Retrieve ADC sync helper functions
 */
void *_adc_get_adc_sync(void)
{
	return (void *)NULL;
}
     f92:	2000      	movs	r0, #0
     f94:	4770      	bx	lr
	...

00000f98 <_can_async_init>:

/**
 * \brief Initialize CAN.
 */
int32_t _can_async_init(struct _can_async_device *const dev, void *const hw)
{
     f98:	b5f0      	push	{r4, r5, r6, r7, lr}
	dev->hw = hw;
     f9a:	6001      	str	r1, [r0, #0]
}

static inline void hri_can_set_CCCR_INIT_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= CAN_CCCR_INIT;
     f9c:	698b      	ldr	r3, [r1, #24]
     f9e:	2201      	movs	r2, #1
     fa0:	4313      	orrs	r3, r2
     fa2:	618b      	str	r3, [r1, #24]
	hri_can_set_CCCR_INIT_bit(dev->hw);
	while (hri_can_get_CCCR_INIT_bit(dev->hw) == 0)
     fa4:	6802      	ldr	r2, [r0, #0]

static inline bool hri_can_get_CCCR_INIT_bit(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Can *)hw)->CCCR.reg;
	tmp = (tmp & CAN_CCCR_INIT) >> CAN_CCCR_INIT_Pos;
     fa6:	2401      	movs	r4, #1
	tmp = ((Can *)hw)->CCCR.reg;
     fa8:	6993      	ldr	r3, [r2, #24]
     faa:	421c      	tst	r4, r3
     fac:	d0fc      	beq.n	fa8 <_can_async_init+0x10>
}

static inline void hri_can_set_CCCR_CCE_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= CAN_CCCR_CCE;
     fae:	6993      	ldr	r3, [r2, #24]
     fb0:	2402      	movs	r4, #2
     fb2:	4323      	orrs	r3, r4
     fb4:	6193      	str	r3, [r2, #24]
		;
	hri_can_set_CCCR_CCE_bit(dev->hw);

#ifdef CONF_CAN0_ENABLED
	if (hw == CAN0) {
     fb6:	4b34      	ldr	r3, [pc, #208]	; (1088 <_can_async_init+0xf0>)
     fb8:	4299      	cmp	r1, r3
     fba:	d010      	beq.n	fde <_can_async_init+0x46>
		hri_can_write_ILE_reg(dev->hw, CAN_ILE_EINT0);
	}
#endif

	/* Disable CCE to prevent Configuration Change */
	hri_can_clear_CCCR_CCE_bit(dev->hw);
     fbc:	6802      	ldr	r2, [r0, #0]
}

static inline void hri_can_clear_CCCR_CCE_bit(const void *const hw)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg &= ~CAN_CCCR_CCE;
     fbe:	6993      	ldr	r3, [r2, #24]
     fc0:	2102      	movs	r1, #2
     fc2:	438b      	bics	r3, r1
     fc4:	6193      	str	r3, [r2, #24]
	hri_can_clear_CCCR_INIT_bit(dev->hw);
     fc6:	6802      	ldr	r2, [r0, #0]
	((Can *)hw)->CCCR.reg &= ~CAN_CCCR_INIT;
     fc8:	6993      	ldr	r3, [r2, #24]
     fca:	3901      	subs	r1, #1
     fcc:	438b      	bics	r3, r1
     fce:	6193      	str	r3, [r2, #24]
	while (hri_can_get_CCCR_INIT_bit(dev->hw)) {
     fd0:	6801      	ldr	r1, [r0, #0]
	tmp = (tmp & CAN_CCCR_INIT) >> CAN_CCCR_INIT_Pos;
     fd2:	2201      	movs	r2, #1
	tmp = ((Can *)hw)->CCCR.reg;
     fd4:	698b      	ldr	r3, [r1, #24]
     fd6:	421a      	tst	r2, r3
     fd8:	d1fc      	bne.n	fd4 <_can_async_init+0x3c>
	};

	return ERR_NONE;
}
     fda:	2000      	movs	r0, #0
     fdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_can0_dev    = dev;
     fde:	4b2b      	ldr	r3, [pc, #172]	; (108c <_can_async_init+0xf4>)
     fe0:	001a      	movs	r2, r3
     fe2:	c201      	stmia	r2!, {r0}
		dev->context = (void *)&_can0_context;
     fe4:	492a      	ldr	r1, [pc, #168]	; (1090 <_can_async_init+0xf8>)
     fe6:	6181      	str	r1, [r0, #24]
		hri_can_set_CCCR_reg(dev->hw, CONF_CAN0_CCCR_REG);
     fe8:	6801      	ldr	r1, [r0, #0]
}

static inline void hri_can_set_CCCR_reg(const void *const hw, hri_can_cccr_reg_t mask)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->CCCR.reg |= mask;
     fea:	698c      	ldr	r4, [r1, #24]
     fec:	618c      	str	r4, [r1, #24]
		hri_can_write_MRCFG_reg(dev->hw, CONF_CAN0_MRCFG_REG);
     fee:	6801      	ldr	r1, [r0, #0]
	((Can *)hw)->MRCFG.reg = data;
     ff0:	2400      	movs	r4, #0
     ff2:	608c      	str	r4, [r1, #8]
		hri_can_write_NBTP_reg(dev->hw, CONF_CAN0_BTP_REG);
     ff4:	6801      	ldr	r1, [r0, #0]
}

static inline void hri_can_write_NBTP_reg(const void *const hw, hri_can_nbtp_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->NBTP.reg = data;
     ff6:	4d27      	ldr	r5, [pc, #156]	; (1094 <_can_async_init+0xfc>)
     ff8:	61cd      	str	r5, [r1, #28]
		hri_can_write_DBTP_reg(dev->hw, CONF_CAN0_DBTP_REG);
     ffa:	6801      	ldr	r1, [r0, #0]
	((Can *)hw)->DBTP.reg = data;
     ffc:	4d26      	ldr	r5, [pc, #152]	; (1098 <_can_async_init+0x100>)
     ffe:	60cd      	str	r5, [r1, #12]
		hri_can_write_RXF0C_reg(dev->hw, CONF_CAN0_RXF0C_REG | CAN_RXF0C_F0SA((uint32_t)can0_rx_fifo));
    1000:	4d26      	ldr	r5, [pc, #152]	; (109c <_can_async_init+0x104>)
    1002:	042d      	lsls	r5, r5, #16
    1004:	0c2d      	lsrs	r5, r5, #16
    1006:	2180      	movs	r1, #128	; 0x80
    1008:	0289      	lsls	r1, r1, #10
    100a:	430d      	orrs	r5, r1
}

static inline void hri_can_write_RXF0C_reg(const void *const hw, hri_can_rxf0c_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->RXF0C.reg = data;
    100c:	26a0      	movs	r6, #160	; 0xa0
    100e:	6807      	ldr	r7, [r0, #0]
    1010:	51bd      	str	r5, [r7, r6]
}

static inline void hri_can_write_RXESC_reg(const void *const hw, hri_can_rxesc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->RXESC.reg = data;
    1012:	25bc      	movs	r5, #188	; 0xbc
    1014:	6806      	ldr	r6, [r0, #0]
    1016:	5174      	str	r4, [r6, r5]
}

static inline void hri_can_write_TXESC_reg(const void *const hw, hri_can_txesc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->TXESC.reg = data;
    1018:	350c      	adds	r5, #12
    101a:	6806      	ldr	r6, [r0, #0]
    101c:	5174      	str	r4, [r6, r5]
		hri_can_write_TXBC_reg(dev->hw, CONF_CAN0_TXBC_REG | CAN_TXBC_TBSA((uint32_t)can0_tx_fifo));
    101e:	4d20      	ldr	r5, [pc, #128]	; (10a0 <_can_async_init+0x108>)
    1020:	042d      	lsls	r5, r5, #16
    1022:	0c2d      	lsrs	r5, r5, #16
    1024:	2680      	movs	r6, #128	; 0x80
    1026:	04b6      	lsls	r6, r6, #18
    1028:	4335      	orrs	r5, r6
	((Can *)hw)->TXBC.reg = data;
    102a:	26c0      	movs	r6, #192	; 0xc0
    102c:	6807      	ldr	r7, [r0, #0]
    102e:	51bd      	str	r5, [r7, r6]
		hri_can_write_TXEFC_reg(dev->hw, CONF_CAN0_TXEFC_REG | CAN_TXEFC_EFSA((uint32_t)can0_tx_event_fifo));
    1030:	0412      	lsls	r2, r2, #16
    1032:	0c12      	lsrs	r2, r2, #16
    1034:	430a      	orrs	r2, r1
}

static inline void hri_can_write_TXEFC_reg(const void *const hw, hri_can_txefc_reg_t data)
{
	CAN_CRITICAL_SECTION_ENTER();
	((Can *)hw)->TXEFC.reg = data;
    1036:	25f0      	movs	r5, #240	; 0xf0
    1038:	6806      	ldr	r6, [r0, #0]
    103a:	5172      	str	r2, [r6, r5]
	((Can *)hw)->GFC.reg = data;
    103c:	3d70      	subs	r5, #112	; 0x70
    103e:	2228      	movs	r2, #40	; 0x28
    1040:	6806      	ldr	r6, [r0, #0]
    1042:	5172      	str	r2, [r6, r5]
		hri_can_write_SIDFC_reg(dev->hw, CONF_CAN0_SIDFC_REG | CAN_SIDFC_FLSSA((uint32_t)can0_rx_std_filter));
    1044:	001a      	movs	r2, r3
    1046:	3214      	adds	r2, #20
    1048:	0412      	lsls	r2, r2, #16
    104a:	0c12      	lsrs	r2, r2, #16
    104c:	430a      	orrs	r2, r1
	((Can *)hw)->SIDFC.reg = data;
    104e:	2684      	movs	r6, #132	; 0x84
    1050:	6807      	ldr	r7, [r0, #0]
    1052:	51ba      	str	r2, [r7, r6]
		hri_can_write_XIDFC_reg(dev->hw, CONF_CAN0_XIDFC_REG | CAN_XIDFC_FLESA((uint32_t)can0_rx_ext_filter));
    1054:	331c      	adds	r3, #28
    1056:	041b      	lsls	r3, r3, #16
    1058:	0c1b      	lsrs	r3, r3, #16
    105a:	430b      	orrs	r3, r1
	((Can *)hw)->XIDFC.reg = data;
    105c:	2288      	movs	r2, #136	; 0x88
    105e:	6801      	ldr	r1, [r0, #0]
    1060:	508b      	str	r3, [r1, r2]
	((Can *)hw)->XIDAM.reg = data;
    1062:	2390      	movs	r3, #144	; 0x90
    1064:	6802      	ldr	r2, [r0, #0]
    1066:	50d4      	str	r4, [r2, r3]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1068:	4b0e      	ldr	r3, [pc, #56]	; (10a4 <_can_async_init+0x10c>)
    106a:	2280      	movs	r2, #128	; 0x80
    106c:	0212      	lsls	r2, r2, #8
    106e:	515a      	str	r2, [r3, r5]
  __ASM volatile ("dsb 0xF":::"memory");
    1070:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1074:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1078:	21c0      	movs	r1, #192	; 0xc0
    107a:	0049      	lsls	r1, r1, #1
    107c:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    107e:	601a      	str	r2, [r3, #0]
		hri_can_write_ILE_reg(dev->hw, CAN_ILE_EINT0);
    1080:	6803      	ldr	r3, [r0, #0]
	((Can *)hw)->ILE.reg = data;
    1082:	2201      	movs	r2, #1
    1084:	65da      	str	r2, [r3, #92]	; 0x5c
    1086:	e799      	b.n	fbc <_can_async_init+0x24>
    1088:	42001c00 	.word	0x42001c00
    108c:	200001a0 	.word	0x200001a0
    1090:	20000000 	.word	0x20000000
    1094:	06020a07 	.word	0x06020a07
    1098:	00000a33 	.word	0x00000a33
    109c:	2000036c 	.word	0x2000036c
    10a0:	2000038c 	.word	0x2000038c
    10a4:	e000e100 	.word	0xe000e100

000010a8 <CAN0_Handler>:

/*
 * \brief CAN interrupt handler
 */
void CAN0_Handler(void)
{
    10a8:	b570      	push	{r4, r5, r6, lr}
	struct _can_async_device *dev = _can0_dev;
    10aa:	4b19      	ldr	r3, [pc, #100]	; (1110 <CAN0_Handler+0x68>)
    10ac:	681d      	ldr	r5, [r3, #0]
	uint32_t                  ir;
	ir = hri_can_read_IR_reg(dev->hw);
    10ae:	682b      	ldr	r3, [r5, #0]
	return ((Can *)hw)->IR.reg;
    10b0:	6d1c      	ldr	r4, [r3, #80]	; 0x50

	if (ir & CAN_IR_RF0N) {
    10b2:	07e3      	lsls	r3, r4, #31
    10b4:	d414      	bmi.n	10e0 <CAN0_Handler+0x38>
		dev->cb.rx_done(dev);
	}

	if (ir & CAN_IR_TC) {
    10b6:	05a3      	lsls	r3, r4, #22
    10b8:	d416      	bmi.n	10e8 <CAN0_Handler+0x40>
		dev->cb.tx_done(dev);
	}

	if (ir & CAN_IR_BO) {
    10ba:	01a3      	lsls	r3, r4, #6
    10bc:	d418      	bmi.n	10f0 <CAN0_Handler+0x48>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
	}

	if (ir & CAN_IR_EW) {
    10be:	01e3      	lsls	r3, r4, #7
    10c0:	d41b      	bmi.n	10fa <CAN0_Handler+0x52>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
	}

	if (ir & CAN_IR_EP) {
    10c2:	0223      	lsls	r3, r4, #8
    10c4:	d507      	bpl.n	10d6 <CAN0_Handler+0x2e>
		dev->cb.irq_handler(dev, hri_can_get_PSR_EP_bit(dev->hw) ? CAN_IRQ_EP : CAN_IRQ_EA);
    10c6:	682b      	ldr	r3, [r5, #0]
	return (((Can *)hw)->PSR.reg & CAN_PSR_EP) >> CAN_PSR_EP_Pos;
    10c8:	6c59      	ldr	r1, [r3, #68]	; 0x44
    10ca:	0689      	lsls	r1, r1, #26
    10cc:	0fc9      	lsrs	r1, r1, #31
    10ce:	3101      	adds	r1, #1
    10d0:	0028      	movs	r0, r5
    10d2:	68eb      	ldr	r3, [r5, #12]
    10d4:	4798      	blx	r3
	}

	if (ir & CAN_IR_RF0L) {
    10d6:	0723      	lsls	r3, r4, #28
    10d8:	d414      	bmi.n	1104 <CAN0_Handler+0x5c>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
	}

	hri_can_write_IR_reg(dev->hw, ir);
    10da:	682b      	ldr	r3, [r5, #0]
	((Can *)hw)->IR.reg = data;
    10dc:	651c      	str	r4, [r3, #80]	; 0x50
}
    10de:	bd70      	pop	{r4, r5, r6, pc}
		dev->cb.rx_done(dev);
    10e0:	0028      	movs	r0, r5
    10e2:	68ab      	ldr	r3, [r5, #8]
    10e4:	4798      	blx	r3
    10e6:	e7e6      	b.n	10b6 <CAN0_Handler+0xe>
		dev->cb.tx_done(dev);
    10e8:	0028      	movs	r0, r5
    10ea:	686b      	ldr	r3, [r5, #4]
    10ec:	4798      	blx	r3
    10ee:	e7e4      	b.n	10ba <CAN0_Handler+0x12>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
    10f0:	2103      	movs	r1, #3
    10f2:	0028      	movs	r0, r5
    10f4:	68eb      	ldr	r3, [r5, #12]
    10f6:	4798      	blx	r3
    10f8:	e7e1      	b.n	10be <CAN0_Handler+0x16>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
    10fa:	2100      	movs	r1, #0
    10fc:	0028      	movs	r0, r5
    10fe:	68eb      	ldr	r3, [r5, #12]
    1100:	4798      	blx	r3
    1102:	e7de      	b.n	10c2 <CAN0_Handler+0x1a>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
    1104:	2104      	movs	r1, #4
    1106:	0028      	movs	r0, r5
    1108:	68eb      	ldr	r3, [r5, #12]
    110a:	4798      	blx	r3
    110c:	e7e5      	b.n	10da <CAN0_Handler+0x32>
    110e:	46c0      	nop			; (mov r8, r8)
    1110:	200001a0 	.word	0x200001a0

00001114 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
    1114:	b510      	push	{r4, lr}
    1116:	0003      	movs	r3, r0
		return (ms * (freq / 10000) + 2) / 3 * 10;
    1118:	20c8      	movs	r0, #200	; 0xc8
    111a:	0080      	lsls	r0, r0, #2
    111c:	4358      	muls	r0, r3
    111e:	3002      	adds	r0, #2
    1120:	2103      	movs	r1, #3
    1122:	4b03      	ldr	r3, [pc, #12]	; (1130 <_get_cycles_for_ms+0x1c>)
    1124:	4798      	blx	r3
    1126:	0003      	movs	r3, r0
    1128:	0080      	lsls	r0, r0, #2
    112a:	18c0      	adds	r0, r0, r3
    112c:	0040      	lsls	r0, r0, #1
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    112e:	bd10      	pop	{r4, pc}
    1130:	000011bf 	.word	0x000011bf

00001134 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
    1134:	3901      	subs	r1, #1
    1136:	d8fd      	bhi.n	1134 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
    1138:	4770      	bx	lr
	...

0000113c <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    113c:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    113e:	4b08      	ldr	r3, [pc, #32]	; (1160 <_init_chip+0x24>)
    1140:	685a      	ldr	r2, [r3, #4]
    1142:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_osc32kctrl_init_sources();
    1144:	4b07      	ldr	r3, [pc, #28]	; (1164 <_init_chip+0x28>)
    1146:	4798      	blx	r3
	_oscctrl_init_sources();
    1148:	4b07      	ldr	r3, [pc, #28]	; (1168 <_init_chip+0x2c>)
    114a:	4798      	blx	r3
	_mclk_init();
    114c:	4b07      	ldr	r3, [pc, #28]	; (116c <_init_chip+0x30>)
    114e:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
    1150:	4b07      	ldr	r3, [pc, #28]	; (1170 <_init_chip+0x34>)
    1152:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    1154:	20ff      	movs	r0, #255	; 0xff
    1156:	4b07      	ldr	r3, [pc, #28]	; (1174 <_init_chip+0x38>)
    1158:	4798      	blx	r3

	_div_init();
    115a:	4b07      	ldr	r3, [pc, #28]	; (1178 <_init_chip+0x3c>)
    115c:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
    115e:	bd10      	pop	{r4, pc}
    1160:	41004000 	.word	0x41004000
    1164:	000012ad 	.word	0x000012ad
    1168:	000012c5 	.word	0x000012c5
    116c:	000012a1 	.word	0x000012a1
    1170:	00001305 	.word	0x00001305
    1174:	00001265 	.word	0x00001265
    1178:	0000117d 	.word	0x0000117d

0000117c <_div_init>:

static inline void hri_divas_write_CTRLA_DLZ_bit(const void *const hw, bool value)
{
	uint8_t tmp;
	DIVAS_CRITICAL_SECTION_ENTER();
	tmp = ((Divas *)hw)->CTRLA.reg;
    117c:	2290      	movs	r2, #144	; 0x90
    117e:	05d2      	lsls	r2, r2, #23
    1180:	7813      	ldrb	r3, [r2, #0]
	tmp &= ~DIVAS_CTRLA_DLZ;
    1182:	2102      	movs	r1, #2
    1184:	438b      	bics	r3, r1
	tmp |= value << DIVAS_CTRLA_DLZ_Pos;
	((Divas *)hw)->CTRLA.reg = tmp;
    1186:	7013      	strb	r3, [r2, #0]
 * \brief Initialize hardware for division operation
 */
void _div_init(void)
{
	hri_divas_write_CTRLA_DLZ_bit(DIVAS, CONF_DIVAS_DLZ);
}
    1188:	4770      	bx	lr

0000118a <__aeabi_idiv>:

/**
 * \brief Do signed division
 */
int32_t __aeabi_idiv(int32_t numerator, int32_t denominator)
{
    118a:	b510      	push	{r4, lr}
    118c:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    118e:	f3ef 8310 	mrs	r3, PRIMASK
	int32_t res;
	_DIVAS_CRITICAL_ENTER();
    1192:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    1194:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    1196:	2390      	movs	r3, #144	; 0x90
    1198:	05db      	lsls	r3, r3, #23
    119a:	781a      	ldrb	r2, [r3, #0]
    119c:	2401      	movs	r4, #1
    119e:	4322      	orrs	r2, r4
    11a0:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    11a2:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    11a4:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    11a6:	001a      	movs	r2, r3
    11a8:	7913      	ldrb	r3, [r2, #4]
    11aa:	07db      	lsls	r3, r3, #31
    11ac:	d4fc      	bmi.n	11a8 <__aeabi_idiv+0x1e>
	_divas_div(1, numerator, denominator);
	res = _divas_result32();
    11ae:	2390      	movs	r3, #144	; 0x90
    11b0:	05db      	lsls	r3, r3, #23
    11b2:	6918      	ldr	r0, [r3, #16]
	_DIVAS_CRITICAL_LEAVE();
    11b4:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    11b6:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    11ba:	b002      	add	sp, #8
    11bc:	bd10      	pop	{r4, pc}

000011be <__aeabi_uidiv>:

/**
 * \brief Do unsigned division
 */
uint32_t __aeabi_uidiv(uint32_t numerator, uint32_t denominator)
{
    11be:	b510      	push	{r4, lr}
    11c0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    11c2:	f3ef 8310 	mrs	r3, PRIMASK
	uint32_t res;
	_DIVAS_CRITICAL_ENTER();
    11c6:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    11c8:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    11ca:	2390      	movs	r3, #144	; 0x90
    11cc:	05db      	lsls	r3, r3, #23
    11ce:	781a      	ldrb	r2, [r3, #0]
    11d0:	2401      	movs	r4, #1
    11d2:	43a2      	bics	r2, r4
    11d4:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    11d6:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    11d8:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    11da:	001a      	movs	r2, r3
    11dc:	7913      	ldrb	r3, [r2, #4]
    11de:	07db      	lsls	r3, r3, #31
    11e0:	d4fc      	bmi.n	11dc <__aeabi_uidiv+0x1e>
	_divas_div(0, numerator, denominator);
	res = _divas_result32();
    11e2:	2390      	movs	r3, #144	; 0x90
    11e4:	05db      	lsls	r3, r3, #23
    11e6:	6918      	ldr	r0, [r3, #16]
	_DIVAS_CRITICAL_LEAVE();
    11e8:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    11ea:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    11ee:	b002      	add	sp, #8
    11f0:	bd10      	pop	{r4, pc}
	...

000011f4 <__aeabi_idivmod>:

/**
 * \brief Do signed division, return result and remainder
 */
uint64_t __aeabi_idivmod(int numerator, int denominator)
{
    11f4:	b510      	push	{r4, lr}
    11f6:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    11f8:	f3ef 8310 	mrs	r3, PRIMASK
	uint64_t res;
	_DIVAS_CRITICAL_ENTER();
    11fc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    11fe:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    1200:	2390      	movs	r3, #144	; 0x90
    1202:	05db      	lsls	r3, r3, #23
    1204:	781a      	ldrb	r2, [r3, #0]
    1206:	2401      	movs	r4, #1
    1208:	4322      	orrs	r2, r4
    120a:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    120c:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    120e:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    1210:	001a      	movs	r2, r3
    1212:	7913      	ldrb	r3, [r2, #4]
    1214:	07db      	lsls	r3, r3, #31
    1216:	d4fc      	bmi.n	1212 <__aeabi_idivmod+0x1e>
	_divas_div(1, numerator, denominator);
	res = _divas_result64();
    1218:	4b03      	ldr	r3, [pc, #12]	; (1228 <__aeabi_idivmod+0x34>)
    121a:	6818      	ldr	r0, [r3, #0]
    121c:	6859      	ldr	r1, [r3, #4]
	_DIVAS_CRITICAL_LEAVE();
    121e:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    1220:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    1224:	b002      	add	sp, #8
    1226:	bd10      	pop	{r4, pc}
    1228:	48000010 	.word	0x48000010

0000122c <__aeabi_uidivmod>:

/**
 * \brief Do unsigned division, return result and remainder
 */
uint64_t __aeabi_uidivmod(unsigned numerator, unsigned denominator)
{
    122c:	b510      	push	{r4, lr}
    122e:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    1230:	f3ef 8310 	mrs	r3, PRIMASK
	uint64_t res;
	_DIVAS_CRITICAL_ENTER();
    1234:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    1236:	b672      	cpsid	i
	DIVAS->CTRLA.bit.SIGNED = s;
    1238:	2390      	movs	r3, #144	; 0x90
    123a:	05db      	lsls	r3, r3, #23
    123c:	781a      	ldrb	r2, [r3, #0]
    123e:	2401      	movs	r4, #1
    1240:	43a2      	bics	r2, r4
    1242:	701a      	strb	r2, [r3, #0]
	DIVAS->DIVIDEND.reg     = n;
    1244:	6098      	str	r0, [r3, #8]
	DIVAS->DIVISOR.reg      = d;
    1246:	60d9      	str	r1, [r3, #12]
	while (DIVAS->STATUS.bit.BUSY) {
    1248:	001a      	movs	r2, r3
    124a:	7913      	ldrb	r3, [r2, #4]
    124c:	07db      	lsls	r3, r3, #31
    124e:	d4fc      	bmi.n	124a <__aeabi_uidivmod+0x1e>
	_divas_div(0, numerator, denominator);
	res = _divas_result64();
    1250:	4b03      	ldr	r3, [pc, #12]	; (1260 <__aeabi_uidivmod+0x34>)
    1252:	6818      	ldr	r0, [r3, #0]
    1254:	6859      	ldr	r1, [r3, #4]
	_DIVAS_CRITICAL_LEAVE();
    1256:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    1258:	f383 8810 	msr	PRIMASK, r3
	return res;
}
    125c:	b002      	add	sp, #8
    125e:	bd10      	pop	{r4, pc}
    1260:	48000010 	.word	0x48000010

00001264 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    1264:	07c3      	lsls	r3, r0, #31
    1266:	d507      	bpl.n	1278 <_gclk_init_generators_by_fref+0x14>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    1268:	4a09      	ldr	r2, [pc, #36]	; (1290 <_gclk_init_generators_by_fref+0x2c>)
    126a:	4b0a      	ldr	r3, [pc, #40]	; (1294 <_gclk_init_generators_by_fref+0x30>)
    126c:	621a      	str	r2, [r3, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    126e:	0019      	movs	r1, r3
    1270:	4a09      	ldr	r2, [pc, #36]	; (1298 <_gclk_init_generators_by_fref+0x34>)
    1272:	684b      	ldr	r3, [r1, #4]
    1274:	4213      	tst	r3, r2
    1276:	d1fc      	bne.n	1272 <_gclk_init_generators_by_fref+0xe>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SOURCE);
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    1278:	0783      	lsls	r3, r0, #30
    127a:	d507      	bpl.n	128c <_gclk_init_generators_by_fref+0x28>
	((Gclk *)hw)->GENCTRL[index].reg = data;
    127c:	4a07      	ldr	r2, [pc, #28]	; (129c <_gclk_init_generators_by_fref+0x38>)
    127e:	4b05      	ldr	r3, [pc, #20]	; (1294 <_gclk_init_generators_by_fref+0x30>)
    1280:	625a      	str	r2, [r3, #36]	; 0x24
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
    1282:	0019      	movs	r1, r3
    1284:	4a04      	ldr	r2, [pc, #16]	; (1298 <_gclk_init_generators_by_fref+0x34>)
    1286:	684b      	ldr	r3, [r1, #4]
    1288:	4213      	tst	r3, r2
    128a:	d1fc      	bne.n	1286 <_gclk_init_generators_by_fref+0x22>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SOURCE);
	}
#endif
}
    128c:	4770      	bx	lr
    128e:	46c0      	nop			; (mov r8, r8)
    1290:	00010106 	.word	0x00010106
    1294:	40001c00 	.word	0x40001c00
    1298:	000007fd 	.word	0x000007fd
    129c:	00080106 	.word	0x00080106

000012a0 <_mclk_init>:
	((Mclk *)hw)->CPUDIV.reg = data;
    12a0:	2201      	movs	r2, #1
    12a2:	4b01      	ldr	r3, [pc, #4]	; (12a8 <_mclk_init+0x8>)
    12a4:	711a      	strb	r2, [r3, #4]
 */
void _mclk_init(void)
{
	void *hw = (void *)MCLK;
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
    12a6:	4770      	bx	lr
    12a8:	40000800 	.word	0x40000800

000012ac <_osc32kctrl_init_sources>:
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
    12ac:	4b04      	ldr	r3, [pc, #16]	; (12c0 <_osc32kctrl_init_sources+0x14>)
    12ae:	69da      	ldr	r2, [r3, #28]
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
    12b0:	21f8      	movs	r1, #248	; 0xf8
    12b2:	0149      	lsls	r1, r1, #5
    12b4:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
    12b6:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
    12b8:	2201      	movs	r2, #1
    12ba:	611a      	str	r2, [r3, #16]
		;
#endif
#endif
	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
    12bc:	4770      	bx	lr
    12be:	46c0      	nop			; (mov r8, r8)
    12c0:	40001400 	.word	0x40001400

000012c4 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC48MCTRL_reg(const void *const hw, hri_oscctrl_osc48mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MCTRL.reg = data;
    12c4:	4b0e      	ldr	r3, [pc, #56]	; (1300 <_oscctrl_init_sources+0x3c>)
    12c6:	2202      	movs	r2, #2
    12c8:	751a      	strb	r2, [r3, #20]
}

static inline void hri_oscctrl_write_OSC48MDIV_reg(const void *const hw, hri_oscctrl_osc48mdiv_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MDIV.reg = data;
    12ca:	3203      	adds	r2, #3
    12cc:	755a      	strb	r2, [r3, #21]
	while (((Oscctrl *)hw)->OSC48MSYNCBUSY.reg & reg) {
    12ce:	0019      	movs	r1, r3
    12d0:	3a01      	subs	r2, #1
    12d2:	698b      	ldr	r3, [r1, #24]
    12d4:	421a      	tst	r2, r3
    12d6:	d1fc      	bne.n	12d2 <_oscctrl_init_sources+0xe>
	return (((Oscctrl *)hw)->OSC48MSYNCBUSY.reg & OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV)
    12d8:	4909      	ldr	r1, [pc, #36]	; (1300 <_oscctrl_init_sources+0x3c>)
#if CONF_OSC48M_CONFIG == 1
	hri_oscctrl_write_OSC48MCTRL_reg(hw,
	                                 (CONF_OSC48M_RUNSTDBY << OSCCTRL_OSC48MCTRL_RUNSTDBY_Pos)
	                                     | (CONF_OSC48M_ENABLE << OSCCTRL_OSC48MCTRL_ENABLE_Pos));
	hri_oscctrl_write_OSC48MDIV_reg(hw, OSCCTRL_OSC48MDIV_DIV(CONF_OSC48M_DIV));
	while (hri_oscctrl_get_OSC48MSYNCBUSY_OSC48MDIV_bit(hw))
    12da:	2204      	movs	r2, #4
    12dc:	698b      	ldr	r3, [r1, #24]
    12de:	421a      	tst	r2, r3
    12e0:	d1fc      	bne.n	12dc <_oscctrl_init_sources+0x18>
}

static inline void hri_oscctrl_write_OSC48MSTUP_reg(const void *const hw, hri_oscctrl_osc48mstup_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC48MSTUP.reg = data;
    12e2:	2207      	movs	r2, #7
    12e4:	4b06      	ldr	r3, [pc, #24]	; (1300 <_oscctrl_init_sources+0x3c>)
    12e6:	759a      	strb	r2, [r3, #22]
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC48MRDY) >> OSCCTRL_STATUS_OSC48MRDY_Pos;
    12e8:	0019      	movs	r1, r3
#endif
#endif

#if CONF_OSC48M_CONFIG == 1
#if CONF_OSC48M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC48MRDY_bit(hw))
    12ea:	3209      	adds	r2, #9
    12ec:	68cb      	ldr	r3, [r1, #12]
    12ee:	421a      	tst	r2, r3
    12f0:	d0fc      	beq.n	12ec <_oscctrl_init_sources+0x28>
	((Oscctrl *)hw)->OSC48MCTRL.reg |= OSCCTRL_OSC48MCTRL_ONDEMAND;
    12f2:	4a03      	ldr	r2, [pc, #12]	; (1300 <_oscctrl_init_sources+0x3c>)
    12f4:	7d13      	ldrb	r3, [r2, #20]
    12f6:	2180      	movs	r1, #128	; 0x80
    12f8:	430b      	orrs	r3, r1
    12fa:	7513      	strb	r3, [r2, #20]
#if CONF_OSC48M_ONDEMAND == 1
	hri_oscctrl_set_OSC48MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    12fc:	4770      	bx	lr
    12fe:	46c0      	nop			; (mov r8, r8)
    1300:	40001000 	.word	0x40001000

00001304 <_oscctrl_init_referenced_generators>:
#if CONF_DPLL_ONDEMAND == 1
	hri_oscctrl_set_DPLLCTRLA_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
    1304:	4770      	bx	lr

00001306 <_spi_sync_enable>:
	};
}

static inline bool hri_sercomspi_is_syncing(const void *const hw, hri_sercomspi_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1306:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1308:	07db      	lsls	r3, r3, #31
    130a:	d409      	bmi.n	1320 <_spi_sync_enable+0x1a>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    130c:	6803      	ldr	r3, [r0, #0]
    130e:	2202      	movs	r2, #2
    1310:	4313      	orrs	r3, r2
    1312:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1314:	3201      	adds	r2, #1
    1316:	69c3      	ldr	r3, [r0, #28]
    1318:	421a      	tst	r2, r3
    131a:	d1fc      	bne.n	1316 <_spi_sync_enable+0x10>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    131c:	2000      	movs	r0, #0
}
    131e:	4770      	bx	lr
		return ERR_BUSY;
    1320:	2004      	movs	r0, #4
    1322:	4240      	negs	r0, r0
    1324:	e7fb      	b.n	131e <_spi_sync_enable+0x18>
	...

00001328 <_usart_init>:
{
    1328:	b510      	push	{r4, lr}
    132a:	0004      	movs	r4, r0
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    132c:	4b1f      	ldr	r3, [pc, #124]	; (13ac <_usart_init+0x84>)
    132e:	18c3      	adds	r3, r0, r3
    1330:	0a9b      	lsrs	r3, r3, #10
		if (_usarts[i].number == sercom_offset) {
    1332:	b2db      	uxtb	r3, r3
    1334:	2b04      	cmp	r3, #4
    1336:	d004      	beq.n	1342 <_usart_init+0x1a>
	ASSERT(false);
    1338:	4a1d      	ldr	r2, [pc, #116]	; (13b0 <_usart_init+0x88>)
    133a:	491e      	ldr	r1, [pc, #120]	; (13b4 <_usart_init+0x8c>)
    133c:	2000      	movs	r0, #0
    133e:	4b1e      	ldr	r3, [pc, #120]	; (13b8 <_usart_init+0x90>)
    1340:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    1342:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    1344:	07db      	lsls	r3, r3, #31
    1346:	d418      	bmi.n	137a <_usart_init+0x52>
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1348:	2203      	movs	r2, #3
    134a:	69e3      	ldr	r3, [r4, #28]
    134c:	421a      	tst	r2, r3
    134e:	d1fc      	bne.n	134a <_usart_init+0x22>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_SWRST | SERCOM_USART_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    1350:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    1352:	079b      	lsls	r3, r3, #30
    1354:	d50b      	bpl.n	136e <_usart_init+0x46>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    1356:	6823      	ldr	r3, [r4, #0]
    1358:	2202      	movs	r2, #2
    135a:	4393      	bics	r3, r2
    135c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    135e:	3201      	adds	r2, #1
    1360:	69e3      	ldr	r3, [r4, #28]
    1362:	421a      	tst	r2, r3
    1364:	d1fc      	bne.n	1360 <_usart_init+0x38>
    1366:	2202      	movs	r2, #2
    1368:	69e3      	ldr	r3, [r4, #28]
    136a:	421a      	tst	r2, r3
    136c:	d1fc      	bne.n	1368 <_usart_init+0x40>
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
    136e:	2305      	movs	r3, #5
    1370:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1372:	2203      	movs	r2, #3
    1374:	69e3      	ldr	r3, [r4, #28]
    1376:	421a      	tst	r2, r3
    1378:	d1fc      	bne.n	1374 <_usart_init+0x4c>
    137a:	2201      	movs	r2, #1
    137c:	69e3      	ldr	r3, [r4, #28]
    137e:	421a      	tst	r2, r3
    1380:	d1fc      	bne.n	137c <_usart_init+0x54>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    1382:	4b0e      	ldr	r3, [pc, #56]	; (13bc <_usart_init+0x94>)
    1384:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1386:	2203      	movs	r2, #3
    1388:	69e3      	ldr	r3, [r4, #28]
    138a:	421a      	tst	r2, r3
    138c:	d1fc      	bne.n	1388 <_usart_init+0x60>
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
    138e:	23c0      	movs	r3, #192	; 0xc0
    1390:	029b      	lsls	r3, r3, #10
    1392:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    1394:	2207      	movs	r2, #7
    1396:	69e3      	ldr	r3, [r4, #28]
    1398:	421a      	tst	r2, r3
    139a:	d1fc      	bne.n	1396 <_usart_init+0x6e>
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
    139c:	4b08      	ldr	r3, [pc, #32]	; (13c0 <_usart_init+0x98>)
    139e:	81a3      	strh	r3, [r4, #12]
}

static inline void hri_sercomusart_write_RXPL_reg(const void *const hw, hri_sercomusart_rxpl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.RXPL.reg = data;
    13a0:	2300      	movs	r3, #0
    13a2:	73a3      	strb	r3, [r4, #14]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    13a4:	2230      	movs	r2, #48	; 0x30
    13a6:	54a3      	strb	r3, [r4, r2]
}
    13a8:	2000      	movs	r0, #0
    13aa:	bd10      	pop	{r4, pc}
    13ac:	bdfffc00 	.word	0xbdfffc00
    13b0:	0000025e 	.word	0x0000025e
    13b4:	00005bc4 	.word	0x00005bc4
    13b8:	00000c91 	.word	0x00000c91
    13bc:	40100004 	.word	0x40100004
    13c0:	ffffd8ad 	.word	0xffffd8ad

000013c4 <_usart_async_init>:
{
    13c4:	b570      	push	{r4, r5, r6, lr}
    13c6:	0005      	movs	r5, r0
    13c8:	000c      	movs	r4, r1
	ASSERT(device);
    13ca:	1e43      	subs	r3, r0, #1
    13cc:	4198      	sbcs	r0, r3
    13ce:	b2c0      	uxtb	r0, r0
    13d0:	22c4      	movs	r2, #196	; 0xc4
    13d2:	4914      	ldr	r1, [pc, #80]	; (1424 <_usart_async_init+0x60>)
    13d4:	4b14      	ldr	r3, [pc, #80]	; (1428 <_usart_async_init+0x64>)
    13d6:	4798      	blx	r3
	init_status = _usart_init(hw);
    13d8:	0020      	movs	r0, r4
    13da:	4b14      	ldr	r3, [pc, #80]	; (142c <_usart_async_init+0x68>)
    13dc:	4798      	blx	r3
	if (init_status) {
    13de:	2800      	cmp	r0, #0
    13e0:	d000      	beq.n	13e4 <_usart_async_init+0x20>
}
    13e2:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    13e4:	61ac      	str	r4, [r5, #24]
	if (hw == SERCOM4) {
    13e6:	4b12      	ldr	r3, [pc, #72]	; (1430 <_usart_async_init+0x6c>)
    13e8:	429c      	cmp	r4, r3
    13ea:	d017      	beq.n	141c <_usart_async_init+0x58>
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    13ec:	4b11      	ldr	r3, [pc, #68]	; (1434 <_usart_async_init+0x70>)
    13ee:	469c      	mov	ip, r3
    13f0:	4464      	add	r4, ip
    13f2:	0aa4      	lsrs	r4, r4, #10
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    13f4:	3409      	adds	r4, #9
  if ((int32_t)(IRQn) >= 0)
    13f6:	b2e3      	uxtb	r3, r4
    13f8:	0622      	lsls	r2, r4, #24
    13fa:	d4f2      	bmi.n	13e2 <_usart_async_init+0x1e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    13fc:	221f      	movs	r2, #31
    13fe:	401a      	ands	r2, r3
    1400:	2301      	movs	r3, #1
    1402:	4093      	lsls	r3, r2
    1404:	4a0c      	ldr	r2, [pc, #48]	; (1438 <_usart_async_init+0x74>)
    1406:	2180      	movs	r1, #128	; 0x80
    1408:	5053      	str	r3, [r2, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    140a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    140e:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1412:	3101      	adds	r1, #1
    1414:	31ff      	adds	r1, #255	; 0xff
    1416:	5053      	str	r3, [r2, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1418:	6013      	str	r3, [r2, #0]
    141a:	e7e2      	b.n	13e2 <_usart_async_init+0x1e>
		_sercom4_dev = (struct _usart_async_device *)dev;
    141c:	4b07      	ldr	r3, [pc, #28]	; (143c <_usart_async_init+0x78>)
    141e:	601d      	str	r5, [r3, #0]
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    1420:	230d      	movs	r3, #13
    1422:	e7eb      	b.n	13fc <_usart_async_init+0x38>
    1424:	00005bc4 	.word	0x00005bc4
    1428:	00000c91 	.word	0x00000c91
    142c:	00001329 	.word	0x00001329
    1430:	42001400 	.word	0x42001400
    1434:	bdfffc00 	.word	0xbdfffc00
    1438:	e000e100 	.word	0xe000e100
    143c:	200001cc 	.word	0x200001cc

00001440 <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1440:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1442:	6813      	ldr	r3, [r2, #0]
    1444:	2102      	movs	r1, #2
    1446:	430b      	orrs	r3, r1
    1448:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    144a:	3101      	adds	r1, #1
    144c:	69d3      	ldr	r3, [r2, #28]
    144e:	4219      	tst	r1, r3
    1450:	d1fc      	bne.n	144c <_usart_async_enable+0xc>
}
    1452:	4770      	bx	lr

00001454 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1454:	6983      	ldr	r3, [r0, #24]
    1456:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    1458:	8519      	strh	r1, [r3, #40]	; 0x28
}
    145a:	4770      	bx	lr

0000145c <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    145c:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    145e:	2201      	movs	r2, #1
    1460:	759a      	strb	r2, [r3, #22]
}
    1462:	4770      	bx	lr

00001464 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    1464:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1466:	2202      	movs	r2, #2
    1468:	759a      	strb	r2, [r3, #22]
}
    146a:	4770      	bx	lr

0000146c <_usart_async_set_irq_state>:
{
    146c:	b570      	push	{r4, r5, r6, lr}
    146e:	0004      	movs	r4, r0
    1470:	000d      	movs	r5, r1
    1472:	0016      	movs	r6, r2
	ASSERT(device);
    1474:	1e43      	subs	r3, r0, #1
    1476:	4198      	sbcs	r0, r3
    1478:	b2c0      	uxtb	r0, r0
    147a:	4a16      	ldr	r2, [pc, #88]	; (14d4 <_usart_async_set_irq_state+0x68>)
    147c:	4916      	ldr	r1, [pc, #88]	; (14d8 <_usart_async_set_irq_state+0x6c>)
    147e:	4b17      	ldr	r3, [pc, #92]	; (14dc <_usart_async_set_irq_state+0x70>)
    1480:	4798      	blx	r3
	if (USART_ASYNC_BYTE_SENT == type || USART_ASYNC_TX_DONE == type) {
    1482:	2302      	movs	r3, #2
    1484:	002a      	movs	r2, r5
    1486:	439a      	bics	r2, r3
    1488:	d10e      	bne.n	14a8 <_usart_async_set_irq_state+0x3c>
		hri_sercomusart_write_INTEN_DRE_bit(device->hw, state);
    148a:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    148c:	2e00      	cmp	r6, #0
    148e:	d105      	bne.n	149c <_usart_async_set_irq_state+0x30>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    1490:	2201      	movs	r2, #1
    1492:	751a      	strb	r2, [r3, #20]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    1494:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    1496:	3201      	adds	r2, #1
    1498:	751a      	strb	r2, [r3, #20]
}
    149a:	bd70      	pop	{r4, r5, r6, pc}
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    149c:	2201      	movs	r2, #1
    149e:	759a      	strb	r2, [r3, #22]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    14a0:	69a3      	ldr	r3, [r4, #24]
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    14a2:	3201      	adds	r2, #1
    14a4:	759a      	strb	r2, [r3, #22]
    14a6:	e7f8      	b.n	149a <_usart_async_set_irq_state+0x2e>
	} else if (USART_ASYNC_RX_DONE == type) {
    14a8:	2d01      	cmp	r5, #1
    14aa:	d007      	beq.n	14bc <_usart_async_set_irq_state+0x50>
	} else if (USART_ASYNC_ERROR == type) {
    14ac:	2d03      	cmp	r5, #3
    14ae:	d1f4      	bne.n	149a <_usart_async_set_irq_state+0x2e>
		hri_sercomusart_write_INTEN_ERROR_bit(device->hw, state);
    14b0:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    14b2:	2e00      	cmp	r6, #0
    14b4:	d00b      	beq.n	14ce <_usart_async_set_irq_state+0x62>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_ERROR;
    14b6:	2280      	movs	r2, #128	; 0x80
    14b8:	759a      	strb	r2, [r3, #22]
}
    14ba:	e7ee      	b.n	149a <_usart_async_set_irq_state+0x2e>
		hri_sercomusart_write_INTEN_RXC_bit(device->hw, state);
    14bc:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    14be:	2e00      	cmp	r6, #0
    14c0:	d102      	bne.n	14c8 <_usart_async_set_irq_state+0x5c>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_RXC;
    14c2:	2204      	movs	r2, #4
    14c4:	751a      	strb	r2, [r3, #20]
    14c6:	e7e8      	b.n	149a <_usart_async_set_irq_state+0x2e>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_RXC;
    14c8:	2204      	movs	r2, #4
    14ca:	759a      	strb	r2, [r3, #22]
    14cc:	e7e5      	b.n	149a <_usart_async_set_irq_state+0x2e>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_ERROR;
    14ce:	2280      	movs	r2, #128	; 0x80
    14d0:	751a      	strb	r2, [r3, #20]
    14d2:	e7e2      	b.n	149a <_usart_async_set_irq_state+0x2e>
    14d4:	0000021e 	.word	0x0000021e
    14d8:	00005bc4 	.word	0x00005bc4
    14dc:	00000c91 	.word	0x00000c91

000014e0 <SERCOM4_Handler>:

	return NULL;
}

void SERCOM4_Handler(void)
{
    14e0:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom4_dev);
    14e2:	4b19      	ldr	r3, [pc, #100]	; (1548 <SERCOM4_Handler+0x68>)
    14e4:	6818      	ldr	r0, [r3, #0]
	void *hw = device->hw;
    14e6:	6984      	ldr	r4, [r0, #24]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    14e8:	7e23      	ldrb	r3, [r4, #24]
	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
    14ea:	07db      	lsls	r3, r3, #31
    14ec:	d502      	bpl.n	14f4 <SERCOM4_Handler+0x14>
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
    14ee:	7da3      	ldrb	r3, [r4, #22]
    14f0:	07db      	lsls	r3, r3, #31
    14f2:	d40f      	bmi.n	1514 <SERCOM4_Handler+0x34>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    14f4:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
    14f6:	079b      	lsls	r3, r3, #30
    14f8:	d502      	bpl.n	1500 <SERCOM4_Handler+0x20>
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
    14fa:	7da3      	ldrb	r3, [r4, #22]
    14fc:	079b      	lsls	r3, r3, #30
    14fe:	d40e      	bmi.n	151e <SERCOM4_Handler+0x3e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    1500:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
    1502:	075b      	lsls	r3, r3, #29
    1504:	d515      	bpl.n	1532 <SERCOM4_Handler+0x52>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
    1506:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
    1508:	2337      	movs	r3, #55	; 0x37
    150a:	421a      	tst	r2, r3
    150c:	d00c      	beq.n	1528 <SERCOM4_Handler+0x48>
	((Sercom *)hw)->USART.STATUS.reg = mask;
    150e:	3348      	adds	r3, #72	; 0x48
    1510:	8363      	strh	r3, [r4, #26]
}
    1512:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    1514:	2301      	movs	r3, #1
    1516:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
    1518:	6803      	ldr	r3, [r0, #0]
    151a:	4798      	blx	r3
    151c:	e7f9      	b.n	1512 <SERCOM4_Handler+0x32>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    151e:	2302      	movs	r3, #2
    1520:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
    1522:	6883      	ldr	r3, [r0, #8]
    1524:	4798      	blx	r3
    1526:	e7f4      	b.n	1512 <SERCOM4_Handler+0x32>
	return ((Sercom *)hw)->USART.DATA.reg;
    1528:	8d21      	ldrh	r1, [r4, #40]	; 0x28
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
    152a:	b2c9      	uxtb	r1, r1
    152c:	6843      	ldr	r3, [r0, #4]
    152e:	4798      	blx	r3
    1530:	e7ef      	b.n	1512 <SERCOM4_Handler+0x32>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
    1532:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
    1534:	09db      	lsrs	r3, r3, #7
    1536:	d0ec      	beq.n	1512 <SERCOM4_Handler+0x32>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
    1538:	2380      	movs	r3, #128	; 0x80
    153a:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
    153c:	68c3      	ldr	r3, [r0, #12]
    153e:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
    1540:	8b63      	ldrh	r3, [r4, #26]
    1542:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
    1544:	8363      	strh	r3, [r4, #26]
}
    1546:	e7e4      	b.n	1512 <SERCOM4_Handler+0x32>
    1548:	200001cc 	.word	0x200001cc

0000154c <_spi_m_sync_init>:

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    154c:	b570      	push	{r4, r5, r6, lr}
    154e:	0005      	movs	r5, r0
    1550:	000c      	movs	r4, r1
	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1552:	4b35      	ldr	r3, [pc, #212]	; (1628 <_spi_m_sync_init+0xdc>)
    1554:	18cb      	adds	r3, r1, r3
    1556:	0a9b      	lsrs	r3, r3, #10
		if (sercomspi_regs[i].n == n) {
    1558:	b2db      	uxtb	r3, r3
    155a:	2b02      	cmp	r3, #2
    155c:	d00b      	beq.n	1576 <_spi_m_sync_init+0x2a>
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    155e:	2800      	cmp	r0, #0
    1560:	d051      	beq.n	1606 <_spi_m_sync_init+0xba>
    1562:	1e60      	subs	r0, r4, #1
    1564:	4184      	sbcs	r4, r0
    1566:	b2e0      	uxtb	r0, r4
    1568:	4a30      	ldr	r2, [pc, #192]	; (162c <_spi_m_sync_init+0xe0>)
    156a:	4931      	ldr	r1, [pc, #196]	; (1630 <_spi_m_sync_init+0xe4>)
    156c:	4b31      	ldr	r3, [pc, #196]	; (1634 <_spi_m_sync_init+0xe8>)
    156e:	4798      	blx	r3

	if (regs == NULL) {
		return ERR_INVALID_ARG;
    1570:	200d      	movs	r0, #13
    1572:	4240      	negs	r0, r0
    1574:	e046      	b.n	1604 <_spi_m_sync_init+0xb8>
	ASSERT(dev && hw);
    1576:	2800      	cmp	r0, #0
    1578:	d14d      	bne.n	1616 <_spi_m_sync_init+0xca>
    157a:	4a2c      	ldr	r2, [pc, #176]	; (162c <_spi_m_sync_init+0xe0>)
    157c:	492c      	ldr	r1, [pc, #176]	; (1630 <_spi_m_sync_init+0xe4>)
    157e:	2000      	movs	r0, #0
    1580:	4b2c      	ldr	r3, [pc, #176]	; (1634 <_spi_m_sync_init+0xe8>)
    1582:	4798      	blx	r3
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1584:	69e3      	ldr	r3, [r4, #28]
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1586:	07db      	lsls	r3, r3, #31
    1588:	d418      	bmi.n	15bc <_spi_m_sync_init+0x70>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    158a:	2203      	movs	r2, #3
    158c:	69e3      	ldr	r3, [r4, #28]
    158e:	421a      	tst	r2, r3
    1590:	d1fc      	bne.n	158c <_spi_m_sync_init+0x40>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1592:	6823      	ldr	r3, [r4, #0]
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    1594:	079b      	lsls	r3, r3, #30
    1596:	d50b      	bpl.n	15b0 <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    1598:	6823      	ldr	r3, [r4, #0]
    159a:	2202      	movs	r2, #2
    159c:	4393      	bics	r3, r2
    159e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15a0:	3201      	adds	r2, #1
    15a2:	69e3      	ldr	r3, [r4, #28]
    15a4:	421a      	tst	r2, r3
    15a6:	d1fc      	bne.n	15a2 <_spi_m_sync_init+0x56>
    15a8:	2202      	movs	r2, #2
    15aa:	69e3      	ldr	r3, [r4, #28]
    15ac:	421a      	tst	r2, r3
    15ae:	d1fc      	bne.n	15aa <_spi_m_sync_init+0x5e>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    15b0:	230d      	movs	r3, #13
    15b2:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15b4:	2203      	movs	r2, #3
    15b6:	69e3      	ldr	r3, [r4, #28]
    15b8:	421a      	tst	r2, r3
    15ba:	d1fc      	bne.n	15b6 <_spi_m_sync_init+0x6a>
    15bc:	2201      	movs	r2, #1
    15be:	69e3      	ldr	r3, [r4, #28]
    15c0:	421a      	tst	r2, r3
    15c2:	d1fc      	bne.n	15be <_spi_m_sync_init+0x72>
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    15c4:	602c      	str	r4, [r5, #0]
	ASSERT(hw && regs);
    15c6:	0020      	movs	r0, r4
    15c8:	1e43      	subs	r3, r0, #1
    15ca:	4198      	sbcs	r0, r3
    15cc:	b2c0      	uxtb	r0, r0
    15ce:	4a1a      	ldr	r2, [pc, #104]	; (1638 <_spi_m_sync_init+0xec>)
    15d0:	4917      	ldr	r1, [pc, #92]	; (1630 <_spi_m_sync_init+0xe4>)
    15d2:	4b18      	ldr	r3, [pc, #96]	; (1634 <_spi_m_sync_init+0xe8>)
    15d4:	4798      	blx	r3
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    15d6:	4b19      	ldr	r3, [pc, #100]	; (163c <_spi_m_sync_init+0xf0>)
    15d8:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15da:	2203      	movs	r2, #3
    15dc:	69e3      	ldr	r3, [r4, #28]
    15de:	421a      	tst	r2, r3
    15e0:	d1fc      	bne.n	15dc <_spi_m_sync_init+0x90>
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    15e2:	2380      	movs	r3, #128	; 0x80
    15e4:	029b      	lsls	r3, r3, #10
    15e6:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15e8:	2207      	movs	r2, #7
    15ea:	69e3      	ldr	r3, [r4, #28]
    15ec:	421a      	tst	r2, r3
    15ee:	d1fc      	bne.n	15ea <_spi_m_sync_init+0x9e>
	((Sercom *)hw)->SPI.BAUD.reg = data;
    15f0:	2309      	movs	r3, #9
    15f2:	7323      	strb	r3, [r4, #12]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    15f4:	2200      	movs	r2, #0
    15f6:	3327      	adds	r3, #39	; 0x27
    15f8:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    15fa:	3b2f      	subs	r3, #47	; 0x2f
    15fc:	712b      	strb	r3, [r5, #4]

	dev->dummy_byte = regs->dummy_byte;
    15fe:	4b10      	ldr	r3, [pc, #64]	; (1640 <_spi_m_sync_init+0xf4>)
    1600:	80eb      	strh	r3, [r5, #6]

	return ERR_NONE;
    1602:	2000      	movs	r0, #0
}
    1604:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    1606:	4a09      	ldr	r2, [pc, #36]	; (162c <_spi_m_sync_init+0xe0>)
    1608:	4909      	ldr	r1, [pc, #36]	; (1630 <_spi_m_sync_init+0xe4>)
    160a:	2000      	movs	r0, #0
    160c:	4b09      	ldr	r3, [pc, #36]	; (1634 <_spi_m_sync_init+0xe8>)
    160e:	4798      	blx	r3
		return ERR_INVALID_ARG;
    1610:	200d      	movs	r0, #13
    1612:	4240      	negs	r0, r0
    1614:	e7f6      	b.n	1604 <_spi_m_sync_init+0xb8>
	ASSERT(dev && hw);
    1616:	0008      	movs	r0, r1
    1618:	1e43      	subs	r3, r0, #1
    161a:	4198      	sbcs	r0, r3
    161c:	b2c0      	uxtb	r0, r0
    161e:	4a03      	ldr	r2, [pc, #12]	; (162c <_spi_m_sync_init+0xe0>)
    1620:	4903      	ldr	r1, [pc, #12]	; (1630 <_spi_m_sync_init+0xe4>)
    1622:	4b04      	ldr	r3, [pc, #16]	; (1634 <_spi_m_sync_init+0xe8>)
    1624:	4798      	blx	r3
    1626:	e7ad      	b.n	1584 <_spi_m_sync_init+0x38>
    1628:	bdfffc00 	.word	0xbdfffc00
    162c:	00000948 	.word	0x00000948
    1630:	00005bc4 	.word	0x00005bc4
    1634:	00000c91 	.word	0x00000c91
    1638:	0000090d 	.word	0x0000090d
    163c:	0001000c 	.word	0x0001000c
    1640:	000001ff 	.word	0x000001ff

00001644 <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    1644:	b510      	push	{r4, lr}
    1646:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1648:	d00b      	beq.n	1662 <_spi_m_sync_enable+0x1e>
    164a:	6800      	ldr	r0, [r0, #0]
    164c:	1e43      	subs	r3, r0, #1
    164e:	4198      	sbcs	r0, r3
    1650:	b2c0      	uxtb	r0, r0
    1652:	4a05      	ldr	r2, [pc, #20]	; (1668 <_spi_m_sync_enable+0x24>)
    1654:	4905      	ldr	r1, [pc, #20]	; (166c <_spi_m_sync_enable+0x28>)
    1656:	4b06      	ldr	r3, [pc, #24]	; (1670 <_spi_m_sync_enable+0x2c>)
    1658:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    165a:	6820      	ldr	r0, [r4, #0]
    165c:	4b05      	ldr	r3, [pc, #20]	; (1674 <_spi_m_sync_enable+0x30>)
    165e:	4798      	blx	r3
}
    1660:	bd10      	pop	{r4, pc}
    1662:	2000      	movs	r0, #0
    1664:	e7f5      	b.n	1652 <_spi_m_sync_enable+0xe>
    1666:	46c0      	nop			; (mov r8, r8)
    1668:	000009a3 	.word	0x000009a3
    166c:	00005bc4 	.word	0x00005bc4
    1670:	00000c91 	.word	0x00000c91
    1674:	00001307 	.word	0x00001307

00001678 <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    1678:	b5f0      	push	{r4, r5, r6, r7, lr}
    167a:	46de      	mov	lr, fp
    167c:	4657      	mov	r7, sl
    167e:	464e      	mov	r6, r9
    1680:	4645      	mov	r5, r8
    1682:	b5e0      	push	{r5, r6, r7, lr}
    1684:	b083      	sub	sp, #12
    1686:	4681      	mov	r9, r0
    1688:	000e      	movs	r6, r1
	void *                 hw   = dev->prvt;
    168a:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    168c:	680b      	ldr	r3, [r1, #0]
    168e:	4698      	mov	r8, r3
    1690:	684d      	ldr	r5, [r1, #4]
    1692:	7903      	ldrb	r3, [r0, #4]
    1694:	9301      	str	r3, [sp, #4]

	ASSERT(dev && hw);
    1696:	2800      	cmp	r0, #0
    1698:	d015      	beq.n	16c6 <_spi_m_sync_trans+0x4e>
    169a:	0020      	movs	r0, r4
    169c:	1e43      	subs	r3, r0, #1
    169e:	4198      	sbcs	r0, r3
    16a0:	b2c0      	uxtb	r0, r0
    16a2:	4a36      	ldr	r2, [pc, #216]	; (177c <_spi_m_sync_trans+0x104>)
    16a4:	4936      	ldr	r1, [pc, #216]	; (1780 <_spi_m_sync_trans+0x108>)
    16a6:	4b37      	ldr	r3, [pc, #220]	; (1784 <_spi_m_sync_trans+0x10c>)
    16a8:	4798      	blx	r3
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    16aa:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    16ac:	075b      	lsls	r3, r3, #29
    16ae:	d13f      	bne.n	1730 <_spi_m_sync_trans+0xb8>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    16b0:	2303      	movs	r3, #3
    16b2:	69e0      	ldr	r0, [r4, #28]
    16b4:	4018      	ands	r0, r3
    16b6:	d1fc      	bne.n	16b2 <_spi_m_sync_trans+0x3a>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    16b8:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    16ba:	079b      	lsls	r3, r3, #30
    16bc:	d53b      	bpl.n	1736 <_spi_m_sync_trans+0xbe>
    16be:	0002      	movs	r2, r0
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    16c0:	2301      	movs	r3, #1
    16c2:	469c      	mov	ip, r3
    16c4:	e009      	b.n	16da <_spi_m_sync_trans+0x62>
    16c6:	2000      	movs	r0, #0
    16c8:	e7eb      	b.n	16a2 <_spi_m_sync_trans+0x2a>
		*ctrl->rxbuf++ = (uint8_t)data;
    16ca:	3501      	adds	r5, #1
	ctrl->rxcnt++;
    16cc:	3201      	adds	r2, #1
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    16ce:	b25b      	sxtb	r3, r3
    16d0:	2b00      	cmp	r3, #0
    16d2:	db16      	blt.n	1702 <_spi_m_sync_trans+0x8a>
		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    16d4:	68b3      	ldr	r3, [r6, #8]
    16d6:	4283      	cmp	r3, r0
    16d8:	d927      	bls.n	172a <_spi_m_sync_trans+0xb2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    16da:	7e23      	ldrb	r3, [r4, #24]
    16dc:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    16de:	2104      	movs	r1, #4
    16e0:	4219      	tst	r1, r3
    16e2:	d02b      	beq.n	173c <_spi_m_sync_trans+0xc4>
	return ((Sercom *)hw)->SPI.DATA.reg;
    16e4:	6aa7      	ldr	r7, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    16e6:	2d00      	cmp	r5, #0
    16e8:	d0f0      	beq.n	16cc <_spi_m_sync_trans+0x54>
		*ctrl->rxbuf++ = (uint8_t)data;
    16ea:	702f      	strb	r7, [r5, #0]
		if (ctrl->char_size > 1) {
    16ec:	9901      	ldr	r1, [sp, #4]
    16ee:	2901      	cmp	r1, #1
    16f0:	d9eb      	bls.n	16ca <_spi_m_sync_trans+0x52>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    16f2:	0a3f      	lsrs	r7, r7, #8
    16f4:	706f      	strb	r7, [r5, #1]
    16f6:	3502      	adds	r5, #2
    16f8:	e7e8      	b.n	16cc <_spi_m_sync_trans+0x54>
		data = *ctrl->txbuf++;
    16fa:	2101      	movs	r1, #1
    16fc:	468b      	mov	fp, r1
    16fe:	44d8      	add	r8, fp
    1700:	e037      	b.n	1772 <_spi_m_sync_trans+0xfa>
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    1702:	2301      	movs	r3, #1
    1704:	425b      	negs	r3, r3
    1706:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1708:	3381      	adds	r3, #129	; 0x81
    170a:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    170c:	2013      	movs	r0, #19
    170e:	4240      	negs	r0, r0
	tmp &= mask;
    1710:	2203      	movs	r2, #3
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    1712:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    1714:	4213      	tst	r3, r2
    1716:	d0fc      	beq.n	1712 <_spi_m_sync_trans+0x9a>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1718:	2303      	movs	r3, #3
    171a:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    171c:	b003      	add	sp, #12
    171e:	bc3c      	pop	{r2, r3, r4, r5}
    1720:	4690      	mov	r8, r2
    1722:	4699      	mov	r9, r3
    1724:	46a2      	mov	sl, r4
    1726:	46ab      	mov	fp, r5
    1728:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    172a:	4293      	cmp	r3, r2
    172c:	d8d5      	bhi.n	16da <_spi_m_sync_trans+0x62>
    172e:	e7ef      	b.n	1710 <_spi_m_sync_trans+0x98>
		return ERR_BUSY;
    1730:	2004      	movs	r0, #4
    1732:	4240      	negs	r0, r0
    1734:	e7f2      	b.n	171c <_spi_m_sync_trans+0xa4>
		return ERR_NOT_INITIALIZED;
    1736:	2014      	movs	r0, #20
    1738:	4240      	negs	r0, r0
    173a:	e7ef      	b.n	171c <_spi_m_sync_trans+0xa4>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    173c:	4290      	cmp	r0, r2
    173e:	d8c6      	bhi.n	16ce <_spi_m_sync_trans+0x56>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    1740:	4667      	mov	r7, ip
    1742:	421f      	tst	r7, r3
    1744:	d0c3      	beq.n	16ce <_spi_m_sync_trans+0x56>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    1746:	464f      	mov	r7, r9
    1748:	88ff      	ldrh	r7, [r7, #6]
    174a:	46ba      	mov	sl, r7
	if (ctrl->txbuf) {
    174c:	4647      	mov	r7, r8
    174e:	2f00      	cmp	r7, #0
    1750:	d00f      	beq.n	1772 <_spi_m_sync_trans+0xfa>
		data = *ctrl->txbuf++;
    1752:	783f      	ldrb	r7, [r7, #0]
    1754:	46ba      	mov	sl, r7
		if (ctrl->char_size > 1) {
    1756:	9901      	ldr	r1, [sp, #4]
    1758:	2901      	cmp	r1, #1
    175a:	d9ce      	bls.n	16fa <_spi_m_sync_trans+0x82>
			data |= (*ctrl->txbuf) << 8;
    175c:	4647      	mov	r7, r8
    175e:	787f      	ldrb	r7, [r7, #1]
    1760:	023f      	lsls	r7, r7, #8
    1762:	46bb      	mov	fp, r7
    1764:	4657      	mov	r7, sl
    1766:	4659      	mov	r1, fp
    1768:	430f      	orrs	r7, r1
    176a:	46ba      	mov	sl, r7
			ctrl->txbuf++;
    176c:	2102      	movs	r1, #2
    176e:	468b      	mov	fp, r1
    1770:	44d8      	add	r8, fp
	ctrl->txcnt++;
    1772:	3001      	adds	r0, #1
	((Sercom *)hw)->SPI.DATA.reg = data;
    1774:	4657      	mov	r7, sl
    1776:	62a7      	str	r7, [r4, #40]	; 0x28
    1778:	e7a9      	b.n	16ce <_spi_m_sync_trans+0x56>
    177a:	46c0      	nop			; (mov r8, r8)
    177c:	00000aa8 	.word	0x00000aa8
    1780:	00005bc4 	.word	0x00005bc4
    1784:	00000c91 	.word	0x00000c91

00001788 <_temp_sync_init>:

/**
 * \brief              Initialize Temperature Sensor
 */
int32_t _temp_sync_init(struct _temp_sync_device *const dev, void *const hw)
{
    1788:	b570      	push	{r4, r5, r6, lr}
    178a:	0005      	movs	r5, r0
    178c:	000c      	movs	r4, r1
	};
}

static inline bool hri_tsens_is_syncing(const void *const hw, hri_tsens_syncbusy_reg_t reg)
{
	return ((Tsens *)hw)->SYNCBUSY.reg & reg;
    178e:	688b      	ldr	r3, [r1, #8]
 *
 * \param[in] dev      The pointer to device instance
 */
static inline int32_t _temp_init_calibration(void *const hw)
{
	if (!hri_tsens_is_syncing(hw, TSENS_SYNCBUSY_SWRST)) {
    1790:	07db      	lsls	r3, r3, #31
    1792:	d52d      	bpl.n	17f0 <_temp_sync_init+0x68>
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    1794:	2201      	movs	r2, #1
    1796:	68a3      	ldr	r3, [r4, #8]
    1798:	421a      	tst	r2, r3
    179a:	d1fc      	bne.n	1796 <_temp_sync_init+0xe>
		}
		hri_tsens_write_CTRLA_reg(hw, TSENS_CTRLA_SWRST);
	}
	hri_tsens_wait_for_sync(hw, TSENS_SYNCBUSY_SWRST);

	hri_tsens_write_CAL_reg(hw, TSENS_CAL_TCAL(CONF_TSENS_CAL_TCAL) | TSENS_CAL_FCAL(CONF_TSENS_CAL_FCAL));
    179c:	4921      	ldr	r1, [pc, #132]	; (1824 <_temp_sync_init+0x9c>)
    179e:	680b      	ldr	r3, [r1, #0]
    17a0:	021a      	lsls	r2, r3, #8
    17a2:	20fc      	movs	r0, #252	; 0xfc
    17a4:	0180      	lsls	r0, r0, #6
    17a6:	4002      	ands	r2, r0
    17a8:	051b      	lsls	r3, r3, #20
    17aa:	0e9b      	lsrs	r3, r3, #26
    17ac:	4313      	orrs	r3, r2
}

static inline void hri_tsens_write_CAL_reg(const void *const hw, hri_tsens_cal_reg_t data)
{
	TSENS_CRITICAL_SECTION_ENTER();
	((Tsens *)hw)->CAL.reg = data;
    17ae:	6223      	str	r3, [r4, #32]
	hri_tsens_write_GAIN_reg(hw, CONF_TSENS_CAL_GAIN);
    17b0:	4e1d      	ldr	r6, [pc, #116]	; (1828 <_temp_sync_init+0xa0>)
    17b2:	6833      	ldr	r3, [r6, #0]
    17b4:	0518      	lsls	r0, r3, #20
    17b6:	23f0      	movs	r3, #240	; 0xf0
    17b8:	041b      	lsls	r3, r3, #16
    17ba:	4018      	ands	r0, r3
    17bc:	680b      	ldr	r3, [r1, #0]
    17be:	0b1b      	lsrs	r3, r3, #12
    17c0:	4318      	orrs	r0, r3
    17c2:	4b1a      	ldr	r3, [pc, #104]	; (182c <_temp_sync_init+0xa4>)
    17c4:	4798      	blx	r3
    17c6:	491a      	ldr	r1, [pc, #104]	; (1830 <_temp_sync_init+0xa8>)
    17c8:	4b1a      	ldr	r3, [pc, #104]	; (1834 <_temp_sync_init+0xac>)
    17ca:	4798      	blx	r3
    17cc:	4b1a      	ldr	r3, [pc, #104]	; (1838 <_temp_sync_init+0xb0>)
    17ce:	4798      	blx	r3
	((Tsens *)hw)->GAIN.reg = data;
    17d0:	61a0      	str	r0, [r4, #24]
	hri_tsens_write_OFFSET_reg(hw, CONF_TSENS_CAL_OFFSET);
    17d2:	6833      	ldr	r3, [r6, #0]
    17d4:	011b      	lsls	r3, r3, #4
    17d6:	0a1b      	lsrs	r3, r3, #8
	((Tsens *)hw)->OFFSET.reg = data;
    17d8:	61e3      	str	r3, [r4, #28]
	dev->hw = hw;
    17da:	602c      	str	r4, [r5, #0]
	((Tsens *)hw)->CTRLA.reg = data;
    17dc:	2300      	movs	r3, #0
    17de:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    17e0:	2203      	movs	r2, #3
    17e2:	68a3      	ldr	r3, [r4, #8]
    17e4:	421a      	tst	r2, r3
    17e6:	d1fc      	bne.n	17e2 <_temp_sync_init+0x5a>
	((Tsens *)hw)->CTRLC.reg = data;
    17e8:	2300      	movs	r3, #0
    17ea:	70a3      	strb	r3, [r4, #2]
}
    17ec:	2000      	movs	r0, #0
    17ee:	bd70      	pop	{r4, r5, r6, pc}
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    17f0:	2203      	movs	r2, #3
    17f2:	68a3      	ldr	r3, [r4, #8]
    17f4:	421a      	tst	r2, r3
    17f6:	d1fc      	bne.n	17f2 <_temp_sync_init+0x6a>
	tmp = ((Tsens *)hw)->CTRLA.reg;
    17f8:	7823      	ldrb	r3, [r4, #0]
		if (hri_tsens_get_CTRLA_reg(hw, TSENS_CTRLA_ENABLE)) {
    17fa:	079b      	lsls	r3, r3, #30
    17fc:	d50b      	bpl.n	1816 <_temp_sync_init+0x8e>
	((Tsens *)hw)->CTRLA.reg &= ~TSENS_CTRLA_ENABLE;
    17fe:	7823      	ldrb	r3, [r4, #0]
    1800:	2202      	movs	r2, #2
    1802:	4393      	bics	r3, r2
    1804:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    1806:	3201      	adds	r2, #1
    1808:	68a3      	ldr	r3, [r4, #8]
    180a:	421a      	tst	r2, r3
    180c:	d1fc      	bne.n	1808 <_temp_sync_init+0x80>
    180e:	2202      	movs	r2, #2
    1810:	68a3      	ldr	r3, [r4, #8]
    1812:	421a      	tst	r2, r3
    1814:	d1fc      	bne.n	1810 <_temp_sync_init+0x88>
	((Tsens *)hw)->CTRLA.reg = data;
    1816:	2301      	movs	r3, #1
    1818:	7023      	strb	r3, [r4, #0]
	while (((Tsens *)hw)->SYNCBUSY.reg & reg) {
    181a:	2203      	movs	r2, #3
    181c:	68a3      	ldr	r3, [r4, #8]
    181e:	421a      	tst	r2, r3
    1820:	d1fc      	bne.n	181c <_temp_sync_init+0x94>
    1822:	e7b7      	b.n	1794 <_temp_sync_init+0xc>
    1824:	00806030 	.word	0x00806030
    1828:	00806034 	.word	0x00806034
    182c:	000024b1 	.word	0x000024b1
    1830:	3caaaaab 	.word	0x3caaaaab
    1834:	00001ef9 	.word	0x00001ef9
    1838:	00001c39 	.word	0x00001c39

0000183c <main>:
#include "utils.h"



int main(void)
{
    183c:	b570      	push	{r4, r5, r6, lr}
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    183e:	4b0b      	ldr	r3, [pc, #44]	; (186c <main+0x30>)
    1840:	4798      	blx	r3
	uart_init();
    1842:	4b0b      	ldr	r3, [pc, #44]	; (1870 <main+0x34>)
    1844:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1846:	2220      	movs	r2, #32
    1848:	23c0      	movs	r3, #192	; 0xc0
    184a:	05db      	lsls	r3, r3, #23
    184c:	619a      	str	r2, [r3, #24]

	gpio_set_pin_level(relay_signal, true);

	//ADC
	adc_sync_enable_channel(&ADC_0, 0);
    184e:	2100      	movs	r1, #0
    1850:	4808      	ldr	r0, [pc, #32]	; (1874 <main+0x38>)
    1852:	4b09      	ldr	r3, [pc, #36]	; (1878 <main+0x3c>)
    1854:	4798      	blx	r3
	
	
	/* Replace with your application code */
	while (1) {
		if(serial_receiving == 1)
    1856:	4c09      	ldr	r4, [pc, #36]	; (187c <main+0x40>)
		{
			if(serial_complete == 1)
    1858:	4d09      	ldr	r5, [pc, #36]	; (1880 <main+0x44>)
			{
				usart_done();
    185a:	4e0a      	ldr	r6, [pc, #40]	; (1884 <main+0x48>)
		if(serial_receiving == 1)
    185c:	7823      	ldrb	r3, [r4, #0]
    185e:	2b01      	cmp	r3, #1
    1860:	d1fc      	bne.n	185c <main+0x20>
			if(serial_complete == 1)
    1862:	782b      	ldrb	r3, [r5, #0]
    1864:	2b01      	cmp	r3, #1
    1866:	d1f9      	bne.n	185c <main+0x20>
				usart_done();
    1868:	47b0      	blx	r6
    186a:	e7f7      	b.n	185c <main+0x20>
    186c:	0000011d 	.word	0x0000011d
    1870:	00001c05 	.word	0x00001c05
    1874:	20000300 	.word	0x20000300
    1878:	000005ed 	.word	0x000005ed
    187c:	200001fc 	.word	0x200001fc
    1880:	200002c8 	.word	0x200002c8
    1884:	00001945 	.word	0x00001945

00001888 <SPI_test>:
#include "driver_init.h"
#include "utils.h"


void SPI_test(void)
{
    1888:	b510      	push	{r4, lr}
    188a:	b082      	sub	sp, #8
	
	static uint8_t example_SPI_0[12] = "1111111111111";
	struct io_descriptor *spi_io;
	spi_m_sync_get_io_descriptor(&SPI_0, &spi_io);
    188c:	4c07      	ldr	r4, [pc, #28]	; (18ac <SPI_test+0x24>)
    188e:	a901      	add	r1, sp, #4
    1890:	0020      	movs	r0, r4
    1892:	4b07      	ldr	r3, [pc, #28]	; (18b0 <SPI_test+0x28>)
    1894:	4798      	blx	r3

	spi_m_sync_enable(&SPI_0);
    1896:	0020      	movs	r0, r4
    1898:	4b06      	ldr	r3, [pc, #24]	; (18b4 <SPI_test+0x2c>)
    189a:	4798      	blx	r3
	io_write(spi_io, example_SPI_0, 12);
    189c:	220c      	movs	r2, #12
    189e:	4906      	ldr	r1, [pc, #24]	; (18b8 <SPI_test+0x30>)
    18a0:	9801      	ldr	r0, [sp, #4]
    18a2:	4b06      	ldr	r3, [pc, #24]	; (18bc <SPI_test+0x34>)
    18a4:	4798      	blx	r3
    18a6:	b002      	add	sp, #8
    18a8:	bd10      	pop	{r4, pc}
    18aa:	46c0      	nop			; (mov r8, r8)
    18ac:	20000304 	.word	0x20000304
    18b0:	0000092d 	.word	0x0000092d
    18b4:	00000845 	.word	0x00000845
    18b8:	20000014 	.word	0x20000014
    18bc:	00000789 	.word	0x00000789

000018c0 <usart_return>:
	 	serial_complete = 0;
}

//sends an the rx array on usart
void usart_return(uint8_t rx[], uint8_t tx[])
{
    18c0:	b570      	push	{r4, r5, r6, lr}
    18c2:	0005      	movs	r5, r0
    18c4:	000c      	movs	r4, r1
		//copy message to tx buffer
		memcpy(&tx[17], &rx[0], SERIAL_BUF_SIZE);
    18c6:	0008      	movs	r0, r1
    18c8:	3011      	adds	r0, #17
    18ca:	22c8      	movs	r2, #200	; 0xc8
    18cc:	0029      	movs	r1, r5
    18ce:	4b06      	ldr	r3, [pc, #24]	; (18e8 <usart_return+0x28>)
    18d0:	4798      	blx	r3

		//print
		io_write(&USART_0.io, tx, strlen(rx) + 17);
    18d2:	0028      	movs	r0, r5
    18d4:	4b05      	ldr	r3, [pc, #20]	; (18ec <usart_return+0x2c>)
    18d6:	4798      	blx	r3
    18d8:	3011      	adds	r0, #17
    18da:	b282      	uxth	r2, r0
    18dc:	0021      	movs	r1, r4
    18de:	4804      	ldr	r0, [pc, #16]	; (18f0 <usart_return+0x30>)
    18e0:	4b04      	ldr	r3, [pc, #16]	; (18f4 <usart_return+0x34>)
    18e2:	4798      	blx	r3
		//io_write(&USART_0.io, msg, total_bytes + 16);
		
		//clear memory
		memset(&rx, 0x00, SERIAL_BUF_SIZE);
	
}
    18e4:	bd70      	pop	{r4, r5, r6, pc}
    18e6:	46c0      	nop			; (mov r8, r8)
    18e8:	00003de1 	.word	0x00003de1
    18ec:	00003e03 	.word	0x00003e03
    18f0:	2000031c 	.word	0x2000031c
    18f4:	00000789 	.word	0x00000789

000018f8 <usart_send>:

//sends a the string on usart (might work with arrays aswell)
void usart_send(uint8_t *str1)
{
    18f8:	b570      	push	{r4, r5, r6, lr}
    18fa:	0005      	movs	r5, r0
	//Copy the string to the tx_buffer, so that it can be sent using io_write
	memcpy(&tx_buffer[17], &str1[0], SERIAL_BUF_SIZE);
    18fc:	4c0a      	ldr	r4, [pc, #40]	; (1928 <usart_send+0x30>)
    18fe:	22c8      	movs	r2, #200	; 0xc8
    1900:	0001      	movs	r1, r0
    1902:	0020      	movs	r0, r4
    1904:	4b09      	ldr	r3, [pc, #36]	; (192c <usart_send+0x34>)
    1906:	4798      	blx	r3
	
	//print to the serialcom port
	io_write(&USART_0.io, tx_buffer, (17  + strlen(str1)));
    1908:	0028      	movs	r0, r5
    190a:	4b09      	ldr	r3, [pc, #36]	; (1930 <usart_send+0x38>)
    190c:	4798      	blx	r3
    190e:	3011      	adds	r0, #17
    1910:	b282      	uxth	r2, r0
    1912:	0021      	movs	r1, r4
    1914:	3911      	subs	r1, #17
    1916:	4807      	ldr	r0, [pc, #28]	; (1934 <usart_send+0x3c>)
    1918:	4b07      	ldr	r3, [pc, #28]	; (1938 <usart_send+0x40>)
    191a:	4798      	blx	r3
	//io_write(&USART_0.io, msg, total_bytes + 16);
	
	//clear memory, so that there is a clean buffer for next message
	memset(&rx_buffer, 0x00, SERIAL_BUF_SIZE);
    191c:	22c8      	movs	r2, #200	; 0xc8
    191e:	2100      	movs	r1, #0
    1920:	4806      	ldr	r0, [pc, #24]	; (193c <usart_send+0x44>)
    1922:	4b07      	ldr	r3, [pc, #28]	; (1940 <usart_send+0x48>)
    1924:	4798      	blx	r3
	
}
    1926:	bd70      	pop	{r4, r5, r6, pc}
    1928:	2000003d 	.word	0x2000003d
    192c:	00003de1 	.word	0x00003de1
    1930:	00003e03 	.word	0x00003e03
    1934:	2000031c 	.word	0x2000031c
    1938:	00000789 	.word	0x00000789
    193c:	20000200 	.word	0x20000200
    1940:	00003df3 	.word	0x00003df3

00001944 <usart_done>:
{
    1944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1946:	46ce      	mov	lr, r9
    1948:	4647      	mov	r7, r8
    194a:	b580      	push	{r7, lr}
	if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
    194c:	4b70      	ldr	r3, [pc, #448]	; (1b10 <usart_done+0x1cc>)
    194e:	781b      	ldrb	r3, [r3, #0]
    1950:	2b6f      	cmp	r3, #111	; 0x6f
    1952:	d029      	beq.n	19a8 <usart_done+0x64>
	else if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f')
    1954:	4b6e      	ldr	r3, [pc, #440]	; (1b10 <usart_done+0x1cc>)
    1956:	781b      	ldrb	r3, [r3, #0]
    1958:	2b6f      	cmp	r3, #111	; 0x6f
    195a:	d036      	beq.n	19ca <usart_done+0x86>
	 else if (rx_buffer[0] == 'a' && rx_buffer[1] == 'd' && rx_buffer[2] =='c')
    195c:	4b6c      	ldr	r3, [pc, #432]	; (1b10 <usart_done+0x1cc>)
    195e:	781b      	ldrb	r3, [r3, #0]
    1960:	2b61      	cmp	r3, #97	; 0x61
    1962:	d03f      	beq.n	19e4 <usart_done+0xa0>
	 else if (rx_buffer[0] == 't' && rx_buffer[1] == 'e' && rx_buffer[2] =='s')
    1964:	4b6a      	ldr	r3, [pc, #424]	; (1b10 <usart_done+0x1cc>)
    1966:	781b      	ldrb	r3, [r3, #0]
    1968:	2b74      	cmp	r3, #116	; 0x74
    196a:	d04e      	beq.n	1a0a <usart_done+0xc6>
	 else if (rx_buffer[0] == '1')
    196c:	4b68      	ldr	r3, [pc, #416]	; (1b10 <usart_done+0x1cc>)
    196e:	781b      	ldrb	r3, [r3, #0]
    1970:	2b31      	cmp	r3, #49	; 0x31
    1972:	d059      	beq.n	1a28 <usart_done+0xe4>
	  else if (rx_buffer[0] == '2')
    1974:	4b66      	ldr	r3, [pc, #408]	; (1b10 <usart_done+0x1cc>)
    1976:	781b      	ldrb	r3, [r3, #0]
    1978:	2b32      	cmp	r3, #50	; 0x32
    197a:	d064      	beq.n	1a46 <usart_done+0x102>
	 else if (rx_buffer[0] == '3')
    197c:	4b64      	ldr	r3, [pc, #400]	; (1b10 <usart_done+0x1cc>)
    197e:	781b      	ldrb	r3, [r3, #0]
    1980:	2b33      	cmp	r3, #51	; 0x33
    1982:	d100      	bne.n	1986 <usart_done+0x42>
    1984:	e09e      	b.n	1ac4 <usart_done+0x180>
	 else if(rx_buffer[0] == '4'){
    1986:	4b62      	ldr	r3, [pc, #392]	; (1b10 <usart_done+0x1cc>)
    1988:	781b      	ldrb	r3, [r3, #0]
    198a:	2b34      	cmp	r3, #52	; 0x34
    198c:	d100      	bne.n	1990 <usart_done+0x4c>
    198e:	e0bc      	b.n	1b0a <usart_done+0x1c6>
		 usart_send("Error: No such command");
    1990:	4860      	ldr	r0, [pc, #384]	; (1b14 <usart_done+0x1d0>)
    1992:	4b61      	ldr	r3, [pc, #388]	; (1b18 <usart_done+0x1d4>)
    1994:	4798      	blx	r3
	 	serial_receiving = 0;
    1996:	2300      	movs	r3, #0
    1998:	4a60      	ldr	r2, [pc, #384]	; (1b1c <usart_done+0x1d8>)
    199a:	7013      	strb	r3, [r2, #0]
	 	serial_complete = 0;
    199c:	4a60      	ldr	r2, [pc, #384]	; (1b20 <usart_done+0x1dc>)
    199e:	7013      	strb	r3, [r2, #0]
}
    19a0:	bc0c      	pop	{r2, r3}
    19a2:	4690      	mov	r8, r2
    19a4:	4699      	mov	r9, r3
    19a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
    19a8:	4b59      	ldr	r3, [pc, #356]	; (1b10 <usart_done+0x1cc>)
    19aa:	785b      	ldrb	r3, [r3, #1]
    19ac:	2b6e      	cmp	r3, #110	; 0x6e
    19ae:	d1d1      	bne.n	1954 <usart_done+0x10>
    19b0:	2220      	movs	r2, #32
    19b2:	23c0      	movs	r3, #192	; 0xc0
    19b4:	05db      	lsls	r3, r3, #23
    19b6:	619a      	str	r2, [r3, #24]
		usart_send(relay_on);
    19b8:	485a      	ldr	r0, [pc, #360]	; (1b24 <usart_done+0x1e0>)
    19ba:	4c57      	ldr	r4, [pc, #348]	; (1b18 <usart_done+0x1d4>)
    19bc:	47a0      	blx	r4
		delay_ms(50);
    19be:	2032      	movs	r0, #50	; 0x32
    19c0:	4b59      	ldr	r3, [pc, #356]	; (1b28 <usart_done+0x1e4>)
    19c2:	4798      	blx	r3
		usart_send("Relay test");
    19c4:	4859      	ldr	r0, [pc, #356]	; (1b2c <usart_done+0x1e8>)
    19c6:	47a0      	blx	r4
    19c8:	e7e5      	b.n	1996 <usart_done+0x52>
	else if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f')
    19ca:	4b51      	ldr	r3, [pc, #324]	; (1b10 <usart_done+0x1cc>)
    19cc:	785b      	ldrb	r3, [r3, #1]
    19ce:	2b66      	cmp	r3, #102	; 0x66
    19d0:	d1c4      	bne.n	195c <usart_done+0x18>
    19d2:	4b4f      	ldr	r3, [pc, #316]	; (1b10 <usart_done+0x1cc>)
    19d4:	789b      	ldrb	r3, [r3, #2]
    19d6:	2b66      	cmp	r3, #102	; 0x66
    19d8:	d1c0      	bne.n	195c <usart_done+0x18>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    19da:	2220      	movs	r2, #32
    19dc:	23c0      	movs	r3, #192	; 0xc0
    19de:	05db      	lsls	r3, r3, #23
    19e0:	615a      	str	r2, [r3, #20]
    19e2:	e7d8      	b.n	1996 <usart_done+0x52>
	 else if (rx_buffer[0] == 'a' && rx_buffer[1] == 'd' && rx_buffer[2] =='c')
    19e4:	4b4a      	ldr	r3, [pc, #296]	; (1b10 <usart_done+0x1cc>)
    19e6:	785b      	ldrb	r3, [r3, #1]
    19e8:	2b64      	cmp	r3, #100	; 0x64
    19ea:	d1bb      	bne.n	1964 <usart_done+0x20>
    19ec:	4b48      	ldr	r3, [pc, #288]	; (1b10 <usart_done+0x1cc>)
    19ee:	789b      	ldrb	r3, [r3, #2]
    19f0:	2b63      	cmp	r3, #99	; 0x63
    19f2:	d1b7      	bne.n	1964 <usart_done+0x20>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    19f4:	2180      	movs	r1, #128	; 0x80
    19f6:	03c9      	lsls	r1, r1, #15
    19f8:	3335      	adds	r3, #53	; 0x35
    19fa:	22c0      	movs	r2, #192	; 0xc0
    19fc:	05d2      	lsls	r2, r2, #23
    19fe:	50d1      	str	r1, [r2, r3]
		 usart_return(&rx_buffer[1], tx_buffer);
    1a00:	494b      	ldr	r1, [pc, #300]	; (1b30 <usart_done+0x1ec>)
    1a02:	484c      	ldr	r0, [pc, #304]	; (1b34 <usart_done+0x1f0>)
    1a04:	4b4c      	ldr	r3, [pc, #304]	; (1b38 <usart_done+0x1f4>)
    1a06:	4798      	blx	r3
    1a08:	e7c5      	b.n	1996 <usart_done+0x52>
	 else if (rx_buffer[0] == 't' && rx_buffer[1] == 'e' && rx_buffer[2] =='s')
    1a0a:	4b41      	ldr	r3, [pc, #260]	; (1b10 <usart_done+0x1cc>)
    1a0c:	785b      	ldrb	r3, [r3, #1]
    1a0e:	2b65      	cmp	r3, #101	; 0x65
    1a10:	d1ac      	bne.n	196c <usart_done+0x28>
    1a12:	4b3f      	ldr	r3, [pc, #252]	; (1b10 <usart_done+0x1cc>)
    1a14:	789b      	ldrb	r3, [r3, #2]
    1a16:	2b73      	cmp	r3, #115	; 0x73
    1a18:	d1a8      	bne.n	196c <usart_done+0x28>
    1a1a:	2180      	movs	r1, #128	; 0x80
    1a1c:	03c9      	lsls	r1, r1, #15
    1a1e:	3325      	adds	r3, #37	; 0x25
    1a20:	22c0      	movs	r2, #192	; 0xc0
    1a22:	05d2      	lsls	r2, r2, #23
    1a24:	50d1      	str	r1, [r2, r3]
    1a26:	e7b6      	b.n	1996 <usart_done+0x52>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1a28:	4c44      	ldr	r4, [pc, #272]	; (1b3c <usart_done+0x1f8>)
    1a2a:	3b2f      	subs	r3, #47	; 0x2f
    1a2c:	0022      	movs	r2, r4
    1a2e:	2100      	movs	r1, #0
    1a30:	4843      	ldr	r0, [pc, #268]	; (1b40 <usart_done+0x1fc>)
    1a32:	4d44      	ldr	r5, [pc, #272]	; (1b44 <usart_done+0x200>)
    1a34:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1a36:	7863      	ldrb	r3, [r4, #1]
    1a38:	7163      	strb	r3, [r4, #5]
		temp[0] = adc_buffer[0];
    1a3a:	7822      	ldrb	r2, [r4, #0]
    1a3c:	7122      	strb	r2, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1a3e:	021b      	lsls	r3, r3, #8
    1a40:	4313      	orrs	r3, r2
    1a42:	80e3      	strh	r3, [r4, #6]
    1a44:	e7a7      	b.n	1996 <usart_done+0x52>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1a46:	4c3d      	ldr	r4, [pc, #244]	; (1b3c <usart_done+0x1f8>)
    1a48:	3b30      	subs	r3, #48	; 0x30
    1a4a:	0022      	movs	r2, r4
    1a4c:	2100      	movs	r1, #0
    1a4e:	483c      	ldr	r0, [pc, #240]	; (1b40 <usart_done+0x1fc>)
    1a50:	4d3c      	ldr	r5, [pc, #240]	; (1b44 <usart_done+0x200>)
    1a52:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1a54:	7865      	ldrb	r5, [r4, #1]
    1a56:	7165      	strb	r5, [r4, #5]
		temp[0] = adc_buffer[0];
    1a58:	7823      	ldrb	r3, [r4, #0]
    1a5a:	7123      	strb	r3, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1a5c:	022d      	lsls	r5, r5, #8
    1a5e:	431d      	orrs	r5, r3
    1a60:	80e5      	strh	r5, [r4, #6]
		thou = res / 1000 % 10;
    1a62:	4e39      	ldr	r6, [pc, #228]	; (1b48 <usart_done+0x204>)
    1a64:	21fa      	movs	r1, #250	; 0xfa
    1a66:	0089      	lsls	r1, r1, #2
    1a68:	0028      	movs	r0, r5
    1a6a:	47b0      	blx	r6
    1a6c:	b280      	uxth	r0, r0
    1a6e:	4b37      	ldr	r3, [pc, #220]	; (1b4c <usart_done+0x208>)
    1a70:	4699      	mov	r9, r3
    1a72:	210a      	movs	r1, #10
    1a74:	4798      	blx	r3
    1a76:	b2cb      	uxtb	r3, r1
    1a78:	4698      	mov	r8, r3
    1a7a:	7223      	strb	r3, [r4, #8]
		hund = res / 100  % 10;
    1a7c:	2164      	movs	r1, #100	; 0x64
    1a7e:	0028      	movs	r0, r5
    1a80:	47b0      	blx	r6
    1a82:	b280      	uxth	r0, r0
    1a84:	210a      	movs	r1, #10
    1a86:	47c8      	blx	r9
    1a88:	b2cf      	uxtb	r7, r1
    1a8a:	7267      	strb	r7, [r4, #9]
		tens = res / 10   % 10;
    1a8c:	210a      	movs	r1, #10
    1a8e:	0028      	movs	r0, r5
    1a90:	47b0      	blx	r6
    1a92:	b280      	uxth	r0, r0
    1a94:	210a      	movs	r1, #10
    1a96:	47c8      	blx	r9
    1a98:	b2ce      	uxtb	r6, r1
    1a9a:	72a6      	strb	r6, [r4, #10]
		ones = res % 10;
    1a9c:	210a      	movs	r1, #10
    1a9e:	0028      	movs	r0, r5
    1aa0:	47c8      	blx	r9
    1aa2:	b2c9      	uxtb	r1, r1
    1aa4:	72e1      	strb	r1, [r4, #11]
		adc_rest[0] = thou + 48;
    1aa6:	4643      	mov	r3, r8
    1aa8:	3330      	adds	r3, #48	; 0x30
    1aaa:	7323      	strb	r3, [r4, #12]
		adc_rest[1] = hund + 48;
    1aac:	3730      	adds	r7, #48	; 0x30
    1aae:	7367      	strb	r7, [r4, #13]
		adc_rest[2] = tens + 48;
    1ab0:	3630      	adds	r6, #48	; 0x30
    1ab2:	73a6      	strb	r6, [r4, #14]
		adc_rest[3] = ones + 48;
    1ab4:	3130      	adds	r1, #48	; 0x30
    1ab6:	73e1      	strb	r1, [r4, #15]
		usart_return(adc_rest, tx_buffer);
    1ab8:	0020      	movs	r0, r4
    1aba:	300c      	adds	r0, #12
    1abc:	491c      	ldr	r1, [pc, #112]	; (1b30 <usart_done+0x1ec>)
    1abe:	4b1e      	ldr	r3, [pc, #120]	; (1b38 <usart_done+0x1f4>)
    1ac0:	4798      	blx	r3
    1ac2:	e768      	b.n	1996 <usart_done+0x52>
		adc_sync_read_channel(&ADC_0, 0, adc_buffer, 2);
    1ac4:	4c1d      	ldr	r4, [pc, #116]	; (1b3c <usart_done+0x1f8>)
    1ac6:	3b31      	subs	r3, #49	; 0x31
    1ac8:	0022      	movs	r2, r4
    1aca:	2100      	movs	r1, #0
    1acc:	481c      	ldr	r0, [pc, #112]	; (1b40 <usart_done+0x1fc>)
    1ace:	4d1d      	ldr	r5, [pc, #116]	; (1b44 <usart_done+0x200>)
    1ad0:	47a8      	blx	r5
		temp[1] = adc_buffer[1];
    1ad2:	7860      	ldrb	r0, [r4, #1]
    1ad4:	7160      	strb	r0, [r4, #5]
		temp[0] = adc_buffer[0];
    1ad6:	7823      	ldrb	r3, [r4, #0]
    1ad8:	7123      	strb	r3, [r4, #4]
		res = (temp[1] << 8) | temp[0];
    1ada:	0200      	lsls	r0, r0, #8
    1adc:	4318      	orrs	r0, r3
    1ade:	80e0      	strh	r0, [r4, #6]
		res2 = (float) res / 840;
    1ae0:	4b1b      	ldr	r3, [pc, #108]	; (1b50 <usart_done+0x20c>)
    1ae2:	4798      	blx	r3
    1ae4:	491b      	ldr	r1, [pc, #108]	; (1b54 <usart_done+0x210>)
    1ae6:	4b1c      	ldr	r3, [pc, #112]	; (1b58 <usart_done+0x214>)
    1ae8:	4798      	blx	r3
    1aea:	6120      	str	r0, [r4, #16]
		gcvt(res2, 6, buf);
    1aec:	0025      	movs	r5, r4
    1aee:	3514      	adds	r5, #20
    1af0:	4b1a      	ldr	r3, [pc, #104]	; (1b5c <usart_done+0x218>)
    1af2:	4798      	blx	r3
    1af4:	002b      	movs	r3, r5
    1af6:	2206      	movs	r2, #6
    1af8:	4e19      	ldr	r6, [pc, #100]	; (1b60 <usart_done+0x21c>)
    1afa:	47b0      	blx	r6
		buf[6] = 'V';
    1afc:	2356      	movs	r3, #86	; 0x56
    1afe:	76a3      	strb	r3, [r4, #26]
		usart_return(buf, tx_buffer);
    1b00:	490b      	ldr	r1, [pc, #44]	; (1b30 <usart_done+0x1ec>)
    1b02:	0028      	movs	r0, r5
    1b04:	4b0c      	ldr	r3, [pc, #48]	; (1b38 <usart_done+0x1f4>)
    1b06:	4798      	blx	r3
    1b08:	e745      	b.n	1996 <usart_done+0x52>
		 SPI_test();
    1b0a:	4b16      	ldr	r3, [pc, #88]	; (1b64 <usart_done+0x220>)
    1b0c:	4798      	blx	r3
    1b0e:	e742      	b.n	1996 <usart_done+0x52>
    1b10:	20000200 	.word	0x20000200
    1b14:	00005bec 	.word	0x00005bec
    1b18:	000018f9 	.word	0x000018f9
    1b1c:	200001fc 	.word	0x200001fc
    1b20:	200002c8 	.word	0x200002c8
    1b24:	20000020 	.word	0x20000020
    1b28:	00000769 	.word	0x00000769
    1b2c:	00005be0 	.word	0x00005be0
    1b30:	2000002c 	.word	0x2000002c
    1b34:	20000201 	.word	0x20000201
    1b38:	000018c1 	.word	0x000018c1
    1b3c:	200001d0 	.word	0x200001d0
    1b40:	20000300 	.word	0x20000300
    1b44:	00000619 	.word	0x00000619
    1b48:	000011bf 	.word	0x000011bf
    1b4c:	0000122d 	.word	0x0000122d
    1b50:	000024b1 	.word	0x000024b1
    1b54:	44520000 	.word	0x44520000
    1b58:	00001c69 	.word	0x00001c69
    1b5c:	0000382d 	.word	0x0000382d
    1b60:	00003d4d 	.word	0x00003d4d
    1b64:	00001889 	.word	0x00001889

00001b68 <serial_tx_cb>:

static void serial_tx_cb(const struct usart_async_descriptor *const io_descr) {
	
	// Do nothing when tx interrupt is called
	
}
    1b68:	4770      	bx	lr
	...

00001b6c <serial_rx_cb>:
{
    1b6c:	b510      	push	{r4, lr}
    1b6e:	b082      	sub	sp, #8
	count = io_read(&USART_0.io, &ch, 1);
    1b70:	2201      	movs	r2, #1
    1b72:	466b      	mov	r3, sp
    1b74:	1dd9      	adds	r1, r3, #7
    1b76:	481f      	ldr	r0, [pc, #124]	; (1bf4 <serial_rx_cb+0x88>)
    1b78:	4b1f      	ldr	r3, [pc, #124]	; (1bf8 <serial_rx_cb+0x8c>)
    1b7a:	4798      	blx	r3
    1b7c:	b2c1      	uxtb	r1, r0
	if(serial_receiving == 0)
    1b7e:	4b1f      	ldr	r3, [pc, #124]	; (1bfc <serial_rx_cb+0x90>)
    1b80:	781b      	ldrb	r3, [r3, #0]
    1b82:	2b00      	cmp	r3, #0
    1b84:	d112      	bne.n	1bac <serial_rx_cb+0x40>
		if (ch != '\r' && ch != '\n')
    1b86:	466b      	mov	r3, sp
    1b88:	79da      	ldrb	r2, [r3, #7]
    1b8a:	2a0d      	cmp	r2, #13
    1b8c:	d024      	beq.n	1bd8 <serial_rx_cb+0x6c>
    1b8e:	2a0a      	cmp	r2, #10
    1b90:	d022      	beq.n	1bd8 <serial_rx_cb+0x6c>
			serial_receiving =1;
    1b92:	4b1a      	ldr	r3, [pc, #104]	; (1bfc <serial_rx_cb+0x90>)
    1b94:	2001      	movs	r0, #1
    1b96:	7018      	strb	r0, [r3, #0]
			serial_received_bytes_counter = 0;
    1b98:	2000      	movs	r0, #0
    1b9a:	7058      	strb	r0, [r3, #1]
			rx_buffer[serial_received_bytes_counter] = ch;
    1b9c:	7858      	ldrb	r0, [r3, #1]
    1b9e:	1818      	adds	r0, r3, r0
    1ba0:	7102      	strb	r2, [r0, #4]
			serial_received_bytes_counter += count;
    1ba2:	7858      	ldrb	r0, [r3, #1]
    1ba4:	1840      	adds	r0, r0, r1
    1ba6:	b2c0      	uxtb	r0, r0
    1ba8:	7058      	strb	r0, [r3, #1]
    1baa:	e015      	b.n	1bd8 <serial_rx_cb+0x6c>
		rx_buffer[serial_received_bytes_counter] = ch;
    1bac:	4b13      	ldr	r3, [pc, #76]	; (1bfc <serial_rx_cb+0x90>)
    1bae:	785a      	ldrb	r2, [r3, #1]
    1bb0:	4668      	mov	r0, sp
    1bb2:	79c4      	ldrb	r4, [r0, #7]
    1bb4:	189a      	adds	r2, r3, r2
    1bb6:	7114      	strb	r4, [r2, #4]
		serial_received_bytes_counter += count;
    1bb8:	7858      	ldrb	r0, [r3, #1]
    1bba:	1840      	adds	r0, r0, r1
    1bbc:	b2c0      	uxtb	r0, r0
    1bbe:	7058      	strb	r0, [r3, #1]
		if (ch == '\r' || ch == '\n')
    1bc0:	2c0d      	cmp	r4, #13
    1bc2:	d00b      	beq.n	1bdc <serial_rx_cb+0x70>
    1bc4:	2c0a      	cmp	r4, #10
    1bc6:	d009      	beq.n	1bdc <serial_rx_cb+0x70>
		if(serial_received_bytes_counter >= SERIAL_BUF_SIZE)
    1bc8:	4b0c      	ldr	r3, [pc, #48]	; (1bfc <serial_rx_cb+0x90>)
    1bca:	785b      	ldrb	r3, [r3, #1]
    1bcc:	b2db      	uxtb	r3, r3
    1bce:	2bc7      	cmp	r3, #199	; 0xc7
    1bd0:	d902      	bls.n	1bd8 <serial_rx_cb+0x6c>
			serial_received_bytes_counter = 0;
    1bd2:	2200      	movs	r2, #0
    1bd4:	4b09      	ldr	r3, [pc, #36]	; (1bfc <serial_rx_cb+0x90>)
    1bd6:	705a      	strb	r2, [r3, #1]
}
    1bd8:	b002      	add	sp, #8
    1bda:	bd10      	pop	{r4, pc}
			serial_complete = 1;
    1bdc:	4a08      	ldr	r2, [pc, #32]	; (1c00 <serial_rx_cb+0x94>)
    1bde:	2101      	movs	r1, #1
    1be0:	234c      	movs	r3, #76	; 0x4c
    1be2:	54d1      	strb	r1, [r2, r3]
			total_bytes = serial_received_bytes_counter - 2;
    1be4:	4b05      	ldr	r3, [pc, #20]	; (1bfc <serial_rx_cb+0x90>)
    1be6:	785b      	ldrb	r3, [r3, #1]
    1be8:	3b02      	subs	r3, #2
    1bea:	b2db      	uxtb	r3, r3
    1bec:	314c      	adds	r1, #76	; 0x4c
    1bee:	5453      	strb	r3, [r2, r1]
    1bf0:	e7ea      	b.n	1bc8 <serial_rx_cb+0x5c>
    1bf2:	46c0      	nop			; (mov r8, r8)
    1bf4:	2000031c 	.word	0x2000031c
    1bf8:	000007bd 	.word	0x000007bd
    1bfc:	200001fc 	.word	0x200001fc
    1c00:	2000027c 	.word	0x2000027c

00001c04 <uart_init>:

void uart_init(){
    1c04:	b570      	push	{r4, r5, r6, lr}

	usart_async_register_callback(&USART_0, USART_ASYNC_TXC_CB, serial_tx_cb);
    1c06:	4c07      	ldr	r4, [pc, #28]	; (1c24 <uart_init+0x20>)
    1c08:	4a07      	ldr	r2, [pc, #28]	; (1c28 <uart_init+0x24>)
    1c0a:	2101      	movs	r1, #1
    1c0c:	0020      	movs	r0, r4
    1c0e:	4d07      	ldr	r5, [pc, #28]	; (1c2c <uart_init+0x28>)
    1c10:	47a8      	blx	r5
	usart_async_register_callback(&USART_0, USART_ASYNC_RXC_CB, serial_rx_cb);
    1c12:	4a07      	ldr	r2, [pc, #28]	; (1c30 <uart_init+0x2c>)
    1c14:	2100      	movs	r1, #0
    1c16:	0020      	movs	r0, r4
    1c18:	47a8      	blx	r5
	usart_async_enable(&USART_0);
    1c1a:	0020      	movs	r0, r4
    1c1c:	4b05      	ldr	r3, [pc, #20]	; (1c34 <uart_init+0x30>)
    1c1e:	4798      	blx	r3
	
}
    1c20:	bd70      	pop	{r4, r5, r6, pc}
    1c22:	46c0      	nop			; (mov r8, r8)
    1c24:	2000031c 	.word	0x2000031c
    1c28:	00001b69 	.word	0x00001b69
    1c2c:	00000c19 	.word	0x00000c19
    1c30:	00001b6d 	.word	0x00001b6d
    1c34:	00000bed 	.word	0x00000bed

00001c38 <__aeabi_f2uiz>:
    1c38:	219e      	movs	r1, #158	; 0x9e
    1c3a:	b510      	push	{r4, lr}
    1c3c:	05c9      	lsls	r1, r1, #23
    1c3e:	1c04      	adds	r4, r0, #0
    1c40:	f001 feb4 	bl	39ac <__aeabi_fcmpge>
    1c44:	2800      	cmp	r0, #0
    1c46:	d103      	bne.n	1c50 <__aeabi_f2uiz+0x18>
    1c48:	1c20      	adds	r0, r4, #0
    1c4a:	f000 fc11 	bl	2470 <__aeabi_f2iz>
    1c4e:	bd10      	pop	{r4, pc}
    1c50:	219e      	movs	r1, #158	; 0x9e
    1c52:	1c20      	adds	r0, r4, #0
    1c54:	05c9      	lsls	r1, r1, #23
    1c56:	f000 fa6f 	bl	2138 <__aeabi_fsub>
    1c5a:	f000 fc09 	bl	2470 <__aeabi_f2iz>
    1c5e:	2380      	movs	r3, #128	; 0x80
    1c60:	061b      	lsls	r3, r3, #24
    1c62:	469c      	mov	ip, r3
    1c64:	4460      	add	r0, ip
    1c66:	e7f2      	b.n	1c4e <__aeabi_f2uiz+0x16>

00001c68 <__aeabi_fdiv>:
    1c68:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c6a:	4657      	mov	r7, sl
    1c6c:	464e      	mov	r6, r9
    1c6e:	46de      	mov	lr, fp
    1c70:	4645      	mov	r5, r8
    1c72:	b5e0      	push	{r5, r6, r7, lr}
    1c74:	0244      	lsls	r4, r0, #9
    1c76:	0043      	lsls	r3, r0, #1
    1c78:	0fc6      	lsrs	r6, r0, #31
    1c7a:	b083      	sub	sp, #12
    1c7c:	1c0f      	adds	r7, r1, #0
    1c7e:	0a64      	lsrs	r4, r4, #9
    1c80:	0e1b      	lsrs	r3, r3, #24
    1c82:	46b2      	mov	sl, r6
    1c84:	d053      	beq.n	1d2e <__aeabi_fdiv+0xc6>
    1c86:	2bff      	cmp	r3, #255	; 0xff
    1c88:	d027      	beq.n	1cda <__aeabi_fdiv+0x72>
    1c8a:	2280      	movs	r2, #128	; 0x80
    1c8c:	00e4      	lsls	r4, r4, #3
    1c8e:	04d2      	lsls	r2, r2, #19
    1c90:	4314      	orrs	r4, r2
    1c92:	227f      	movs	r2, #127	; 0x7f
    1c94:	4252      	negs	r2, r2
    1c96:	4690      	mov	r8, r2
    1c98:	4498      	add	r8, r3
    1c9a:	2300      	movs	r3, #0
    1c9c:	4699      	mov	r9, r3
    1c9e:	469b      	mov	fp, r3
    1ca0:	027d      	lsls	r5, r7, #9
    1ca2:	0078      	lsls	r0, r7, #1
    1ca4:	0ffb      	lsrs	r3, r7, #31
    1ca6:	0a6d      	lsrs	r5, r5, #9
    1ca8:	0e00      	lsrs	r0, r0, #24
    1caa:	9300      	str	r3, [sp, #0]
    1cac:	d024      	beq.n	1cf8 <__aeabi_fdiv+0x90>
    1cae:	28ff      	cmp	r0, #255	; 0xff
    1cb0:	d046      	beq.n	1d40 <__aeabi_fdiv+0xd8>
    1cb2:	2380      	movs	r3, #128	; 0x80
    1cb4:	2100      	movs	r1, #0
    1cb6:	00ed      	lsls	r5, r5, #3
    1cb8:	04db      	lsls	r3, r3, #19
    1cba:	431d      	orrs	r5, r3
    1cbc:	387f      	subs	r0, #127	; 0x7f
    1cbe:	4647      	mov	r7, r8
    1cc0:	1a38      	subs	r0, r7, r0
    1cc2:	464f      	mov	r7, r9
    1cc4:	430f      	orrs	r7, r1
    1cc6:	00bf      	lsls	r7, r7, #2
    1cc8:	46b9      	mov	r9, r7
    1cca:	0033      	movs	r3, r6
    1ccc:	9a00      	ldr	r2, [sp, #0]
    1cce:	4f87      	ldr	r7, [pc, #540]	; (1eec <__aeabi_fdiv+0x284>)
    1cd0:	4053      	eors	r3, r2
    1cd2:	464a      	mov	r2, r9
    1cd4:	58ba      	ldr	r2, [r7, r2]
    1cd6:	9301      	str	r3, [sp, #4]
    1cd8:	4697      	mov	pc, r2
    1cda:	2c00      	cmp	r4, #0
    1cdc:	d14e      	bne.n	1d7c <__aeabi_fdiv+0x114>
    1cde:	2308      	movs	r3, #8
    1ce0:	4699      	mov	r9, r3
    1ce2:	33f7      	adds	r3, #247	; 0xf7
    1ce4:	4698      	mov	r8, r3
    1ce6:	3bfd      	subs	r3, #253	; 0xfd
    1ce8:	469b      	mov	fp, r3
    1cea:	027d      	lsls	r5, r7, #9
    1cec:	0078      	lsls	r0, r7, #1
    1cee:	0ffb      	lsrs	r3, r7, #31
    1cf0:	0a6d      	lsrs	r5, r5, #9
    1cf2:	0e00      	lsrs	r0, r0, #24
    1cf4:	9300      	str	r3, [sp, #0]
    1cf6:	d1da      	bne.n	1cae <__aeabi_fdiv+0x46>
    1cf8:	2d00      	cmp	r5, #0
    1cfa:	d126      	bne.n	1d4a <__aeabi_fdiv+0xe2>
    1cfc:	2000      	movs	r0, #0
    1cfe:	2101      	movs	r1, #1
    1d00:	0033      	movs	r3, r6
    1d02:	9a00      	ldr	r2, [sp, #0]
    1d04:	4f7a      	ldr	r7, [pc, #488]	; (1ef0 <__aeabi_fdiv+0x288>)
    1d06:	4053      	eors	r3, r2
    1d08:	4642      	mov	r2, r8
    1d0a:	1a10      	subs	r0, r2, r0
    1d0c:	464a      	mov	r2, r9
    1d0e:	430a      	orrs	r2, r1
    1d10:	0092      	lsls	r2, r2, #2
    1d12:	58ba      	ldr	r2, [r7, r2]
    1d14:	001d      	movs	r5, r3
    1d16:	4697      	mov	pc, r2
    1d18:	9b00      	ldr	r3, [sp, #0]
    1d1a:	002c      	movs	r4, r5
    1d1c:	469a      	mov	sl, r3
    1d1e:	468b      	mov	fp, r1
    1d20:	465b      	mov	r3, fp
    1d22:	2b02      	cmp	r3, #2
    1d24:	d131      	bne.n	1d8a <__aeabi_fdiv+0x122>
    1d26:	4653      	mov	r3, sl
    1d28:	21ff      	movs	r1, #255	; 0xff
    1d2a:	2400      	movs	r4, #0
    1d2c:	e038      	b.n	1da0 <__aeabi_fdiv+0x138>
    1d2e:	2c00      	cmp	r4, #0
    1d30:	d117      	bne.n	1d62 <__aeabi_fdiv+0xfa>
    1d32:	2304      	movs	r3, #4
    1d34:	4699      	mov	r9, r3
    1d36:	2300      	movs	r3, #0
    1d38:	4698      	mov	r8, r3
    1d3a:	3301      	adds	r3, #1
    1d3c:	469b      	mov	fp, r3
    1d3e:	e7af      	b.n	1ca0 <__aeabi_fdiv+0x38>
    1d40:	20ff      	movs	r0, #255	; 0xff
    1d42:	2d00      	cmp	r5, #0
    1d44:	d10b      	bne.n	1d5e <__aeabi_fdiv+0xf6>
    1d46:	2102      	movs	r1, #2
    1d48:	e7da      	b.n	1d00 <__aeabi_fdiv+0x98>
    1d4a:	0028      	movs	r0, r5
    1d4c:	f001 fe38 	bl	39c0 <__clzsi2>
    1d50:	1f43      	subs	r3, r0, #5
    1d52:	409d      	lsls	r5, r3
    1d54:	2376      	movs	r3, #118	; 0x76
    1d56:	425b      	negs	r3, r3
    1d58:	1a18      	subs	r0, r3, r0
    1d5a:	2100      	movs	r1, #0
    1d5c:	e7af      	b.n	1cbe <__aeabi_fdiv+0x56>
    1d5e:	2103      	movs	r1, #3
    1d60:	e7ad      	b.n	1cbe <__aeabi_fdiv+0x56>
    1d62:	0020      	movs	r0, r4
    1d64:	f001 fe2c 	bl	39c0 <__clzsi2>
    1d68:	1f43      	subs	r3, r0, #5
    1d6a:	409c      	lsls	r4, r3
    1d6c:	2376      	movs	r3, #118	; 0x76
    1d6e:	425b      	negs	r3, r3
    1d70:	1a1b      	subs	r3, r3, r0
    1d72:	4698      	mov	r8, r3
    1d74:	2300      	movs	r3, #0
    1d76:	4699      	mov	r9, r3
    1d78:	469b      	mov	fp, r3
    1d7a:	e791      	b.n	1ca0 <__aeabi_fdiv+0x38>
    1d7c:	230c      	movs	r3, #12
    1d7e:	4699      	mov	r9, r3
    1d80:	33f3      	adds	r3, #243	; 0xf3
    1d82:	4698      	mov	r8, r3
    1d84:	3bfc      	subs	r3, #252	; 0xfc
    1d86:	469b      	mov	fp, r3
    1d88:	e78a      	b.n	1ca0 <__aeabi_fdiv+0x38>
    1d8a:	2b03      	cmp	r3, #3
    1d8c:	d100      	bne.n	1d90 <__aeabi_fdiv+0x128>
    1d8e:	e0a5      	b.n	1edc <__aeabi_fdiv+0x274>
    1d90:	4655      	mov	r5, sl
    1d92:	2b01      	cmp	r3, #1
    1d94:	d000      	beq.n	1d98 <__aeabi_fdiv+0x130>
    1d96:	e081      	b.n	1e9c <__aeabi_fdiv+0x234>
    1d98:	2301      	movs	r3, #1
    1d9a:	2100      	movs	r1, #0
    1d9c:	2400      	movs	r4, #0
    1d9e:	402b      	ands	r3, r5
    1da0:	0264      	lsls	r4, r4, #9
    1da2:	05c9      	lsls	r1, r1, #23
    1da4:	0a60      	lsrs	r0, r4, #9
    1da6:	07db      	lsls	r3, r3, #31
    1da8:	4308      	orrs	r0, r1
    1daa:	4318      	orrs	r0, r3
    1dac:	b003      	add	sp, #12
    1dae:	bc3c      	pop	{r2, r3, r4, r5}
    1db0:	4690      	mov	r8, r2
    1db2:	4699      	mov	r9, r3
    1db4:	46a2      	mov	sl, r4
    1db6:	46ab      	mov	fp, r5
    1db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1dba:	2480      	movs	r4, #128	; 0x80
    1dbc:	2300      	movs	r3, #0
    1dbe:	03e4      	lsls	r4, r4, #15
    1dc0:	21ff      	movs	r1, #255	; 0xff
    1dc2:	e7ed      	b.n	1da0 <__aeabi_fdiv+0x138>
    1dc4:	21ff      	movs	r1, #255	; 0xff
    1dc6:	2400      	movs	r4, #0
    1dc8:	e7ea      	b.n	1da0 <__aeabi_fdiv+0x138>
    1dca:	2301      	movs	r3, #1
    1dcc:	1a59      	subs	r1, r3, r1
    1dce:	291b      	cmp	r1, #27
    1dd0:	dd66      	ble.n	1ea0 <__aeabi_fdiv+0x238>
    1dd2:	9a01      	ldr	r2, [sp, #4]
    1dd4:	4013      	ands	r3, r2
    1dd6:	2100      	movs	r1, #0
    1dd8:	2400      	movs	r4, #0
    1dda:	e7e1      	b.n	1da0 <__aeabi_fdiv+0x138>
    1ddc:	2380      	movs	r3, #128	; 0x80
    1dde:	03db      	lsls	r3, r3, #15
    1de0:	421c      	tst	r4, r3
    1de2:	d038      	beq.n	1e56 <__aeabi_fdiv+0x1ee>
    1de4:	421d      	tst	r5, r3
    1de6:	d051      	beq.n	1e8c <__aeabi_fdiv+0x224>
    1de8:	431c      	orrs	r4, r3
    1dea:	0264      	lsls	r4, r4, #9
    1dec:	0a64      	lsrs	r4, r4, #9
    1dee:	0033      	movs	r3, r6
    1df0:	21ff      	movs	r1, #255	; 0xff
    1df2:	e7d5      	b.n	1da0 <__aeabi_fdiv+0x138>
    1df4:	0163      	lsls	r3, r4, #5
    1df6:	016c      	lsls	r4, r5, #5
    1df8:	42a3      	cmp	r3, r4
    1dfa:	d23b      	bcs.n	1e74 <__aeabi_fdiv+0x20c>
    1dfc:	261b      	movs	r6, #27
    1dfe:	2100      	movs	r1, #0
    1e00:	3801      	subs	r0, #1
    1e02:	2501      	movs	r5, #1
    1e04:	001f      	movs	r7, r3
    1e06:	0049      	lsls	r1, r1, #1
    1e08:	005b      	lsls	r3, r3, #1
    1e0a:	2f00      	cmp	r7, #0
    1e0c:	db01      	blt.n	1e12 <__aeabi_fdiv+0x1aa>
    1e0e:	429c      	cmp	r4, r3
    1e10:	d801      	bhi.n	1e16 <__aeabi_fdiv+0x1ae>
    1e12:	1b1b      	subs	r3, r3, r4
    1e14:	4329      	orrs	r1, r5
    1e16:	3e01      	subs	r6, #1
    1e18:	2e00      	cmp	r6, #0
    1e1a:	d1f3      	bne.n	1e04 <__aeabi_fdiv+0x19c>
    1e1c:	001c      	movs	r4, r3
    1e1e:	1e63      	subs	r3, r4, #1
    1e20:	419c      	sbcs	r4, r3
    1e22:	430c      	orrs	r4, r1
    1e24:	0001      	movs	r1, r0
    1e26:	317f      	adds	r1, #127	; 0x7f
    1e28:	2900      	cmp	r1, #0
    1e2a:	ddce      	ble.n	1dca <__aeabi_fdiv+0x162>
    1e2c:	0763      	lsls	r3, r4, #29
    1e2e:	d004      	beq.n	1e3a <__aeabi_fdiv+0x1d2>
    1e30:	230f      	movs	r3, #15
    1e32:	4023      	ands	r3, r4
    1e34:	2b04      	cmp	r3, #4
    1e36:	d000      	beq.n	1e3a <__aeabi_fdiv+0x1d2>
    1e38:	3404      	adds	r4, #4
    1e3a:	0123      	lsls	r3, r4, #4
    1e3c:	d503      	bpl.n	1e46 <__aeabi_fdiv+0x1de>
    1e3e:	0001      	movs	r1, r0
    1e40:	4b2c      	ldr	r3, [pc, #176]	; (1ef4 <__aeabi_fdiv+0x28c>)
    1e42:	3180      	adds	r1, #128	; 0x80
    1e44:	401c      	ands	r4, r3
    1e46:	29fe      	cmp	r1, #254	; 0xfe
    1e48:	dd0d      	ble.n	1e66 <__aeabi_fdiv+0x1fe>
    1e4a:	2301      	movs	r3, #1
    1e4c:	9a01      	ldr	r2, [sp, #4]
    1e4e:	21ff      	movs	r1, #255	; 0xff
    1e50:	4013      	ands	r3, r2
    1e52:	2400      	movs	r4, #0
    1e54:	e7a4      	b.n	1da0 <__aeabi_fdiv+0x138>
    1e56:	2380      	movs	r3, #128	; 0x80
    1e58:	03db      	lsls	r3, r3, #15
    1e5a:	431c      	orrs	r4, r3
    1e5c:	0264      	lsls	r4, r4, #9
    1e5e:	0a64      	lsrs	r4, r4, #9
    1e60:	0033      	movs	r3, r6
    1e62:	21ff      	movs	r1, #255	; 0xff
    1e64:	e79c      	b.n	1da0 <__aeabi_fdiv+0x138>
    1e66:	2301      	movs	r3, #1
    1e68:	9a01      	ldr	r2, [sp, #4]
    1e6a:	01a4      	lsls	r4, r4, #6
    1e6c:	0a64      	lsrs	r4, r4, #9
    1e6e:	b2c9      	uxtb	r1, r1
    1e70:	4013      	ands	r3, r2
    1e72:	e795      	b.n	1da0 <__aeabi_fdiv+0x138>
    1e74:	1b1b      	subs	r3, r3, r4
    1e76:	261a      	movs	r6, #26
    1e78:	2101      	movs	r1, #1
    1e7a:	e7c2      	b.n	1e02 <__aeabi_fdiv+0x19a>
    1e7c:	9b00      	ldr	r3, [sp, #0]
    1e7e:	468b      	mov	fp, r1
    1e80:	469a      	mov	sl, r3
    1e82:	2400      	movs	r4, #0
    1e84:	e74c      	b.n	1d20 <__aeabi_fdiv+0xb8>
    1e86:	0263      	lsls	r3, r4, #9
    1e88:	d5e5      	bpl.n	1e56 <__aeabi_fdiv+0x1ee>
    1e8a:	2500      	movs	r5, #0
    1e8c:	2480      	movs	r4, #128	; 0x80
    1e8e:	03e4      	lsls	r4, r4, #15
    1e90:	432c      	orrs	r4, r5
    1e92:	0264      	lsls	r4, r4, #9
    1e94:	0a64      	lsrs	r4, r4, #9
    1e96:	9b00      	ldr	r3, [sp, #0]
    1e98:	21ff      	movs	r1, #255	; 0xff
    1e9a:	e781      	b.n	1da0 <__aeabi_fdiv+0x138>
    1e9c:	9501      	str	r5, [sp, #4]
    1e9e:	e7c1      	b.n	1e24 <__aeabi_fdiv+0x1bc>
    1ea0:	0023      	movs	r3, r4
    1ea2:	2020      	movs	r0, #32
    1ea4:	40cb      	lsrs	r3, r1
    1ea6:	1a41      	subs	r1, r0, r1
    1ea8:	408c      	lsls	r4, r1
    1eaa:	1e61      	subs	r1, r4, #1
    1eac:	418c      	sbcs	r4, r1
    1eae:	431c      	orrs	r4, r3
    1eb0:	0763      	lsls	r3, r4, #29
    1eb2:	d004      	beq.n	1ebe <__aeabi_fdiv+0x256>
    1eb4:	230f      	movs	r3, #15
    1eb6:	4023      	ands	r3, r4
    1eb8:	2b04      	cmp	r3, #4
    1eba:	d000      	beq.n	1ebe <__aeabi_fdiv+0x256>
    1ebc:	3404      	adds	r4, #4
    1ebe:	0163      	lsls	r3, r4, #5
    1ec0:	d505      	bpl.n	1ece <__aeabi_fdiv+0x266>
    1ec2:	2301      	movs	r3, #1
    1ec4:	9a01      	ldr	r2, [sp, #4]
    1ec6:	2101      	movs	r1, #1
    1ec8:	4013      	ands	r3, r2
    1eca:	2400      	movs	r4, #0
    1ecc:	e768      	b.n	1da0 <__aeabi_fdiv+0x138>
    1ece:	2301      	movs	r3, #1
    1ed0:	9a01      	ldr	r2, [sp, #4]
    1ed2:	01a4      	lsls	r4, r4, #6
    1ed4:	0a64      	lsrs	r4, r4, #9
    1ed6:	4013      	ands	r3, r2
    1ed8:	2100      	movs	r1, #0
    1eda:	e761      	b.n	1da0 <__aeabi_fdiv+0x138>
    1edc:	2380      	movs	r3, #128	; 0x80
    1ede:	03db      	lsls	r3, r3, #15
    1ee0:	431c      	orrs	r4, r3
    1ee2:	0264      	lsls	r4, r4, #9
    1ee4:	0a64      	lsrs	r4, r4, #9
    1ee6:	4653      	mov	r3, sl
    1ee8:	21ff      	movs	r1, #255	; 0xff
    1eea:	e759      	b.n	1da0 <__aeabi_fdiv+0x138>
    1eec:	00005c04 	.word	0x00005c04
    1ef0:	00005c44 	.word	0x00005c44
    1ef4:	f7ffffff 	.word	0xf7ffffff

00001ef8 <__aeabi_fmul>:
    1ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1efa:	4657      	mov	r7, sl
    1efc:	464e      	mov	r6, r9
    1efe:	4645      	mov	r5, r8
    1f00:	46de      	mov	lr, fp
    1f02:	b5e0      	push	{r5, r6, r7, lr}
    1f04:	0247      	lsls	r7, r0, #9
    1f06:	0046      	lsls	r6, r0, #1
    1f08:	4688      	mov	r8, r1
    1f0a:	0a7f      	lsrs	r7, r7, #9
    1f0c:	0e36      	lsrs	r6, r6, #24
    1f0e:	0fc4      	lsrs	r4, r0, #31
    1f10:	2e00      	cmp	r6, #0
    1f12:	d047      	beq.n	1fa4 <__aeabi_fmul+0xac>
    1f14:	2eff      	cmp	r6, #255	; 0xff
    1f16:	d024      	beq.n	1f62 <__aeabi_fmul+0x6a>
    1f18:	00fb      	lsls	r3, r7, #3
    1f1a:	2780      	movs	r7, #128	; 0x80
    1f1c:	04ff      	lsls	r7, r7, #19
    1f1e:	431f      	orrs	r7, r3
    1f20:	2300      	movs	r3, #0
    1f22:	4699      	mov	r9, r3
    1f24:	469a      	mov	sl, r3
    1f26:	3e7f      	subs	r6, #127	; 0x7f
    1f28:	4643      	mov	r3, r8
    1f2a:	025d      	lsls	r5, r3, #9
    1f2c:	0058      	lsls	r0, r3, #1
    1f2e:	0fdb      	lsrs	r3, r3, #31
    1f30:	0a6d      	lsrs	r5, r5, #9
    1f32:	0e00      	lsrs	r0, r0, #24
    1f34:	4698      	mov	r8, r3
    1f36:	d043      	beq.n	1fc0 <__aeabi_fmul+0xc8>
    1f38:	28ff      	cmp	r0, #255	; 0xff
    1f3a:	d03b      	beq.n	1fb4 <__aeabi_fmul+0xbc>
    1f3c:	00eb      	lsls	r3, r5, #3
    1f3e:	2580      	movs	r5, #128	; 0x80
    1f40:	2200      	movs	r2, #0
    1f42:	04ed      	lsls	r5, r5, #19
    1f44:	431d      	orrs	r5, r3
    1f46:	387f      	subs	r0, #127	; 0x7f
    1f48:	1836      	adds	r6, r6, r0
    1f4a:	1c73      	adds	r3, r6, #1
    1f4c:	4641      	mov	r1, r8
    1f4e:	469b      	mov	fp, r3
    1f50:	464b      	mov	r3, r9
    1f52:	4061      	eors	r1, r4
    1f54:	4313      	orrs	r3, r2
    1f56:	2b0f      	cmp	r3, #15
    1f58:	d864      	bhi.n	2024 <STACK_SIZE+0x24>
    1f5a:	4875      	ldr	r0, [pc, #468]	; (2130 <STACK_SIZE+0x130>)
    1f5c:	009b      	lsls	r3, r3, #2
    1f5e:	58c3      	ldr	r3, [r0, r3]
    1f60:	469f      	mov	pc, r3
    1f62:	2f00      	cmp	r7, #0
    1f64:	d142      	bne.n	1fec <__aeabi_fmul+0xf4>
    1f66:	2308      	movs	r3, #8
    1f68:	4699      	mov	r9, r3
    1f6a:	3b06      	subs	r3, #6
    1f6c:	26ff      	movs	r6, #255	; 0xff
    1f6e:	469a      	mov	sl, r3
    1f70:	e7da      	b.n	1f28 <__aeabi_fmul+0x30>
    1f72:	4641      	mov	r1, r8
    1f74:	2a02      	cmp	r2, #2
    1f76:	d028      	beq.n	1fca <__aeabi_fmul+0xd2>
    1f78:	2a03      	cmp	r2, #3
    1f7a:	d100      	bne.n	1f7e <__aeabi_fmul+0x86>
    1f7c:	e0ce      	b.n	211c <STACK_SIZE+0x11c>
    1f7e:	2a01      	cmp	r2, #1
    1f80:	d000      	beq.n	1f84 <__aeabi_fmul+0x8c>
    1f82:	e0ac      	b.n	20de <STACK_SIZE+0xde>
    1f84:	4011      	ands	r1, r2
    1f86:	2000      	movs	r0, #0
    1f88:	2200      	movs	r2, #0
    1f8a:	b2cc      	uxtb	r4, r1
    1f8c:	0240      	lsls	r0, r0, #9
    1f8e:	05d2      	lsls	r2, r2, #23
    1f90:	0a40      	lsrs	r0, r0, #9
    1f92:	07e4      	lsls	r4, r4, #31
    1f94:	4310      	orrs	r0, r2
    1f96:	4320      	orrs	r0, r4
    1f98:	bc3c      	pop	{r2, r3, r4, r5}
    1f9a:	4690      	mov	r8, r2
    1f9c:	4699      	mov	r9, r3
    1f9e:	46a2      	mov	sl, r4
    1fa0:	46ab      	mov	fp, r5
    1fa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fa4:	2f00      	cmp	r7, #0
    1fa6:	d115      	bne.n	1fd4 <__aeabi_fmul+0xdc>
    1fa8:	2304      	movs	r3, #4
    1faa:	4699      	mov	r9, r3
    1fac:	3b03      	subs	r3, #3
    1fae:	2600      	movs	r6, #0
    1fb0:	469a      	mov	sl, r3
    1fb2:	e7b9      	b.n	1f28 <__aeabi_fmul+0x30>
    1fb4:	20ff      	movs	r0, #255	; 0xff
    1fb6:	2202      	movs	r2, #2
    1fb8:	2d00      	cmp	r5, #0
    1fba:	d0c5      	beq.n	1f48 <__aeabi_fmul+0x50>
    1fbc:	2203      	movs	r2, #3
    1fbe:	e7c3      	b.n	1f48 <__aeabi_fmul+0x50>
    1fc0:	2d00      	cmp	r5, #0
    1fc2:	d119      	bne.n	1ff8 <__aeabi_fmul+0x100>
    1fc4:	2000      	movs	r0, #0
    1fc6:	2201      	movs	r2, #1
    1fc8:	e7be      	b.n	1f48 <__aeabi_fmul+0x50>
    1fca:	2401      	movs	r4, #1
    1fcc:	22ff      	movs	r2, #255	; 0xff
    1fce:	400c      	ands	r4, r1
    1fd0:	2000      	movs	r0, #0
    1fd2:	e7db      	b.n	1f8c <__aeabi_fmul+0x94>
    1fd4:	0038      	movs	r0, r7
    1fd6:	f001 fcf3 	bl	39c0 <__clzsi2>
    1fda:	2676      	movs	r6, #118	; 0x76
    1fdc:	1f43      	subs	r3, r0, #5
    1fde:	409f      	lsls	r7, r3
    1fe0:	2300      	movs	r3, #0
    1fe2:	4276      	negs	r6, r6
    1fe4:	1a36      	subs	r6, r6, r0
    1fe6:	4699      	mov	r9, r3
    1fe8:	469a      	mov	sl, r3
    1fea:	e79d      	b.n	1f28 <__aeabi_fmul+0x30>
    1fec:	230c      	movs	r3, #12
    1fee:	4699      	mov	r9, r3
    1ff0:	3b09      	subs	r3, #9
    1ff2:	26ff      	movs	r6, #255	; 0xff
    1ff4:	469a      	mov	sl, r3
    1ff6:	e797      	b.n	1f28 <__aeabi_fmul+0x30>
    1ff8:	0028      	movs	r0, r5
    1ffa:	f001 fce1 	bl	39c0 <__clzsi2>
    1ffe:	1f43      	subs	r3, r0, #5
    2000:	409d      	lsls	r5, r3
    2002:	2376      	movs	r3, #118	; 0x76
    2004:	425b      	negs	r3, r3
    2006:	1a18      	subs	r0, r3, r0
    2008:	2200      	movs	r2, #0
    200a:	e79d      	b.n	1f48 <__aeabi_fmul+0x50>
    200c:	2080      	movs	r0, #128	; 0x80
    200e:	2400      	movs	r4, #0
    2010:	03c0      	lsls	r0, r0, #15
    2012:	22ff      	movs	r2, #255	; 0xff
    2014:	e7ba      	b.n	1f8c <__aeabi_fmul+0x94>
    2016:	003d      	movs	r5, r7
    2018:	4652      	mov	r2, sl
    201a:	e7ab      	b.n	1f74 <__aeabi_fmul+0x7c>
    201c:	003d      	movs	r5, r7
    201e:	0021      	movs	r1, r4
    2020:	4652      	mov	r2, sl
    2022:	e7a7      	b.n	1f74 <__aeabi_fmul+0x7c>
    2024:	0c3b      	lsrs	r3, r7, #16
    2026:	469c      	mov	ip, r3
    2028:	042a      	lsls	r2, r5, #16
    202a:	0c12      	lsrs	r2, r2, #16
    202c:	0c2b      	lsrs	r3, r5, #16
    202e:	0014      	movs	r4, r2
    2030:	4660      	mov	r0, ip
    2032:	4665      	mov	r5, ip
    2034:	043f      	lsls	r7, r7, #16
    2036:	0c3f      	lsrs	r7, r7, #16
    2038:	437c      	muls	r4, r7
    203a:	4342      	muls	r2, r0
    203c:	435d      	muls	r5, r3
    203e:	437b      	muls	r3, r7
    2040:	0c27      	lsrs	r7, r4, #16
    2042:	189b      	adds	r3, r3, r2
    2044:	18ff      	adds	r7, r7, r3
    2046:	42ba      	cmp	r2, r7
    2048:	d903      	bls.n	2052 <STACK_SIZE+0x52>
    204a:	2380      	movs	r3, #128	; 0x80
    204c:	025b      	lsls	r3, r3, #9
    204e:	469c      	mov	ip, r3
    2050:	4465      	add	r5, ip
    2052:	0424      	lsls	r4, r4, #16
    2054:	043a      	lsls	r2, r7, #16
    2056:	0c24      	lsrs	r4, r4, #16
    2058:	1912      	adds	r2, r2, r4
    205a:	0193      	lsls	r3, r2, #6
    205c:	1e5c      	subs	r4, r3, #1
    205e:	41a3      	sbcs	r3, r4
    2060:	0c3f      	lsrs	r7, r7, #16
    2062:	0e92      	lsrs	r2, r2, #26
    2064:	197d      	adds	r5, r7, r5
    2066:	431a      	orrs	r2, r3
    2068:	01ad      	lsls	r5, r5, #6
    206a:	4315      	orrs	r5, r2
    206c:	012b      	lsls	r3, r5, #4
    206e:	d504      	bpl.n	207a <STACK_SIZE+0x7a>
    2070:	2301      	movs	r3, #1
    2072:	465e      	mov	r6, fp
    2074:	086a      	lsrs	r2, r5, #1
    2076:	401d      	ands	r5, r3
    2078:	4315      	orrs	r5, r2
    207a:	0032      	movs	r2, r6
    207c:	327f      	adds	r2, #127	; 0x7f
    207e:	2a00      	cmp	r2, #0
    2080:	dd25      	ble.n	20ce <STACK_SIZE+0xce>
    2082:	076b      	lsls	r3, r5, #29
    2084:	d004      	beq.n	2090 <STACK_SIZE+0x90>
    2086:	230f      	movs	r3, #15
    2088:	402b      	ands	r3, r5
    208a:	2b04      	cmp	r3, #4
    208c:	d000      	beq.n	2090 <STACK_SIZE+0x90>
    208e:	3504      	adds	r5, #4
    2090:	012b      	lsls	r3, r5, #4
    2092:	d503      	bpl.n	209c <STACK_SIZE+0x9c>
    2094:	0032      	movs	r2, r6
    2096:	4b27      	ldr	r3, [pc, #156]	; (2134 <STACK_SIZE+0x134>)
    2098:	3280      	adds	r2, #128	; 0x80
    209a:	401d      	ands	r5, r3
    209c:	2afe      	cmp	r2, #254	; 0xfe
    209e:	dc94      	bgt.n	1fca <__aeabi_fmul+0xd2>
    20a0:	2401      	movs	r4, #1
    20a2:	01a8      	lsls	r0, r5, #6
    20a4:	0a40      	lsrs	r0, r0, #9
    20a6:	b2d2      	uxtb	r2, r2
    20a8:	400c      	ands	r4, r1
    20aa:	e76f      	b.n	1f8c <__aeabi_fmul+0x94>
    20ac:	2080      	movs	r0, #128	; 0x80
    20ae:	03c0      	lsls	r0, r0, #15
    20b0:	4207      	tst	r7, r0
    20b2:	d007      	beq.n	20c4 <STACK_SIZE+0xc4>
    20b4:	4205      	tst	r5, r0
    20b6:	d105      	bne.n	20c4 <STACK_SIZE+0xc4>
    20b8:	4328      	orrs	r0, r5
    20ba:	0240      	lsls	r0, r0, #9
    20bc:	0a40      	lsrs	r0, r0, #9
    20be:	4644      	mov	r4, r8
    20c0:	22ff      	movs	r2, #255	; 0xff
    20c2:	e763      	b.n	1f8c <__aeabi_fmul+0x94>
    20c4:	4338      	orrs	r0, r7
    20c6:	0240      	lsls	r0, r0, #9
    20c8:	0a40      	lsrs	r0, r0, #9
    20ca:	22ff      	movs	r2, #255	; 0xff
    20cc:	e75e      	b.n	1f8c <__aeabi_fmul+0x94>
    20ce:	2401      	movs	r4, #1
    20d0:	1aa3      	subs	r3, r4, r2
    20d2:	2b1b      	cmp	r3, #27
    20d4:	dd05      	ble.n	20e2 <STACK_SIZE+0xe2>
    20d6:	400c      	ands	r4, r1
    20d8:	2200      	movs	r2, #0
    20da:	2000      	movs	r0, #0
    20dc:	e756      	b.n	1f8c <__aeabi_fmul+0x94>
    20de:	465e      	mov	r6, fp
    20e0:	e7cb      	b.n	207a <STACK_SIZE+0x7a>
    20e2:	002a      	movs	r2, r5
    20e4:	2020      	movs	r0, #32
    20e6:	40da      	lsrs	r2, r3
    20e8:	1ac3      	subs	r3, r0, r3
    20ea:	409d      	lsls	r5, r3
    20ec:	002b      	movs	r3, r5
    20ee:	1e5d      	subs	r5, r3, #1
    20f0:	41ab      	sbcs	r3, r5
    20f2:	4313      	orrs	r3, r2
    20f4:	075a      	lsls	r2, r3, #29
    20f6:	d004      	beq.n	2102 <STACK_SIZE+0x102>
    20f8:	220f      	movs	r2, #15
    20fa:	401a      	ands	r2, r3
    20fc:	2a04      	cmp	r2, #4
    20fe:	d000      	beq.n	2102 <STACK_SIZE+0x102>
    2100:	3304      	adds	r3, #4
    2102:	015a      	lsls	r2, r3, #5
    2104:	d504      	bpl.n	2110 <STACK_SIZE+0x110>
    2106:	2401      	movs	r4, #1
    2108:	2201      	movs	r2, #1
    210a:	400c      	ands	r4, r1
    210c:	2000      	movs	r0, #0
    210e:	e73d      	b.n	1f8c <__aeabi_fmul+0x94>
    2110:	2401      	movs	r4, #1
    2112:	019b      	lsls	r3, r3, #6
    2114:	0a58      	lsrs	r0, r3, #9
    2116:	400c      	ands	r4, r1
    2118:	2200      	movs	r2, #0
    211a:	e737      	b.n	1f8c <__aeabi_fmul+0x94>
    211c:	2080      	movs	r0, #128	; 0x80
    211e:	2401      	movs	r4, #1
    2120:	03c0      	lsls	r0, r0, #15
    2122:	4328      	orrs	r0, r5
    2124:	0240      	lsls	r0, r0, #9
    2126:	0a40      	lsrs	r0, r0, #9
    2128:	400c      	ands	r4, r1
    212a:	22ff      	movs	r2, #255	; 0xff
    212c:	e72e      	b.n	1f8c <__aeabi_fmul+0x94>
    212e:	46c0      	nop			; (mov r8, r8)
    2130:	00005c84 	.word	0x00005c84
    2134:	f7ffffff 	.word	0xf7ffffff

00002138 <__aeabi_fsub>:
    2138:	b5f0      	push	{r4, r5, r6, r7, lr}
    213a:	464f      	mov	r7, r9
    213c:	46d6      	mov	lr, sl
    213e:	4646      	mov	r6, r8
    2140:	0044      	lsls	r4, r0, #1
    2142:	b5c0      	push	{r6, r7, lr}
    2144:	0fc2      	lsrs	r2, r0, #31
    2146:	0247      	lsls	r7, r0, #9
    2148:	0248      	lsls	r0, r1, #9
    214a:	0a40      	lsrs	r0, r0, #9
    214c:	4684      	mov	ip, r0
    214e:	4666      	mov	r6, ip
    2150:	0a7b      	lsrs	r3, r7, #9
    2152:	0048      	lsls	r0, r1, #1
    2154:	0fc9      	lsrs	r1, r1, #31
    2156:	469a      	mov	sl, r3
    2158:	0e24      	lsrs	r4, r4, #24
    215a:	0015      	movs	r5, r2
    215c:	00db      	lsls	r3, r3, #3
    215e:	0e00      	lsrs	r0, r0, #24
    2160:	4689      	mov	r9, r1
    2162:	00f6      	lsls	r6, r6, #3
    2164:	28ff      	cmp	r0, #255	; 0xff
    2166:	d100      	bne.n	216a <__aeabi_fsub+0x32>
    2168:	e08f      	b.n	228a <__aeabi_fsub+0x152>
    216a:	2101      	movs	r1, #1
    216c:	464f      	mov	r7, r9
    216e:	404f      	eors	r7, r1
    2170:	0039      	movs	r1, r7
    2172:	4291      	cmp	r1, r2
    2174:	d066      	beq.n	2244 <__aeabi_fsub+0x10c>
    2176:	1a22      	subs	r2, r4, r0
    2178:	2a00      	cmp	r2, #0
    217a:	dc00      	bgt.n	217e <__aeabi_fsub+0x46>
    217c:	e09d      	b.n	22ba <__aeabi_fsub+0x182>
    217e:	2800      	cmp	r0, #0
    2180:	d13d      	bne.n	21fe <__aeabi_fsub+0xc6>
    2182:	2e00      	cmp	r6, #0
    2184:	d100      	bne.n	2188 <__aeabi_fsub+0x50>
    2186:	e08b      	b.n	22a0 <__aeabi_fsub+0x168>
    2188:	1e51      	subs	r1, r2, #1
    218a:	2900      	cmp	r1, #0
    218c:	d000      	beq.n	2190 <__aeabi_fsub+0x58>
    218e:	e0b5      	b.n	22fc <__aeabi_fsub+0x1c4>
    2190:	2401      	movs	r4, #1
    2192:	1b9b      	subs	r3, r3, r6
    2194:	015a      	lsls	r2, r3, #5
    2196:	d544      	bpl.n	2222 <__aeabi_fsub+0xea>
    2198:	019b      	lsls	r3, r3, #6
    219a:	099f      	lsrs	r7, r3, #6
    219c:	0038      	movs	r0, r7
    219e:	f001 fc0f 	bl	39c0 <__clzsi2>
    21a2:	3805      	subs	r0, #5
    21a4:	4087      	lsls	r7, r0
    21a6:	4284      	cmp	r4, r0
    21a8:	dd00      	ble.n	21ac <__aeabi_fsub+0x74>
    21aa:	e096      	b.n	22da <__aeabi_fsub+0x1a2>
    21ac:	1b04      	subs	r4, r0, r4
    21ae:	003a      	movs	r2, r7
    21b0:	2020      	movs	r0, #32
    21b2:	3401      	adds	r4, #1
    21b4:	40e2      	lsrs	r2, r4
    21b6:	1b04      	subs	r4, r0, r4
    21b8:	40a7      	lsls	r7, r4
    21ba:	003b      	movs	r3, r7
    21bc:	1e5f      	subs	r7, r3, #1
    21be:	41bb      	sbcs	r3, r7
    21c0:	2400      	movs	r4, #0
    21c2:	4313      	orrs	r3, r2
    21c4:	075a      	lsls	r2, r3, #29
    21c6:	d004      	beq.n	21d2 <__aeabi_fsub+0x9a>
    21c8:	220f      	movs	r2, #15
    21ca:	401a      	ands	r2, r3
    21cc:	2a04      	cmp	r2, #4
    21ce:	d000      	beq.n	21d2 <__aeabi_fsub+0x9a>
    21d0:	3304      	adds	r3, #4
    21d2:	015a      	lsls	r2, r3, #5
    21d4:	d527      	bpl.n	2226 <__aeabi_fsub+0xee>
    21d6:	3401      	adds	r4, #1
    21d8:	2cff      	cmp	r4, #255	; 0xff
    21da:	d100      	bne.n	21de <__aeabi_fsub+0xa6>
    21dc:	e079      	b.n	22d2 <__aeabi_fsub+0x19a>
    21de:	2201      	movs	r2, #1
    21e0:	019b      	lsls	r3, r3, #6
    21e2:	0a5b      	lsrs	r3, r3, #9
    21e4:	b2e4      	uxtb	r4, r4
    21e6:	402a      	ands	r2, r5
    21e8:	025b      	lsls	r3, r3, #9
    21ea:	05e4      	lsls	r4, r4, #23
    21ec:	0a58      	lsrs	r0, r3, #9
    21ee:	07d2      	lsls	r2, r2, #31
    21f0:	4320      	orrs	r0, r4
    21f2:	4310      	orrs	r0, r2
    21f4:	bc1c      	pop	{r2, r3, r4}
    21f6:	4690      	mov	r8, r2
    21f8:	4699      	mov	r9, r3
    21fa:	46a2      	mov	sl, r4
    21fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21fe:	2cff      	cmp	r4, #255	; 0xff
    2200:	d0e0      	beq.n	21c4 <__aeabi_fsub+0x8c>
    2202:	2180      	movs	r1, #128	; 0x80
    2204:	04c9      	lsls	r1, r1, #19
    2206:	430e      	orrs	r6, r1
    2208:	2a1b      	cmp	r2, #27
    220a:	dc7b      	bgt.n	2304 <__aeabi_fsub+0x1cc>
    220c:	0031      	movs	r1, r6
    220e:	2020      	movs	r0, #32
    2210:	40d1      	lsrs	r1, r2
    2212:	1a82      	subs	r2, r0, r2
    2214:	4096      	lsls	r6, r2
    2216:	1e72      	subs	r2, r6, #1
    2218:	4196      	sbcs	r6, r2
    221a:	430e      	orrs	r6, r1
    221c:	1b9b      	subs	r3, r3, r6
    221e:	015a      	lsls	r2, r3, #5
    2220:	d4ba      	bmi.n	2198 <__aeabi_fsub+0x60>
    2222:	075a      	lsls	r2, r3, #29
    2224:	d1d0      	bne.n	21c8 <__aeabi_fsub+0x90>
    2226:	2201      	movs	r2, #1
    2228:	08df      	lsrs	r7, r3, #3
    222a:	402a      	ands	r2, r5
    222c:	2cff      	cmp	r4, #255	; 0xff
    222e:	d133      	bne.n	2298 <__aeabi_fsub+0x160>
    2230:	2f00      	cmp	r7, #0
    2232:	d100      	bne.n	2236 <__aeabi_fsub+0xfe>
    2234:	e0a8      	b.n	2388 <__aeabi_fsub+0x250>
    2236:	2380      	movs	r3, #128	; 0x80
    2238:	03db      	lsls	r3, r3, #15
    223a:	433b      	orrs	r3, r7
    223c:	025b      	lsls	r3, r3, #9
    223e:	0a5b      	lsrs	r3, r3, #9
    2240:	24ff      	movs	r4, #255	; 0xff
    2242:	e7d1      	b.n	21e8 <__aeabi_fsub+0xb0>
    2244:	1a21      	subs	r1, r4, r0
    2246:	2900      	cmp	r1, #0
    2248:	dd4c      	ble.n	22e4 <__aeabi_fsub+0x1ac>
    224a:	2800      	cmp	r0, #0
    224c:	d02a      	beq.n	22a4 <__aeabi_fsub+0x16c>
    224e:	2cff      	cmp	r4, #255	; 0xff
    2250:	d0b8      	beq.n	21c4 <__aeabi_fsub+0x8c>
    2252:	2080      	movs	r0, #128	; 0x80
    2254:	04c0      	lsls	r0, r0, #19
    2256:	4306      	orrs	r6, r0
    2258:	291b      	cmp	r1, #27
    225a:	dd00      	ble.n	225e <__aeabi_fsub+0x126>
    225c:	e0af      	b.n	23be <__aeabi_fsub+0x286>
    225e:	0030      	movs	r0, r6
    2260:	2720      	movs	r7, #32
    2262:	40c8      	lsrs	r0, r1
    2264:	1a79      	subs	r1, r7, r1
    2266:	408e      	lsls	r6, r1
    2268:	1e71      	subs	r1, r6, #1
    226a:	418e      	sbcs	r6, r1
    226c:	4306      	orrs	r6, r0
    226e:	199b      	adds	r3, r3, r6
    2270:	0159      	lsls	r1, r3, #5
    2272:	d5d6      	bpl.n	2222 <__aeabi_fsub+0xea>
    2274:	3401      	adds	r4, #1
    2276:	2cff      	cmp	r4, #255	; 0xff
    2278:	d100      	bne.n	227c <__aeabi_fsub+0x144>
    227a:	e085      	b.n	2388 <__aeabi_fsub+0x250>
    227c:	2201      	movs	r2, #1
    227e:	497a      	ldr	r1, [pc, #488]	; (2468 <__aeabi_fsub+0x330>)
    2280:	401a      	ands	r2, r3
    2282:	085b      	lsrs	r3, r3, #1
    2284:	400b      	ands	r3, r1
    2286:	4313      	orrs	r3, r2
    2288:	e79c      	b.n	21c4 <__aeabi_fsub+0x8c>
    228a:	2e00      	cmp	r6, #0
    228c:	d000      	beq.n	2290 <__aeabi_fsub+0x158>
    228e:	e770      	b.n	2172 <__aeabi_fsub+0x3a>
    2290:	e76b      	b.n	216a <__aeabi_fsub+0x32>
    2292:	1e3b      	subs	r3, r7, #0
    2294:	d1c5      	bne.n	2222 <__aeabi_fsub+0xea>
    2296:	2200      	movs	r2, #0
    2298:	027b      	lsls	r3, r7, #9
    229a:	0a5b      	lsrs	r3, r3, #9
    229c:	b2e4      	uxtb	r4, r4
    229e:	e7a3      	b.n	21e8 <__aeabi_fsub+0xb0>
    22a0:	0014      	movs	r4, r2
    22a2:	e78f      	b.n	21c4 <__aeabi_fsub+0x8c>
    22a4:	2e00      	cmp	r6, #0
    22a6:	d04d      	beq.n	2344 <__aeabi_fsub+0x20c>
    22a8:	1e48      	subs	r0, r1, #1
    22aa:	2800      	cmp	r0, #0
    22ac:	d157      	bne.n	235e <__aeabi_fsub+0x226>
    22ae:	199b      	adds	r3, r3, r6
    22b0:	2401      	movs	r4, #1
    22b2:	015a      	lsls	r2, r3, #5
    22b4:	d5b5      	bpl.n	2222 <__aeabi_fsub+0xea>
    22b6:	2402      	movs	r4, #2
    22b8:	e7e0      	b.n	227c <__aeabi_fsub+0x144>
    22ba:	2a00      	cmp	r2, #0
    22bc:	d125      	bne.n	230a <__aeabi_fsub+0x1d2>
    22be:	1c62      	adds	r2, r4, #1
    22c0:	b2d2      	uxtb	r2, r2
    22c2:	2a01      	cmp	r2, #1
    22c4:	dd72      	ble.n	23ac <__aeabi_fsub+0x274>
    22c6:	1b9f      	subs	r7, r3, r6
    22c8:	017a      	lsls	r2, r7, #5
    22ca:	d535      	bpl.n	2338 <__aeabi_fsub+0x200>
    22cc:	1af7      	subs	r7, r6, r3
    22ce:	000d      	movs	r5, r1
    22d0:	e764      	b.n	219c <__aeabi_fsub+0x64>
    22d2:	2201      	movs	r2, #1
    22d4:	2300      	movs	r3, #0
    22d6:	402a      	ands	r2, r5
    22d8:	e786      	b.n	21e8 <__aeabi_fsub+0xb0>
    22da:	003b      	movs	r3, r7
    22dc:	4a63      	ldr	r2, [pc, #396]	; (246c <__aeabi_fsub+0x334>)
    22de:	1a24      	subs	r4, r4, r0
    22e0:	4013      	ands	r3, r2
    22e2:	e76f      	b.n	21c4 <__aeabi_fsub+0x8c>
    22e4:	2900      	cmp	r1, #0
    22e6:	d16c      	bne.n	23c2 <__aeabi_fsub+0x28a>
    22e8:	1c61      	adds	r1, r4, #1
    22ea:	b2c8      	uxtb	r0, r1
    22ec:	2801      	cmp	r0, #1
    22ee:	dd4e      	ble.n	238e <__aeabi_fsub+0x256>
    22f0:	29ff      	cmp	r1, #255	; 0xff
    22f2:	d049      	beq.n	2388 <__aeabi_fsub+0x250>
    22f4:	199b      	adds	r3, r3, r6
    22f6:	085b      	lsrs	r3, r3, #1
    22f8:	000c      	movs	r4, r1
    22fa:	e763      	b.n	21c4 <__aeabi_fsub+0x8c>
    22fc:	2aff      	cmp	r2, #255	; 0xff
    22fe:	d041      	beq.n	2384 <__aeabi_fsub+0x24c>
    2300:	000a      	movs	r2, r1
    2302:	e781      	b.n	2208 <__aeabi_fsub+0xd0>
    2304:	2601      	movs	r6, #1
    2306:	1b9b      	subs	r3, r3, r6
    2308:	e789      	b.n	221e <__aeabi_fsub+0xe6>
    230a:	2c00      	cmp	r4, #0
    230c:	d01c      	beq.n	2348 <__aeabi_fsub+0x210>
    230e:	28ff      	cmp	r0, #255	; 0xff
    2310:	d021      	beq.n	2356 <__aeabi_fsub+0x21e>
    2312:	2480      	movs	r4, #128	; 0x80
    2314:	04e4      	lsls	r4, r4, #19
    2316:	4252      	negs	r2, r2
    2318:	4323      	orrs	r3, r4
    231a:	2a1b      	cmp	r2, #27
    231c:	dd00      	ble.n	2320 <__aeabi_fsub+0x1e8>
    231e:	e096      	b.n	244e <__aeabi_fsub+0x316>
    2320:	001c      	movs	r4, r3
    2322:	2520      	movs	r5, #32
    2324:	40d4      	lsrs	r4, r2
    2326:	1aaa      	subs	r2, r5, r2
    2328:	4093      	lsls	r3, r2
    232a:	1e5a      	subs	r2, r3, #1
    232c:	4193      	sbcs	r3, r2
    232e:	4323      	orrs	r3, r4
    2330:	1af3      	subs	r3, r6, r3
    2332:	0004      	movs	r4, r0
    2334:	000d      	movs	r5, r1
    2336:	e72d      	b.n	2194 <__aeabi_fsub+0x5c>
    2338:	2f00      	cmp	r7, #0
    233a:	d000      	beq.n	233e <__aeabi_fsub+0x206>
    233c:	e72e      	b.n	219c <__aeabi_fsub+0x64>
    233e:	2200      	movs	r2, #0
    2340:	2400      	movs	r4, #0
    2342:	e7a9      	b.n	2298 <__aeabi_fsub+0x160>
    2344:	000c      	movs	r4, r1
    2346:	e73d      	b.n	21c4 <__aeabi_fsub+0x8c>
    2348:	2b00      	cmp	r3, #0
    234a:	d058      	beq.n	23fe <__aeabi_fsub+0x2c6>
    234c:	43d2      	mvns	r2, r2
    234e:	2a00      	cmp	r2, #0
    2350:	d0ee      	beq.n	2330 <__aeabi_fsub+0x1f8>
    2352:	28ff      	cmp	r0, #255	; 0xff
    2354:	d1e1      	bne.n	231a <__aeabi_fsub+0x1e2>
    2356:	0033      	movs	r3, r6
    2358:	24ff      	movs	r4, #255	; 0xff
    235a:	000d      	movs	r5, r1
    235c:	e732      	b.n	21c4 <__aeabi_fsub+0x8c>
    235e:	29ff      	cmp	r1, #255	; 0xff
    2360:	d010      	beq.n	2384 <__aeabi_fsub+0x24c>
    2362:	0001      	movs	r1, r0
    2364:	e778      	b.n	2258 <__aeabi_fsub+0x120>
    2366:	2b00      	cmp	r3, #0
    2368:	d06e      	beq.n	2448 <__aeabi_fsub+0x310>
    236a:	24ff      	movs	r4, #255	; 0xff
    236c:	2e00      	cmp	r6, #0
    236e:	d100      	bne.n	2372 <__aeabi_fsub+0x23a>
    2370:	e728      	b.n	21c4 <__aeabi_fsub+0x8c>
    2372:	2280      	movs	r2, #128	; 0x80
    2374:	4651      	mov	r1, sl
    2376:	03d2      	lsls	r2, r2, #15
    2378:	4211      	tst	r1, r2
    237a:	d003      	beq.n	2384 <__aeabi_fsub+0x24c>
    237c:	4661      	mov	r1, ip
    237e:	4211      	tst	r1, r2
    2380:	d100      	bne.n	2384 <__aeabi_fsub+0x24c>
    2382:	0033      	movs	r3, r6
    2384:	24ff      	movs	r4, #255	; 0xff
    2386:	e71d      	b.n	21c4 <__aeabi_fsub+0x8c>
    2388:	24ff      	movs	r4, #255	; 0xff
    238a:	2300      	movs	r3, #0
    238c:	e72c      	b.n	21e8 <__aeabi_fsub+0xb0>
    238e:	2c00      	cmp	r4, #0
    2390:	d1e9      	bne.n	2366 <__aeabi_fsub+0x22e>
    2392:	2b00      	cmp	r3, #0
    2394:	d063      	beq.n	245e <__aeabi_fsub+0x326>
    2396:	2e00      	cmp	r6, #0
    2398:	d100      	bne.n	239c <__aeabi_fsub+0x264>
    239a:	e713      	b.n	21c4 <__aeabi_fsub+0x8c>
    239c:	199b      	adds	r3, r3, r6
    239e:	015a      	lsls	r2, r3, #5
    23a0:	d400      	bmi.n	23a4 <__aeabi_fsub+0x26c>
    23a2:	e73e      	b.n	2222 <__aeabi_fsub+0xea>
    23a4:	4a31      	ldr	r2, [pc, #196]	; (246c <__aeabi_fsub+0x334>)
    23a6:	000c      	movs	r4, r1
    23a8:	4013      	ands	r3, r2
    23aa:	e70b      	b.n	21c4 <__aeabi_fsub+0x8c>
    23ac:	2c00      	cmp	r4, #0
    23ae:	d11e      	bne.n	23ee <__aeabi_fsub+0x2b6>
    23b0:	2b00      	cmp	r3, #0
    23b2:	d12f      	bne.n	2414 <__aeabi_fsub+0x2dc>
    23b4:	2e00      	cmp	r6, #0
    23b6:	d04f      	beq.n	2458 <__aeabi_fsub+0x320>
    23b8:	0033      	movs	r3, r6
    23ba:	000d      	movs	r5, r1
    23bc:	e702      	b.n	21c4 <__aeabi_fsub+0x8c>
    23be:	2601      	movs	r6, #1
    23c0:	e755      	b.n	226e <__aeabi_fsub+0x136>
    23c2:	2c00      	cmp	r4, #0
    23c4:	d11f      	bne.n	2406 <__aeabi_fsub+0x2ce>
    23c6:	2b00      	cmp	r3, #0
    23c8:	d043      	beq.n	2452 <__aeabi_fsub+0x31a>
    23ca:	43c9      	mvns	r1, r1
    23cc:	2900      	cmp	r1, #0
    23ce:	d00b      	beq.n	23e8 <__aeabi_fsub+0x2b0>
    23d0:	28ff      	cmp	r0, #255	; 0xff
    23d2:	d039      	beq.n	2448 <__aeabi_fsub+0x310>
    23d4:	291b      	cmp	r1, #27
    23d6:	dc44      	bgt.n	2462 <__aeabi_fsub+0x32a>
    23d8:	001c      	movs	r4, r3
    23da:	2720      	movs	r7, #32
    23dc:	40cc      	lsrs	r4, r1
    23de:	1a79      	subs	r1, r7, r1
    23e0:	408b      	lsls	r3, r1
    23e2:	1e59      	subs	r1, r3, #1
    23e4:	418b      	sbcs	r3, r1
    23e6:	4323      	orrs	r3, r4
    23e8:	199b      	adds	r3, r3, r6
    23ea:	0004      	movs	r4, r0
    23ec:	e740      	b.n	2270 <__aeabi_fsub+0x138>
    23ee:	2b00      	cmp	r3, #0
    23f0:	d11a      	bne.n	2428 <__aeabi_fsub+0x2f0>
    23f2:	2e00      	cmp	r6, #0
    23f4:	d124      	bne.n	2440 <__aeabi_fsub+0x308>
    23f6:	2780      	movs	r7, #128	; 0x80
    23f8:	2200      	movs	r2, #0
    23fa:	03ff      	lsls	r7, r7, #15
    23fc:	e71b      	b.n	2236 <__aeabi_fsub+0xfe>
    23fe:	0033      	movs	r3, r6
    2400:	0004      	movs	r4, r0
    2402:	000d      	movs	r5, r1
    2404:	e6de      	b.n	21c4 <__aeabi_fsub+0x8c>
    2406:	28ff      	cmp	r0, #255	; 0xff
    2408:	d01e      	beq.n	2448 <__aeabi_fsub+0x310>
    240a:	2480      	movs	r4, #128	; 0x80
    240c:	04e4      	lsls	r4, r4, #19
    240e:	4249      	negs	r1, r1
    2410:	4323      	orrs	r3, r4
    2412:	e7df      	b.n	23d4 <__aeabi_fsub+0x29c>
    2414:	2e00      	cmp	r6, #0
    2416:	d100      	bne.n	241a <__aeabi_fsub+0x2e2>
    2418:	e6d4      	b.n	21c4 <__aeabi_fsub+0x8c>
    241a:	1b9f      	subs	r7, r3, r6
    241c:	017a      	lsls	r2, r7, #5
    241e:	d400      	bmi.n	2422 <__aeabi_fsub+0x2ea>
    2420:	e737      	b.n	2292 <__aeabi_fsub+0x15a>
    2422:	1af3      	subs	r3, r6, r3
    2424:	000d      	movs	r5, r1
    2426:	e6cd      	b.n	21c4 <__aeabi_fsub+0x8c>
    2428:	24ff      	movs	r4, #255	; 0xff
    242a:	2e00      	cmp	r6, #0
    242c:	d100      	bne.n	2430 <__aeabi_fsub+0x2f8>
    242e:	e6c9      	b.n	21c4 <__aeabi_fsub+0x8c>
    2430:	2280      	movs	r2, #128	; 0x80
    2432:	4650      	mov	r0, sl
    2434:	03d2      	lsls	r2, r2, #15
    2436:	4210      	tst	r0, r2
    2438:	d0a4      	beq.n	2384 <__aeabi_fsub+0x24c>
    243a:	4660      	mov	r0, ip
    243c:	4210      	tst	r0, r2
    243e:	d1a1      	bne.n	2384 <__aeabi_fsub+0x24c>
    2440:	0033      	movs	r3, r6
    2442:	000d      	movs	r5, r1
    2444:	24ff      	movs	r4, #255	; 0xff
    2446:	e6bd      	b.n	21c4 <__aeabi_fsub+0x8c>
    2448:	0033      	movs	r3, r6
    244a:	24ff      	movs	r4, #255	; 0xff
    244c:	e6ba      	b.n	21c4 <__aeabi_fsub+0x8c>
    244e:	2301      	movs	r3, #1
    2450:	e76e      	b.n	2330 <__aeabi_fsub+0x1f8>
    2452:	0033      	movs	r3, r6
    2454:	0004      	movs	r4, r0
    2456:	e6b5      	b.n	21c4 <__aeabi_fsub+0x8c>
    2458:	2700      	movs	r7, #0
    245a:	2200      	movs	r2, #0
    245c:	e71c      	b.n	2298 <__aeabi_fsub+0x160>
    245e:	0033      	movs	r3, r6
    2460:	e6b0      	b.n	21c4 <__aeabi_fsub+0x8c>
    2462:	2301      	movs	r3, #1
    2464:	e7c0      	b.n	23e8 <__aeabi_fsub+0x2b0>
    2466:	46c0      	nop			; (mov r8, r8)
    2468:	7dffffff 	.word	0x7dffffff
    246c:	fbffffff 	.word	0xfbffffff

00002470 <__aeabi_f2iz>:
    2470:	0241      	lsls	r1, r0, #9
    2472:	0043      	lsls	r3, r0, #1
    2474:	0fc2      	lsrs	r2, r0, #31
    2476:	0a49      	lsrs	r1, r1, #9
    2478:	0e1b      	lsrs	r3, r3, #24
    247a:	2000      	movs	r0, #0
    247c:	2b7e      	cmp	r3, #126	; 0x7e
    247e:	dd0d      	ble.n	249c <__aeabi_f2iz+0x2c>
    2480:	2b9d      	cmp	r3, #157	; 0x9d
    2482:	dc0c      	bgt.n	249e <__aeabi_f2iz+0x2e>
    2484:	2080      	movs	r0, #128	; 0x80
    2486:	0400      	lsls	r0, r0, #16
    2488:	4301      	orrs	r1, r0
    248a:	2b95      	cmp	r3, #149	; 0x95
    248c:	dc0a      	bgt.n	24a4 <__aeabi_f2iz+0x34>
    248e:	2096      	movs	r0, #150	; 0x96
    2490:	1ac3      	subs	r3, r0, r3
    2492:	40d9      	lsrs	r1, r3
    2494:	4248      	negs	r0, r1
    2496:	2a00      	cmp	r2, #0
    2498:	d100      	bne.n	249c <__aeabi_f2iz+0x2c>
    249a:	0008      	movs	r0, r1
    249c:	4770      	bx	lr
    249e:	4b03      	ldr	r3, [pc, #12]	; (24ac <__aeabi_f2iz+0x3c>)
    24a0:	18d0      	adds	r0, r2, r3
    24a2:	e7fb      	b.n	249c <__aeabi_f2iz+0x2c>
    24a4:	3b96      	subs	r3, #150	; 0x96
    24a6:	4099      	lsls	r1, r3
    24a8:	e7f4      	b.n	2494 <__aeabi_f2iz+0x24>
    24aa:	46c0      	nop			; (mov r8, r8)
    24ac:	7fffffff 	.word	0x7fffffff

000024b0 <__aeabi_ui2f>:
    24b0:	b510      	push	{r4, lr}
    24b2:	1e04      	subs	r4, r0, #0
    24b4:	d027      	beq.n	2506 <__aeabi_ui2f+0x56>
    24b6:	f001 fa83 	bl	39c0 <__clzsi2>
    24ba:	239e      	movs	r3, #158	; 0x9e
    24bc:	1a1b      	subs	r3, r3, r0
    24be:	2b96      	cmp	r3, #150	; 0x96
    24c0:	dc0a      	bgt.n	24d8 <__aeabi_ui2f+0x28>
    24c2:	2296      	movs	r2, #150	; 0x96
    24c4:	1ad2      	subs	r2, r2, r3
    24c6:	4094      	lsls	r4, r2
    24c8:	0264      	lsls	r4, r4, #9
    24ca:	0a64      	lsrs	r4, r4, #9
    24cc:	b2db      	uxtb	r3, r3
    24ce:	0264      	lsls	r4, r4, #9
    24d0:	05db      	lsls	r3, r3, #23
    24d2:	0a60      	lsrs	r0, r4, #9
    24d4:	4318      	orrs	r0, r3
    24d6:	bd10      	pop	{r4, pc}
    24d8:	2b99      	cmp	r3, #153	; 0x99
    24da:	dc17      	bgt.n	250c <__aeabi_ui2f+0x5c>
    24dc:	2299      	movs	r2, #153	; 0x99
    24de:	1ad2      	subs	r2, r2, r3
    24e0:	2a00      	cmp	r2, #0
    24e2:	dd27      	ble.n	2534 <__aeabi_ui2f+0x84>
    24e4:	4094      	lsls	r4, r2
    24e6:	0022      	movs	r2, r4
    24e8:	4c13      	ldr	r4, [pc, #76]	; (2538 <__aeabi_ui2f+0x88>)
    24ea:	4014      	ands	r4, r2
    24ec:	0751      	lsls	r1, r2, #29
    24ee:	d004      	beq.n	24fa <__aeabi_ui2f+0x4a>
    24f0:	210f      	movs	r1, #15
    24f2:	400a      	ands	r2, r1
    24f4:	2a04      	cmp	r2, #4
    24f6:	d000      	beq.n	24fa <__aeabi_ui2f+0x4a>
    24f8:	3404      	adds	r4, #4
    24fa:	0162      	lsls	r2, r4, #5
    24fc:	d412      	bmi.n	2524 <__aeabi_ui2f+0x74>
    24fe:	01a4      	lsls	r4, r4, #6
    2500:	0a64      	lsrs	r4, r4, #9
    2502:	b2db      	uxtb	r3, r3
    2504:	e7e3      	b.n	24ce <__aeabi_ui2f+0x1e>
    2506:	2300      	movs	r3, #0
    2508:	2400      	movs	r4, #0
    250a:	e7e0      	b.n	24ce <__aeabi_ui2f+0x1e>
    250c:	22b9      	movs	r2, #185	; 0xb9
    250e:	0021      	movs	r1, r4
    2510:	1ad2      	subs	r2, r2, r3
    2512:	4091      	lsls	r1, r2
    2514:	000a      	movs	r2, r1
    2516:	1e51      	subs	r1, r2, #1
    2518:	418a      	sbcs	r2, r1
    251a:	2105      	movs	r1, #5
    251c:	1a09      	subs	r1, r1, r0
    251e:	40cc      	lsrs	r4, r1
    2520:	4314      	orrs	r4, r2
    2522:	e7db      	b.n	24dc <__aeabi_ui2f+0x2c>
    2524:	4b04      	ldr	r3, [pc, #16]	; (2538 <__aeabi_ui2f+0x88>)
    2526:	401c      	ands	r4, r3
    2528:	239f      	movs	r3, #159	; 0x9f
    252a:	01a4      	lsls	r4, r4, #6
    252c:	1a1b      	subs	r3, r3, r0
    252e:	0a64      	lsrs	r4, r4, #9
    2530:	b2db      	uxtb	r3, r3
    2532:	e7cc      	b.n	24ce <__aeabi_ui2f+0x1e>
    2534:	0022      	movs	r2, r4
    2536:	e7d7      	b.n	24e8 <__aeabi_ui2f+0x38>
    2538:	fbffffff 	.word	0xfbffffff

0000253c <__aeabi_ddiv>:
    253c:	b5f0      	push	{r4, r5, r6, r7, lr}
    253e:	4657      	mov	r7, sl
    2540:	4645      	mov	r5, r8
    2542:	46de      	mov	lr, fp
    2544:	464e      	mov	r6, r9
    2546:	b5e0      	push	{r5, r6, r7, lr}
    2548:	004c      	lsls	r4, r1, #1
    254a:	030e      	lsls	r6, r1, #12
    254c:	b087      	sub	sp, #28
    254e:	4683      	mov	fp, r0
    2550:	4692      	mov	sl, r2
    2552:	001d      	movs	r5, r3
    2554:	4680      	mov	r8, r0
    2556:	0b36      	lsrs	r6, r6, #12
    2558:	0d64      	lsrs	r4, r4, #21
    255a:	0fcf      	lsrs	r7, r1, #31
    255c:	2c00      	cmp	r4, #0
    255e:	d04f      	beq.n	2600 <__aeabi_ddiv+0xc4>
    2560:	4b6f      	ldr	r3, [pc, #444]	; (2720 <__aeabi_ddiv+0x1e4>)
    2562:	429c      	cmp	r4, r3
    2564:	d035      	beq.n	25d2 <__aeabi_ddiv+0x96>
    2566:	2380      	movs	r3, #128	; 0x80
    2568:	0f42      	lsrs	r2, r0, #29
    256a:	041b      	lsls	r3, r3, #16
    256c:	00f6      	lsls	r6, r6, #3
    256e:	4313      	orrs	r3, r2
    2570:	4333      	orrs	r3, r6
    2572:	4699      	mov	r9, r3
    2574:	00c3      	lsls	r3, r0, #3
    2576:	4698      	mov	r8, r3
    2578:	4b6a      	ldr	r3, [pc, #424]	; (2724 <__aeabi_ddiv+0x1e8>)
    257a:	2600      	movs	r6, #0
    257c:	469c      	mov	ip, r3
    257e:	2300      	movs	r3, #0
    2580:	4464      	add	r4, ip
    2582:	9303      	str	r3, [sp, #12]
    2584:	032b      	lsls	r3, r5, #12
    2586:	0b1b      	lsrs	r3, r3, #12
    2588:	469b      	mov	fp, r3
    258a:	006b      	lsls	r3, r5, #1
    258c:	0fed      	lsrs	r5, r5, #31
    258e:	4650      	mov	r0, sl
    2590:	0d5b      	lsrs	r3, r3, #21
    2592:	9501      	str	r5, [sp, #4]
    2594:	d05e      	beq.n	2654 <__aeabi_ddiv+0x118>
    2596:	4a62      	ldr	r2, [pc, #392]	; (2720 <__aeabi_ddiv+0x1e4>)
    2598:	4293      	cmp	r3, r2
    259a:	d053      	beq.n	2644 <__aeabi_ddiv+0x108>
    259c:	465a      	mov	r2, fp
    259e:	00d1      	lsls	r1, r2, #3
    25a0:	2280      	movs	r2, #128	; 0x80
    25a2:	0f40      	lsrs	r0, r0, #29
    25a4:	0412      	lsls	r2, r2, #16
    25a6:	4302      	orrs	r2, r0
    25a8:	430a      	orrs	r2, r1
    25aa:	4693      	mov	fp, r2
    25ac:	4652      	mov	r2, sl
    25ae:	00d1      	lsls	r1, r2, #3
    25b0:	4a5c      	ldr	r2, [pc, #368]	; (2724 <__aeabi_ddiv+0x1e8>)
    25b2:	4694      	mov	ip, r2
    25b4:	2200      	movs	r2, #0
    25b6:	4463      	add	r3, ip
    25b8:	0038      	movs	r0, r7
    25ba:	4068      	eors	r0, r5
    25bc:	4684      	mov	ip, r0
    25be:	9002      	str	r0, [sp, #8]
    25c0:	1ae4      	subs	r4, r4, r3
    25c2:	4316      	orrs	r6, r2
    25c4:	2e0f      	cmp	r6, #15
    25c6:	d900      	bls.n	25ca <__aeabi_ddiv+0x8e>
    25c8:	e0b4      	b.n	2734 <__aeabi_ddiv+0x1f8>
    25ca:	4b57      	ldr	r3, [pc, #348]	; (2728 <__aeabi_ddiv+0x1ec>)
    25cc:	00b6      	lsls	r6, r6, #2
    25ce:	599b      	ldr	r3, [r3, r6]
    25d0:	469f      	mov	pc, r3
    25d2:	0003      	movs	r3, r0
    25d4:	4333      	orrs	r3, r6
    25d6:	4699      	mov	r9, r3
    25d8:	d16c      	bne.n	26b4 <__aeabi_ddiv+0x178>
    25da:	2300      	movs	r3, #0
    25dc:	4698      	mov	r8, r3
    25de:	3302      	adds	r3, #2
    25e0:	2608      	movs	r6, #8
    25e2:	9303      	str	r3, [sp, #12]
    25e4:	e7ce      	b.n	2584 <__aeabi_ddiv+0x48>
    25e6:	46cb      	mov	fp, r9
    25e8:	4641      	mov	r1, r8
    25ea:	9a03      	ldr	r2, [sp, #12]
    25ec:	9701      	str	r7, [sp, #4]
    25ee:	2a02      	cmp	r2, #2
    25f0:	d165      	bne.n	26be <__aeabi_ddiv+0x182>
    25f2:	9b01      	ldr	r3, [sp, #4]
    25f4:	4c4a      	ldr	r4, [pc, #296]	; (2720 <__aeabi_ddiv+0x1e4>)
    25f6:	469c      	mov	ip, r3
    25f8:	2300      	movs	r3, #0
    25fa:	2200      	movs	r2, #0
    25fc:	4698      	mov	r8, r3
    25fe:	e06b      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2600:	0003      	movs	r3, r0
    2602:	4333      	orrs	r3, r6
    2604:	4699      	mov	r9, r3
    2606:	d04e      	beq.n	26a6 <__aeabi_ddiv+0x16a>
    2608:	2e00      	cmp	r6, #0
    260a:	d100      	bne.n	260e <__aeabi_ddiv+0xd2>
    260c:	e1bc      	b.n	2988 <__aeabi_ddiv+0x44c>
    260e:	0030      	movs	r0, r6
    2610:	f001 f9d6 	bl	39c0 <__clzsi2>
    2614:	0003      	movs	r3, r0
    2616:	3b0b      	subs	r3, #11
    2618:	2b1c      	cmp	r3, #28
    261a:	dd00      	ble.n	261e <__aeabi_ddiv+0xe2>
    261c:	e1ac      	b.n	2978 <__aeabi_ddiv+0x43c>
    261e:	221d      	movs	r2, #29
    2620:	1ad3      	subs	r3, r2, r3
    2622:	465a      	mov	r2, fp
    2624:	0001      	movs	r1, r0
    2626:	40da      	lsrs	r2, r3
    2628:	3908      	subs	r1, #8
    262a:	408e      	lsls	r6, r1
    262c:	0013      	movs	r3, r2
    262e:	4333      	orrs	r3, r6
    2630:	4699      	mov	r9, r3
    2632:	465b      	mov	r3, fp
    2634:	408b      	lsls	r3, r1
    2636:	4698      	mov	r8, r3
    2638:	2300      	movs	r3, #0
    263a:	4c3c      	ldr	r4, [pc, #240]	; (272c <__aeabi_ddiv+0x1f0>)
    263c:	2600      	movs	r6, #0
    263e:	1a24      	subs	r4, r4, r0
    2640:	9303      	str	r3, [sp, #12]
    2642:	e79f      	b.n	2584 <__aeabi_ddiv+0x48>
    2644:	4651      	mov	r1, sl
    2646:	465a      	mov	r2, fp
    2648:	4311      	orrs	r1, r2
    264a:	d129      	bne.n	26a0 <__aeabi_ddiv+0x164>
    264c:	2200      	movs	r2, #0
    264e:	4693      	mov	fp, r2
    2650:	3202      	adds	r2, #2
    2652:	e7b1      	b.n	25b8 <__aeabi_ddiv+0x7c>
    2654:	4659      	mov	r1, fp
    2656:	4301      	orrs	r1, r0
    2658:	d01e      	beq.n	2698 <__aeabi_ddiv+0x15c>
    265a:	465b      	mov	r3, fp
    265c:	2b00      	cmp	r3, #0
    265e:	d100      	bne.n	2662 <__aeabi_ddiv+0x126>
    2660:	e19e      	b.n	29a0 <__aeabi_ddiv+0x464>
    2662:	4658      	mov	r0, fp
    2664:	f001 f9ac 	bl	39c0 <__clzsi2>
    2668:	0003      	movs	r3, r0
    266a:	3b0b      	subs	r3, #11
    266c:	2b1c      	cmp	r3, #28
    266e:	dd00      	ble.n	2672 <__aeabi_ddiv+0x136>
    2670:	e18f      	b.n	2992 <__aeabi_ddiv+0x456>
    2672:	0002      	movs	r2, r0
    2674:	4659      	mov	r1, fp
    2676:	3a08      	subs	r2, #8
    2678:	4091      	lsls	r1, r2
    267a:	468b      	mov	fp, r1
    267c:	211d      	movs	r1, #29
    267e:	1acb      	subs	r3, r1, r3
    2680:	4651      	mov	r1, sl
    2682:	40d9      	lsrs	r1, r3
    2684:	000b      	movs	r3, r1
    2686:	4659      	mov	r1, fp
    2688:	430b      	orrs	r3, r1
    268a:	4651      	mov	r1, sl
    268c:	469b      	mov	fp, r3
    268e:	4091      	lsls	r1, r2
    2690:	4b26      	ldr	r3, [pc, #152]	; (272c <__aeabi_ddiv+0x1f0>)
    2692:	2200      	movs	r2, #0
    2694:	1a1b      	subs	r3, r3, r0
    2696:	e78f      	b.n	25b8 <__aeabi_ddiv+0x7c>
    2698:	2300      	movs	r3, #0
    269a:	2201      	movs	r2, #1
    269c:	469b      	mov	fp, r3
    269e:	e78b      	b.n	25b8 <__aeabi_ddiv+0x7c>
    26a0:	4651      	mov	r1, sl
    26a2:	2203      	movs	r2, #3
    26a4:	e788      	b.n	25b8 <__aeabi_ddiv+0x7c>
    26a6:	2300      	movs	r3, #0
    26a8:	4698      	mov	r8, r3
    26aa:	3301      	adds	r3, #1
    26ac:	2604      	movs	r6, #4
    26ae:	2400      	movs	r4, #0
    26b0:	9303      	str	r3, [sp, #12]
    26b2:	e767      	b.n	2584 <__aeabi_ddiv+0x48>
    26b4:	2303      	movs	r3, #3
    26b6:	46b1      	mov	r9, r6
    26b8:	9303      	str	r3, [sp, #12]
    26ba:	260c      	movs	r6, #12
    26bc:	e762      	b.n	2584 <__aeabi_ddiv+0x48>
    26be:	2a03      	cmp	r2, #3
    26c0:	d100      	bne.n	26c4 <__aeabi_ddiv+0x188>
    26c2:	e25c      	b.n	2b7e <__aeabi_ddiv+0x642>
    26c4:	9b01      	ldr	r3, [sp, #4]
    26c6:	2a01      	cmp	r2, #1
    26c8:	d000      	beq.n	26cc <__aeabi_ddiv+0x190>
    26ca:	e1e4      	b.n	2a96 <__aeabi_ddiv+0x55a>
    26cc:	4013      	ands	r3, r2
    26ce:	469c      	mov	ip, r3
    26d0:	2300      	movs	r3, #0
    26d2:	2400      	movs	r4, #0
    26d4:	2200      	movs	r2, #0
    26d6:	4698      	mov	r8, r3
    26d8:	2100      	movs	r1, #0
    26da:	0312      	lsls	r2, r2, #12
    26dc:	0b13      	lsrs	r3, r2, #12
    26de:	0d0a      	lsrs	r2, r1, #20
    26e0:	0512      	lsls	r2, r2, #20
    26e2:	431a      	orrs	r2, r3
    26e4:	0523      	lsls	r3, r4, #20
    26e6:	4c12      	ldr	r4, [pc, #72]	; (2730 <__aeabi_ddiv+0x1f4>)
    26e8:	4640      	mov	r0, r8
    26ea:	4022      	ands	r2, r4
    26ec:	4313      	orrs	r3, r2
    26ee:	4662      	mov	r2, ip
    26f0:	005b      	lsls	r3, r3, #1
    26f2:	07d2      	lsls	r2, r2, #31
    26f4:	085b      	lsrs	r3, r3, #1
    26f6:	4313      	orrs	r3, r2
    26f8:	0019      	movs	r1, r3
    26fa:	b007      	add	sp, #28
    26fc:	bc3c      	pop	{r2, r3, r4, r5}
    26fe:	4690      	mov	r8, r2
    2700:	4699      	mov	r9, r3
    2702:	46a2      	mov	sl, r4
    2704:	46ab      	mov	fp, r5
    2706:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2708:	2300      	movs	r3, #0
    270a:	2280      	movs	r2, #128	; 0x80
    270c:	469c      	mov	ip, r3
    270e:	0312      	lsls	r2, r2, #12
    2710:	4698      	mov	r8, r3
    2712:	4c03      	ldr	r4, [pc, #12]	; (2720 <__aeabi_ddiv+0x1e4>)
    2714:	e7e0      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2716:	2300      	movs	r3, #0
    2718:	4c01      	ldr	r4, [pc, #4]	; (2720 <__aeabi_ddiv+0x1e4>)
    271a:	2200      	movs	r2, #0
    271c:	4698      	mov	r8, r3
    271e:	e7db      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2720:	000007ff 	.word	0x000007ff
    2724:	fffffc01 	.word	0xfffffc01
    2728:	00005cc4 	.word	0x00005cc4
    272c:	fffffc0d 	.word	0xfffffc0d
    2730:	800fffff 	.word	0x800fffff
    2734:	45d9      	cmp	r9, fp
    2736:	d900      	bls.n	273a <__aeabi_ddiv+0x1fe>
    2738:	e139      	b.n	29ae <__aeabi_ddiv+0x472>
    273a:	d100      	bne.n	273e <__aeabi_ddiv+0x202>
    273c:	e134      	b.n	29a8 <__aeabi_ddiv+0x46c>
    273e:	2300      	movs	r3, #0
    2740:	4646      	mov	r6, r8
    2742:	464d      	mov	r5, r9
    2744:	469a      	mov	sl, r3
    2746:	3c01      	subs	r4, #1
    2748:	465b      	mov	r3, fp
    274a:	0e0a      	lsrs	r2, r1, #24
    274c:	021b      	lsls	r3, r3, #8
    274e:	431a      	orrs	r2, r3
    2750:	020b      	lsls	r3, r1, #8
    2752:	0c17      	lsrs	r7, r2, #16
    2754:	9303      	str	r3, [sp, #12]
    2756:	0413      	lsls	r3, r2, #16
    2758:	0c1b      	lsrs	r3, r3, #16
    275a:	0039      	movs	r1, r7
    275c:	0028      	movs	r0, r5
    275e:	4690      	mov	r8, r2
    2760:	9301      	str	r3, [sp, #4]
    2762:	f7fe fd2c 	bl	11be <__aeabi_uidiv>
    2766:	0002      	movs	r2, r0
    2768:	9b01      	ldr	r3, [sp, #4]
    276a:	4683      	mov	fp, r0
    276c:	435a      	muls	r2, r3
    276e:	0028      	movs	r0, r5
    2770:	0039      	movs	r1, r7
    2772:	4691      	mov	r9, r2
    2774:	f7fe fd5a 	bl	122c <__aeabi_uidivmod>
    2778:	0c35      	lsrs	r5, r6, #16
    277a:	0409      	lsls	r1, r1, #16
    277c:	430d      	orrs	r5, r1
    277e:	45a9      	cmp	r9, r5
    2780:	d90d      	bls.n	279e <__aeabi_ddiv+0x262>
    2782:	465b      	mov	r3, fp
    2784:	4445      	add	r5, r8
    2786:	3b01      	subs	r3, #1
    2788:	45a8      	cmp	r8, r5
    278a:	d900      	bls.n	278e <__aeabi_ddiv+0x252>
    278c:	e13a      	b.n	2a04 <__aeabi_ddiv+0x4c8>
    278e:	45a9      	cmp	r9, r5
    2790:	d800      	bhi.n	2794 <__aeabi_ddiv+0x258>
    2792:	e137      	b.n	2a04 <__aeabi_ddiv+0x4c8>
    2794:	2302      	movs	r3, #2
    2796:	425b      	negs	r3, r3
    2798:	469c      	mov	ip, r3
    279a:	4445      	add	r5, r8
    279c:	44e3      	add	fp, ip
    279e:	464b      	mov	r3, r9
    27a0:	1aeb      	subs	r3, r5, r3
    27a2:	0039      	movs	r1, r7
    27a4:	0018      	movs	r0, r3
    27a6:	9304      	str	r3, [sp, #16]
    27a8:	f7fe fd09 	bl	11be <__aeabi_uidiv>
    27ac:	9b01      	ldr	r3, [sp, #4]
    27ae:	0005      	movs	r5, r0
    27b0:	4343      	muls	r3, r0
    27b2:	0039      	movs	r1, r7
    27b4:	9804      	ldr	r0, [sp, #16]
    27b6:	4699      	mov	r9, r3
    27b8:	f7fe fd38 	bl	122c <__aeabi_uidivmod>
    27bc:	0433      	lsls	r3, r6, #16
    27be:	0409      	lsls	r1, r1, #16
    27c0:	0c1b      	lsrs	r3, r3, #16
    27c2:	430b      	orrs	r3, r1
    27c4:	4599      	cmp	r9, r3
    27c6:	d909      	bls.n	27dc <__aeabi_ddiv+0x2a0>
    27c8:	4443      	add	r3, r8
    27ca:	1e6a      	subs	r2, r5, #1
    27cc:	4598      	cmp	r8, r3
    27ce:	d900      	bls.n	27d2 <__aeabi_ddiv+0x296>
    27d0:	e11a      	b.n	2a08 <__aeabi_ddiv+0x4cc>
    27d2:	4599      	cmp	r9, r3
    27d4:	d800      	bhi.n	27d8 <__aeabi_ddiv+0x29c>
    27d6:	e117      	b.n	2a08 <__aeabi_ddiv+0x4cc>
    27d8:	3d02      	subs	r5, #2
    27da:	4443      	add	r3, r8
    27dc:	464a      	mov	r2, r9
    27de:	1a9b      	subs	r3, r3, r2
    27e0:	465a      	mov	r2, fp
    27e2:	0412      	lsls	r2, r2, #16
    27e4:	432a      	orrs	r2, r5
    27e6:	9903      	ldr	r1, [sp, #12]
    27e8:	4693      	mov	fp, r2
    27ea:	0c10      	lsrs	r0, r2, #16
    27ec:	0c0a      	lsrs	r2, r1, #16
    27ee:	4691      	mov	r9, r2
    27f0:	0409      	lsls	r1, r1, #16
    27f2:	465a      	mov	r2, fp
    27f4:	0c09      	lsrs	r1, r1, #16
    27f6:	464e      	mov	r6, r9
    27f8:	000d      	movs	r5, r1
    27fa:	0412      	lsls	r2, r2, #16
    27fc:	0c12      	lsrs	r2, r2, #16
    27fe:	4345      	muls	r5, r0
    2800:	9105      	str	r1, [sp, #20]
    2802:	4351      	muls	r1, r2
    2804:	4372      	muls	r2, r6
    2806:	4370      	muls	r0, r6
    2808:	1952      	adds	r2, r2, r5
    280a:	0c0e      	lsrs	r6, r1, #16
    280c:	18b2      	adds	r2, r6, r2
    280e:	4295      	cmp	r5, r2
    2810:	d903      	bls.n	281a <__aeabi_ddiv+0x2de>
    2812:	2580      	movs	r5, #128	; 0x80
    2814:	026d      	lsls	r5, r5, #9
    2816:	46ac      	mov	ip, r5
    2818:	4460      	add	r0, ip
    281a:	0c15      	lsrs	r5, r2, #16
    281c:	0409      	lsls	r1, r1, #16
    281e:	0412      	lsls	r2, r2, #16
    2820:	0c09      	lsrs	r1, r1, #16
    2822:	1828      	adds	r0, r5, r0
    2824:	1852      	adds	r2, r2, r1
    2826:	4283      	cmp	r3, r0
    2828:	d200      	bcs.n	282c <__aeabi_ddiv+0x2f0>
    282a:	e0ce      	b.n	29ca <__aeabi_ddiv+0x48e>
    282c:	d100      	bne.n	2830 <__aeabi_ddiv+0x2f4>
    282e:	e0c8      	b.n	29c2 <__aeabi_ddiv+0x486>
    2830:	1a1d      	subs	r5, r3, r0
    2832:	4653      	mov	r3, sl
    2834:	1a9e      	subs	r6, r3, r2
    2836:	45b2      	cmp	sl, r6
    2838:	4192      	sbcs	r2, r2
    283a:	4252      	negs	r2, r2
    283c:	1aab      	subs	r3, r5, r2
    283e:	469a      	mov	sl, r3
    2840:	4598      	cmp	r8, r3
    2842:	d100      	bne.n	2846 <__aeabi_ddiv+0x30a>
    2844:	e117      	b.n	2a76 <__aeabi_ddiv+0x53a>
    2846:	0039      	movs	r1, r7
    2848:	0018      	movs	r0, r3
    284a:	f7fe fcb8 	bl	11be <__aeabi_uidiv>
    284e:	9b01      	ldr	r3, [sp, #4]
    2850:	0005      	movs	r5, r0
    2852:	4343      	muls	r3, r0
    2854:	0039      	movs	r1, r7
    2856:	4650      	mov	r0, sl
    2858:	9304      	str	r3, [sp, #16]
    285a:	f7fe fce7 	bl	122c <__aeabi_uidivmod>
    285e:	9804      	ldr	r0, [sp, #16]
    2860:	040b      	lsls	r3, r1, #16
    2862:	0c31      	lsrs	r1, r6, #16
    2864:	4319      	orrs	r1, r3
    2866:	4288      	cmp	r0, r1
    2868:	d909      	bls.n	287e <__aeabi_ddiv+0x342>
    286a:	4441      	add	r1, r8
    286c:	1e6b      	subs	r3, r5, #1
    286e:	4588      	cmp	r8, r1
    2870:	d900      	bls.n	2874 <__aeabi_ddiv+0x338>
    2872:	e107      	b.n	2a84 <__aeabi_ddiv+0x548>
    2874:	4288      	cmp	r0, r1
    2876:	d800      	bhi.n	287a <__aeabi_ddiv+0x33e>
    2878:	e104      	b.n	2a84 <__aeabi_ddiv+0x548>
    287a:	3d02      	subs	r5, #2
    287c:	4441      	add	r1, r8
    287e:	9b04      	ldr	r3, [sp, #16]
    2880:	1acb      	subs	r3, r1, r3
    2882:	0018      	movs	r0, r3
    2884:	0039      	movs	r1, r7
    2886:	9304      	str	r3, [sp, #16]
    2888:	f7fe fc99 	bl	11be <__aeabi_uidiv>
    288c:	9b01      	ldr	r3, [sp, #4]
    288e:	4682      	mov	sl, r0
    2890:	4343      	muls	r3, r0
    2892:	0039      	movs	r1, r7
    2894:	9804      	ldr	r0, [sp, #16]
    2896:	9301      	str	r3, [sp, #4]
    2898:	f7fe fcc8 	bl	122c <__aeabi_uidivmod>
    289c:	9801      	ldr	r0, [sp, #4]
    289e:	040b      	lsls	r3, r1, #16
    28a0:	0431      	lsls	r1, r6, #16
    28a2:	0c09      	lsrs	r1, r1, #16
    28a4:	4319      	orrs	r1, r3
    28a6:	4288      	cmp	r0, r1
    28a8:	d90d      	bls.n	28c6 <__aeabi_ddiv+0x38a>
    28aa:	4653      	mov	r3, sl
    28ac:	4441      	add	r1, r8
    28ae:	3b01      	subs	r3, #1
    28b0:	4588      	cmp	r8, r1
    28b2:	d900      	bls.n	28b6 <__aeabi_ddiv+0x37a>
    28b4:	e0e8      	b.n	2a88 <__aeabi_ddiv+0x54c>
    28b6:	4288      	cmp	r0, r1
    28b8:	d800      	bhi.n	28bc <__aeabi_ddiv+0x380>
    28ba:	e0e5      	b.n	2a88 <__aeabi_ddiv+0x54c>
    28bc:	2302      	movs	r3, #2
    28be:	425b      	negs	r3, r3
    28c0:	469c      	mov	ip, r3
    28c2:	4441      	add	r1, r8
    28c4:	44e2      	add	sl, ip
    28c6:	9b01      	ldr	r3, [sp, #4]
    28c8:	042d      	lsls	r5, r5, #16
    28ca:	1ace      	subs	r6, r1, r3
    28cc:	4651      	mov	r1, sl
    28ce:	4329      	orrs	r1, r5
    28d0:	9d05      	ldr	r5, [sp, #20]
    28d2:	464f      	mov	r7, r9
    28d4:	002a      	movs	r2, r5
    28d6:	040b      	lsls	r3, r1, #16
    28d8:	0c08      	lsrs	r0, r1, #16
    28da:	0c1b      	lsrs	r3, r3, #16
    28dc:	435a      	muls	r2, r3
    28de:	4345      	muls	r5, r0
    28e0:	437b      	muls	r3, r7
    28e2:	4378      	muls	r0, r7
    28e4:	195b      	adds	r3, r3, r5
    28e6:	0c17      	lsrs	r7, r2, #16
    28e8:	18fb      	adds	r3, r7, r3
    28ea:	429d      	cmp	r5, r3
    28ec:	d903      	bls.n	28f6 <__aeabi_ddiv+0x3ba>
    28ee:	2580      	movs	r5, #128	; 0x80
    28f0:	026d      	lsls	r5, r5, #9
    28f2:	46ac      	mov	ip, r5
    28f4:	4460      	add	r0, ip
    28f6:	0c1d      	lsrs	r5, r3, #16
    28f8:	0412      	lsls	r2, r2, #16
    28fa:	041b      	lsls	r3, r3, #16
    28fc:	0c12      	lsrs	r2, r2, #16
    28fe:	1828      	adds	r0, r5, r0
    2900:	189b      	adds	r3, r3, r2
    2902:	4286      	cmp	r6, r0
    2904:	d200      	bcs.n	2908 <__aeabi_ddiv+0x3cc>
    2906:	e093      	b.n	2a30 <__aeabi_ddiv+0x4f4>
    2908:	d100      	bne.n	290c <__aeabi_ddiv+0x3d0>
    290a:	e08e      	b.n	2a2a <__aeabi_ddiv+0x4ee>
    290c:	2301      	movs	r3, #1
    290e:	4319      	orrs	r1, r3
    2910:	4ba0      	ldr	r3, [pc, #640]	; (2b94 <__aeabi_ddiv+0x658>)
    2912:	18e3      	adds	r3, r4, r3
    2914:	2b00      	cmp	r3, #0
    2916:	dc00      	bgt.n	291a <__aeabi_ddiv+0x3de>
    2918:	e099      	b.n	2a4e <__aeabi_ddiv+0x512>
    291a:	074a      	lsls	r2, r1, #29
    291c:	d000      	beq.n	2920 <__aeabi_ddiv+0x3e4>
    291e:	e09e      	b.n	2a5e <__aeabi_ddiv+0x522>
    2920:	465a      	mov	r2, fp
    2922:	01d2      	lsls	r2, r2, #7
    2924:	d506      	bpl.n	2934 <__aeabi_ddiv+0x3f8>
    2926:	465a      	mov	r2, fp
    2928:	4b9b      	ldr	r3, [pc, #620]	; (2b98 <__aeabi_ddiv+0x65c>)
    292a:	401a      	ands	r2, r3
    292c:	2380      	movs	r3, #128	; 0x80
    292e:	4693      	mov	fp, r2
    2930:	00db      	lsls	r3, r3, #3
    2932:	18e3      	adds	r3, r4, r3
    2934:	4a99      	ldr	r2, [pc, #612]	; (2b9c <__aeabi_ddiv+0x660>)
    2936:	4293      	cmp	r3, r2
    2938:	dd68      	ble.n	2a0c <__aeabi_ddiv+0x4d0>
    293a:	2301      	movs	r3, #1
    293c:	9a02      	ldr	r2, [sp, #8]
    293e:	4c98      	ldr	r4, [pc, #608]	; (2ba0 <__aeabi_ddiv+0x664>)
    2940:	401a      	ands	r2, r3
    2942:	2300      	movs	r3, #0
    2944:	4694      	mov	ip, r2
    2946:	4698      	mov	r8, r3
    2948:	2200      	movs	r2, #0
    294a:	e6c5      	b.n	26d8 <__aeabi_ddiv+0x19c>
    294c:	2280      	movs	r2, #128	; 0x80
    294e:	464b      	mov	r3, r9
    2950:	0312      	lsls	r2, r2, #12
    2952:	4213      	tst	r3, r2
    2954:	d00a      	beq.n	296c <__aeabi_ddiv+0x430>
    2956:	465b      	mov	r3, fp
    2958:	4213      	tst	r3, r2
    295a:	d106      	bne.n	296a <__aeabi_ddiv+0x42e>
    295c:	431a      	orrs	r2, r3
    295e:	0312      	lsls	r2, r2, #12
    2960:	0b12      	lsrs	r2, r2, #12
    2962:	46ac      	mov	ip, r5
    2964:	4688      	mov	r8, r1
    2966:	4c8e      	ldr	r4, [pc, #568]	; (2ba0 <__aeabi_ddiv+0x664>)
    2968:	e6b6      	b.n	26d8 <__aeabi_ddiv+0x19c>
    296a:	464b      	mov	r3, r9
    296c:	431a      	orrs	r2, r3
    296e:	0312      	lsls	r2, r2, #12
    2970:	0b12      	lsrs	r2, r2, #12
    2972:	46bc      	mov	ip, r7
    2974:	4c8a      	ldr	r4, [pc, #552]	; (2ba0 <__aeabi_ddiv+0x664>)
    2976:	e6af      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2978:	0003      	movs	r3, r0
    297a:	465a      	mov	r2, fp
    297c:	3b28      	subs	r3, #40	; 0x28
    297e:	409a      	lsls	r2, r3
    2980:	2300      	movs	r3, #0
    2982:	4691      	mov	r9, r2
    2984:	4698      	mov	r8, r3
    2986:	e657      	b.n	2638 <__aeabi_ddiv+0xfc>
    2988:	4658      	mov	r0, fp
    298a:	f001 f819 	bl	39c0 <__clzsi2>
    298e:	3020      	adds	r0, #32
    2990:	e640      	b.n	2614 <__aeabi_ddiv+0xd8>
    2992:	0003      	movs	r3, r0
    2994:	4652      	mov	r2, sl
    2996:	3b28      	subs	r3, #40	; 0x28
    2998:	409a      	lsls	r2, r3
    299a:	2100      	movs	r1, #0
    299c:	4693      	mov	fp, r2
    299e:	e677      	b.n	2690 <__aeabi_ddiv+0x154>
    29a0:	f001 f80e 	bl	39c0 <__clzsi2>
    29a4:	3020      	adds	r0, #32
    29a6:	e65f      	b.n	2668 <__aeabi_ddiv+0x12c>
    29a8:	4588      	cmp	r8, r1
    29aa:	d200      	bcs.n	29ae <__aeabi_ddiv+0x472>
    29ac:	e6c7      	b.n	273e <__aeabi_ddiv+0x202>
    29ae:	464b      	mov	r3, r9
    29b0:	07de      	lsls	r6, r3, #31
    29b2:	085d      	lsrs	r5, r3, #1
    29b4:	4643      	mov	r3, r8
    29b6:	085b      	lsrs	r3, r3, #1
    29b8:	431e      	orrs	r6, r3
    29ba:	4643      	mov	r3, r8
    29bc:	07db      	lsls	r3, r3, #31
    29be:	469a      	mov	sl, r3
    29c0:	e6c2      	b.n	2748 <__aeabi_ddiv+0x20c>
    29c2:	2500      	movs	r5, #0
    29c4:	4592      	cmp	sl, r2
    29c6:	d300      	bcc.n	29ca <__aeabi_ddiv+0x48e>
    29c8:	e733      	b.n	2832 <__aeabi_ddiv+0x2f6>
    29ca:	9e03      	ldr	r6, [sp, #12]
    29cc:	4659      	mov	r1, fp
    29ce:	46b4      	mov	ip, r6
    29d0:	44e2      	add	sl, ip
    29d2:	45b2      	cmp	sl, r6
    29d4:	41ad      	sbcs	r5, r5
    29d6:	426d      	negs	r5, r5
    29d8:	4445      	add	r5, r8
    29da:	18eb      	adds	r3, r5, r3
    29dc:	3901      	subs	r1, #1
    29de:	4598      	cmp	r8, r3
    29e0:	d207      	bcs.n	29f2 <__aeabi_ddiv+0x4b6>
    29e2:	4298      	cmp	r0, r3
    29e4:	d900      	bls.n	29e8 <__aeabi_ddiv+0x4ac>
    29e6:	e07f      	b.n	2ae8 <__aeabi_ddiv+0x5ac>
    29e8:	d100      	bne.n	29ec <__aeabi_ddiv+0x4b0>
    29ea:	e0bc      	b.n	2b66 <__aeabi_ddiv+0x62a>
    29ec:	1a1d      	subs	r5, r3, r0
    29ee:	468b      	mov	fp, r1
    29f0:	e71f      	b.n	2832 <__aeabi_ddiv+0x2f6>
    29f2:	4598      	cmp	r8, r3
    29f4:	d1fa      	bne.n	29ec <__aeabi_ddiv+0x4b0>
    29f6:	9d03      	ldr	r5, [sp, #12]
    29f8:	4555      	cmp	r5, sl
    29fa:	d9f2      	bls.n	29e2 <__aeabi_ddiv+0x4a6>
    29fc:	4643      	mov	r3, r8
    29fe:	468b      	mov	fp, r1
    2a00:	1a1d      	subs	r5, r3, r0
    2a02:	e716      	b.n	2832 <__aeabi_ddiv+0x2f6>
    2a04:	469b      	mov	fp, r3
    2a06:	e6ca      	b.n	279e <__aeabi_ddiv+0x262>
    2a08:	0015      	movs	r5, r2
    2a0a:	e6e7      	b.n	27dc <__aeabi_ddiv+0x2a0>
    2a0c:	465a      	mov	r2, fp
    2a0e:	08c9      	lsrs	r1, r1, #3
    2a10:	0752      	lsls	r2, r2, #29
    2a12:	430a      	orrs	r2, r1
    2a14:	055b      	lsls	r3, r3, #21
    2a16:	4690      	mov	r8, r2
    2a18:	0d5c      	lsrs	r4, r3, #21
    2a1a:	465a      	mov	r2, fp
    2a1c:	2301      	movs	r3, #1
    2a1e:	9902      	ldr	r1, [sp, #8]
    2a20:	0252      	lsls	r2, r2, #9
    2a22:	4019      	ands	r1, r3
    2a24:	0b12      	lsrs	r2, r2, #12
    2a26:	468c      	mov	ip, r1
    2a28:	e656      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2a2a:	2b00      	cmp	r3, #0
    2a2c:	d100      	bne.n	2a30 <__aeabi_ddiv+0x4f4>
    2a2e:	e76f      	b.n	2910 <__aeabi_ddiv+0x3d4>
    2a30:	4446      	add	r6, r8
    2a32:	1e4a      	subs	r2, r1, #1
    2a34:	45b0      	cmp	r8, r6
    2a36:	d929      	bls.n	2a8c <__aeabi_ddiv+0x550>
    2a38:	0011      	movs	r1, r2
    2a3a:	4286      	cmp	r6, r0
    2a3c:	d000      	beq.n	2a40 <__aeabi_ddiv+0x504>
    2a3e:	e765      	b.n	290c <__aeabi_ddiv+0x3d0>
    2a40:	9a03      	ldr	r2, [sp, #12]
    2a42:	4293      	cmp	r3, r2
    2a44:	d000      	beq.n	2a48 <__aeabi_ddiv+0x50c>
    2a46:	e761      	b.n	290c <__aeabi_ddiv+0x3d0>
    2a48:	e762      	b.n	2910 <__aeabi_ddiv+0x3d4>
    2a4a:	2101      	movs	r1, #1
    2a4c:	4249      	negs	r1, r1
    2a4e:	2001      	movs	r0, #1
    2a50:	1ac2      	subs	r2, r0, r3
    2a52:	2a38      	cmp	r2, #56	; 0x38
    2a54:	dd21      	ble.n	2a9a <__aeabi_ddiv+0x55e>
    2a56:	9b02      	ldr	r3, [sp, #8]
    2a58:	4003      	ands	r3, r0
    2a5a:	469c      	mov	ip, r3
    2a5c:	e638      	b.n	26d0 <__aeabi_ddiv+0x194>
    2a5e:	220f      	movs	r2, #15
    2a60:	400a      	ands	r2, r1
    2a62:	2a04      	cmp	r2, #4
    2a64:	d100      	bne.n	2a68 <__aeabi_ddiv+0x52c>
    2a66:	e75b      	b.n	2920 <__aeabi_ddiv+0x3e4>
    2a68:	000a      	movs	r2, r1
    2a6a:	1d11      	adds	r1, r2, #4
    2a6c:	4291      	cmp	r1, r2
    2a6e:	4192      	sbcs	r2, r2
    2a70:	4252      	negs	r2, r2
    2a72:	4493      	add	fp, r2
    2a74:	e754      	b.n	2920 <__aeabi_ddiv+0x3e4>
    2a76:	4b47      	ldr	r3, [pc, #284]	; (2b94 <__aeabi_ddiv+0x658>)
    2a78:	18e3      	adds	r3, r4, r3
    2a7a:	2b00      	cmp	r3, #0
    2a7c:	dde5      	ble.n	2a4a <__aeabi_ddiv+0x50e>
    2a7e:	2201      	movs	r2, #1
    2a80:	4252      	negs	r2, r2
    2a82:	e7f2      	b.n	2a6a <__aeabi_ddiv+0x52e>
    2a84:	001d      	movs	r5, r3
    2a86:	e6fa      	b.n	287e <__aeabi_ddiv+0x342>
    2a88:	469a      	mov	sl, r3
    2a8a:	e71c      	b.n	28c6 <__aeabi_ddiv+0x38a>
    2a8c:	42b0      	cmp	r0, r6
    2a8e:	d839      	bhi.n	2b04 <__aeabi_ddiv+0x5c8>
    2a90:	d06e      	beq.n	2b70 <__aeabi_ddiv+0x634>
    2a92:	0011      	movs	r1, r2
    2a94:	e73a      	b.n	290c <__aeabi_ddiv+0x3d0>
    2a96:	9302      	str	r3, [sp, #8]
    2a98:	e73a      	b.n	2910 <__aeabi_ddiv+0x3d4>
    2a9a:	2a1f      	cmp	r2, #31
    2a9c:	dc3c      	bgt.n	2b18 <__aeabi_ddiv+0x5dc>
    2a9e:	2320      	movs	r3, #32
    2aa0:	1a9b      	subs	r3, r3, r2
    2aa2:	000c      	movs	r4, r1
    2aa4:	4658      	mov	r0, fp
    2aa6:	4099      	lsls	r1, r3
    2aa8:	4098      	lsls	r0, r3
    2aaa:	1e4b      	subs	r3, r1, #1
    2aac:	4199      	sbcs	r1, r3
    2aae:	465b      	mov	r3, fp
    2ab0:	40d4      	lsrs	r4, r2
    2ab2:	40d3      	lsrs	r3, r2
    2ab4:	4320      	orrs	r0, r4
    2ab6:	4308      	orrs	r0, r1
    2ab8:	001a      	movs	r2, r3
    2aba:	0743      	lsls	r3, r0, #29
    2abc:	d009      	beq.n	2ad2 <__aeabi_ddiv+0x596>
    2abe:	230f      	movs	r3, #15
    2ac0:	4003      	ands	r3, r0
    2ac2:	2b04      	cmp	r3, #4
    2ac4:	d005      	beq.n	2ad2 <__aeabi_ddiv+0x596>
    2ac6:	0001      	movs	r1, r0
    2ac8:	1d08      	adds	r0, r1, #4
    2aca:	4288      	cmp	r0, r1
    2acc:	419b      	sbcs	r3, r3
    2ace:	425b      	negs	r3, r3
    2ad0:	18d2      	adds	r2, r2, r3
    2ad2:	0213      	lsls	r3, r2, #8
    2ad4:	d53a      	bpl.n	2b4c <__aeabi_ddiv+0x610>
    2ad6:	2301      	movs	r3, #1
    2ad8:	9a02      	ldr	r2, [sp, #8]
    2ada:	2401      	movs	r4, #1
    2adc:	401a      	ands	r2, r3
    2ade:	2300      	movs	r3, #0
    2ae0:	4694      	mov	ip, r2
    2ae2:	4698      	mov	r8, r3
    2ae4:	2200      	movs	r2, #0
    2ae6:	e5f7      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2ae8:	2102      	movs	r1, #2
    2aea:	4249      	negs	r1, r1
    2aec:	468c      	mov	ip, r1
    2aee:	9d03      	ldr	r5, [sp, #12]
    2af0:	44e3      	add	fp, ip
    2af2:	46ac      	mov	ip, r5
    2af4:	44e2      	add	sl, ip
    2af6:	45aa      	cmp	sl, r5
    2af8:	41ad      	sbcs	r5, r5
    2afa:	426d      	negs	r5, r5
    2afc:	4445      	add	r5, r8
    2afe:	18ed      	adds	r5, r5, r3
    2b00:	1a2d      	subs	r5, r5, r0
    2b02:	e696      	b.n	2832 <__aeabi_ddiv+0x2f6>
    2b04:	1e8a      	subs	r2, r1, #2
    2b06:	9903      	ldr	r1, [sp, #12]
    2b08:	004d      	lsls	r5, r1, #1
    2b0a:	428d      	cmp	r5, r1
    2b0c:	4189      	sbcs	r1, r1
    2b0e:	4249      	negs	r1, r1
    2b10:	4441      	add	r1, r8
    2b12:	1876      	adds	r6, r6, r1
    2b14:	9503      	str	r5, [sp, #12]
    2b16:	e78f      	b.n	2a38 <__aeabi_ddiv+0x4fc>
    2b18:	201f      	movs	r0, #31
    2b1a:	4240      	negs	r0, r0
    2b1c:	1ac3      	subs	r3, r0, r3
    2b1e:	4658      	mov	r0, fp
    2b20:	40d8      	lsrs	r0, r3
    2b22:	0003      	movs	r3, r0
    2b24:	2a20      	cmp	r2, #32
    2b26:	d028      	beq.n	2b7a <__aeabi_ddiv+0x63e>
    2b28:	2040      	movs	r0, #64	; 0x40
    2b2a:	465d      	mov	r5, fp
    2b2c:	1a82      	subs	r2, r0, r2
    2b2e:	4095      	lsls	r5, r2
    2b30:	4329      	orrs	r1, r5
    2b32:	1e4a      	subs	r2, r1, #1
    2b34:	4191      	sbcs	r1, r2
    2b36:	4319      	orrs	r1, r3
    2b38:	2307      	movs	r3, #7
    2b3a:	2200      	movs	r2, #0
    2b3c:	400b      	ands	r3, r1
    2b3e:	d009      	beq.n	2b54 <__aeabi_ddiv+0x618>
    2b40:	230f      	movs	r3, #15
    2b42:	2200      	movs	r2, #0
    2b44:	400b      	ands	r3, r1
    2b46:	0008      	movs	r0, r1
    2b48:	2b04      	cmp	r3, #4
    2b4a:	d1bd      	bne.n	2ac8 <__aeabi_ddiv+0x58c>
    2b4c:	0001      	movs	r1, r0
    2b4e:	0753      	lsls	r3, r2, #29
    2b50:	0252      	lsls	r2, r2, #9
    2b52:	0b12      	lsrs	r2, r2, #12
    2b54:	08c9      	lsrs	r1, r1, #3
    2b56:	4319      	orrs	r1, r3
    2b58:	2301      	movs	r3, #1
    2b5a:	4688      	mov	r8, r1
    2b5c:	9902      	ldr	r1, [sp, #8]
    2b5e:	2400      	movs	r4, #0
    2b60:	4019      	ands	r1, r3
    2b62:	468c      	mov	ip, r1
    2b64:	e5b8      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2b66:	4552      	cmp	r2, sl
    2b68:	d8be      	bhi.n	2ae8 <__aeabi_ddiv+0x5ac>
    2b6a:	468b      	mov	fp, r1
    2b6c:	2500      	movs	r5, #0
    2b6e:	e660      	b.n	2832 <__aeabi_ddiv+0x2f6>
    2b70:	9d03      	ldr	r5, [sp, #12]
    2b72:	429d      	cmp	r5, r3
    2b74:	d3c6      	bcc.n	2b04 <__aeabi_ddiv+0x5c8>
    2b76:	0011      	movs	r1, r2
    2b78:	e762      	b.n	2a40 <__aeabi_ddiv+0x504>
    2b7a:	2500      	movs	r5, #0
    2b7c:	e7d8      	b.n	2b30 <__aeabi_ddiv+0x5f4>
    2b7e:	2280      	movs	r2, #128	; 0x80
    2b80:	465b      	mov	r3, fp
    2b82:	0312      	lsls	r2, r2, #12
    2b84:	431a      	orrs	r2, r3
    2b86:	9b01      	ldr	r3, [sp, #4]
    2b88:	0312      	lsls	r2, r2, #12
    2b8a:	0b12      	lsrs	r2, r2, #12
    2b8c:	469c      	mov	ip, r3
    2b8e:	4688      	mov	r8, r1
    2b90:	4c03      	ldr	r4, [pc, #12]	; (2ba0 <__aeabi_ddiv+0x664>)
    2b92:	e5a1      	b.n	26d8 <__aeabi_ddiv+0x19c>
    2b94:	000003ff 	.word	0x000003ff
    2b98:	feffffff 	.word	0xfeffffff
    2b9c:	000007fe 	.word	0x000007fe
    2ba0:	000007ff 	.word	0x000007ff

00002ba4 <__aeabi_dmul>:
    2ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ba6:	4657      	mov	r7, sl
    2ba8:	4645      	mov	r5, r8
    2baa:	46de      	mov	lr, fp
    2bac:	464e      	mov	r6, r9
    2bae:	b5e0      	push	{r5, r6, r7, lr}
    2bb0:	030c      	lsls	r4, r1, #12
    2bb2:	4698      	mov	r8, r3
    2bb4:	004e      	lsls	r6, r1, #1
    2bb6:	0b23      	lsrs	r3, r4, #12
    2bb8:	b087      	sub	sp, #28
    2bba:	0007      	movs	r7, r0
    2bbc:	4692      	mov	sl, r2
    2bbe:	469b      	mov	fp, r3
    2bc0:	0d76      	lsrs	r6, r6, #21
    2bc2:	0fcd      	lsrs	r5, r1, #31
    2bc4:	2e00      	cmp	r6, #0
    2bc6:	d06b      	beq.n	2ca0 <__aeabi_dmul+0xfc>
    2bc8:	4b6d      	ldr	r3, [pc, #436]	; (2d80 <__aeabi_dmul+0x1dc>)
    2bca:	429e      	cmp	r6, r3
    2bcc:	d035      	beq.n	2c3a <__aeabi_dmul+0x96>
    2bce:	2480      	movs	r4, #128	; 0x80
    2bd0:	465b      	mov	r3, fp
    2bd2:	0f42      	lsrs	r2, r0, #29
    2bd4:	0424      	lsls	r4, r4, #16
    2bd6:	00db      	lsls	r3, r3, #3
    2bd8:	4314      	orrs	r4, r2
    2bda:	431c      	orrs	r4, r3
    2bdc:	00c3      	lsls	r3, r0, #3
    2bde:	4699      	mov	r9, r3
    2be0:	4b68      	ldr	r3, [pc, #416]	; (2d84 <__aeabi_dmul+0x1e0>)
    2be2:	46a3      	mov	fp, r4
    2be4:	469c      	mov	ip, r3
    2be6:	2300      	movs	r3, #0
    2be8:	2700      	movs	r7, #0
    2bea:	4466      	add	r6, ip
    2bec:	9302      	str	r3, [sp, #8]
    2bee:	4643      	mov	r3, r8
    2bf0:	031c      	lsls	r4, r3, #12
    2bf2:	005a      	lsls	r2, r3, #1
    2bf4:	0fdb      	lsrs	r3, r3, #31
    2bf6:	4650      	mov	r0, sl
    2bf8:	0b24      	lsrs	r4, r4, #12
    2bfa:	0d52      	lsrs	r2, r2, #21
    2bfc:	4698      	mov	r8, r3
    2bfe:	d100      	bne.n	2c02 <__aeabi_dmul+0x5e>
    2c00:	e076      	b.n	2cf0 <__aeabi_dmul+0x14c>
    2c02:	4b5f      	ldr	r3, [pc, #380]	; (2d80 <__aeabi_dmul+0x1dc>)
    2c04:	429a      	cmp	r2, r3
    2c06:	d06d      	beq.n	2ce4 <__aeabi_dmul+0x140>
    2c08:	2380      	movs	r3, #128	; 0x80
    2c0a:	0f41      	lsrs	r1, r0, #29
    2c0c:	041b      	lsls	r3, r3, #16
    2c0e:	430b      	orrs	r3, r1
    2c10:	495c      	ldr	r1, [pc, #368]	; (2d84 <__aeabi_dmul+0x1e0>)
    2c12:	00e4      	lsls	r4, r4, #3
    2c14:	468c      	mov	ip, r1
    2c16:	431c      	orrs	r4, r3
    2c18:	00c3      	lsls	r3, r0, #3
    2c1a:	2000      	movs	r0, #0
    2c1c:	4462      	add	r2, ip
    2c1e:	4641      	mov	r1, r8
    2c20:	18b6      	adds	r6, r6, r2
    2c22:	4069      	eors	r1, r5
    2c24:	1c72      	adds	r2, r6, #1
    2c26:	9101      	str	r1, [sp, #4]
    2c28:	4694      	mov	ip, r2
    2c2a:	4307      	orrs	r7, r0
    2c2c:	2f0f      	cmp	r7, #15
    2c2e:	d900      	bls.n	2c32 <__aeabi_dmul+0x8e>
    2c30:	e0b0      	b.n	2d94 <__aeabi_dmul+0x1f0>
    2c32:	4a55      	ldr	r2, [pc, #340]	; (2d88 <__aeabi_dmul+0x1e4>)
    2c34:	00bf      	lsls	r7, r7, #2
    2c36:	59d2      	ldr	r2, [r2, r7]
    2c38:	4697      	mov	pc, r2
    2c3a:	465b      	mov	r3, fp
    2c3c:	4303      	orrs	r3, r0
    2c3e:	4699      	mov	r9, r3
    2c40:	d000      	beq.n	2c44 <__aeabi_dmul+0xa0>
    2c42:	e087      	b.n	2d54 <__aeabi_dmul+0x1b0>
    2c44:	2300      	movs	r3, #0
    2c46:	469b      	mov	fp, r3
    2c48:	3302      	adds	r3, #2
    2c4a:	2708      	movs	r7, #8
    2c4c:	9302      	str	r3, [sp, #8]
    2c4e:	e7ce      	b.n	2bee <__aeabi_dmul+0x4a>
    2c50:	4642      	mov	r2, r8
    2c52:	9201      	str	r2, [sp, #4]
    2c54:	2802      	cmp	r0, #2
    2c56:	d067      	beq.n	2d28 <__aeabi_dmul+0x184>
    2c58:	2803      	cmp	r0, #3
    2c5a:	d100      	bne.n	2c5e <__aeabi_dmul+0xba>
    2c5c:	e20e      	b.n	307c <__aeabi_dmul+0x4d8>
    2c5e:	2801      	cmp	r0, #1
    2c60:	d000      	beq.n	2c64 <__aeabi_dmul+0xc0>
    2c62:	e162      	b.n	2f2a <__aeabi_dmul+0x386>
    2c64:	2300      	movs	r3, #0
    2c66:	2400      	movs	r4, #0
    2c68:	2200      	movs	r2, #0
    2c6a:	4699      	mov	r9, r3
    2c6c:	9901      	ldr	r1, [sp, #4]
    2c6e:	4001      	ands	r1, r0
    2c70:	b2cd      	uxtb	r5, r1
    2c72:	2100      	movs	r1, #0
    2c74:	0312      	lsls	r2, r2, #12
    2c76:	0d0b      	lsrs	r3, r1, #20
    2c78:	0b12      	lsrs	r2, r2, #12
    2c7a:	051b      	lsls	r3, r3, #20
    2c7c:	4313      	orrs	r3, r2
    2c7e:	4a43      	ldr	r2, [pc, #268]	; (2d8c <__aeabi_dmul+0x1e8>)
    2c80:	0524      	lsls	r4, r4, #20
    2c82:	4013      	ands	r3, r2
    2c84:	431c      	orrs	r4, r3
    2c86:	0064      	lsls	r4, r4, #1
    2c88:	07ed      	lsls	r5, r5, #31
    2c8a:	0864      	lsrs	r4, r4, #1
    2c8c:	432c      	orrs	r4, r5
    2c8e:	4648      	mov	r0, r9
    2c90:	0021      	movs	r1, r4
    2c92:	b007      	add	sp, #28
    2c94:	bc3c      	pop	{r2, r3, r4, r5}
    2c96:	4690      	mov	r8, r2
    2c98:	4699      	mov	r9, r3
    2c9a:	46a2      	mov	sl, r4
    2c9c:	46ab      	mov	fp, r5
    2c9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ca0:	4303      	orrs	r3, r0
    2ca2:	4699      	mov	r9, r3
    2ca4:	d04f      	beq.n	2d46 <__aeabi_dmul+0x1a2>
    2ca6:	465b      	mov	r3, fp
    2ca8:	2b00      	cmp	r3, #0
    2caa:	d100      	bne.n	2cae <__aeabi_dmul+0x10a>
    2cac:	e189      	b.n	2fc2 <__aeabi_dmul+0x41e>
    2cae:	4658      	mov	r0, fp
    2cb0:	f000 fe86 	bl	39c0 <__clzsi2>
    2cb4:	0003      	movs	r3, r0
    2cb6:	3b0b      	subs	r3, #11
    2cb8:	2b1c      	cmp	r3, #28
    2cba:	dd00      	ble.n	2cbe <__aeabi_dmul+0x11a>
    2cbc:	e17a      	b.n	2fb4 <__aeabi_dmul+0x410>
    2cbe:	221d      	movs	r2, #29
    2cc0:	1ad3      	subs	r3, r2, r3
    2cc2:	003a      	movs	r2, r7
    2cc4:	0001      	movs	r1, r0
    2cc6:	465c      	mov	r4, fp
    2cc8:	40da      	lsrs	r2, r3
    2cca:	3908      	subs	r1, #8
    2ccc:	408c      	lsls	r4, r1
    2cce:	0013      	movs	r3, r2
    2cd0:	408f      	lsls	r7, r1
    2cd2:	4323      	orrs	r3, r4
    2cd4:	469b      	mov	fp, r3
    2cd6:	46b9      	mov	r9, r7
    2cd8:	2300      	movs	r3, #0
    2cda:	4e2d      	ldr	r6, [pc, #180]	; (2d90 <__aeabi_dmul+0x1ec>)
    2cdc:	2700      	movs	r7, #0
    2cde:	1a36      	subs	r6, r6, r0
    2ce0:	9302      	str	r3, [sp, #8]
    2ce2:	e784      	b.n	2bee <__aeabi_dmul+0x4a>
    2ce4:	4653      	mov	r3, sl
    2ce6:	4323      	orrs	r3, r4
    2ce8:	d12a      	bne.n	2d40 <__aeabi_dmul+0x19c>
    2cea:	2400      	movs	r4, #0
    2cec:	2002      	movs	r0, #2
    2cee:	e796      	b.n	2c1e <__aeabi_dmul+0x7a>
    2cf0:	4653      	mov	r3, sl
    2cf2:	4323      	orrs	r3, r4
    2cf4:	d020      	beq.n	2d38 <__aeabi_dmul+0x194>
    2cf6:	2c00      	cmp	r4, #0
    2cf8:	d100      	bne.n	2cfc <__aeabi_dmul+0x158>
    2cfa:	e157      	b.n	2fac <__aeabi_dmul+0x408>
    2cfc:	0020      	movs	r0, r4
    2cfe:	f000 fe5f 	bl	39c0 <__clzsi2>
    2d02:	0003      	movs	r3, r0
    2d04:	3b0b      	subs	r3, #11
    2d06:	2b1c      	cmp	r3, #28
    2d08:	dd00      	ble.n	2d0c <__aeabi_dmul+0x168>
    2d0a:	e149      	b.n	2fa0 <__aeabi_dmul+0x3fc>
    2d0c:	211d      	movs	r1, #29
    2d0e:	1acb      	subs	r3, r1, r3
    2d10:	4651      	mov	r1, sl
    2d12:	0002      	movs	r2, r0
    2d14:	40d9      	lsrs	r1, r3
    2d16:	4653      	mov	r3, sl
    2d18:	3a08      	subs	r2, #8
    2d1a:	4094      	lsls	r4, r2
    2d1c:	4093      	lsls	r3, r2
    2d1e:	430c      	orrs	r4, r1
    2d20:	4a1b      	ldr	r2, [pc, #108]	; (2d90 <__aeabi_dmul+0x1ec>)
    2d22:	1a12      	subs	r2, r2, r0
    2d24:	2000      	movs	r0, #0
    2d26:	e77a      	b.n	2c1e <__aeabi_dmul+0x7a>
    2d28:	2501      	movs	r5, #1
    2d2a:	9b01      	ldr	r3, [sp, #4]
    2d2c:	4c14      	ldr	r4, [pc, #80]	; (2d80 <__aeabi_dmul+0x1dc>)
    2d2e:	401d      	ands	r5, r3
    2d30:	2300      	movs	r3, #0
    2d32:	2200      	movs	r2, #0
    2d34:	4699      	mov	r9, r3
    2d36:	e79c      	b.n	2c72 <__aeabi_dmul+0xce>
    2d38:	2400      	movs	r4, #0
    2d3a:	2200      	movs	r2, #0
    2d3c:	2001      	movs	r0, #1
    2d3e:	e76e      	b.n	2c1e <__aeabi_dmul+0x7a>
    2d40:	4653      	mov	r3, sl
    2d42:	2003      	movs	r0, #3
    2d44:	e76b      	b.n	2c1e <__aeabi_dmul+0x7a>
    2d46:	2300      	movs	r3, #0
    2d48:	469b      	mov	fp, r3
    2d4a:	3301      	adds	r3, #1
    2d4c:	2704      	movs	r7, #4
    2d4e:	2600      	movs	r6, #0
    2d50:	9302      	str	r3, [sp, #8]
    2d52:	e74c      	b.n	2bee <__aeabi_dmul+0x4a>
    2d54:	2303      	movs	r3, #3
    2d56:	4681      	mov	r9, r0
    2d58:	270c      	movs	r7, #12
    2d5a:	9302      	str	r3, [sp, #8]
    2d5c:	e747      	b.n	2bee <__aeabi_dmul+0x4a>
    2d5e:	2280      	movs	r2, #128	; 0x80
    2d60:	2300      	movs	r3, #0
    2d62:	2500      	movs	r5, #0
    2d64:	0312      	lsls	r2, r2, #12
    2d66:	4699      	mov	r9, r3
    2d68:	4c05      	ldr	r4, [pc, #20]	; (2d80 <__aeabi_dmul+0x1dc>)
    2d6a:	e782      	b.n	2c72 <__aeabi_dmul+0xce>
    2d6c:	465c      	mov	r4, fp
    2d6e:	464b      	mov	r3, r9
    2d70:	9802      	ldr	r0, [sp, #8]
    2d72:	e76f      	b.n	2c54 <__aeabi_dmul+0xb0>
    2d74:	465c      	mov	r4, fp
    2d76:	464b      	mov	r3, r9
    2d78:	9501      	str	r5, [sp, #4]
    2d7a:	9802      	ldr	r0, [sp, #8]
    2d7c:	e76a      	b.n	2c54 <__aeabi_dmul+0xb0>
    2d7e:	46c0      	nop			; (mov r8, r8)
    2d80:	000007ff 	.word	0x000007ff
    2d84:	fffffc01 	.word	0xfffffc01
    2d88:	00005d04 	.word	0x00005d04
    2d8c:	800fffff 	.word	0x800fffff
    2d90:	fffffc0d 	.word	0xfffffc0d
    2d94:	464a      	mov	r2, r9
    2d96:	4649      	mov	r1, r9
    2d98:	0c17      	lsrs	r7, r2, #16
    2d9a:	0c1a      	lsrs	r2, r3, #16
    2d9c:	041b      	lsls	r3, r3, #16
    2d9e:	0c1b      	lsrs	r3, r3, #16
    2da0:	0408      	lsls	r0, r1, #16
    2da2:	0019      	movs	r1, r3
    2da4:	0c00      	lsrs	r0, r0, #16
    2da6:	4341      	muls	r1, r0
    2da8:	0015      	movs	r5, r2
    2daa:	4688      	mov	r8, r1
    2dac:	0019      	movs	r1, r3
    2dae:	437d      	muls	r5, r7
    2db0:	4379      	muls	r1, r7
    2db2:	9503      	str	r5, [sp, #12]
    2db4:	4689      	mov	r9, r1
    2db6:	0029      	movs	r1, r5
    2db8:	0015      	movs	r5, r2
    2dba:	4345      	muls	r5, r0
    2dbc:	444d      	add	r5, r9
    2dbe:	9502      	str	r5, [sp, #8]
    2dc0:	4645      	mov	r5, r8
    2dc2:	0c2d      	lsrs	r5, r5, #16
    2dc4:	46aa      	mov	sl, r5
    2dc6:	9d02      	ldr	r5, [sp, #8]
    2dc8:	4455      	add	r5, sl
    2dca:	45a9      	cmp	r9, r5
    2dcc:	d906      	bls.n	2ddc <__aeabi_dmul+0x238>
    2dce:	468a      	mov	sl, r1
    2dd0:	2180      	movs	r1, #128	; 0x80
    2dd2:	0249      	lsls	r1, r1, #9
    2dd4:	4689      	mov	r9, r1
    2dd6:	44ca      	add	sl, r9
    2dd8:	4651      	mov	r1, sl
    2dda:	9103      	str	r1, [sp, #12]
    2ddc:	0c29      	lsrs	r1, r5, #16
    2dde:	9104      	str	r1, [sp, #16]
    2de0:	4641      	mov	r1, r8
    2de2:	0409      	lsls	r1, r1, #16
    2de4:	042d      	lsls	r5, r5, #16
    2de6:	0c09      	lsrs	r1, r1, #16
    2de8:	4688      	mov	r8, r1
    2dea:	0029      	movs	r1, r5
    2dec:	0c25      	lsrs	r5, r4, #16
    2dee:	0424      	lsls	r4, r4, #16
    2df0:	4441      	add	r1, r8
    2df2:	0c24      	lsrs	r4, r4, #16
    2df4:	9105      	str	r1, [sp, #20]
    2df6:	0021      	movs	r1, r4
    2df8:	4341      	muls	r1, r0
    2dfa:	4688      	mov	r8, r1
    2dfc:	0021      	movs	r1, r4
    2dfe:	4379      	muls	r1, r7
    2e00:	468a      	mov	sl, r1
    2e02:	4368      	muls	r0, r5
    2e04:	4641      	mov	r1, r8
    2e06:	4450      	add	r0, sl
    2e08:	4681      	mov	r9, r0
    2e0a:	0c08      	lsrs	r0, r1, #16
    2e0c:	4448      	add	r0, r9
    2e0e:	436f      	muls	r7, r5
    2e10:	4582      	cmp	sl, r0
    2e12:	d903      	bls.n	2e1c <__aeabi_dmul+0x278>
    2e14:	2180      	movs	r1, #128	; 0x80
    2e16:	0249      	lsls	r1, r1, #9
    2e18:	4689      	mov	r9, r1
    2e1a:	444f      	add	r7, r9
    2e1c:	0c01      	lsrs	r1, r0, #16
    2e1e:	4689      	mov	r9, r1
    2e20:	0039      	movs	r1, r7
    2e22:	4449      	add	r1, r9
    2e24:	9102      	str	r1, [sp, #8]
    2e26:	4641      	mov	r1, r8
    2e28:	040f      	lsls	r7, r1, #16
    2e2a:	9904      	ldr	r1, [sp, #16]
    2e2c:	0c3f      	lsrs	r7, r7, #16
    2e2e:	4688      	mov	r8, r1
    2e30:	0400      	lsls	r0, r0, #16
    2e32:	19c0      	adds	r0, r0, r7
    2e34:	4480      	add	r8, r0
    2e36:	4641      	mov	r1, r8
    2e38:	9104      	str	r1, [sp, #16]
    2e3a:	4659      	mov	r1, fp
    2e3c:	0c0f      	lsrs	r7, r1, #16
    2e3e:	0409      	lsls	r1, r1, #16
    2e40:	0c09      	lsrs	r1, r1, #16
    2e42:	4688      	mov	r8, r1
    2e44:	4359      	muls	r1, r3
    2e46:	468a      	mov	sl, r1
    2e48:	0039      	movs	r1, r7
    2e4a:	4351      	muls	r1, r2
    2e4c:	4689      	mov	r9, r1
    2e4e:	4641      	mov	r1, r8
    2e50:	434a      	muls	r2, r1
    2e52:	4651      	mov	r1, sl
    2e54:	0c09      	lsrs	r1, r1, #16
    2e56:	468b      	mov	fp, r1
    2e58:	437b      	muls	r3, r7
    2e5a:	18d2      	adds	r2, r2, r3
    2e5c:	445a      	add	r2, fp
    2e5e:	4293      	cmp	r3, r2
    2e60:	d903      	bls.n	2e6a <__aeabi_dmul+0x2c6>
    2e62:	2380      	movs	r3, #128	; 0x80
    2e64:	025b      	lsls	r3, r3, #9
    2e66:	469b      	mov	fp, r3
    2e68:	44d9      	add	r9, fp
    2e6a:	4651      	mov	r1, sl
    2e6c:	0409      	lsls	r1, r1, #16
    2e6e:	0c09      	lsrs	r1, r1, #16
    2e70:	468a      	mov	sl, r1
    2e72:	4641      	mov	r1, r8
    2e74:	4361      	muls	r1, r4
    2e76:	437c      	muls	r4, r7
    2e78:	0c13      	lsrs	r3, r2, #16
    2e7a:	0412      	lsls	r2, r2, #16
    2e7c:	444b      	add	r3, r9
    2e7e:	4452      	add	r2, sl
    2e80:	46a1      	mov	r9, r4
    2e82:	468a      	mov	sl, r1
    2e84:	003c      	movs	r4, r7
    2e86:	4641      	mov	r1, r8
    2e88:	436c      	muls	r4, r5
    2e8a:	434d      	muls	r5, r1
    2e8c:	4651      	mov	r1, sl
    2e8e:	444d      	add	r5, r9
    2e90:	0c0f      	lsrs	r7, r1, #16
    2e92:	197d      	adds	r5, r7, r5
    2e94:	45a9      	cmp	r9, r5
    2e96:	d903      	bls.n	2ea0 <__aeabi_dmul+0x2fc>
    2e98:	2180      	movs	r1, #128	; 0x80
    2e9a:	0249      	lsls	r1, r1, #9
    2e9c:	4688      	mov	r8, r1
    2e9e:	4444      	add	r4, r8
    2ea0:	9f04      	ldr	r7, [sp, #16]
    2ea2:	9903      	ldr	r1, [sp, #12]
    2ea4:	46b8      	mov	r8, r7
    2ea6:	4441      	add	r1, r8
    2ea8:	468b      	mov	fp, r1
    2eaa:	4583      	cmp	fp, r0
    2eac:	4180      	sbcs	r0, r0
    2eae:	4241      	negs	r1, r0
    2eb0:	4688      	mov	r8, r1
    2eb2:	4651      	mov	r1, sl
    2eb4:	0408      	lsls	r0, r1, #16
    2eb6:	042f      	lsls	r7, r5, #16
    2eb8:	0c00      	lsrs	r0, r0, #16
    2eba:	183f      	adds	r7, r7, r0
    2ebc:	4658      	mov	r0, fp
    2ebe:	9902      	ldr	r1, [sp, #8]
    2ec0:	1810      	adds	r0, r2, r0
    2ec2:	4689      	mov	r9, r1
    2ec4:	4290      	cmp	r0, r2
    2ec6:	4192      	sbcs	r2, r2
    2ec8:	444f      	add	r7, r9
    2eca:	46ba      	mov	sl, r7
    2ecc:	4252      	negs	r2, r2
    2ece:	4699      	mov	r9, r3
    2ed0:	4693      	mov	fp, r2
    2ed2:	44c2      	add	sl, r8
    2ed4:	44d1      	add	r9, sl
    2ed6:	44cb      	add	fp, r9
    2ed8:	428f      	cmp	r7, r1
    2eda:	41bf      	sbcs	r7, r7
    2edc:	45c2      	cmp	sl, r8
    2ede:	4189      	sbcs	r1, r1
    2ee0:	4599      	cmp	r9, r3
    2ee2:	419b      	sbcs	r3, r3
    2ee4:	4593      	cmp	fp, r2
    2ee6:	4192      	sbcs	r2, r2
    2ee8:	427f      	negs	r7, r7
    2eea:	4249      	negs	r1, r1
    2eec:	0c2d      	lsrs	r5, r5, #16
    2eee:	4252      	negs	r2, r2
    2ef0:	430f      	orrs	r7, r1
    2ef2:	425b      	negs	r3, r3
    2ef4:	4313      	orrs	r3, r2
    2ef6:	197f      	adds	r7, r7, r5
    2ef8:	18ff      	adds	r7, r7, r3
    2efa:	465b      	mov	r3, fp
    2efc:	193c      	adds	r4, r7, r4
    2efe:	0ddb      	lsrs	r3, r3, #23
    2f00:	9a05      	ldr	r2, [sp, #20]
    2f02:	0264      	lsls	r4, r4, #9
    2f04:	431c      	orrs	r4, r3
    2f06:	0243      	lsls	r3, r0, #9
    2f08:	4313      	orrs	r3, r2
    2f0a:	1e5d      	subs	r5, r3, #1
    2f0c:	41ab      	sbcs	r3, r5
    2f0e:	465a      	mov	r2, fp
    2f10:	0dc0      	lsrs	r0, r0, #23
    2f12:	4303      	orrs	r3, r0
    2f14:	0252      	lsls	r2, r2, #9
    2f16:	4313      	orrs	r3, r2
    2f18:	01e2      	lsls	r2, r4, #7
    2f1a:	d556      	bpl.n	2fca <__aeabi_dmul+0x426>
    2f1c:	2001      	movs	r0, #1
    2f1e:	085a      	lsrs	r2, r3, #1
    2f20:	4003      	ands	r3, r0
    2f22:	4313      	orrs	r3, r2
    2f24:	07e2      	lsls	r2, r4, #31
    2f26:	4313      	orrs	r3, r2
    2f28:	0864      	lsrs	r4, r4, #1
    2f2a:	485a      	ldr	r0, [pc, #360]	; (3094 <__aeabi_dmul+0x4f0>)
    2f2c:	4460      	add	r0, ip
    2f2e:	2800      	cmp	r0, #0
    2f30:	dd4d      	ble.n	2fce <__aeabi_dmul+0x42a>
    2f32:	075a      	lsls	r2, r3, #29
    2f34:	d009      	beq.n	2f4a <__aeabi_dmul+0x3a6>
    2f36:	220f      	movs	r2, #15
    2f38:	401a      	ands	r2, r3
    2f3a:	2a04      	cmp	r2, #4
    2f3c:	d005      	beq.n	2f4a <__aeabi_dmul+0x3a6>
    2f3e:	1d1a      	adds	r2, r3, #4
    2f40:	429a      	cmp	r2, r3
    2f42:	419b      	sbcs	r3, r3
    2f44:	425b      	negs	r3, r3
    2f46:	18e4      	adds	r4, r4, r3
    2f48:	0013      	movs	r3, r2
    2f4a:	01e2      	lsls	r2, r4, #7
    2f4c:	d504      	bpl.n	2f58 <__aeabi_dmul+0x3b4>
    2f4e:	2080      	movs	r0, #128	; 0x80
    2f50:	4a51      	ldr	r2, [pc, #324]	; (3098 <__aeabi_dmul+0x4f4>)
    2f52:	00c0      	lsls	r0, r0, #3
    2f54:	4014      	ands	r4, r2
    2f56:	4460      	add	r0, ip
    2f58:	4a50      	ldr	r2, [pc, #320]	; (309c <__aeabi_dmul+0x4f8>)
    2f5a:	4290      	cmp	r0, r2
    2f5c:	dd00      	ble.n	2f60 <__aeabi_dmul+0x3bc>
    2f5e:	e6e3      	b.n	2d28 <__aeabi_dmul+0x184>
    2f60:	2501      	movs	r5, #1
    2f62:	08db      	lsrs	r3, r3, #3
    2f64:	0762      	lsls	r2, r4, #29
    2f66:	431a      	orrs	r2, r3
    2f68:	0264      	lsls	r4, r4, #9
    2f6a:	9b01      	ldr	r3, [sp, #4]
    2f6c:	4691      	mov	r9, r2
    2f6e:	0b22      	lsrs	r2, r4, #12
    2f70:	0544      	lsls	r4, r0, #21
    2f72:	0d64      	lsrs	r4, r4, #21
    2f74:	401d      	ands	r5, r3
    2f76:	e67c      	b.n	2c72 <__aeabi_dmul+0xce>
    2f78:	2280      	movs	r2, #128	; 0x80
    2f7a:	4659      	mov	r1, fp
    2f7c:	0312      	lsls	r2, r2, #12
    2f7e:	4211      	tst	r1, r2
    2f80:	d008      	beq.n	2f94 <__aeabi_dmul+0x3f0>
    2f82:	4214      	tst	r4, r2
    2f84:	d106      	bne.n	2f94 <__aeabi_dmul+0x3f0>
    2f86:	4322      	orrs	r2, r4
    2f88:	0312      	lsls	r2, r2, #12
    2f8a:	0b12      	lsrs	r2, r2, #12
    2f8c:	4645      	mov	r5, r8
    2f8e:	4699      	mov	r9, r3
    2f90:	4c43      	ldr	r4, [pc, #268]	; (30a0 <__aeabi_dmul+0x4fc>)
    2f92:	e66e      	b.n	2c72 <__aeabi_dmul+0xce>
    2f94:	465b      	mov	r3, fp
    2f96:	431a      	orrs	r2, r3
    2f98:	0312      	lsls	r2, r2, #12
    2f9a:	0b12      	lsrs	r2, r2, #12
    2f9c:	4c40      	ldr	r4, [pc, #256]	; (30a0 <__aeabi_dmul+0x4fc>)
    2f9e:	e668      	b.n	2c72 <__aeabi_dmul+0xce>
    2fa0:	0003      	movs	r3, r0
    2fa2:	4654      	mov	r4, sl
    2fa4:	3b28      	subs	r3, #40	; 0x28
    2fa6:	409c      	lsls	r4, r3
    2fa8:	2300      	movs	r3, #0
    2faa:	e6b9      	b.n	2d20 <__aeabi_dmul+0x17c>
    2fac:	f000 fd08 	bl	39c0 <__clzsi2>
    2fb0:	3020      	adds	r0, #32
    2fb2:	e6a6      	b.n	2d02 <__aeabi_dmul+0x15e>
    2fb4:	0003      	movs	r3, r0
    2fb6:	3b28      	subs	r3, #40	; 0x28
    2fb8:	409f      	lsls	r7, r3
    2fba:	2300      	movs	r3, #0
    2fbc:	46bb      	mov	fp, r7
    2fbe:	4699      	mov	r9, r3
    2fc0:	e68a      	b.n	2cd8 <__aeabi_dmul+0x134>
    2fc2:	f000 fcfd 	bl	39c0 <__clzsi2>
    2fc6:	3020      	adds	r0, #32
    2fc8:	e674      	b.n	2cb4 <__aeabi_dmul+0x110>
    2fca:	46b4      	mov	ip, r6
    2fcc:	e7ad      	b.n	2f2a <__aeabi_dmul+0x386>
    2fce:	2501      	movs	r5, #1
    2fd0:	1a2a      	subs	r2, r5, r0
    2fd2:	2a38      	cmp	r2, #56	; 0x38
    2fd4:	dd06      	ble.n	2fe4 <__aeabi_dmul+0x440>
    2fd6:	9b01      	ldr	r3, [sp, #4]
    2fd8:	2400      	movs	r4, #0
    2fda:	401d      	ands	r5, r3
    2fdc:	2300      	movs	r3, #0
    2fde:	2200      	movs	r2, #0
    2fe0:	4699      	mov	r9, r3
    2fe2:	e646      	b.n	2c72 <__aeabi_dmul+0xce>
    2fe4:	2a1f      	cmp	r2, #31
    2fe6:	dc21      	bgt.n	302c <__aeabi_dmul+0x488>
    2fe8:	2520      	movs	r5, #32
    2fea:	0020      	movs	r0, r4
    2fec:	1aad      	subs	r5, r5, r2
    2fee:	001e      	movs	r6, r3
    2ff0:	40ab      	lsls	r3, r5
    2ff2:	40a8      	lsls	r0, r5
    2ff4:	40d6      	lsrs	r6, r2
    2ff6:	1e5d      	subs	r5, r3, #1
    2ff8:	41ab      	sbcs	r3, r5
    2ffa:	4330      	orrs	r0, r6
    2ffc:	4318      	orrs	r0, r3
    2ffe:	40d4      	lsrs	r4, r2
    3000:	0743      	lsls	r3, r0, #29
    3002:	d009      	beq.n	3018 <__aeabi_dmul+0x474>
    3004:	230f      	movs	r3, #15
    3006:	4003      	ands	r3, r0
    3008:	2b04      	cmp	r3, #4
    300a:	d005      	beq.n	3018 <__aeabi_dmul+0x474>
    300c:	0003      	movs	r3, r0
    300e:	1d18      	adds	r0, r3, #4
    3010:	4298      	cmp	r0, r3
    3012:	419b      	sbcs	r3, r3
    3014:	425b      	negs	r3, r3
    3016:	18e4      	adds	r4, r4, r3
    3018:	0223      	lsls	r3, r4, #8
    301a:	d521      	bpl.n	3060 <__aeabi_dmul+0x4bc>
    301c:	2501      	movs	r5, #1
    301e:	9b01      	ldr	r3, [sp, #4]
    3020:	2401      	movs	r4, #1
    3022:	401d      	ands	r5, r3
    3024:	2300      	movs	r3, #0
    3026:	2200      	movs	r2, #0
    3028:	4699      	mov	r9, r3
    302a:	e622      	b.n	2c72 <__aeabi_dmul+0xce>
    302c:	251f      	movs	r5, #31
    302e:	0021      	movs	r1, r4
    3030:	426d      	negs	r5, r5
    3032:	1a28      	subs	r0, r5, r0
    3034:	40c1      	lsrs	r1, r0
    3036:	0008      	movs	r0, r1
    3038:	2a20      	cmp	r2, #32
    303a:	d01d      	beq.n	3078 <__aeabi_dmul+0x4d4>
    303c:	355f      	adds	r5, #95	; 0x5f
    303e:	1aaa      	subs	r2, r5, r2
    3040:	4094      	lsls	r4, r2
    3042:	4323      	orrs	r3, r4
    3044:	1e5c      	subs	r4, r3, #1
    3046:	41a3      	sbcs	r3, r4
    3048:	2507      	movs	r5, #7
    304a:	4303      	orrs	r3, r0
    304c:	401d      	ands	r5, r3
    304e:	2200      	movs	r2, #0
    3050:	2d00      	cmp	r5, #0
    3052:	d009      	beq.n	3068 <__aeabi_dmul+0x4c4>
    3054:	220f      	movs	r2, #15
    3056:	2400      	movs	r4, #0
    3058:	401a      	ands	r2, r3
    305a:	0018      	movs	r0, r3
    305c:	2a04      	cmp	r2, #4
    305e:	d1d6      	bne.n	300e <__aeabi_dmul+0x46a>
    3060:	0003      	movs	r3, r0
    3062:	0765      	lsls	r5, r4, #29
    3064:	0264      	lsls	r4, r4, #9
    3066:	0b22      	lsrs	r2, r4, #12
    3068:	08db      	lsrs	r3, r3, #3
    306a:	432b      	orrs	r3, r5
    306c:	2501      	movs	r5, #1
    306e:	4699      	mov	r9, r3
    3070:	9b01      	ldr	r3, [sp, #4]
    3072:	2400      	movs	r4, #0
    3074:	401d      	ands	r5, r3
    3076:	e5fc      	b.n	2c72 <__aeabi_dmul+0xce>
    3078:	2400      	movs	r4, #0
    307a:	e7e2      	b.n	3042 <__aeabi_dmul+0x49e>
    307c:	2280      	movs	r2, #128	; 0x80
    307e:	2501      	movs	r5, #1
    3080:	0312      	lsls	r2, r2, #12
    3082:	4322      	orrs	r2, r4
    3084:	9901      	ldr	r1, [sp, #4]
    3086:	0312      	lsls	r2, r2, #12
    3088:	0b12      	lsrs	r2, r2, #12
    308a:	400d      	ands	r5, r1
    308c:	4699      	mov	r9, r3
    308e:	4c04      	ldr	r4, [pc, #16]	; (30a0 <__aeabi_dmul+0x4fc>)
    3090:	e5ef      	b.n	2c72 <__aeabi_dmul+0xce>
    3092:	46c0      	nop			; (mov r8, r8)
    3094:	000003ff 	.word	0x000003ff
    3098:	feffffff 	.word	0xfeffffff
    309c:	000007fe 	.word	0x000007fe
    30a0:	000007ff 	.word	0x000007ff

000030a4 <__aeabi_dsub>:
    30a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    30a6:	4646      	mov	r6, r8
    30a8:	46d6      	mov	lr, sl
    30aa:	464f      	mov	r7, r9
    30ac:	030c      	lsls	r4, r1, #12
    30ae:	b5c0      	push	{r6, r7, lr}
    30b0:	0fcd      	lsrs	r5, r1, #31
    30b2:	004e      	lsls	r6, r1, #1
    30b4:	0a61      	lsrs	r1, r4, #9
    30b6:	0f44      	lsrs	r4, r0, #29
    30b8:	430c      	orrs	r4, r1
    30ba:	00c1      	lsls	r1, r0, #3
    30bc:	0058      	lsls	r0, r3, #1
    30be:	0d40      	lsrs	r0, r0, #21
    30c0:	4684      	mov	ip, r0
    30c2:	468a      	mov	sl, r1
    30c4:	000f      	movs	r7, r1
    30c6:	0319      	lsls	r1, r3, #12
    30c8:	0f50      	lsrs	r0, r2, #29
    30ca:	0a49      	lsrs	r1, r1, #9
    30cc:	4301      	orrs	r1, r0
    30ce:	48c6      	ldr	r0, [pc, #792]	; (33e8 <__aeabi_dsub+0x344>)
    30d0:	0d76      	lsrs	r6, r6, #21
    30d2:	46a8      	mov	r8, r5
    30d4:	0fdb      	lsrs	r3, r3, #31
    30d6:	00d2      	lsls	r2, r2, #3
    30d8:	4584      	cmp	ip, r0
    30da:	d100      	bne.n	30de <__aeabi_dsub+0x3a>
    30dc:	e0d8      	b.n	3290 <__aeabi_dsub+0x1ec>
    30de:	2001      	movs	r0, #1
    30e0:	4043      	eors	r3, r0
    30e2:	42ab      	cmp	r3, r5
    30e4:	d100      	bne.n	30e8 <__aeabi_dsub+0x44>
    30e6:	e0a6      	b.n	3236 <__aeabi_dsub+0x192>
    30e8:	4660      	mov	r0, ip
    30ea:	1a35      	subs	r5, r6, r0
    30ec:	2d00      	cmp	r5, #0
    30ee:	dc00      	bgt.n	30f2 <__aeabi_dsub+0x4e>
    30f0:	e105      	b.n	32fe <__aeabi_dsub+0x25a>
    30f2:	2800      	cmp	r0, #0
    30f4:	d110      	bne.n	3118 <__aeabi_dsub+0x74>
    30f6:	000b      	movs	r3, r1
    30f8:	4313      	orrs	r3, r2
    30fa:	d100      	bne.n	30fe <__aeabi_dsub+0x5a>
    30fc:	e0d7      	b.n	32ae <__aeabi_dsub+0x20a>
    30fe:	1e6b      	subs	r3, r5, #1
    3100:	2b00      	cmp	r3, #0
    3102:	d000      	beq.n	3106 <__aeabi_dsub+0x62>
    3104:	e14b      	b.n	339e <__aeabi_dsub+0x2fa>
    3106:	4653      	mov	r3, sl
    3108:	1a9f      	subs	r7, r3, r2
    310a:	45ba      	cmp	sl, r7
    310c:	4180      	sbcs	r0, r0
    310e:	1a64      	subs	r4, r4, r1
    3110:	4240      	negs	r0, r0
    3112:	1a24      	subs	r4, r4, r0
    3114:	2601      	movs	r6, #1
    3116:	e01e      	b.n	3156 <__aeabi_dsub+0xb2>
    3118:	4bb3      	ldr	r3, [pc, #716]	; (33e8 <__aeabi_dsub+0x344>)
    311a:	429e      	cmp	r6, r3
    311c:	d048      	beq.n	31b0 <__aeabi_dsub+0x10c>
    311e:	2380      	movs	r3, #128	; 0x80
    3120:	041b      	lsls	r3, r3, #16
    3122:	4319      	orrs	r1, r3
    3124:	2d38      	cmp	r5, #56	; 0x38
    3126:	dd00      	ble.n	312a <__aeabi_dsub+0x86>
    3128:	e119      	b.n	335e <__aeabi_dsub+0x2ba>
    312a:	2d1f      	cmp	r5, #31
    312c:	dd00      	ble.n	3130 <__aeabi_dsub+0x8c>
    312e:	e14c      	b.n	33ca <__aeabi_dsub+0x326>
    3130:	2320      	movs	r3, #32
    3132:	000f      	movs	r7, r1
    3134:	1b5b      	subs	r3, r3, r5
    3136:	0010      	movs	r0, r2
    3138:	409a      	lsls	r2, r3
    313a:	409f      	lsls	r7, r3
    313c:	40e8      	lsrs	r0, r5
    313e:	1e53      	subs	r3, r2, #1
    3140:	419a      	sbcs	r2, r3
    3142:	40e9      	lsrs	r1, r5
    3144:	4307      	orrs	r7, r0
    3146:	4317      	orrs	r7, r2
    3148:	4653      	mov	r3, sl
    314a:	1bdf      	subs	r7, r3, r7
    314c:	1a61      	subs	r1, r4, r1
    314e:	45ba      	cmp	sl, r7
    3150:	41a4      	sbcs	r4, r4
    3152:	4264      	negs	r4, r4
    3154:	1b0c      	subs	r4, r1, r4
    3156:	0223      	lsls	r3, r4, #8
    3158:	d400      	bmi.n	315c <__aeabi_dsub+0xb8>
    315a:	e0c5      	b.n	32e8 <__aeabi_dsub+0x244>
    315c:	0264      	lsls	r4, r4, #9
    315e:	0a65      	lsrs	r5, r4, #9
    3160:	2d00      	cmp	r5, #0
    3162:	d100      	bne.n	3166 <__aeabi_dsub+0xc2>
    3164:	e0f6      	b.n	3354 <__aeabi_dsub+0x2b0>
    3166:	0028      	movs	r0, r5
    3168:	f000 fc2a 	bl	39c0 <__clzsi2>
    316c:	0003      	movs	r3, r0
    316e:	3b08      	subs	r3, #8
    3170:	2b1f      	cmp	r3, #31
    3172:	dd00      	ble.n	3176 <__aeabi_dsub+0xd2>
    3174:	e0e9      	b.n	334a <__aeabi_dsub+0x2a6>
    3176:	2220      	movs	r2, #32
    3178:	003c      	movs	r4, r7
    317a:	1ad2      	subs	r2, r2, r3
    317c:	409d      	lsls	r5, r3
    317e:	40d4      	lsrs	r4, r2
    3180:	409f      	lsls	r7, r3
    3182:	4325      	orrs	r5, r4
    3184:	429e      	cmp	r6, r3
    3186:	dd00      	ble.n	318a <__aeabi_dsub+0xe6>
    3188:	e0db      	b.n	3342 <__aeabi_dsub+0x29e>
    318a:	1b9e      	subs	r6, r3, r6
    318c:	1c73      	adds	r3, r6, #1
    318e:	2b1f      	cmp	r3, #31
    3190:	dd00      	ble.n	3194 <__aeabi_dsub+0xf0>
    3192:	e10a      	b.n	33aa <__aeabi_dsub+0x306>
    3194:	2220      	movs	r2, #32
    3196:	0038      	movs	r0, r7
    3198:	1ad2      	subs	r2, r2, r3
    319a:	0029      	movs	r1, r5
    319c:	4097      	lsls	r7, r2
    319e:	002c      	movs	r4, r5
    31a0:	4091      	lsls	r1, r2
    31a2:	40d8      	lsrs	r0, r3
    31a4:	1e7a      	subs	r2, r7, #1
    31a6:	4197      	sbcs	r7, r2
    31a8:	40dc      	lsrs	r4, r3
    31aa:	2600      	movs	r6, #0
    31ac:	4301      	orrs	r1, r0
    31ae:	430f      	orrs	r7, r1
    31b0:	077b      	lsls	r3, r7, #29
    31b2:	d009      	beq.n	31c8 <__aeabi_dsub+0x124>
    31b4:	230f      	movs	r3, #15
    31b6:	403b      	ands	r3, r7
    31b8:	2b04      	cmp	r3, #4
    31ba:	d005      	beq.n	31c8 <__aeabi_dsub+0x124>
    31bc:	1d3b      	adds	r3, r7, #4
    31be:	42bb      	cmp	r3, r7
    31c0:	41bf      	sbcs	r7, r7
    31c2:	427f      	negs	r7, r7
    31c4:	19e4      	adds	r4, r4, r7
    31c6:	001f      	movs	r7, r3
    31c8:	0223      	lsls	r3, r4, #8
    31ca:	d525      	bpl.n	3218 <__aeabi_dsub+0x174>
    31cc:	4b86      	ldr	r3, [pc, #536]	; (33e8 <__aeabi_dsub+0x344>)
    31ce:	3601      	adds	r6, #1
    31d0:	429e      	cmp	r6, r3
    31d2:	d100      	bne.n	31d6 <__aeabi_dsub+0x132>
    31d4:	e0af      	b.n	3336 <__aeabi_dsub+0x292>
    31d6:	4b85      	ldr	r3, [pc, #532]	; (33ec <__aeabi_dsub+0x348>)
    31d8:	2501      	movs	r5, #1
    31da:	401c      	ands	r4, r3
    31dc:	4643      	mov	r3, r8
    31de:	0762      	lsls	r2, r4, #29
    31e0:	08ff      	lsrs	r7, r7, #3
    31e2:	0264      	lsls	r4, r4, #9
    31e4:	0576      	lsls	r6, r6, #21
    31e6:	4317      	orrs	r7, r2
    31e8:	0b24      	lsrs	r4, r4, #12
    31ea:	0d76      	lsrs	r6, r6, #21
    31ec:	401d      	ands	r5, r3
    31ee:	2100      	movs	r1, #0
    31f0:	0324      	lsls	r4, r4, #12
    31f2:	0b23      	lsrs	r3, r4, #12
    31f4:	0d0c      	lsrs	r4, r1, #20
    31f6:	4a7e      	ldr	r2, [pc, #504]	; (33f0 <__aeabi_dsub+0x34c>)
    31f8:	0524      	lsls	r4, r4, #20
    31fa:	431c      	orrs	r4, r3
    31fc:	4014      	ands	r4, r2
    31fe:	0533      	lsls	r3, r6, #20
    3200:	4323      	orrs	r3, r4
    3202:	005b      	lsls	r3, r3, #1
    3204:	07ed      	lsls	r5, r5, #31
    3206:	085b      	lsrs	r3, r3, #1
    3208:	432b      	orrs	r3, r5
    320a:	0038      	movs	r0, r7
    320c:	0019      	movs	r1, r3
    320e:	bc1c      	pop	{r2, r3, r4}
    3210:	4690      	mov	r8, r2
    3212:	4699      	mov	r9, r3
    3214:	46a2      	mov	sl, r4
    3216:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3218:	2501      	movs	r5, #1
    321a:	4643      	mov	r3, r8
    321c:	0762      	lsls	r2, r4, #29
    321e:	08ff      	lsrs	r7, r7, #3
    3220:	4317      	orrs	r7, r2
    3222:	08e4      	lsrs	r4, r4, #3
    3224:	401d      	ands	r5, r3
    3226:	4b70      	ldr	r3, [pc, #448]	; (33e8 <__aeabi_dsub+0x344>)
    3228:	429e      	cmp	r6, r3
    322a:	d036      	beq.n	329a <__aeabi_dsub+0x1f6>
    322c:	0324      	lsls	r4, r4, #12
    322e:	0576      	lsls	r6, r6, #21
    3230:	0b24      	lsrs	r4, r4, #12
    3232:	0d76      	lsrs	r6, r6, #21
    3234:	e7db      	b.n	31ee <__aeabi_dsub+0x14a>
    3236:	4663      	mov	r3, ip
    3238:	1af3      	subs	r3, r6, r3
    323a:	2b00      	cmp	r3, #0
    323c:	dc00      	bgt.n	3240 <__aeabi_dsub+0x19c>
    323e:	e094      	b.n	336a <__aeabi_dsub+0x2c6>
    3240:	4660      	mov	r0, ip
    3242:	2800      	cmp	r0, #0
    3244:	d035      	beq.n	32b2 <__aeabi_dsub+0x20e>
    3246:	4868      	ldr	r0, [pc, #416]	; (33e8 <__aeabi_dsub+0x344>)
    3248:	4286      	cmp	r6, r0
    324a:	d0b1      	beq.n	31b0 <__aeabi_dsub+0x10c>
    324c:	2780      	movs	r7, #128	; 0x80
    324e:	043f      	lsls	r7, r7, #16
    3250:	4339      	orrs	r1, r7
    3252:	2b38      	cmp	r3, #56	; 0x38
    3254:	dc00      	bgt.n	3258 <__aeabi_dsub+0x1b4>
    3256:	e0fd      	b.n	3454 <__aeabi_dsub+0x3b0>
    3258:	430a      	orrs	r2, r1
    325a:	0017      	movs	r7, r2
    325c:	2100      	movs	r1, #0
    325e:	1e7a      	subs	r2, r7, #1
    3260:	4197      	sbcs	r7, r2
    3262:	4457      	add	r7, sl
    3264:	4557      	cmp	r7, sl
    3266:	4180      	sbcs	r0, r0
    3268:	1909      	adds	r1, r1, r4
    326a:	4244      	negs	r4, r0
    326c:	190c      	adds	r4, r1, r4
    326e:	0223      	lsls	r3, r4, #8
    3270:	d53a      	bpl.n	32e8 <__aeabi_dsub+0x244>
    3272:	4b5d      	ldr	r3, [pc, #372]	; (33e8 <__aeabi_dsub+0x344>)
    3274:	3601      	adds	r6, #1
    3276:	429e      	cmp	r6, r3
    3278:	d100      	bne.n	327c <__aeabi_dsub+0x1d8>
    327a:	e14b      	b.n	3514 <__aeabi_dsub+0x470>
    327c:	2201      	movs	r2, #1
    327e:	4b5b      	ldr	r3, [pc, #364]	; (33ec <__aeabi_dsub+0x348>)
    3280:	401c      	ands	r4, r3
    3282:	087b      	lsrs	r3, r7, #1
    3284:	4017      	ands	r7, r2
    3286:	431f      	orrs	r7, r3
    3288:	07e2      	lsls	r2, r4, #31
    328a:	4317      	orrs	r7, r2
    328c:	0864      	lsrs	r4, r4, #1
    328e:	e78f      	b.n	31b0 <__aeabi_dsub+0x10c>
    3290:	0008      	movs	r0, r1
    3292:	4310      	orrs	r0, r2
    3294:	d000      	beq.n	3298 <__aeabi_dsub+0x1f4>
    3296:	e724      	b.n	30e2 <__aeabi_dsub+0x3e>
    3298:	e721      	b.n	30de <__aeabi_dsub+0x3a>
    329a:	0023      	movs	r3, r4
    329c:	433b      	orrs	r3, r7
    329e:	d100      	bne.n	32a2 <__aeabi_dsub+0x1fe>
    32a0:	e1b9      	b.n	3616 <__aeabi_dsub+0x572>
    32a2:	2280      	movs	r2, #128	; 0x80
    32a4:	0312      	lsls	r2, r2, #12
    32a6:	4314      	orrs	r4, r2
    32a8:	0324      	lsls	r4, r4, #12
    32aa:	0b24      	lsrs	r4, r4, #12
    32ac:	e79f      	b.n	31ee <__aeabi_dsub+0x14a>
    32ae:	002e      	movs	r6, r5
    32b0:	e77e      	b.n	31b0 <__aeabi_dsub+0x10c>
    32b2:	0008      	movs	r0, r1
    32b4:	4310      	orrs	r0, r2
    32b6:	d100      	bne.n	32ba <__aeabi_dsub+0x216>
    32b8:	e0ca      	b.n	3450 <__aeabi_dsub+0x3ac>
    32ba:	1e58      	subs	r0, r3, #1
    32bc:	4684      	mov	ip, r0
    32be:	2800      	cmp	r0, #0
    32c0:	d000      	beq.n	32c4 <__aeabi_dsub+0x220>
    32c2:	e0e7      	b.n	3494 <__aeabi_dsub+0x3f0>
    32c4:	4452      	add	r2, sl
    32c6:	4552      	cmp	r2, sl
    32c8:	4180      	sbcs	r0, r0
    32ca:	1864      	adds	r4, r4, r1
    32cc:	4240      	negs	r0, r0
    32ce:	1824      	adds	r4, r4, r0
    32d0:	0017      	movs	r7, r2
    32d2:	2601      	movs	r6, #1
    32d4:	0223      	lsls	r3, r4, #8
    32d6:	d507      	bpl.n	32e8 <__aeabi_dsub+0x244>
    32d8:	2602      	movs	r6, #2
    32da:	e7cf      	b.n	327c <__aeabi_dsub+0x1d8>
    32dc:	4664      	mov	r4, ip
    32de:	432c      	orrs	r4, r5
    32e0:	d100      	bne.n	32e4 <__aeabi_dsub+0x240>
    32e2:	e1b3      	b.n	364c <__aeabi_dsub+0x5a8>
    32e4:	002c      	movs	r4, r5
    32e6:	4667      	mov	r7, ip
    32e8:	077b      	lsls	r3, r7, #29
    32ea:	d000      	beq.n	32ee <__aeabi_dsub+0x24a>
    32ec:	e762      	b.n	31b4 <__aeabi_dsub+0x110>
    32ee:	0763      	lsls	r3, r4, #29
    32f0:	08ff      	lsrs	r7, r7, #3
    32f2:	431f      	orrs	r7, r3
    32f4:	2501      	movs	r5, #1
    32f6:	4643      	mov	r3, r8
    32f8:	08e4      	lsrs	r4, r4, #3
    32fa:	401d      	ands	r5, r3
    32fc:	e793      	b.n	3226 <__aeabi_dsub+0x182>
    32fe:	2d00      	cmp	r5, #0
    3300:	d178      	bne.n	33f4 <__aeabi_dsub+0x350>
    3302:	1c75      	adds	r5, r6, #1
    3304:	056d      	lsls	r5, r5, #21
    3306:	0d6d      	lsrs	r5, r5, #21
    3308:	2d01      	cmp	r5, #1
    330a:	dc00      	bgt.n	330e <__aeabi_dsub+0x26a>
    330c:	e0f2      	b.n	34f4 <__aeabi_dsub+0x450>
    330e:	4650      	mov	r0, sl
    3310:	1a80      	subs	r0, r0, r2
    3312:	4582      	cmp	sl, r0
    3314:	41bf      	sbcs	r7, r7
    3316:	1a65      	subs	r5, r4, r1
    3318:	427f      	negs	r7, r7
    331a:	1bed      	subs	r5, r5, r7
    331c:	4684      	mov	ip, r0
    331e:	0228      	lsls	r0, r5, #8
    3320:	d400      	bmi.n	3324 <__aeabi_dsub+0x280>
    3322:	e08c      	b.n	343e <__aeabi_dsub+0x39a>
    3324:	4650      	mov	r0, sl
    3326:	1a17      	subs	r7, r2, r0
    3328:	42ba      	cmp	r2, r7
    332a:	4192      	sbcs	r2, r2
    332c:	1b0c      	subs	r4, r1, r4
    332e:	4255      	negs	r5, r2
    3330:	1b65      	subs	r5, r4, r5
    3332:	4698      	mov	r8, r3
    3334:	e714      	b.n	3160 <__aeabi_dsub+0xbc>
    3336:	2501      	movs	r5, #1
    3338:	4643      	mov	r3, r8
    333a:	2400      	movs	r4, #0
    333c:	401d      	ands	r5, r3
    333e:	2700      	movs	r7, #0
    3340:	e755      	b.n	31ee <__aeabi_dsub+0x14a>
    3342:	4c2a      	ldr	r4, [pc, #168]	; (33ec <__aeabi_dsub+0x348>)
    3344:	1af6      	subs	r6, r6, r3
    3346:	402c      	ands	r4, r5
    3348:	e732      	b.n	31b0 <__aeabi_dsub+0x10c>
    334a:	003d      	movs	r5, r7
    334c:	3828      	subs	r0, #40	; 0x28
    334e:	4085      	lsls	r5, r0
    3350:	2700      	movs	r7, #0
    3352:	e717      	b.n	3184 <__aeabi_dsub+0xe0>
    3354:	0038      	movs	r0, r7
    3356:	f000 fb33 	bl	39c0 <__clzsi2>
    335a:	3020      	adds	r0, #32
    335c:	e706      	b.n	316c <__aeabi_dsub+0xc8>
    335e:	430a      	orrs	r2, r1
    3360:	0017      	movs	r7, r2
    3362:	2100      	movs	r1, #0
    3364:	1e7a      	subs	r2, r7, #1
    3366:	4197      	sbcs	r7, r2
    3368:	e6ee      	b.n	3148 <__aeabi_dsub+0xa4>
    336a:	2b00      	cmp	r3, #0
    336c:	d000      	beq.n	3370 <__aeabi_dsub+0x2cc>
    336e:	e0e5      	b.n	353c <__aeabi_dsub+0x498>
    3370:	1c73      	adds	r3, r6, #1
    3372:	469c      	mov	ip, r3
    3374:	055b      	lsls	r3, r3, #21
    3376:	0d5b      	lsrs	r3, r3, #21
    3378:	2b01      	cmp	r3, #1
    337a:	dc00      	bgt.n	337e <__aeabi_dsub+0x2da>
    337c:	e09f      	b.n	34be <__aeabi_dsub+0x41a>
    337e:	4b1a      	ldr	r3, [pc, #104]	; (33e8 <__aeabi_dsub+0x344>)
    3380:	459c      	cmp	ip, r3
    3382:	d100      	bne.n	3386 <__aeabi_dsub+0x2e2>
    3384:	e0c5      	b.n	3512 <__aeabi_dsub+0x46e>
    3386:	4452      	add	r2, sl
    3388:	4552      	cmp	r2, sl
    338a:	4180      	sbcs	r0, r0
    338c:	1864      	adds	r4, r4, r1
    338e:	4240      	negs	r0, r0
    3390:	1824      	adds	r4, r4, r0
    3392:	07e7      	lsls	r7, r4, #31
    3394:	0852      	lsrs	r2, r2, #1
    3396:	4317      	orrs	r7, r2
    3398:	0864      	lsrs	r4, r4, #1
    339a:	4666      	mov	r6, ip
    339c:	e708      	b.n	31b0 <__aeabi_dsub+0x10c>
    339e:	4812      	ldr	r0, [pc, #72]	; (33e8 <__aeabi_dsub+0x344>)
    33a0:	4285      	cmp	r5, r0
    33a2:	d100      	bne.n	33a6 <__aeabi_dsub+0x302>
    33a4:	e085      	b.n	34b2 <__aeabi_dsub+0x40e>
    33a6:	001d      	movs	r5, r3
    33a8:	e6bc      	b.n	3124 <__aeabi_dsub+0x80>
    33aa:	0029      	movs	r1, r5
    33ac:	3e1f      	subs	r6, #31
    33ae:	40f1      	lsrs	r1, r6
    33b0:	2b20      	cmp	r3, #32
    33b2:	d100      	bne.n	33b6 <__aeabi_dsub+0x312>
    33b4:	e07f      	b.n	34b6 <__aeabi_dsub+0x412>
    33b6:	2240      	movs	r2, #64	; 0x40
    33b8:	1ad3      	subs	r3, r2, r3
    33ba:	409d      	lsls	r5, r3
    33bc:	432f      	orrs	r7, r5
    33be:	1e7d      	subs	r5, r7, #1
    33c0:	41af      	sbcs	r7, r5
    33c2:	2400      	movs	r4, #0
    33c4:	430f      	orrs	r7, r1
    33c6:	2600      	movs	r6, #0
    33c8:	e78e      	b.n	32e8 <__aeabi_dsub+0x244>
    33ca:	002b      	movs	r3, r5
    33cc:	000f      	movs	r7, r1
    33ce:	3b20      	subs	r3, #32
    33d0:	40df      	lsrs	r7, r3
    33d2:	2d20      	cmp	r5, #32
    33d4:	d071      	beq.n	34ba <__aeabi_dsub+0x416>
    33d6:	2340      	movs	r3, #64	; 0x40
    33d8:	1b5d      	subs	r5, r3, r5
    33da:	40a9      	lsls	r1, r5
    33dc:	430a      	orrs	r2, r1
    33de:	1e51      	subs	r1, r2, #1
    33e0:	418a      	sbcs	r2, r1
    33e2:	2100      	movs	r1, #0
    33e4:	4317      	orrs	r7, r2
    33e6:	e6af      	b.n	3148 <__aeabi_dsub+0xa4>
    33e8:	000007ff 	.word	0x000007ff
    33ec:	ff7fffff 	.word	0xff7fffff
    33f0:	800fffff 	.word	0x800fffff
    33f4:	2e00      	cmp	r6, #0
    33f6:	d03e      	beq.n	3476 <__aeabi_dsub+0x3d2>
    33f8:	4eb3      	ldr	r6, [pc, #716]	; (36c8 <__aeabi_dsub+0x624>)
    33fa:	45b4      	cmp	ip, r6
    33fc:	d045      	beq.n	348a <__aeabi_dsub+0x3e6>
    33fe:	2680      	movs	r6, #128	; 0x80
    3400:	0436      	lsls	r6, r6, #16
    3402:	426d      	negs	r5, r5
    3404:	4334      	orrs	r4, r6
    3406:	2d38      	cmp	r5, #56	; 0x38
    3408:	dd00      	ble.n	340c <__aeabi_dsub+0x368>
    340a:	e0a8      	b.n	355e <__aeabi_dsub+0x4ba>
    340c:	2d1f      	cmp	r5, #31
    340e:	dd00      	ble.n	3412 <__aeabi_dsub+0x36e>
    3410:	e11f      	b.n	3652 <__aeabi_dsub+0x5ae>
    3412:	2620      	movs	r6, #32
    3414:	0027      	movs	r7, r4
    3416:	4650      	mov	r0, sl
    3418:	1b76      	subs	r6, r6, r5
    341a:	40b7      	lsls	r7, r6
    341c:	40e8      	lsrs	r0, r5
    341e:	4307      	orrs	r7, r0
    3420:	4650      	mov	r0, sl
    3422:	40b0      	lsls	r0, r6
    3424:	1e46      	subs	r6, r0, #1
    3426:	41b0      	sbcs	r0, r6
    3428:	40ec      	lsrs	r4, r5
    342a:	4338      	orrs	r0, r7
    342c:	1a17      	subs	r7, r2, r0
    342e:	42ba      	cmp	r2, r7
    3430:	4192      	sbcs	r2, r2
    3432:	1b0c      	subs	r4, r1, r4
    3434:	4252      	negs	r2, r2
    3436:	1aa4      	subs	r4, r4, r2
    3438:	4666      	mov	r6, ip
    343a:	4698      	mov	r8, r3
    343c:	e68b      	b.n	3156 <__aeabi_dsub+0xb2>
    343e:	4664      	mov	r4, ip
    3440:	4667      	mov	r7, ip
    3442:	432c      	orrs	r4, r5
    3444:	d000      	beq.n	3448 <__aeabi_dsub+0x3a4>
    3446:	e68b      	b.n	3160 <__aeabi_dsub+0xbc>
    3448:	2500      	movs	r5, #0
    344a:	2600      	movs	r6, #0
    344c:	2700      	movs	r7, #0
    344e:	e6ea      	b.n	3226 <__aeabi_dsub+0x182>
    3450:	001e      	movs	r6, r3
    3452:	e6ad      	b.n	31b0 <__aeabi_dsub+0x10c>
    3454:	2b1f      	cmp	r3, #31
    3456:	dc60      	bgt.n	351a <__aeabi_dsub+0x476>
    3458:	2720      	movs	r7, #32
    345a:	1af8      	subs	r0, r7, r3
    345c:	000f      	movs	r7, r1
    345e:	4684      	mov	ip, r0
    3460:	4087      	lsls	r7, r0
    3462:	0010      	movs	r0, r2
    3464:	40d8      	lsrs	r0, r3
    3466:	4307      	orrs	r7, r0
    3468:	4660      	mov	r0, ip
    346a:	4082      	lsls	r2, r0
    346c:	1e50      	subs	r0, r2, #1
    346e:	4182      	sbcs	r2, r0
    3470:	40d9      	lsrs	r1, r3
    3472:	4317      	orrs	r7, r2
    3474:	e6f5      	b.n	3262 <__aeabi_dsub+0x1be>
    3476:	0026      	movs	r6, r4
    3478:	4650      	mov	r0, sl
    347a:	4306      	orrs	r6, r0
    347c:	d005      	beq.n	348a <__aeabi_dsub+0x3e6>
    347e:	43ed      	mvns	r5, r5
    3480:	2d00      	cmp	r5, #0
    3482:	d0d3      	beq.n	342c <__aeabi_dsub+0x388>
    3484:	4e90      	ldr	r6, [pc, #576]	; (36c8 <__aeabi_dsub+0x624>)
    3486:	45b4      	cmp	ip, r6
    3488:	d1bd      	bne.n	3406 <__aeabi_dsub+0x362>
    348a:	000c      	movs	r4, r1
    348c:	0017      	movs	r7, r2
    348e:	4666      	mov	r6, ip
    3490:	4698      	mov	r8, r3
    3492:	e68d      	b.n	31b0 <__aeabi_dsub+0x10c>
    3494:	488c      	ldr	r0, [pc, #560]	; (36c8 <__aeabi_dsub+0x624>)
    3496:	4283      	cmp	r3, r0
    3498:	d00b      	beq.n	34b2 <__aeabi_dsub+0x40e>
    349a:	4663      	mov	r3, ip
    349c:	e6d9      	b.n	3252 <__aeabi_dsub+0x1ae>
    349e:	2d00      	cmp	r5, #0
    34a0:	d000      	beq.n	34a4 <__aeabi_dsub+0x400>
    34a2:	e096      	b.n	35d2 <__aeabi_dsub+0x52e>
    34a4:	0008      	movs	r0, r1
    34a6:	4310      	orrs	r0, r2
    34a8:	d100      	bne.n	34ac <__aeabi_dsub+0x408>
    34aa:	e0e2      	b.n	3672 <__aeabi_dsub+0x5ce>
    34ac:	000c      	movs	r4, r1
    34ae:	0017      	movs	r7, r2
    34b0:	4698      	mov	r8, r3
    34b2:	4e85      	ldr	r6, [pc, #532]	; (36c8 <__aeabi_dsub+0x624>)
    34b4:	e67c      	b.n	31b0 <__aeabi_dsub+0x10c>
    34b6:	2500      	movs	r5, #0
    34b8:	e780      	b.n	33bc <__aeabi_dsub+0x318>
    34ba:	2100      	movs	r1, #0
    34bc:	e78e      	b.n	33dc <__aeabi_dsub+0x338>
    34be:	0023      	movs	r3, r4
    34c0:	4650      	mov	r0, sl
    34c2:	4303      	orrs	r3, r0
    34c4:	2e00      	cmp	r6, #0
    34c6:	d000      	beq.n	34ca <__aeabi_dsub+0x426>
    34c8:	e0a8      	b.n	361c <__aeabi_dsub+0x578>
    34ca:	2b00      	cmp	r3, #0
    34cc:	d100      	bne.n	34d0 <__aeabi_dsub+0x42c>
    34ce:	e0de      	b.n	368e <__aeabi_dsub+0x5ea>
    34d0:	000b      	movs	r3, r1
    34d2:	4313      	orrs	r3, r2
    34d4:	d100      	bne.n	34d8 <__aeabi_dsub+0x434>
    34d6:	e66b      	b.n	31b0 <__aeabi_dsub+0x10c>
    34d8:	4452      	add	r2, sl
    34da:	4552      	cmp	r2, sl
    34dc:	4180      	sbcs	r0, r0
    34de:	1864      	adds	r4, r4, r1
    34e0:	4240      	negs	r0, r0
    34e2:	1824      	adds	r4, r4, r0
    34e4:	0017      	movs	r7, r2
    34e6:	0223      	lsls	r3, r4, #8
    34e8:	d400      	bmi.n	34ec <__aeabi_dsub+0x448>
    34ea:	e6fd      	b.n	32e8 <__aeabi_dsub+0x244>
    34ec:	4b77      	ldr	r3, [pc, #476]	; (36cc <__aeabi_dsub+0x628>)
    34ee:	4666      	mov	r6, ip
    34f0:	401c      	ands	r4, r3
    34f2:	e65d      	b.n	31b0 <__aeabi_dsub+0x10c>
    34f4:	0025      	movs	r5, r4
    34f6:	4650      	mov	r0, sl
    34f8:	4305      	orrs	r5, r0
    34fa:	2e00      	cmp	r6, #0
    34fc:	d1cf      	bne.n	349e <__aeabi_dsub+0x3fa>
    34fe:	2d00      	cmp	r5, #0
    3500:	d14f      	bne.n	35a2 <__aeabi_dsub+0x4fe>
    3502:	000c      	movs	r4, r1
    3504:	4314      	orrs	r4, r2
    3506:	d100      	bne.n	350a <__aeabi_dsub+0x466>
    3508:	e0a0      	b.n	364c <__aeabi_dsub+0x5a8>
    350a:	000c      	movs	r4, r1
    350c:	0017      	movs	r7, r2
    350e:	4698      	mov	r8, r3
    3510:	e64e      	b.n	31b0 <__aeabi_dsub+0x10c>
    3512:	4666      	mov	r6, ip
    3514:	2400      	movs	r4, #0
    3516:	2700      	movs	r7, #0
    3518:	e685      	b.n	3226 <__aeabi_dsub+0x182>
    351a:	001f      	movs	r7, r3
    351c:	0008      	movs	r0, r1
    351e:	3f20      	subs	r7, #32
    3520:	40f8      	lsrs	r0, r7
    3522:	0007      	movs	r7, r0
    3524:	2b20      	cmp	r3, #32
    3526:	d100      	bne.n	352a <__aeabi_dsub+0x486>
    3528:	e08e      	b.n	3648 <__aeabi_dsub+0x5a4>
    352a:	2040      	movs	r0, #64	; 0x40
    352c:	1ac3      	subs	r3, r0, r3
    352e:	4099      	lsls	r1, r3
    3530:	430a      	orrs	r2, r1
    3532:	1e51      	subs	r1, r2, #1
    3534:	418a      	sbcs	r2, r1
    3536:	2100      	movs	r1, #0
    3538:	4317      	orrs	r7, r2
    353a:	e692      	b.n	3262 <__aeabi_dsub+0x1be>
    353c:	2e00      	cmp	r6, #0
    353e:	d114      	bne.n	356a <__aeabi_dsub+0x4c6>
    3540:	0026      	movs	r6, r4
    3542:	4650      	mov	r0, sl
    3544:	4306      	orrs	r6, r0
    3546:	d062      	beq.n	360e <__aeabi_dsub+0x56a>
    3548:	43db      	mvns	r3, r3
    354a:	2b00      	cmp	r3, #0
    354c:	d15c      	bne.n	3608 <__aeabi_dsub+0x564>
    354e:	1887      	adds	r7, r0, r2
    3550:	4297      	cmp	r7, r2
    3552:	4192      	sbcs	r2, r2
    3554:	1864      	adds	r4, r4, r1
    3556:	4252      	negs	r2, r2
    3558:	18a4      	adds	r4, r4, r2
    355a:	4666      	mov	r6, ip
    355c:	e687      	b.n	326e <__aeabi_dsub+0x1ca>
    355e:	4650      	mov	r0, sl
    3560:	4320      	orrs	r0, r4
    3562:	1e44      	subs	r4, r0, #1
    3564:	41a0      	sbcs	r0, r4
    3566:	2400      	movs	r4, #0
    3568:	e760      	b.n	342c <__aeabi_dsub+0x388>
    356a:	4e57      	ldr	r6, [pc, #348]	; (36c8 <__aeabi_dsub+0x624>)
    356c:	45b4      	cmp	ip, r6
    356e:	d04e      	beq.n	360e <__aeabi_dsub+0x56a>
    3570:	2680      	movs	r6, #128	; 0x80
    3572:	0436      	lsls	r6, r6, #16
    3574:	425b      	negs	r3, r3
    3576:	4334      	orrs	r4, r6
    3578:	2b38      	cmp	r3, #56	; 0x38
    357a:	dd00      	ble.n	357e <__aeabi_dsub+0x4da>
    357c:	e07f      	b.n	367e <__aeabi_dsub+0x5da>
    357e:	2b1f      	cmp	r3, #31
    3580:	dd00      	ble.n	3584 <__aeabi_dsub+0x4e0>
    3582:	e08b      	b.n	369c <__aeabi_dsub+0x5f8>
    3584:	2620      	movs	r6, #32
    3586:	0027      	movs	r7, r4
    3588:	4650      	mov	r0, sl
    358a:	1af6      	subs	r6, r6, r3
    358c:	40b7      	lsls	r7, r6
    358e:	40d8      	lsrs	r0, r3
    3590:	4307      	orrs	r7, r0
    3592:	4650      	mov	r0, sl
    3594:	40b0      	lsls	r0, r6
    3596:	1e46      	subs	r6, r0, #1
    3598:	41b0      	sbcs	r0, r6
    359a:	4307      	orrs	r7, r0
    359c:	40dc      	lsrs	r4, r3
    359e:	18bf      	adds	r7, r7, r2
    35a0:	e7d6      	b.n	3550 <__aeabi_dsub+0x4ac>
    35a2:	000d      	movs	r5, r1
    35a4:	4315      	orrs	r5, r2
    35a6:	d100      	bne.n	35aa <__aeabi_dsub+0x506>
    35a8:	e602      	b.n	31b0 <__aeabi_dsub+0x10c>
    35aa:	4650      	mov	r0, sl
    35ac:	1a80      	subs	r0, r0, r2
    35ae:	4582      	cmp	sl, r0
    35b0:	41bf      	sbcs	r7, r7
    35b2:	1a65      	subs	r5, r4, r1
    35b4:	427f      	negs	r7, r7
    35b6:	1bed      	subs	r5, r5, r7
    35b8:	4684      	mov	ip, r0
    35ba:	0228      	lsls	r0, r5, #8
    35bc:	d400      	bmi.n	35c0 <__aeabi_dsub+0x51c>
    35be:	e68d      	b.n	32dc <__aeabi_dsub+0x238>
    35c0:	4650      	mov	r0, sl
    35c2:	1a17      	subs	r7, r2, r0
    35c4:	42ba      	cmp	r2, r7
    35c6:	4192      	sbcs	r2, r2
    35c8:	1b0c      	subs	r4, r1, r4
    35ca:	4252      	negs	r2, r2
    35cc:	1aa4      	subs	r4, r4, r2
    35ce:	4698      	mov	r8, r3
    35d0:	e5ee      	b.n	31b0 <__aeabi_dsub+0x10c>
    35d2:	000d      	movs	r5, r1
    35d4:	4315      	orrs	r5, r2
    35d6:	d100      	bne.n	35da <__aeabi_dsub+0x536>
    35d8:	e76b      	b.n	34b2 <__aeabi_dsub+0x40e>
    35da:	4650      	mov	r0, sl
    35dc:	0767      	lsls	r7, r4, #29
    35de:	08c0      	lsrs	r0, r0, #3
    35e0:	4307      	orrs	r7, r0
    35e2:	2080      	movs	r0, #128	; 0x80
    35e4:	08e4      	lsrs	r4, r4, #3
    35e6:	0300      	lsls	r0, r0, #12
    35e8:	4204      	tst	r4, r0
    35ea:	d007      	beq.n	35fc <__aeabi_dsub+0x558>
    35ec:	08cd      	lsrs	r5, r1, #3
    35ee:	4205      	tst	r5, r0
    35f0:	d104      	bne.n	35fc <__aeabi_dsub+0x558>
    35f2:	002c      	movs	r4, r5
    35f4:	4698      	mov	r8, r3
    35f6:	08d7      	lsrs	r7, r2, #3
    35f8:	0749      	lsls	r1, r1, #29
    35fa:	430f      	orrs	r7, r1
    35fc:	0f7b      	lsrs	r3, r7, #29
    35fe:	00e4      	lsls	r4, r4, #3
    3600:	431c      	orrs	r4, r3
    3602:	00ff      	lsls	r7, r7, #3
    3604:	4e30      	ldr	r6, [pc, #192]	; (36c8 <__aeabi_dsub+0x624>)
    3606:	e5d3      	b.n	31b0 <__aeabi_dsub+0x10c>
    3608:	4e2f      	ldr	r6, [pc, #188]	; (36c8 <__aeabi_dsub+0x624>)
    360a:	45b4      	cmp	ip, r6
    360c:	d1b4      	bne.n	3578 <__aeabi_dsub+0x4d4>
    360e:	000c      	movs	r4, r1
    3610:	0017      	movs	r7, r2
    3612:	4666      	mov	r6, ip
    3614:	e5cc      	b.n	31b0 <__aeabi_dsub+0x10c>
    3616:	2700      	movs	r7, #0
    3618:	2400      	movs	r4, #0
    361a:	e5e8      	b.n	31ee <__aeabi_dsub+0x14a>
    361c:	2b00      	cmp	r3, #0
    361e:	d039      	beq.n	3694 <__aeabi_dsub+0x5f0>
    3620:	000b      	movs	r3, r1
    3622:	4313      	orrs	r3, r2
    3624:	d100      	bne.n	3628 <__aeabi_dsub+0x584>
    3626:	e744      	b.n	34b2 <__aeabi_dsub+0x40e>
    3628:	08c0      	lsrs	r0, r0, #3
    362a:	0767      	lsls	r7, r4, #29
    362c:	4307      	orrs	r7, r0
    362e:	2080      	movs	r0, #128	; 0x80
    3630:	08e4      	lsrs	r4, r4, #3
    3632:	0300      	lsls	r0, r0, #12
    3634:	4204      	tst	r4, r0
    3636:	d0e1      	beq.n	35fc <__aeabi_dsub+0x558>
    3638:	08cb      	lsrs	r3, r1, #3
    363a:	4203      	tst	r3, r0
    363c:	d1de      	bne.n	35fc <__aeabi_dsub+0x558>
    363e:	08d7      	lsrs	r7, r2, #3
    3640:	0749      	lsls	r1, r1, #29
    3642:	430f      	orrs	r7, r1
    3644:	001c      	movs	r4, r3
    3646:	e7d9      	b.n	35fc <__aeabi_dsub+0x558>
    3648:	2100      	movs	r1, #0
    364a:	e771      	b.n	3530 <__aeabi_dsub+0x48c>
    364c:	2500      	movs	r5, #0
    364e:	2700      	movs	r7, #0
    3650:	e5e9      	b.n	3226 <__aeabi_dsub+0x182>
    3652:	002e      	movs	r6, r5
    3654:	0027      	movs	r7, r4
    3656:	3e20      	subs	r6, #32
    3658:	40f7      	lsrs	r7, r6
    365a:	2d20      	cmp	r5, #32
    365c:	d02f      	beq.n	36be <__aeabi_dsub+0x61a>
    365e:	2640      	movs	r6, #64	; 0x40
    3660:	1b75      	subs	r5, r6, r5
    3662:	40ac      	lsls	r4, r5
    3664:	4650      	mov	r0, sl
    3666:	4320      	orrs	r0, r4
    3668:	1e44      	subs	r4, r0, #1
    366a:	41a0      	sbcs	r0, r4
    366c:	2400      	movs	r4, #0
    366e:	4338      	orrs	r0, r7
    3670:	e6dc      	b.n	342c <__aeabi_dsub+0x388>
    3672:	2480      	movs	r4, #128	; 0x80
    3674:	2500      	movs	r5, #0
    3676:	0324      	lsls	r4, r4, #12
    3678:	4e13      	ldr	r6, [pc, #76]	; (36c8 <__aeabi_dsub+0x624>)
    367a:	2700      	movs	r7, #0
    367c:	e5d3      	b.n	3226 <__aeabi_dsub+0x182>
    367e:	4650      	mov	r0, sl
    3680:	4320      	orrs	r0, r4
    3682:	0007      	movs	r7, r0
    3684:	1e78      	subs	r0, r7, #1
    3686:	4187      	sbcs	r7, r0
    3688:	2400      	movs	r4, #0
    368a:	18bf      	adds	r7, r7, r2
    368c:	e760      	b.n	3550 <__aeabi_dsub+0x4ac>
    368e:	000c      	movs	r4, r1
    3690:	0017      	movs	r7, r2
    3692:	e58d      	b.n	31b0 <__aeabi_dsub+0x10c>
    3694:	000c      	movs	r4, r1
    3696:	0017      	movs	r7, r2
    3698:	4e0b      	ldr	r6, [pc, #44]	; (36c8 <__aeabi_dsub+0x624>)
    369a:	e589      	b.n	31b0 <__aeabi_dsub+0x10c>
    369c:	001e      	movs	r6, r3
    369e:	0027      	movs	r7, r4
    36a0:	3e20      	subs	r6, #32
    36a2:	40f7      	lsrs	r7, r6
    36a4:	2b20      	cmp	r3, #32
    36a6:	d00c      	beq.n	36c2 <__aeabi_dsub+0x61e>
    36a8:	2640      	movs	r6, #64	; 0x40
    36aa:	1af3      	subs	r3, r6, r3
    36ac:	409c      	lsls	r4, r3
    36ae:	4650      	mov	r0, sl
    36b0:	4320      	orrs	r0, r4
    36b2:	1e44      	subs	r4, r0, #1
    36b4:	41a0      	sbcs	r0, r4
    36b6:	4307      	orrs	r7, r0
    36b8:	2400      	movs	r4, #0
    36ba:	18bf      	adds	r7, r7, r2
    36bc:	e748      	b.n	3550 <__aeabi_dsub+0x4ac>
    36be:	2400      	movs	r4, #0
    36c0:	e7d0      	b.n	3664 <__aeabi_dsub+0x5c0>
    36c2:	2400      	movs	r4, #0
    36c4:	e7f3      	b.n	36ae <__aeabi_dsub+0x60a>
    36c6:	46c0      	nop			; (mov r8, r8)
    36c8:	000007ff 	.word	0x000007ff
    36cc:	ff7fffff 	.word	0xff7fffff

000036d0 <__aeabi_d2iz>:
    36d0:	b530      	push	{r4, r5, lr}
    36d2:	4d13      	ldr	r5, [pc, #76]	; (3720 <__aeabi_d2iz+0x50>)
    36d4:	030a      	lsls	r2, r1, #12
    36d6:	004b      	lsls	r3, r1, #1
    36d8:	0b12      	lsrs	r2, r2, #12
    36da:	0d5b      	lsrs	r3, r3, #21
    36dc:	0fc9      	lsrs	r1, r1, #31
    36de:	2400      	movs	r4, #0
    36e0:	42ab      	cmp	r3, r5
    36e2:	dd10      	ble.n	3706 <__aeabi_d2iz+0x36>
    36e4:	4c0f      	ldr	r4, [pc, #60]	; (3724 <__aeabi_d2iz+0x54>)
    36e6:	42a3      	cmp	r3, r4
    36e8:	dc0f      	bgt.n	370a <__aeabi_d2iz+0x3a>
    36ea:	2480      	movs	r4, #128	; 0x80
    36ec:	4d0e      	ldr	r5, [pc, #56]	; (3728 <__aeabi_d2iz+0x58>)
    36ee:	0364      	lsls	r4, r4, #13
    36f0:	4322      	orrs	r2, r4
    36f2:	1aed      	subs	r5, r5, r3
    36f4:	2d1f      	cmp	r5, #31
    36f6:	dd0b      	ble.n	3710 <__aeabi_d2iz+0x40>
    36f8:	480c      	ldr	r0, [pc, #48]	; (372c <__aeabi_d2iz+0x5c>)
    36fa:	1ac3      	subs	r3, r0, r3
    36fc:	40da      	lsrs	r2, r3
    36fe:	4254      	negs	r4, r2
    3700:	2900      	cmp	r1, #0
    3702:	d100      	bne.n	3706 <__aeabi_d2iz+0x36>
    3704:	0014      	movs	r4, r2
    3706:	0020      	movs	r0, r4
    3708:	bd30      	pop	{r4, r5, pc}
    370a:	4b09      	ldr	r3, [pc, #36]	; (3730 <__aeabi_d2iz+0x60>)
    370c:	18cc      	adds	r4, r1, r3
    370e:	e7fa      	b.n	3706 <__aeabi_d2iz+0x36>
    3710:	4c08      	ldr	r4, [pc, #32]	; (3734 <__aeabi_d2iz+0x64>)
    3712:	40e8      	lsrs	r0, r5
    3714:	46a4      	mov	ip, r4
    3716:	4463      	add	r3, ip
    3718:	409a      	lsls	r2, r3
    371a:	4302      	orrs	r2, r0
    371c:	e7ef      	b.n	36fe <__aeabi_d2iz+0x2e>
    371e:	46c0      	nop			; (mov r8, r8)
    3720:	000003fe 	.word	0x000003fe
    3724:	0000041d 	.word	0x0000041d
    3728:	00000433 	.word	0x00000433
    372c:	00000413 	.word	0x00000413
    3730:	7fffffff 	.word	0x7fffffff
    3734:	fffffbed 	.word	0xfffffbed

00003738 <__aeabi_i2d>:
    3738:	b570      	push	{r4, r5, r6, lr}
    373a:	2800      	cmp	r0, #0
    373c:	d030      	beq.n	37a0 <__aeabi_i2d+0x68>
    373e:	17c3      	asrs	r3, r0, #31
    3740:	18c4      	adds	r4, r0, r3
    3742:	405c      	eors	r4, r3
    3744:	0fc5      	lsrs	r5, r0, #31
    3746:	0020      	movs	r0, r4
    3748:	f000 f93a 	bl	39c0 <__clzsi2>
    374c:	4b17      	ldr	r3, [pc, #92]	; (37ac <__aeabi_i2d+0x74>)
    374e:	4a18      	ldr	r2, [pc, #96]	; (37b0 <__aeabi_i2d+0x78>)
    3750:	1a1b      	subs	r3, r3, r0
    3752:	1ad2      	subs	r2, r2, r3
    3754:	2a1f      	cmp	r2, #31
    3756:	dd18      	ble.n	378a <__aeabi_i2d+0x52>
    3758:	4a16      	ldr	r2, [pc, #88]	; (37b4 <__aeabi_i2d+0x7c>)
    375a:	1ad2      	subs	r2, r2, r3
    375c:	4094      	lsls	r4, r2
    375e:	2200      	movs	r2, #0
    3760:	0324      	lsls	r4, r4, #12
    3762:	055b      	lsls	r3, r3, #21
    3764:	0b24      	lsrs	r4, r4, #12
    3766:	0d5b      	lsrs	r3, r3, #21
    3768:	2100      	movs	r1, #0
    376a:	0010      	movs	r0, r2
    376c:	0324      	lsls	r4, r4, #12
    376e:	0d0a      	lsrs	r2, r1, #20
    3770:	0b24      	lsrs	r4, r4, #12
    3772:	0512      	lsls	r2, r2, #20
    3774:	4322      	orrs	r2, r4
    3776:	4c10      	ldr	r4, [pc, #64]	; (37b8 <__aeabi_i2d+0x80>)
    3778:	051b      	lsls	r3, r3, #20
    377a:	4022      	ands	r2, r4
    377c:	4313      	orrs	r3, r2
    377e:	005b      	lsls	r3, r3, #1
    3780:	07ed      	lsls	r5, r5, #31
    3782:	085b      	lsrs	r3, r3, #1
    3784:	432b      	orrs	r3, r5
    3786:	0019      	movs	r1, r3
    3788:	bd70      	pop	{r4, r5, r6, pc}
    378a:	0021      	movs	r1, r4
    378c:	4091      	lsls	r1, r2
    378e:	000a      	movs	r2, r1
    3790:	210b      	movs	r1, #11
    3792:	1a08      	subs	r0, r1, r0
    3794:	40c4      	lsrs	r4, r0
    3796:	055b      	lsls	r3, r3, #21
    3798:	0324      	lsls	r4, r4, #12
    379a:	0b24      	lsrs	r4, r4, #12
    379c:	0d5b      	lsrs	r3, r3, #21
    379e:	e7e3      	b.n	3768 <__aeabi_i2d+0x30>
    37a0:	2500      	movs	r5, #0
    37a2:	2300      	movs	r3, #0
    37a4:	2400      	movs	r4, #0
    37a6:	2200      	movs	r2, #0
    37a8:	e7de      	b.n	3768 <__aeabi_i2d+0x30>
    37aa:	46c0      	nop			; (mov r8, r8)
    37ac:	0000041e 	.word	0x0000041e
    37b0:	00000433 	.word	0x00000433
    37b4:	00000413 	.word	0x00000413
    37b8:	800fffff 	.word	0x800fffff

000037bc <__aeabi_ui2d>:
    37bc:	b510      	push	{r4, lr}
    37be:	1e04      	subs	r4, r0, #0
    37c0:	d028      	beq.n	3814 <__aeabi_ui2d+0x58>
    37c2:	f000 f8fd 	bl	39c0 <__clzsi2>
    37c6:	4b15      	ldr	r3, [pc, #84]	; (381c <__aeabi_ui2d+0x60>)
    37c8:	4a15      	ldr	r2, [pc, #84]	; (3820 <__aeabi_ui2d+0x64>)
    37ca:	1a1b      	subs	r3, r3, r0
    37cc:	1ad2      	subs	r2, r2, r3
    37ce:	2a1f      	cmp	r2, #31
    37d0:	dd15      	ble.n	37fe <__aeabi_ui2d+0x42>
    37d2:	4a14      	ldr	r2, [pc, #80]	; (3824 <__aeabi_ui2d+0x68>)
    37d4:	1ad2      	subs	r2, r2, r3
    37d6:	4094      	lsls	r4, r2
    37d8:	2200      	movs	r2, #0
    37da:	0324      	lsls	r4, r4, #12
    37dc:	055b      	lsls	r3, r3, #21
    37de:	0b24      	lsrs	r4, r4, #12
    37e0:	0d5b      	lsrs	r3, r3, #21
    37e2:	2100      	movs	r1, #0
    37e4:	0010      	movs	r0, r2
    37e6:	0324      	lsls	r4, r4, #12
    37e8:	0d0a      	lsrs	r2, r1, #20
    37ea:	0b24      	lsrs	r4, r4, #12
    37ec:	0512      	lsls	r2, r2, #20
    37ee:	4322      	orrs	r2, r4
    37f0:	4c0d      	ldr	r4, [pc, #52]	; (3828 <__aeabi_ui2d+0x6c>)
    37f2:	051b      	lsls	r3, r3, #20
    37f4:	4022      	ands	r2, r4
    37f6:	4313      	orrs	r3, r2
    37f8:	005b      	lsls	r3, r3, #1
    37fa:	0859      	lsrs	r1, r3, #1
    37fc:	bd10      	pop	{r4, pc}
    37fe:	0021      	movs	r1, r4
    3800:	4091      	lsls	r1, r2
    3802:	000a      	movs	r2, r1
    3804:	210b      	movs	r1, #11
    3806:	1a08      	subs	r0, r1, r0
    3808:	40c4      	lsrs	r4, r0
    380a:	055b      	lsls	r3, r3, #21
    380c:	0324      	lsls	r4, r4, #12
    380e:	0b24      	lsrs	r4, r4, #12
    3810:	0d5b      	lsrs	r3, r3, #21
    3812:	e7e6      	b.n	37e2 <__aeabi_ui2d+0x26>
    3814:	2300      	movs	r3, #0
    3816:	2400      	movs	r4, #0
    3818:	2200      	movs	r2, #0
    381a:	e7e2      	b.n	37e2 <__aeabi_ui2d+0x26>
    381c:	0000041e 	.word	0x0000041e
    3820:	00000433 	.word	0x00000433
    3824:	00000413 	.word	0x00000413
    3828:	800fffff 	.word	0x800fffff

0000382c <__aeabi_f2d>:
    382c:	0041      	lsls	r1, r0, #1
    382e:	0e09      	lsrs	r1, r1, #24
    3830:	1c4b      	adds	r3, r1, #1
    3832:	b570      	push	{r4, r5, r6, lr}
    3834:	b2db      	uxtb	r3, r3
    3836:	0246      	lsls	r6, r0, #9
    3838:	0a75      	lsrs	r5, r6, #9
    383a:	0fc4      	lsrs	r4, r0, #31
    383c:	2b01      	cmp	r3, #1
    383e:	dd14      	ble.n	386a <__aeabi_f2d+0x3e>
    3840:	23e0      	movs	r3, #224	; 0xe0
    3842:	009b      	lsls	r3, r3, #2
    3844:	076d      	lsls	r5, r5, #29
    3846:	0b36      	lsrs	r6, r6, #12
    3848:	18cb      	adds	r3, r1, r3
    384a:	2100      	movs	r1, #0
    384c:	0d0a      	lsrs	r2, r1, #20
    384e:	0028      	movs	r0, r5
    3850:	0512      	lsls	r2, r2, #20
    3852:	4d1c      	ldr	r5, [pc, #112]	; (38c4 <__aeabi_f2d+0x98>)
    3854:	4332      	orrs	r2, r6
    3856:	055b      	lsls	r3, r3, #21
    3858:	402a      	ands	r2, r5
    385a:	085b      	lsrs	r3, r3, #1
    385c:	4313      	orrs	r3, r2
    385e:	005b      	lsls	r3, r3, #1
    3860:	07e4      	lsls	r4, r4, #31
    3862:	085b      	lsrs	r3, r3, #1
    3864:	4323      	orrs	r3, r4
    3866:	0019      	movs	r1, r3
    3868:	bd70      	pop	{r4, r5, r6, pc}
    386a:	2900      	cmp	r1, #0
    386c:	d114      	bne.n	3898 <__aeabi_f2d+0x6c>
    386e:	2d00      	cmp	r5, #0
    3870:	d01e      	beq.n	38b0 <__aeabi_f2d+0x84>
    3872:	0028      	movs	r0, r5
    3874:	f000 f8a4 	bl	39c0 <__clzsi2>
    3878:	280a      	cmp	r0, #10
    387a:	dc1c      	bgt.n	38b6 <__aeabi_f2d+0x8a>
    387c:	230b      	movs	r3, #11
    387e:	002a      	movs	r2, r5
    3880:	1a1b      	subs	r3, r3, r0
    3882:	40da      	lsrs	r2, r3
    3884:	0003      	movs	r3, r0
    3886:	3315      	adds	r3, #21
    3888:	409d      	lsls	r5, r3
    388a:	4b0f      	ldr	r3, [pc, #60]	; (38c8 <__aeabi_f2d+0x9c>)
    388c:	0312      	lsls	r2, r2, #12
    388e:	1a1b      	subs	r3, r3, r0
    3890:	055b      	lsls	r3, r3, #21
    3892:	0b16      	lsrs	r6, r2, #12
    3894:	0d5b      	lsrs	r3, r3, #21
    3896:	e7d8      	b.n	384a <__aeabi_f2d+0x1e>
    3898:	2d00      	cmp	r5, #0
    389a:	d006      	beq.n	38aa <__aeabi_f2d+0x7e>
    389c:	0b32      	lsrs	r2, r6, #12
    389e:	2680      	movs	r6, #128	; 0x80
    38a0:	0336      	lsls	r6, r6, #12
    38a2:	076d      	lsls	r5, r5, #29
    38a4:	4316      	orrs	r6, r2
    38a6:	4b09      	ldr	r3, [pc, #36]	; (38cc <__aeabi_f2d+0xa0>)
    38a8:	e7cf      	b.n	384a <__aeabi_f2d+0x1e>
    38aa:	4b08      	ldr	r3, [pc, #32]	; (38cc <__aeabi_f2d+0xa0>)
    38ac:	2600      	movs	r6, #0
    38ae:	e7cc      	b.n	384a <__aeabi_f2d+0x1e>
    38b0:	2300      	movs	r3, #0
    38b2:	2600      	movs	r6, #0
    38b4:	e7c9      	b.n	384a <__aeabi_f2d+0x1e>
    38b6:	0003      	movs	r3, r0
    38b8:	002a      	movs	r2, r5
    38ba:	3b0b      	subs	r3, #11
    38bc:	409a      	lsls	r2, r3
    38be:	2500      	movs	r5, #0
    38c0:	e7e3      	b.n	388a <__aeabi_f2d+0x5e>
    38c2:	46c0      	nop			; (mov r8, r8)
    38c4:	800fffff 	.word	0x800fffff
    38c8:	00000389 	.word	0x00000389
    38cc:	000007ff 	.word	0x000007ff

000038d0 <__aeabi_cdrcmple>:
    38d0:	4684      	mov	ip, r0
    38d2:	1c10      	adds	r0, r2, #0
    38d4:	4662      	mov	r2, ip
    38d6:	468c      	mov	ip, r1
    38d8:	1c19      	adds	r1, r3, #0
    38da:	4663      	mov	r3, ip
    38dc:	e000      	b.n	38e0 <__aeabi_cdcmpeq>
    38de:	46c0      	nop			; (mov r8, r8)

000038e0 <__aeabi_cdcmpeq>:
    38e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    38e2:	f000 f9d1 	bl	3c88 <__ledf2>
    38e6:	2800      	cmp	r0, #0
    38e8:	d401      	bmi.n	38ee <__aeabi_cdcmpeq+0xe>
    38ea:	2100      	movs	r1, #0
    38ec:	42c8      	cmn	r0, r1
    38ee:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000038f0 <__aeabi_dcmpeq>:
    38f0:	b510      	push	{r4, lr}
    38f2:	f000 f92b 	bl	3b4c <__eqdf2>
    38f6:	4240      	negs	r0, r0
    38f8:	3001      	adds	r0, #1
    38fa:	bd10      	pop	{r4, pc}

000038fc <__aeabi_dcmplt>:
    38fc:	b510      	push	{r4, lr}
    38fe:	f000 f9c3 	bl	3c88 <__ledf2>
    3902:	2800      	cmp	r0, #0
    3904:	db01      	blt.n	390a <__aeabi_dcmplt+0xe>
    3906:	2000      	movs	r0, #0
    3908:	bd10      	pop	{r4, pc}
    390a:	2001      	movs	r0, #1
    390c:	bd10      	pop	{r4, pc}
    390e:	46c0      	nop			; (mov r8, r8)

00003910 <__aeabi_dcmple>:
    3910:	b510      	push	{r4, lr}
    3912:	f000 f9b9 	bl	3c88 <__ledf2>
    3916:	2800      	cmp	r0, #0
    3918:	dd01      	ble.n	391e <__aeabi_dcmple+0xe>
    391a:	2000      	movs	r0, #0
    391c:	bd10      	pop	{r4, pc}
    391e:	2001      	movs	r0, #1
    3920:	bd10      	pop	{r4, pc}
    3922:	46c0      	nop			; (mov r8, r8)

00003924 <__aeabi_dcmpgt>:
    3924:	b510      	push	{r4, lr}
    3926:	f000 f94b 	bl	3bc0 <__gedf2>
    392a:	2800      	cmp	r0, #0
    392c:	dc01      	bgt.n	3932 <__aeabi_dcmpgt+0xe>
    392e:	2000      	movs	r0, #0
    3930:	bd10      	pop	{r4, pc}
    3932:	2001      	movs	r0, #1
    3934:	bd10      	pop	{r4, pc}
    3936:	46c0      	nop			; (mov r8, r8)

00003938 <__aeabi_dcmpge>:
    3938:	b510      	push	{r4, lr}
    393a:	f000 f941 	bl	3bc0 <__gedf2>
    393e:	2800      	cmp	r0, #0
    3940:	da01      	bge.n	3946 <__aeabi_dcmpge+0xe>
    3942:	2000      	movs	r0, #0
    3944:	bd10      	pop	{r4, pc}
    3946:	2001      	movs	r0, #1
    3948:	bd10      	pop	{r4, pc}
    394a:	46c0      	nop			; (mov r8, r8)

0000394c <__aeabi_cfrcmple>:
    394c:	4684      	mov	ip, r0
    394e:	1c08      	adds	r0, r1, #0
    3950:	4661      	mov	r1, ip
    3952:	e7ff      	b.n	3954 <__aeabi_cfcmpeq>

00003954 <__aeabi_cfcmpeq>:
    3954:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3956:	f000 f8b7 	bl	3ac8 <__lesf2>
    395a:	2800      	cmp	r0, #0
    395c:	d401      	bmi.n	3962 <__aeabi_cfcmpeq+0xe>
    395e:	2100      	movs	r1, #0
    3960:	42c8      	cmn	r0, r1
    3962:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003964 <__aeabi_fcmpeq>:
    3964:	b510      	push	{r4, lr}
    3966:	f000 f849 	bl	39fc <__eqsf2>
    396a:	4240      	negs	r0, r0
    396c:	3001      	adds	r0, #1
    396e:	bd10      	pop	{r4, pc}

00003970 <__aeabi_fcmplt>:
    3970:	b510      	push	{r4, lr}
    3972:	f000 f8a9 	bl	3ac8 <__lesf2>
    3976:	2800      	cmp	r0, #0
    3978:	db01      	blt.n	397e <__aeabi_fcmplt+0xe>
    397a:	2000      	movs	r0, #0
    397c:	bd10      	pop	{r4, pc}
    397e:	2001      	movs	r0, #1
    3980:	bd10      	pop	{r4, pc}
    3982:	46c0      	nop			; (mov r8, r8)

00003984 <__aeabi_fcmple>:
    3984:	b510      	push	{r4, lr}
    3986:	f000 f89f 	bl	3ac8 <__lesf2>
    398a:	2800      	cmp	r0, #0
    398c:	dd01      	ble.n	3992 <__aeabi_fcmple+0xe>
    398e:	2000      	movs	r0, #0
    3990:	bd10      	pop	{r4, pc}
    3992:	2001      	movs	r0, #1
    3994:	bd10      	pop	{r4, pc}
    3996:	46c0      	nop			; (mov r8, r8)

00003998 <__aeabi_fcmpgt>:
    3998:	b510      	push	{r4, lr}
    399a:	f000 f855 	bl	3a48 <__gesf2>
    399e:	2800      	cmp	r0, #0
    39a0:	dc01      	bgt.n	39a6 <__aeabi_fcmpgt+0xe>
    39a2:	2000      	movs	r0, #0
    39a4:	bd10      	pop	{r4, pc}
    39a6:	2001      	movs	r0, #1
    39a8:	bd10      	pop	{r4, pc}
    39aa:	46c0      	nop			; (mov r8, r8)

000039ac <__aeabi_fcmpge>:
    39ac:	b510      	push	{r4, lr}
    39ae:	f000 f84b 	bl	3a48 <__gesf2>
    39b2:	2800      	cmp	r0, #0
    39b4:	da01      	bge.n	39ba <__aeabi_fcmpge+0xe>
    39b6:	2000      	movs	r0, #0
    39b8:	bd10      	pop	{r4, pc}
    39ba:	2001      	movs	r0, #1
    39bc:	bd10      	pop	{r4, pc}
    39be:	46c0      	nop			; (mov r8, r8)

000039c0 <__clzsi2>:
    39c0:	211c      	movs	r1, #28
    39c2:	2301      	movs	r3, #1
    39c4:	041b      	lsls	r3, r3, #16
    39c6:	4298      	cmp	r0, r3
    39c8:	d301      	bcc.n	39ce <__clzsi2+0xe>
    39ca:	0c00      	lsrs	r0, r0, #16
    39cc:	3910      	subs	r1, #16
    39ce:	0a1b      	lsrs	r3, r3, #8
    39d0:	4298      	cmp	r0, r3
    39d2:	d301      	bcc.n	39d8 <__clzsi2+0x18>
    39d4:	0a00      	lsrs	r0, r0, #8
    39d6:	3908      	subs	r1, #8
    39d8:	091b      	lsrs	r3, r3, #4
    39da:	4298      	cmp	r0, r3
    39dc:	d301      	bcc.n	39e2 <__clzsi2+0x22>
    39de:	0900      	lsrs	r0, r0, #4
    39e0:	3904      	subs	r1, #4
    39e2:	a202      	add	r2, pc, #8	; (adr r2, 39ec <__clzsi2+0x2c>)
    39e4:	5c10      	ldrb	r0, [r2, r0]
    39e6:	1840      	adds	r0, r0, r1
    39e8:	4770      	bx	lr
    39ea:	46c0      	nop			; (mov r8, r8)
    39ec:	02020304 	.word	0x02020304
    39f0:	01010101 	.word	0x01010101
	...

000039fc <__eqsf2>:
    39fc:	b570      	push	{r4, r5, r6, lr}
    39fe:	0042      	lsls	r2, r0, #1
    3a00:	0245      	lsls	r5, r0, #9
    3a02:	024e      	lsls	r6, r1, #9
    3a04:	004c      	lsls	r4, r1, #1
    3a06:	0fc3      	lsrs	r3, r0, #31
    3a08:	0a6d      	lsrs	r5, r5, #9
    3a0a:	0e12      	lsrs	r2, r2, #24
    3a0c:	0a76      	lsrs	r6, r6, #9
    3a0e:	0e24      	lsrs	r4, r4, #24
    3a10:	0fc9      	lsrs	r1, r1, #31
    3a12:	2001      	movs	r0, #1
    3a14:	2aff      	cmp	r2, #255	; 0xff
    3a16:	d006      	beq.n	3a26 <__eqsf2+0x2a>
    3a18:	2cff      	cmp	r4, #255	; 0xff
    3a1a:	d003      	beq.n	3a24 <__eqsf2+0x28>
    3a1c:	42a2      	cmp	r2, r4
    3a1e:	d101      	bne.n	3a24 <__eqsf2+0x28>
    3a20:	42b5      	cmp	r5, r6
    3a22:	d006      	beq.n	3a32 <__eqsf2+0x36>
    3a24:	bd70      	pop	{r4, r5, r6, pc}
    3a26:	2d00      	cmp	r5, #0
    3a28:	d1fc      	bne.n	3a24 <__eqsf2+0x28>
    3a2a:	2cff      	cmp	r4, #255	; 0xff
    3a2c:	d1fa      	bne.n	3a24 <__eqsf2+0x28>
    3a2e:	2e00      	cmp	r6, #0
    3a30:	d1f8      	bne.n	3a24 <__eqsf2+0x28>
    3a32:	428b      	cmp	r3, r1
    3a34:	d006      	beq.n	3a44 <__eqsf2+0x48>
    3a36:	2001      	movs	r0, #1
    3a38:	2a00      	cmp	r2, #0
    3a3a:	d1f3      	bne.n	3a24 <__eqsf2+0x28>
    3a3c:	0028      	movs	r0, r5
    3a3e:	1e45      	subs	r5, r0, #1
    3a40:	41a8      	sbcs	r0, r5
    3a42:	e7ef      	b.n	3a24 <__eqsf2+0x28>
    3a44:	2000      	movs	r0, #0
    3a46:	e7ed      	b.n	3a24 <__eqsf2+0x28>

00003a48 <__gesf2>:
    3a48:	b5f0      	push	{r4, r5, r6, r7, lr}
    3a4a:	0042      	lsls	r2, r0, #1
    3a4c:	0245      	lsls	r5, r0, #9
    3a4e:	024c      	lsls	r4, r1, #9
    3a50:	0fc3      	lsrs	r3, r0, #31
    3a52:	0048      	lsls	r0, r1, #1
    3a54:	0a6d      	lsrs	r5, r5, #9
    3a56:	0e12      	lsrs	r2, r2, #24
    3a58:	0a64      	lsrs	r4, r4, #9
    3a5a:	0e00      	lsrs	r0, r0, #24
    3a5c:	0fc9      	lsrs	r1, r1, #31
    3a5e:	2aff      	cmp	r2, #255	; 0xff
    3a60:	d01e      	beq.n	3aa0 <__gesf2+0x58>
    3a62:	28ff      	cmp	r0, #255	; 0xff
    3a64:	d021      	beq.n	3aaa <__gesf2+0x62>
    3a66:	2a00      	cmp	r2, #0
    3a68:	d10a      	bne.n	3a80 <__gesf2+0x38>
    3a6a:	426e      	negs	r6, r5
    3a6c:	416e      	adcs	r6, r5
    3a6e:	b2f6      	uxtb	r6, r6
    3a70:	2800      	cmp	r0, #0
    3a72:	d10f      	bne.n	3a94 <__gesf2+0x4c>
    3a74:	2c00      	cmp	r4, #0
    3a76:	d10d      	bne.n	3a94 <__gesf2+0x4c>
    3a78:	2000      	movs	r0, #0
    3a7a:	2d00      	cmp	r5, #0
    3a7c:	d009      	beq.n	3a92 <__gesf2+0x4a>
    3a7e:	e005      	b.n	3a8c <__gesf2+0x44>
    3a80:	2800      	cmp	r0, #0
    3a82:	d101      	bne.n	3a88 <__gesf2+0x40>
    3a84:	2c00      	cmp	r4, #0
    3a86:	d001      	beq.n	3a8c <__gesf2+0x44>
    3a88:	428b      	cmp	r3, r1
    3a8a:	d011      	beq.n	3ab0 <__gesf2+0x68>
    3a8c:	2101      	movs	r1, #1
    3a8e:	4258      	negs	r0, r3
    3a90:	4308      	orrs	r0, r1
    3a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a94:	2e00      	cmp	r6, #0
    3a96:	d0f7      	beq.n	3a88 <__gesf2+0x40>
    3a98:	2001      	movs	r0, #1
    3a9a:	3901      	subs	r1, #1
    3a9c:	4308      	orrs	r0, r1
    3a9e:	e7f8      	b.n	3a92 <__gesf2+0x4a>
    3aa0:	2d00      	cmp	r5, #0
    3aa2:	d0de      	beq.n	3a62 <__gesf2+0x1a>
    3aa4:	2002      	movs	r0, #2
    3aa6:	4240      	negs	r0, r0
    3aa8:	e7f3      	b.n	3a92 <__gesf2+0x4a>
    3aaa:	2c00      	cmp	r4, #0
    3aac:	d0db      	beq.n	3a66 <__gesf2+0x1e>
    3aae:	e7f9      	b.n	3aa4 <__gesf2+0x5c>
    3ab0:	4282      	cmp	r2, r0
    3ab2:	dceb      	bgt.n	3a8c <__gesf2+0x44>
    3ab4:	db04      	blt.n	3ac0 <__gesf2+0x78>
    3ab6:	42a5      	cmp	r5, r4
    3ab8:	d8e8      	bhi.n	3a8c <__gesf2+0x44>
    3aba:	2000      	movs	r0, #0
    3abc:	42a5      	cmp	r5, r4
    3abe:	d2e8      	bcs.n	3a92 <__gesf2+0x4a>
    3ac0:	2101      	movs	r1, #1
    3ac2:	1e58      	subs	r0, r3, #1
    3ac4:	4308      	orrs	r0, r1
    3ac6:	e7e4      	b.n	3a92 <__gesf2+0x4a>

00003ac8 <__lesf2>:
    3ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3aca:	0042      	lsls	r2, r0, #1
    3acc:	024d      	lsls	r5, r1, #9
    3ace:	004c      	lsls	r4, r1, #1
    3ad0:	0246      	lsls	r6, r0, #9
    3ad2:	0a76      	lsrs	r6, r6, #9
    3ad4:	0e12      	lsrs	r2, r2, #24
    3ad6:	0fc3      	lsrs	r3, r0, #31
    3ad8:	0a6d      	lsrs	r5, r5, #9
    3ada:	0e24      	lsrs	r4, r4, #24
    3adc:	0fc9      	lsrs	r1, r1, #31
    3ade:	2aff      	cmp	r2, #255	; 0xff
    3ae0:	d016      	beq.n	3b10 <__lesf2+0x48>
    3ae2:	2cff      	cmp	r4, #255	; 0xff
    3ae4:	d018      	beq.n	3b18 <__lesf2+0x50>
    3ae6:	2a00      	cmp	r2, #0
    3ae8:	d10a      	bne.n	3b00 <__lesf2+0x38>
    3aea:	4270      	negs	r0, r6
    3aec:	4170      	adcs	r0, r6
    3aee:	b2c0      	uxtb	r0, r0
    3af0:	2c00      	cmp	r4, #0
    3af2:	d015      	beq.n	3b20 <__lesf2+0x58>
    3af4:	2800      	cmp	r0, #0
    3af6:	d005      	beq.n	3b04 <__lesf2+0x3c>
    3af8:	2001      	movs	r0, #1
    3afa:	3901      	subs	r1, #1
    3afc:	4308      	orrs	r0, r1
    3afe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b00:	2c00      	cmp	r4, #0
    3b02:	d013      	beq.n	3b2c <__lesf2+0x64>
    3b04:	4299      	cmp	r1, r3
    3b06:	d014      	beq.n	3b32 <__lesf2+0x6a>
    3b08:	2001      	movs	r0, #1
    3b0a:	425b      	negs	r3, r3
    3b0c:	4318      	orrs	r0, r3
    3b0e:	e7f6      	b.n	3afe <__lesf2+0x36>
    3b10:	2002      	movs	r0, #2
    3b12:	2e00      	cmp	r6, #0
    3b14:	d1f3      	bne.n	3afe <__lesf2+0x36>
    3b16:	e7e4      	b.n	3ae2 <__lesf2+0x1a>
    3b18:	2002      	movs	r0, #2
    3b1a:	2d00      	cmp	r5, #0
    3b1c:	d1ef      	bne.n	3afe <__lesf2+0x36>
    3b1e:	e7e2      	b.n	3ae6 <__lesf2+0x1e>
    3b20:	2d00      	cmp	r5, #0
    3b22:	d1e7      	bne.n	3af4 <__lesf2+0x2c>
    3b24:	2000      	movs	r0, #0
    3b26:	2e00      	cmp	r6, #0
    3b28:	d0e9      	beq.n	3afe <__lesf2+0x36>
    3b2a:	e7ed      	b.n	3b08 <__lesf2+0x40>
    3b2c:	2d00      	cmp	r5, #0
    3b2e:	d1e9      	bne.n	3b04 <__lesf2+0x3c>
    3b30:	e7ea      	b.n	3b08 <__lesf2+0x40>
    3b32:	42a2      	cmp	r2, r4
    3b34:	dc06      	bgt.n	3b44 <__lesf2+0x7c>
    3b36:	dbdf      	blt.n	3af8 <__lesf2+0x30>
    3b38:	42ae      	cmp	r6, r5
    3b3a:	d803      	bhi.n	3b44 <__lesf2+0x7c>
    3b3c:	2000      	movs	r0, #0
    3b3e:	42ae      	cmp	r6, r5
    3b40:	d3da      	bcc.n	3af8 <__lesf2+0x30>
    3b42:	e7dc      	b.n	3afe <__lesf2+0x36>
    3b44:	2001      	movs	r0, #1
    3b46:	4249      	negs	r1, r1
    3b48:	4308      	orrs	r0, r1
    3b4a:	e7d8      	b.n	3afe <__lesf2+0x36>

00003b4c <__eqdf2>:
    3b4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b4e:	464f      	mov	r7, r9
    3b50:	4646      	mov	r6, r8
    3b52:	46d6      	mov	lr, sl
    3b54:	005c      	lsls	r4, r3, #1
    3b56:	b5c0      	push	{r6, r7, lr}
    3b58:	031f      	lsls	r7, r3, #12
    3b5a:	0fdb      	lsrs	r3, r3, #31
    3b5c:	469a      	mov	sl, r3
    3b5e:	4b17      	ldr	r3, [pc, #92]	; (3bbc <__eqdf2+0x70>)
    3b60:	030e      	lsls	r6, r1, #12
    3b62:	004d      	lsls	r5, r1, #1
    3b64:	4684      	mov	ip, r0
    3b66:	4680      	mov	r8, r0
    3b68:	0b36      	lsrs	r6, r6, #12
    3b6a:	0d6d      	lsrs	r5, r5, #21
    3b6c:	0fc9      	lsrs	r1, r1, #31
    3b6e:	4691      	mov	r9, r2
    3b70:	0b3f      	lsrs	r7, r7, #12
    3b72:	0d64      	lsrs	r4, r4, #21
    3b74:	2001      	movs	r0, #1
    3b76:	429d      	cmp	r5, r3
    3b78:	d008      	beq.n	3b8c <__eqdf2+0x40>
    3b7a:	429c      	cmp	r4, r3
    3b7c:	d001      	beq.n	3b82 <__eqdf2+0x36>
    3b7e:	42a5      	cmp	r5, r4
    3b80:	d00b      	beq.n	3b9a <__eqdf2+0x4e>
    3b82:	bc1c      	pop	{r2, r3, r4}
    3b84:	4690      	mov	r8, r2
    3b86:	4699      	mov	r9, r3
    3b88:	46a2      	mov	sl, r4
    3b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b8c:	4663      	mov	r3, ip
    3b8e:	4333      	orrs	r3, r6
    3b90:	d1f7      	bne.n	3b82 <__eqdf2+0x36>
    3b92:	42ac      	cmp	r4, r5
    3b94:	d1f5      	bne.n	3b82 <__eqdf2+0x36>
    3b96:	433a      	orrs	r2, r7
    3b98:	d1f3      	bne.n	3b82 <__eqdf2+0x36>
    3b9a:	2001      	movs	r0, #1
    3b9c:	42be      	cmp	r6, r7
    3b9e:	d1f0      	bne.n	3b82 <__eqdf2+0x36>
    3ba0:	45c8      	cmp	r8, r9
    3ba2:	d1ee      	bne.n	3b82 <__eqdf2+0x36>
    3ba4:	4551      	cmp	r1, sl
    3ba6:	d007      	beq.n	3bb8 <__eqdf2+0x6c>
    3ba8:	2d00      	cmp	r5, #0
    3baa:	d1ea      	bne.n	3b82 <__eqdf2+0x36>
    3bac:	4663      	mov	r3, ip
    3bae:	431e      	orrs	r6, r3
    3bb0:	0030      	movs	r0, r6
    3bb2:	1e46      	subs	r6, r0, #1
    3bb4:	41b0      	sbcs	r0, r6
    3bb6:	e7e4      	b.n	3b82 <__eqdf2+0x36>
    3bb8:	2000      	movs	r0, #0
    3bba:	e7e2      	b.n	3b82 <__eqdf2+0x36>
    3bbc:	000007ff 	.word	0x000007ff

00003bc0 <__gedf2>:
    3bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3bc2:	4645      	mov	r5, r8
    3bc4:	46de      	mov	lr, fp
    3bc6:	4657      	mov	r7, sl
    3bc8:	464e      	mov	r6, r9
    3bca:	b5e0      	push	{r5, r6, r7, lr}
    3bcc:	031f      	lsls	r7, r3, #12
    3bce:	0b3d      	lsrs	r5, r7, #12
    3bd0:	4f2c      	ldr	r7, [pc, #176]	; (3c84 <__gedf2+0xc4>)
    3bd2:	030e      	lsls	r6, r1, #12
    3bd4:	004c      	lsls	r4, r1, #1
    3bd6:	46ab      	mov	fp, r5
    3bd8:	005d      	lsls	r5, r3, #1
    3bda:	4684      	mov	ip, r0
    3bdc:	0b36      	lsrs	r6, r6, #12
    3bde:	0d64      	lsrs	r4, r4, #21
    3be0:	0fc9      	lsrs	r1, r1, #31
    3be2:	4690      	mov	r8, r2
    3be4:	0d6d      	lsrs	r5, r5, #21
    3be6:	0fdb      	lsrs	r3, r3, #31
    3be8:	42bc      	cmp	r4, r7
    3bea:	d02a      	beq.n	3c42 <__gedf2+0x82>
    3bec:	4f25      	ldr	r7, [pc, #148]	; (3c84 <__gedf2+0xc4>)
    3bee:	42bd      	cmp	r5, r7
    3bf0:	d02d      	beq.n	3c4e <__gedf2+0x8e>
    3bf2:	2c00      	cmp	r4, #0
    3bf4:	d10f      	bne.n	3c16 <__gedf2+0x56>
    3bf6:	4330      	orrs	r0, r6
    3bf8:	0007      	movs	r7, r0
    3bfa:	4681      	mov	r9, r0
    3bfc:	4278      	negs	r0, r7
    3bfe:	4178      	adcs	r0, r7
    3c00:	b2c0      	uxtb	r0, r0
    3c02:	2d00      	cmp	r5, #0
    3c04:	d117      	bne.n	3c36 <__gedf2+0x76>
    3c06:	465f      	mov	r7, fp
    3c08:	433a      	orrs	r2, r7
    3c0a:	d114      	bne.n	3c36 <__gedf2+0x76>
    3c0c:	464b      	mov	r3, r9
    3c0e:	2000      	movs	r0, #0
    3c10:	2b00      	cmp	r3, #0
    3c12:	d00a      	beq.n	3c2a <__gedf2+0x6a>
    3c14:	e006      	b.n	3c24 <__gedf2+0x64>
    3c16:	2d00      	cmp	r5, #0
    3c18:	d102      	bne.n	3c20 <__gedf2+0x60>
    3c1a:	4658      	mov	r0, fp
    3c1c:	4302      	orrs	r2, r0
    3c1e:	d001      	beq.n	3c24 <__gedf2+0x64>
    3c20:	4299      	cmp	r1, r3
    3c22:	d018      	beq.n	3c56 <__gedf2+0x96>
    3c24:	4248      	negs	r0, r1
    3c26:	2101      	movs	r1, #1
    3c28:	4308      	orrs	r0, r1
    3c2a:	bc3c      	pop	{r2, r3, r4, r5}
    3c2c:	4690      	mov	r8, r2
    3c2e:	4699      	mov	r9, r3
    3c30:	46a2      	mov	sl, r4
    3c32:	46ab      	mov	fp, r5
    3c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c36:	2800      	cmp	r0, #0
    3c38:	d0f2      	beq.n	3c20 <__gedf2+0x60>
    3c3a:	2001      	movs	r0, #1
    3c3c:	3b01      	subs	r3, #1
    3c3e:	4318      	orrs	r0, r3
    3c40:	e7f3      	b.n	3c2a <__gedf2+0x6a>
    3c42:	0037      	movs	r7, r6
    3c44:	4307      	orrs	r7, r0
    3c46:	d0d1      	beq.n	3bec <__gedf2+0x2c>
    3c48:	2002      	movs	r0, #2
    3c4a:	4240      	negs	r0, r0
    3c4c:	e7ed      	b.n	3c2a <__gedf2+0x6a>
    3c4e:	465f      	mov	r7, fp
    3c50:	4317      	orrs	r7, r2
    3c52:	d0ce      	beq.n	3bf2 <__gedf2+0x32>
    3c54:	e7f8      	b.n	3c48 <__gedf2+0x88>
    3c56:	42ac      	cmp	r4, r5
    3c58:	dce4      	bgt.n	3c24 <__gedf2+0x64>
    3c5a:	da03      	bge.n	3c64 <__gedf2+0xa4>
    3c5c:	1e48      	subs	r0, r1, #1
    3c5e:	2101      	movs	r1, #1
    3c60:	4308      	orrs	r0, r1
    3c62:	e7e2      	b.n	3c2a <__gedf2+0x6a>
    3c64:	455e      	cmp	r6, fp
    3c66:	d8dd      	bhi.n	3c24 <__gedf2+0x64>
    3c68:	d006      	beq.n	3c78 <__gedf2+0xb8>
    3c6a:	2000      	movs	r0, #0
    3c6c:	455e      	cmp	r6, fp
    3c6e:	d2dc      	bcs.n	3c2a <__gedf2+0x6a>
    3c70:	2301      	movs	r3, #1
    3c72:	1e48      	subs	r0, r1, #1
    3c74:	4318      	orrs	r0, r3
    3c76:	e7d8      	b.n	3c2a <__gedf2+0x6a>
    3c78:	45c4      	cmp	ip, r8
    3c7a:	d8d3      	bhi.n	3c24 <__gedf2+0x64>
    3c7c:	2000      	movs	r0, #0
    3c7e:	45c4      	cmp	ip, r8
    3c80:	d3f6      	bcc.n	3c70 <__gedf2+0xb0>
    3c82:	e7d2      	b.n	3c2a <__gedf2+0x6a>
    3c84:	000007ff 	.word	0x000007ff

00003c88 <__ledf2>:
    3c88:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c8a:	464e      	mov	r6, r9
    3c8c:	4645      	mov	r5, r8
    3c8e:	46de      	mov	lr, fp
    3c90:	4657      	mov	r7, sl
    3c92:	005c      	lsls	r4, r3, #1
    3c94:	b5e0      	push	{r5, r6, r7, lr}
    3c96:	031f      	lsls	r7, r3, #12
    3c98:	0fdb      	lsrs	r3, r3, #31
    3c9a:	4699      	mov	r9, r3
    3c9c:	4b2a      	ldr	r3, [pc, #168]	; (3d48 <__ledf2+0xc0>)
    3c9e:	030e      	lsls	r6, r1, #12
    3ca0:	004d      	lsls	r5, r1, #1
    3ca2:	0fc9      	lsrs	r1, r1, #31
    3ca4:	4684      	mov	ip, r0
    3ca6:	0b36      	lsrs	r6, r6, #12
    3ca8:	0d6d      	lsrs	r5, r5, #21
    3caa:	468b      	mov	fp, r1
    3cac:	4690      	mov	r8, r2
    3cae:	0b3f      	lsrs	r7, r7, #12
    3cb0:	0d64      	lsrs	r4, r4, #21
    3cb2:	429d      	cmp	r5, r3
    3cb4:	d020      	beq.n	3cf8 <__ledf2+0x70>
    3cb6:	4b24      	ldr	r3, [pc, #144]	; (3d48 <__ledf2+0xc0>)
    3cb8:	429c      	cmp	r4, r3
    3cba:	d022      	beq.n	3d02 <__ledf2+0x7a>
    3cbc:	2d00      	cmp	r5, #0
    3cbe:	d112      	bne.n	3ce6 <__ledf2+0x5e>
    3cc0:	4330      	orrs	r0, r6
    3cc2:	4243      	negs	r3, r0
    3cc4:	4143      	adcs	r3, r0
    3cc6:	b2db      	uxtb	r3, r3
    3cc8:	2c00      	cmp	r4, #0
    3cca:	d01f      	beq.n	3d0c <__ledf2+0x84>
    3ccc:	2b00      	cmp	r3, #0
    3cce:	d00c      	beq.n	3cea <__ledf2+0x62>
    3cd0:	464b      	mov	r3, r9
    3cd2:	2001      	movs	r0, #1
    3cd4:	3b01      	subs	r3, #1
    3cd6:	4303      	orrs	r3, r0
    3cd8:	0018      	movs	r0, r3
    3cda:	bc3c      	pop	{r2, r3, r4, r5}
    3cdc:	4690      	mov	r8, r2
    3cde:	4699      	mov	r9, r3
    3ce0:	46a2      	mov	sl, r4
    3ce2:	46ab      	mov	fp, r5
    3ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ce6:	2c00      	cmp	r4, #0
    3ce8:	d016      	beq.n	3d18 <__ledf2+0x90>
    3cea:	45cb      	cmp	fp, r9
    3cec:	d017      	beq.n	3d1e <__ledf2+0x96>
    3cee:	465b      	mov	r3, fp
    3cf0:	4259      	negs	r1, r3
    3cf2:	2301      	movs	r3, #1
    3cf4:	430b      	orrs	r3, r1
    3cf6:	e7ef      	b.n	3cd8 <__ledf2+0x50>
    3cf8:	0031      	movs	r1, r6
    3cfa:	2302      	movs	r3, #2
    3cfc:	4301      	orrs	r1, r0
    3cfe:	d1eb      	bne.n	3cd8 <__ledf2+0x50>
    3d00:	e7d9      	b.n	3cb6 <__ledf2+0x2e>
    3d02:	0039      	movs	r1, r7
    3d04:	2302      	movs	r3, #2
    3d06:	4311      	orrs	r1, r2
    3d08:	d1e6      	bne.n	3cd8 <__ledf2+0x50>
    3d0a:	e7d7      	b.n	3cbc <__ledf2+0x34>
    3d0c:	433a      	orrs	r2, r7
    3d0e:	d1dd      	bne.n	3ccc <__ledf2+0x44>
    3d10:	2300      	movs	r3, #0
    3d12:	2800      	cmp	r0, #0
    3d14:	d0e0      	beq.n	3cd8 <__ledf2+0x50>
    3d16:	e7ea      	b.n	3cee <__ledf2+0x66>
    3d18:	433a      	orrs	r2, r7
    3d1a:	d1e6      	bne.n	3cea <__ledf2+0x62>
    3d1c:	e7e7      	b.n	3cee <__ledf2+0x66>
    3d1e:	42a5      	cmp	r5, r4
    3d20:	dce5      	bgt.n	3cee <__ledf2+0x66>
    3d22:	db05      	blt.n	3d30 <__ledf2+0xa8>
    3d24:	42be      	cmp	r6, r7
    3d26:	d8e2      	bhi.n	3cee <__ledf2+0x66>
    3d28:	d007      	beq.n	3d3a <__ledf2+0xb2>
    3d2a:	2300      	movs	r3, #0
    3d2c:	42be      	cmp	r6, r7
    3d2e:	d2d3      	bcs.n	3cd8 <__ledf2+0x50>
    3d30:	4659      	mov	r1, fp
    3d32:	2301      	movs	r3, #1
    3d34:	3901      	subs	r1, #1
    3d36:	430b      	orrs	r3, r1
    3d38:	e7ce      	b.n	3cd8 <__ledf2+0x50>
    3d3a:	45c4      	cmp	ip, r8
    3d3c:	d8d7      	bhi.n	3cee <__ledf2+0x66>
    3d3e:	2300      	movs	r3, #0
    3d40:	45c4      	cmp	ip, r8
    3d42:	d3f5      	bcc.n	3d30 <__ledf2+0xa8>
    3d44:	e7c8      	b.n	3cd8 <__ledf2+0x50>
    3d46:	46c0      	nop			; (mov r8, r8)
    3d48:	000007ff 	.word	0x000007ff

00003d4c <gcvt>:
    3d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d4e:	001c      	movs	r4, r3
    3d50:	b085      	sub	sp, #20
    3d52:	2300      	movs	r3, #0
    3d54:	0015      	movs	r5, r2
    3d56:	2200      	movs	r2, #0
    3d58:	0006      	movs	r6, r0
    3d5a:	000f      	movs	r7, r1
    3d5c:	f7ff fdce 	bl	38fc <__aeabi_dcmplt>
    3d60:	0023      	movs	r3, r4
    3d62:	2800      	cmp	r0, #0
    3d64:	d003      	beq.n	3d6e <gcvt+0x22>
    3d66:	232d      	movs	r3, #45	; 0x2d
    3d68:	3d01      	subs	r5, #1
    3d6a:	7023      	strb	r3, [r4, #0]
    3d6c:	1c63      	adds	r3, r4, #1
    3d6e:	2200      	movs	r2, #0
    3d70:	4908      	ldr	r1, [pc, #32]	; (3d94 <gcvt+0x48>)
    3d72:	9203      	str	r2, [sp, #12]
    3d74:	3267      	adds	r2, #103	; 0x67
    3d76:	9202      	str	r2, [sp, #8]
    3d78:	9301      	str	r3, [sp, #4]
    3d7a:	9500      	str	r5, [sp, #0]
    3d7c:	003b      	movs	r3, r7
    3d7e:	0032      	movs	r2, r6
    3d80:	6808      	ldr	r0, [r1, #0]
    3d82:	f000 f8bf 	bl	3f04 <_gcvt>
    3d86:	1e43      	subs	r3, r0, #1
    3d88:	4198      	sbcs	r0, r3
    3d8a:	4240      	negs	r0, r0
    3d8c:	4004      	ands	r4, r0
    3d8e:	0020      	movs	r0, r4
    3d90:	b005      	add	sp, #20
    3d92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d94:	20000108 	.word	0x20000108

00003d98 <__libc_init_array>:
    3d98:	b570      	push	{r4, r5, r6, lr}
    3d9a:	2600      	movs	r6, #0
    3d9c:	4d0c      	ldr	r5, [pc, #48]	; (3dd0 <__libc_init_array+0x38>)
    3d9e:	4c0d      	ldr	r4, [pc, #52]	; (3dd4 <__libc_init_array+0x3c>)
    3da0:	1b64      	subs	r4, r4, r5
    3da2:	10a4      	asrs	r4, r4, #2
    3da4:	42a6      	cmp	r6, r4
    3da6:	d109      	bne.n	3dbc <__libc_init_array+0x24>
    3da8:	2600      	movs	r6, #0
    3daa:	f002 f883 	bl	5eb4 <_init>
    3dae:	4d0a      	ldr	r5, [pc, #40]	; (3dd8 <__libc_init_array+0x40>)
    3db0:	4c0a      	ldr	r4, [pc, #40]	; (3ddc <__libc_init_array+0x44>)
    3db2:	1b64      	subs	r4, r4, r5
    3db4:	10a4      	asrs	r4, r4, #2
    3db6:	42a6      	cmp	r6, r4
    3db8:	d105      	bne.n	3dc6 <__libc_init_array+0x2e>
    3dba:	bd70      	pop	{r4, r5, r6, pc}
    3dbc:	00b3      	lsls	r3, r6, #2
    3dbe:	58eb      	ldr	r3, [r5, r3]
    3dc0:	4798      	blx	r3
    3dc2:	3601      	adds	r6, #1
    3dc4:	e7ee      	b.n	3da4 <__libc_init_array+0xc>
    3dc6:	00b3      	lsls	r3, r6, #2
    3dc8:	58eb      	ldr	r3, [r5, r3]
    3dca:	4798      	blx	r3
    3dcc:	3601      	adds	r6, #1
    3dce:	e7f2      	b.n	3db6 <__libc_init_array+0x1e>
    3dd0:	00005ec0 	.word	0x00005ec0
    3dd4:	00005ec0 	.word	0x00005ec0
    3dd8:	00005ec0 	.word	0x00005ec0
    3ddc:	00005ec4 	.word	0x00005ec4

00003de0 <memcpy>:
    3de0:	2300      	movs	r3, #0
    3de2:	b510      	push	{r4, lr}
    3de4:	429a      	cmp	r2, r3
    3de6:	d100      	bne.n	3dea <memcpy+0xa>
    3de8:	bd10      	pop	{r4, pc}
    3dea:	5ccc      	ldrb	r4, [r1, r3]
    3dec:	54c4      	strb	r4, [r0, r3]
    3dee:	3301      	adds	r3, #1
    3df0:	e7f8      	b.n	3de4 <memcpy+0x4>

00003df2 <memset>:
    3df2:	0003      	movs	r3, r0
    3df4:	1882      	adds	r2, r0, r2
    3df6:	4293      	cmp	r3, r2
    3df8:	d100      	bne.n	3dfc <memset+0xa>
    3dfa:	4770      	bx	lr
    3dfc:	7019      	strb	r1, [r3, #0]
    3dfe:	3301      	adds	r3, #1
    3e00:	e7f9      	b.n	3df6 <memset+0x4>

00003e02 <strlen>:
    3e02:	2300      	movs	r3, #0
    3e04:	5cc2      	ldrb	r2, [r0, r3]
    3e06:	3301      	adds	r3, #1
    3e08:	2a00      	cmp	r2, #0
    3e0a:	d1fb      	bne.n	3e04 <strlen+0x2>
    3e0c:	1e58      	subs	r0, r3, #1
    3e0e:	4770      	bx	lr

00003e10 <print_e>:
    3e10:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e12:	b08b      	sub	sp, #44	; 0x2c
    3e14:	000e      	movs	r6, r1
    3e16:	a910      	add	r1, sp, #64	; 0x40
    3e18:	c910      	ldmia	r1!, {r4}
    3e1a:	780d      	ldrb	r5, [r1, #0]
    3e1c:	a908      	add	r1, sp, #32
    3e1e:	9104      	str	r1, [sp, #16]
    3e20:	a907      	add	r1, sp, #28
    3e22:	9103      	str	r1, [sp, #12]
    3e24:	a909      	add	r1, sp, #36	; 0x24
    3e26:	9102      	str	r1, [sp, #8]
    3e28:	1c61      	adds	r1, r4, #1
    3e2a:	9101      	str	r1, [sp, #4]
    3e2c:	2102      	movs	r1, #2
    3e2e:	9100      	str	r1, [sp, #0]
    3e30:	f000 fd3c 	bl	48ac <_dtoa_r>
    3e34:	9f09      	ldr	r7, [sp, #36]	; 0x24
    3e36:	4b32      	ldr	r3, [pc, #200]	; (3f00 <print_e+0xf0>)
    3e38:	429f      	cmp	r7, r3
    3e3a:	d105      	bne.n	3e48 <print_e+0x38>
    3e3c:	0001      	movs	r1, r0
    3e3e:	0030      	movs	r0, r6
    3e40:	f000 fca8 	bl	4794 <strcpy>
    3e44:	b00b      	add	sp, #44	; 0x2c
    3e46:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e48:	7803      	ldrb	r3, [r0, #0]
    3e4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    3e4c:	1c41      	adds	r1, r0, #1
    3e4e:	7033      	strb	r3, [r6, #0]
    3e50:	4322      	orrs	r2, r4
    3e52:	d109      	bne.n	3e68 <print_e+0x58>
    3e54:	0014      	movs	r4, r2
    3e56:	1c73      	adds	r3, r6, #1
    3e58:	7808      	ldrb	r0, [r1, #0]
    3e5a:	001a      	movs	r2, r3
    3e5c:	2800      	cmp	r0, #0
    3e5e:	d107      	bne.n	3e70 <print_e+0x60>
    3e60:	2d67      	cmp	r5, #103	; 0x67
    3e62:	d10c      	bne.n	3e7e <print_e+0x6e>
    3e64:	2565      	movs	r5, #101	; 0x65
    3e66:	e014      	b.n	3e92 <print_e+0x82>
    3e68:	222e      	movs	r2, #46	; 0x2e
    3e6a:	1cb3      	adds	r3, r6, #2
    3e6c:	7072      	strb	r2, [r6, #1]
    3e6e:	e7f3      	b.n	3e58 <print_e+0x48>
    3e70:	2c00      	cmp	r4, #0
    3e72:	ddf5      	ble.n	3e60 <print_e+0x50>
    3e74:	7018      	strb	r0, [r3, #0]
    3e76:	3101      	adds	r1, #1
    3e78:	3c01      	subs	r4, #1
    3e7a:	3301      	adds	r3, #1
    3e7c:	e7ec      	b.n	3e58 <print_e+0x48>
    3e7e:	2d47      	cmp	r5, #71	; 0x47
    3e80:	d039      	beq.n	3ef6 <print_e+0xe6>
    3e82:	0021      	movs	r1, r4
    3e84:	2030      	movs	r0, #48	; 0x30
    3e86:	2900      	cmp	r1, #0
    3e88:	dc31      	bgt.n	3eee <print_e+0xde>
    3e8a:	43e3      	mvns	r3, r4
    3e8c:	17db      	asrs	r3, r3, #31
    3e8e:	401c      	ands	r4, r3
    3e90:	1912      	adds	r2, r2, r4
    3e92:	7015      	strb	r5, [r2, #0]
    3e94:	1e7b      	subs	r3, r7, #1
    3e96:	1c95      	adds	r5, r2, #2
    3e98:	9309      	str	r3, [sp, #36]	; 0x24
    3e9a:	002c      	movs	r4, r5
    3e9c:	2b00      	cmp	r3, #0
    3e9e:	da2c      	bge.n	3efa <print_e+0xea>
    3ea0:	232d      	movs	r3, #45	; 0x2d
    3ea2:	7053      	strb	r3, [r2, #1]
    3ea4:	3b2c      	subs	r3, #44	; 0x2c
    3ea6:	1bdf      	subs	r7, r3, r7
    3ea8:	9709      	str	r7, [sp, #36]	; 0x24
    3eaa:	9e09      	ldr	r6, [sp, #36]	; 0x24
    3eac:	2e63      	cmp	r6, #99	; 0x63
    3eae:	dd0c      	ble.n	3eca <print_e+0xba>
    3eb0:	2164      	movs	r1, #100	; 0x64
    3eb2:	0030      	movs	r0, r6
    3eb4:	f7fd f969 	bl	118a <__aeabi_idiv>
    3eb8:	0003      	movs	r3, r0
    3eba:	3330      	adds	r3, #48	; 0x30
    3ebc:	702b      	strb	r3, [r5, #0]
    3ebe:	2364      	movs	r3, #100	; 0x64
    3ec0:	425b      	negs	r3, r3
    3ec2:	4358      	muls	r0, r3
    3ec4:	1980      	adds	r0, r0, r6
    3ec6:	9009      	str	r0, [sp, #36]	; 0x24
    3ec8:	1c6c      	adds	r4, r5, #1
    3eca:	9d09      	ldr	r5, [sp, #36]	; 0x24
    3ecc:	210a      	movs	r1, #10
    3ece:	0028      	movs	r0, r5
    3ed0:	f7fd f95b 	bl	118a <__aeabi_idiv>
    3ed4:	0003      	movs	r3, r0
    3ed6:	0002      	movs	r2, r0
    3ed8:	200a      	movs	r0, #10
    3eda:	4240      	negs	r0, r0
    3edc:	4358      	muls	r0, r3
    3ede:	2300      	movs	r3, #0
    3ee0:	1940      	adds	r0, r0, r5
    3ee2:	3230      	adds	r2, #48	; 0x30
    3ee4:	3030      	adds	r0, #48	; 0x30
    3ee6:	7022      	strb	r2, [r4, #0]
    3ee8:	7060      	strb	r0, [r4, #1]
    3eea:	70a3      	strb	r3, [r4, #2]
    3eec:	e7aa      	b.n	3e44 <print_e+0x34>
    3eee:	7018      	strb	r0, [r3, #0]
    3ef0:	3901      	subs	r1, #1
    3ef2:	3301      	adds	r3, #1
    3ef4:	e7c7      	b.n	3e86 <print_e+0x76>
    3ef6:	2545      	movs	r5, #69	; 0x45
    3ef8:	e7cb      	b.n	3e92 <print_e+0x82>
    3efa:	232b      	movs	r3, #43	; 0x2b
    3efc:	7053      	strb	r3, [r2, #1]
    3efe:	e7d4      	b.n	3eaa <print_e+0x9a>
    3f00:	0000270f 	.word	0x0000270f

00003f04 <_gcvt>:
    3f04:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f06:	0015      	movs	r5, r2
    3f08:	001c      	movs	r4, r3
    3f0a:	b08d      	sub	sp, #52	; 0x34
    3f0c:	ab14      	add	r3, sp, #80	; 0x50
    3f0e:	781b      	ldrb	r3, [r3, #0]
    3f10:	0006      	movs	r6, r0
    3f12:	9307      	str	r3, [sp, #28]
    3f14:	2200      	movs	r2, #0
    3f16:	2300      	movs	r3, #0
    3f18:	0028      	movs	r0, r5
    3f1a:	0021      	movs	r1, r4
    3f1c:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    3f1e:	f7ff fced 	bl	38fc <__aeabi_dcmplt>
    3f22:	2800      	cmp	r0, #0
    3f24:	d002      	beq.n	3f2c <_gcvt+0x28>
    3f26:	2380      	movs	r3, #128	; 0x80
    3f28:	061b      	lsls	r3, r3, #24
    3f2a:	18e4      	adds	r4, r4, r3
    3f2c:	2200      	movs	r2, #0
    3f2e:	2300      	movs	r3, #0
    3f30:	0028      	movs	r0, r5
    3f32:	0021      	movs	r1, r4
    3f34:	f7ff fcdc 	bl	38f0 <__aeabi_dcmpeq>
    3f38:	2800      	cmp	r0, #0
    3f3a:	d006      	beq.n	3f4a <_gcvt+0x46>
    3f3c:	2330      	movs	r3, #48	; 0x30
    3f3e:	703b      	strb	r3, [r7, #0]
    3f40:	2300      	movs	r3, #0
    3f42:	707b      	strb	r3, [r7, #1]
    3f44:	0038      	movs	r0, r7
    3f46:	b00d      	add	sp, #52	; 0x34
    3f48:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f4a:	4a51      	ldr	r2, [pc, #324]	; (4090 <_gcvt+0x18c>)
    3f4c:	4b51      	ldr	r3, [pc, #324]	; (4094 <_gcvt+0x190>)
    3f4e:	0028      	movs	r0, r5
    3f50:	0021      	movs	r1, r4
    3f52:	f7ff fcdd 	bl	3910 <__aeabi_dcmple>
    3f56:	2800      	cmp	r0, #0
    3f58:	d00d      	beq.n	3f76 <_gcvt+0x72>
    3f5a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    3f5c:	002a      	movs	r2, r5
    3f5e:	9302      	str	r3, [sp, #8]
    3f60:	9b07      	ldr	r3, [sp, #28]
    3f62:	0039      	movs	r1, r7
    3f64:	9301      	str	r3, [sp, #4]
    3f66:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3f68:	0030      	movs	r0, r6
    3f6a:	3b01      	subs	r3, #1
    3f6c:	9300      	str	r3, [sp, #0]
    3f6e:	0023      	movs	r3, r4
    3f70:	f7ff ff4e 	bl	3e10 <print_e>
    3f74:	e7e6      	b.n	3f44 <_gcvt+0x40>
    3f76:	9812      	ldr	r0, [sp, #72]	; 0x48
    3f78:	f000 fb74 	bl	4664 <_mprec_log10>
    3f7c:	0002      	movs	r2, r0
    3f7e:	000b      	movs	r3, r1
    3f80:	0028      	movs	r0, r5
    3f82:	0021      	movs	r1, r4
    3f84:	f7ff fcd8 	bl	3938 <__aeabi_dcmpge>
    3f88:	2800      	cmp	r0, #0
    3f8a:	d1e6      	bne.n	3f5a <_gcvt+0x56>
    3f8c:	2200      	movs	r2, #0
    3f8e:	4b42      	ldr	r3, [pc, #264]	; (4098 <_gcvt+0x194>)
    3f90:	0028      	movs	r0, r5
    3f92:	0021      	movs	r1, r4
    3f94:	f7ff fcb2 	bl	38fc <__aeabi_dcmplt>
    3f98:	ab0a      	add	r3, sp, #40	; 0x28
    3f9a:	9303      	str	r3, [sp, #12]
    3f9c:	ab09      	add	r3, sp, #36	; 0x24
    3f9e:	9302      	str	r3, [sp, #8]
    3fa0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3fa2:	aa0b      	add	r2, sp, #44	; 0x2c
    3fa4:	9301      	str	r3, [sp, #4]
    3fa6:	9204      	str	r2, [sp, #16]
    3fa8:	2303      	movs	r3, #3
    3faa:	2800      	cmp	r0, #0
    3fac:	d100      	bne.n	3fb0 <_gcvt+0xac>
    3fae:	2302      	movs	r3, #2
    3fb0:	9300      	str	r3, [sp, #0]
    3fb2:	002a      	movs	r2, r5
    3fb4:	0023      	movs	r3, r4
    3fb6:	0030      	movs	r0, r6
    3fb8:	f000 fc78 	bl	48ac <_dtoa_r>
    3fbc:	4b37      	ldr	r3, [pc, #220]	; (409c <_gcvt+0x198>)
    3fbe:	9a09      	ldr	r2, [sp, #36]	; 0x24
    3fc0:	429a      	cmp	r2, r3
    3fc2:	d013      	beq.n	3fec <_gcvt+0xe8>
    3fc4:	003a      	movs	r2, r7
    3fc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3fc8:	7804      	ldrb	r4, [r0, #0]
    3fca:	1a9b      	subs	r3, r3, r2
    3fcc:	0011      	movs	r1, r2
    3fce:	18fb      	adds	r3, r7, r3
    3fd0:	9d09      	ldr	r5, [sp, #36]	; 0x24
    3fd2:	2c00      	cmp	r4, #0
    3fd4:	d115      	bne.n	4002 <_gcvt+0xfe>
    3fd6:	2101      	movs	r1, #1
    3fd8:	468c      	mov	ip, r1
    3fda:	1aed      	subs	r5, r5, r3
    3fdc:	18ee      	adds	r6, r5, r3
    3fde:	0011      	movs	r1, r2
    3fe0:	2e00      	cmp	r6, #0
    3fe2:	dc3b      	bgt.n	405c <_gcvt+0x158>
    3fe4:	2c00      	cmp	r4, #0
    3fe6:	d00e      	beq.n	4006 <_gcvt+0x102>
    3fe8:	9609      	str	r6, [sp, #36]	; 0x24
    3fea:	e00c      	b.n	4006 <_gcvt+0x102>
    3fec:	0001      	movs	r1, r0
    3fee:	0038      	movs	r0, r7
    3ff0:	f000 fbd0 	bl	4794 <strcpy>
    3ff4:	e7a6      	b.n	3f44 <_gcvt+0x40>
    3ff6:	3d01      	subs	r5, #1
    3ff8:	7014      	strb	r4, [r2, #0]
    3ffa:	3001      	adds	r0, #1
    3ffc:	9509      	str	r5, [sp, #36]	; 0x24
    3ffe:	3201      	adds	r2, #1
    4000:	e7e1      	b.n	3fc6 <_gcvt+0xc2>
    4002:	2d00      	cmp	r5, #0
    4004:	dcf7      	bgt.n	3ff6 <_gcvt+0xf2>
    4006:	9c15      	ldr	r4, [sp, #84]	; 0x54
    4008:	2c00      	cmp	r4, #0
    400a:	d102      	bne.n	4012 <_gcvt+0x10e>
    400c:	7804      	ldrb	r4, [r0, #0]
    400e:	2c00      	cmp	r4, #0
    4010:	d021      	beq.n	4056 <_gcvt+0x152>
    4012:	4297      	cmp	r7, r2
    4014:	d102      	bne.n	401c <_gcvt+0x118>
    4016:	2230      	movs	r2, #48	; 0x30
    4018:	1c79      	adds	r1, r7, #1
    401a:	703a      	strb	r2, [r7, #0]
    401c:	222e      	movs	r2, #46	; 0x2e
    401e:	2530      	movs	r5, #48	; 0x30
    4020:	700a      	strb	r2, [r1, #0]
    4022:	2601      	movs	r6, #1
    4024:	1c4a      	adds	r2, r1, #1
    4026:	2100      	movs	r1, #0
    4028:	9c09      	ldr	r4, [sp, #36]	; 0x24
    402a:	2c00      	cmp	r4, #0
    402c:	db1e      	blt.n	406c <_gcvt+0x168>
    402e:	2900      	cmp	r1, #0
    4030:	d000      	beq.n	4034 <_gcvt+0x130>
    4032:	9409      	str	r4, [sp, #36]	; 0x24
    4034:	7804      	ldrb	r4, [r0, #0]
    4036:	0011      	movs	r1, r2
    4038:	2c00      	cmp	r4, #0
    403a:	d001      	beq.n	4040 <_gcvt+0x13c>
    403c:	2b00      	cmp	r3, #0
    403e:	dc1d      	bgt.n	407c <_gcvt+0x178>
    4040:	9815      	ldr	r0, [sp, #84]	; 0x54
    4042:	2800      	cmp	r0, #0
    4044:	d007      	beq.n	4056 <_gcvt+0x152>
    4046:	0018      	movs	r0, r3
    4048:	2430      	movs	r4, #48	; 0x30
    404a:	2800      	cmp	r0, #0
    404c:	dc1b      	bgt.n	4086 <_gcvt+0x182>
    404e:	43da      	mvns	r2, r3
    4050:	17d2      	asrs	r2, r2, #31
    4052:	4013      	ands	r3, r2
    4054:	18c9      	adds	r1, r1, r3
    4056:	2300      	movs	r3, #0
    4058:	700b      	strb	r3, [r1, #0]
    405a:	e773      	b.n	3f44 <_gcvt+0x40>
    405c:	2b00      	cmp	r3, #0
    405e:	ddc1      	ble.n	3fe4 <_gcvt+0xe0>
    4060:	2130      	movs	r1, #48	; 0x30
    4062:	3b01      	subs	r3, #1
    4064:	7011      	strb	r1, [r2, #0]
    4066:	4664      	mov	r4, ip
    4068:	3201      	adds	r2, #1
    406a:	e7b7      	b.n	3fdc <_gcvt+0xd8>
    406c:	2b00      	cmp	r3, #0
    406e:	ddde      	ble.n	402e <_gcvt+0x12a>
    4070:	7015      	strb	r5, [r2, #0]
    4072:	3401      	adds	r4, #1
    4074:	3b01      	subs	r3, #1
    4076:	3201      	adds	r2, #1
    4078:	0031      	movs	r1, r6
    407a:	e7d6      	b.n	402a <_gcvt+0x126>
    407c:	7014      	strb	r4, [r2, #0]
    407e:	3001      	adds	r0, #1
    4080:	3b01      	subs	r3, #1
    4082:	3201      	adds	r2, #1
    4084:	e7d6      	b.n	4034 <_gcvt+0x130>
    4086:	7014      	strb	r4, [r2, #0]
    4088:	3801      	subs	r0, #1
    408a:	3201      	adds	r2, #1
    408c:	e7dd      	b.n	404a <_gcvt+0x146>
    408e:	46c0      	nop			; (mov r8, r8)
    4090:	eb1c432d 	.word	0xeb1c432d
    4094:	3f1a36e2 	.word	0x3f1a36e2
    4098:	3ff00000 	.word	0x3ff00000
    409c:	0000270f 	.word	0x0000270f

000040a0 <_Balloc>:
    40a0:	b570      	push	{r4, r5, r6, lr}
    40a2:	6a46      	ldr	r6, [r0, #36]	; 0x24
    40a4:	0004      	movs	r4, r0
    40a6:	000d      	movs	r5, r1
    40a8:	2e00      	cmp	r6, #0
    40aa:	d107      	bne.n	40bc <_Balloc+0x1c>
    40ac:	2010      	movs	r0, #16
    40ae:	f001 f9e5 	bl	547c <malloc>
    40b2:	6260      	str	r0, [r4, #36]	; 0x24
    40b4:	6046      	str	r6, [r0, #4]
    40b6:	6086      	str	r6, [r0, #8]
    40b8:	6006      	str	r6, [r0, #0]
    40ba:	60c6      	str	r6, [r0, #12]
    40bc:	6a66      	ldr	r6, [r4, #36]	; 0x24
    40be:	68f3      	ldr	r3, [r6, #12]
    40c0:	2b00      	cmp	r3, #0
    40c2:	d013      	beq.n	40ec <_Balloc+0x4c>
    40c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
    40c6:	00aa      	lsls	r2, r5, #2
    40c8:	68db      	ldr	r3, [r3, #12]
    40ca:	189b      	adds	r3, r3, r2
    40cc:	6818      	ldr	r0, [r3, #0]
    40ce:	2800      	cmp	r0, #0
    40d0:	d118      	bne.n	4104 <_Balloc+0x64>
    40d2:	2101      	movs	r1, #1
    40d4:	000e      	movs	r6, r1
    40d6:	40ae      	lsls	r6, r5
    40d8:	1d72      	adds	r2, r6, #5
    40da:	0092      	lsls	r2, r2, #2
    40dc:	0020      	movs	r0, r4
    40de:	f000 fadb 	bl	4698 <_calloc_r>
    40e2:	2800      	cmp	r0, #0
    40e4:	d00c      	beq.n	4100 <_Balloc+0x60>
    40e6:	6045      	str	r5, [r0, #4]
    40e8:	6086      	str	r6, [r0, #8]
    40ea:	e00d      	b.n	4108 <_Balloc+0x68>
    40ec:	2221      	movs	r2, #33	; 0x21
    40ee:	2104      	movs	r1, #4
    40f0:	0020      	movs	r0, r4
    40f2:	f000 fad1 	bl	4698 <_calloc_r>
    40f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
    40f8:	60f0      	str	r0, [r6, #12]
    40fa:	68db      	ldr	r3, [r3, #12]
    40fc:	2b00      	cmp	r3, #0
    40fe:	d1e1      	bne.n	40c4 <_Balloc+0x24>
    4100:	2000      	movs	r0, #0
    4102:	bd70      	pop	{r4, r5, r6, pc}
    4104:	6802      	ldr	r2, [r0, #0]
    4106:	601a      	str	r2, [r3, #0]
    4108:	2300      	movs	r3, #0
    410a:	6103      	str	r3, [r0, #16]
    410c:	60c3      	str	r3, [r0, #12]
    410e:	e7f8      	b.n	4102 <_Balloc+0x62>

00004110 <_Bfree>:
    4110:	b570      	push	{r4, r5, r6, lr}
    4112:	6a44      	ldr	r4, [r0, #36]	; 0x24
    4114:	0006      	movs	r6, r0
    4116:	000d      	movs	r5, r1
    4118:	2c00      	cmp	r4, #0
    411a:	d107      	bne.n	412c <_Bfree+0x1c>
    411c:	2010      	movs	r0, #16
    411e:	f001 f9ad 	bl	547c <malloc>
    4122:	6270      	str	r0, [r6, #36]	; 0x24
    4124:	6044      	str	r4, [r0, #4]
    4126:	6084      	str	r4, [r0, #8]
    4128:	6004      	str	r4, [r0, #0]
    412a:	60c4      	str	r4, [r0, #12]
    412c:	2d00      	cmp	r5, #0
    412e:	d007      	beq.n	4140 <_Bfree+0x30>
    4130:	6a73      	ldr	r3, [r6, #36]	; 0x24
    4132:	686a      	ldr	r2, [r5, #4]
    4134:	68db      	ldr	r3, [r3, #12]
    4136:	0092      	lsls	r2, r2, #2
    4138:	189b      	adds	r3, r3, r2
    413a:	681a      	ldr	r2, [r3, #0]
    413c:	602a      	str	r2, [r5, #0]
    413e:	601d      	str	r5, [r3, #0]
    4140:	bd70      	pop	{r4, r5, r6, pc}

00004142 <__multadd>:
    4142:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4144:	001e      	movs	r6, r3
    4146:	2314      	movs	r3, #20
    4148:	469c      	mov	ip, r3
    414a:	0007      	movs	r7, r0
    414c:	000c      	movs	r4, r1
    414e:	2000      	movs	r0, #0
    4150:	690d      	ldr	r5, [r1, #16]
    4152:	448c      	add	ip, r1
    4154:	4663      	mov	r3, ip
    4156:	8819      	ldrh	r1, [r3, #0]
    4158:	681b      	ldr	r3, [r3, #0]
    415a:	4351      	muls	r1, r2
    415c:	0c1b      	lsrs	r3, r3, #16
    415e:	4353      	muls	r3, r2
    4160:	1989      	adds	r1, r1, r6
    4162:	0c0e      	lsrs	r6, r1, #16
    4164:	199b      	adds	r3, r3, r6
    4166:	b289      	uxth	r1, r1
    4168:	0c1e      	lsrs	r6, r3, #16
    416a:	041b      	lsls	r3, r3, #16
    416c:	185b      	adds	r3, r3, r1
    416e:	4661      	mov	r1, ip
    4170:	3001      	adds	r0, #1
    4172:	c108      	stmia	r1!, {r3}
    4174:	468c      	mov	ip, r1
    4176:	4285      	cmp	r5, r0
    4178:	dcec      	bgt.n	4154 <__multadd+0x12>
    417a:	2e00      	cmp	r6, #0
    417c:	d01b      	beq.n	41b6 <__multadd+0x74>
    417e:	68a3      	ldr	r3, [r4, #8]
    4180:	429d      	cmp	r5, r3
    4182:	db12      	blt.n	41aa <__multadd+0x68>
    4184:	6863      	ldr	r3, [r4, #4]
    4186:	0038      	movs	r0, r7
    4188:	1c59      	adds	r1, r3, #1
    418a:	f7ff ff89 	bl	40a0 <_Balloc>
    418e:	0021      	movs	r1, r4
    4190:	6923      	ldr	r3, [r4, #16]
    4192:	9001      	str	r0, [sp, #4]
    4194:	1c9a      	adds	r2, r3, #2
    4196:	0092      	lsls	r2, r2, #2
    4198:	310c      	adds	r1, #12
    419a:	300c      	adds	r0, #12
    419c:	f7ff fe20 	bl	3de0 <memcpy>
    41a0:	0021      	movs	r1, r4
    41a2:	0038      	movs	r0, r7
    41a4:	f7ff ffb4 	bl	4110 <_Bfree>
    41a8:	9c01      	ldr	r4, [sp, #4]
    41aa:	1d2b      	adds	r3, r5, #4
    41ac:	009b      	lsls	r3, r3, #2
    41ae:	18e3      	adds	r3, r4, r3
    41b0:	3501      	adds	r5, #1
    41b2:	605e      	str	r6, [r3, #4]
    41b4:	6125      	str	r5, [r4, #16]
    41b6:	0020      	movs	r0, r4
    41b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

000041ba <__hi0bits>:
    41ba:	0003      	movs	r3, r0
    41bc:	0c02      	lsrs	r2, r0, #16
    41be:	2000      	movs	r0, #0
    41c0:	4282      	cmp	r2, r0
    41c2:	d101      	bne.n	41c8 <__hi0bits+0xe>
    41c4:	041b      	lsls	r3, r3, #16
    41c6:	3010      	adds	r0, #16
    41c8:	0e1a      	lsrs	r2, r3, #24
    41ca:	d101      	bne.n	41d0 <__hi0bits+0x16>
    41cc:	3008      	adds	r0, #8
    41ce:	021b      	lsls	r3, r3, #8
    41d0:	0f1a      	lsrs	r2, r3, #28
    41d2:	d101      	bne.n	41d8 <__hi0bits+0x1e>
    41d4:	3004      	adds	r0, #4
    41d6:	011b      	lsls	r3, r3, #4
    41d8:	0f9a      	lsrs	r2, r3, #30
    41da:	d101      	bne.n	41e0 <__hi0bits+0x26>
    41dc:	3002      	adds	r0, #2
    41de:	009b      	lsls	r3, r3, #2
    41e0:	2b00      	cmp	r3, #0
    41e2:	db03      	blt.n	41ec <__hi0bits+0x32>
    41e4:	3001      	adds	r0, #1
    41e6:	005b      	lsls	r3, r3, #1
    41e8:	d400      	bmi.n	41ec <__hi0bits+0x32>
    41ea:	2020      	movs	r0, #32
    41ec:	4770      	bx	lr

000041ee <__lo0bits>:
    41ee:	2207      	movs	r2, #7
    41f0:	6803      	ldr	r3, [r0, #0]
    41f2:	b510      	push	{r4, lr}
    41f4:	0001      	movs	r1, r0
    41f6:	401a      	ands	r2, r3
    41f8:	d00d      	beq.n	4216 <__lo0bits+0x28>
    41fa:	2401      	movs	r4, #1
    41fc:	2000      	movs	r0, #0
    41fe:	4223      	tst	r3, r4
    4200:	d105      	bne.n	420e <__lo0bits+0x20>
    4202:	3002      	adds	r0, #2
    4204:	4203      	tst	r3, r0
    4206:	d003      	beq.n	4210 <__lo0bits+0x22>
    4208:	40e3      	lsrs	r3, r4
    420a:	0020      	movs	r0, r4
    420c:	600b      	str	r3, [r1, #0]
    420e:	bd10      	pop	{r4, pc}
    4210:	089b      	lsrs	r3, r3, #2
    4212:	600b      	str	r3, [r1, #0]
    4214:	e7fb      	b.n	420e <__lo0bits+0x20>
    4216:	b29c      	uxth	r4, r3
    4218:	0010      	movs	r0, r2
    421a:	2c00      	cmp	r4, #0
    421c:	d101      	bne.n	4222 <__lo0bits+0x34>
    421e:	2010      	movs	r0, #16
    4220:	0c1b      	lsrs	r3, r3, #16
    4222:	b2da      	uxtb	r2, r3
    4224:	2a00      	cmp	r2, #0
    4226:	d101      	bne.n	422c <__lo0bits+0x3e>
    4228:	3008      	adds	r0, #8
    422a:	0a1b      	lsrs	r3, r3, #8
    422c:	071a      	lsls	r2, r3, #28
    422e:	d101      	bne.n	4234 <__lo0bits+0x46>
    4230:	3004      	adds	r0, #4
    4232:	091b      	lsrs	r3, r3, #4
    4234:	079a      	lsls	r2, r3, #30
    4236:	d101      	bne.n	423c <__lo0bits+0x4e>
    4238:	3002      	adds	r0, #2
    423a:	089b      	lsrs	r3, r3, #2
    423c:	07da      	lsls	r2, r3, #31
    423e:	d4e8      	bmi.n	4212 <__lo0bits+0x24>
    4240:	085b      	lsrs	r3, r3, #1
    4242:	d001      	beq.n	4248 <__lo0bits+0x5a>
    4244:	3001      	adds	r0, #1
    4246:	e7e4      	b.n	4212 <__lo0bits+0x24>
    4248:	2020      	movs	r0, #32
    424a:	e7e0      	b.n	420e <__lo0bits+0x20>

0000424c <__i2b>:
    424c:	b510      	push	{r4, lr}
    424e:	000c      	movs	r4, r1
    4250:	2101      	movs	r1, #1
    4252:	f7ff ff25 	bl	40a0 <_Balloc>
    4256:	2301      	movs	r3, #1
    4258:	6144      	str	r4, [r0, #20]
    425a:	6103      	str	r3, [r0, #16]
    425c:	bd10      	pop	{r4, pc}

0000425e <__multiply>:
    425e:	b5f0      	push	{r4, r5, r6, r7, lr}
    4260:	690b      	ldr	r3, [r1, #16]
    4262:	0015      	movs	r5, r2
    4264:	6912      	ldr	r2, [r2, #16]
    4266:	b089      	sub	sp, #36	; 0x24
    4268:	000c      	movs	r4, r1
    426a:	4293      	cmp	r3, r2
    426c:	da01      	bge.n	4272 <__multiply+0x14>
    426e:	002c      	movs	r4, r5
    4270:	000d      	movs	r5, r1
    4272:	6927      	ldr	r7, [r4, #16]
    4274:	692e      	ldr	r6, [r5, #16]
    4276:	68a2      	ldr	r2, [r4, #8]
    4278:	19bb      	adds	r3, r7, r6
    427a:	6861      	ldr	r1, [r4, #4]
    427c:	9301      	str	r3, [sp, #4]
    427e:	4293      	cmp	r3, r2
    4280:	dd00      	ble.n	4284 <__multiply+0x26>
    4282:	3101      	adds	r1, #1
    4284:	f7ff ff0c 	bl	40a0 <_Balloc>
    4288:	0003      	movs	r3, r0
    428a:	3314      	adds	r3, #20
    428c:	9300      	str	r3, [sp, #0]
    428e:	9a00      	ldr	r2, [sp, #0]
    4290:	19bb      	adds	r3, r7, r6
    4292:	4694      	mov	ip, r2
    4294:	009b      	lsls	r3, r3, #2
    4296:	449c      	add	ip, r3
    4298:	0013      	movs	r3, r2
    429a:	2200      	movs	r2, #0
    429c:	9004      	str	r0, [sp, #16]
    429e:	4563      	cmp	r3, ip
    42a0:	d31c      	bcc.n	42dc <__multiply+0x7e>
    42a2:	002a      	movs	r2, r5
    42a4:	3414      	adds	r4, #20
    42a6:	00bf      	lsls	r7, r7, #2
    42a8:	19e3      	adds	r3, r4, r7
    42aa:	3214      	adds	r2, #20
    42ac:	00b6      	lsls	r6, r6, #2
    42ae:	9305      	str	r3, [sp, #20]
    42b0:	1993      	adds	r3, r2, r6
    42b2:	9402      	str	r4, [sp, #8]
    42b4:	9306      	str	r3, [sp, #24]
    42b6:	9b06      	ldr	r3, [sp, #24]
    42b8:	429a      	cmp	r2, r3
    42ba:	d311      	bcc.n	42e0 <__multiply+0x82>
    42bc:	9b01      	ldr	r3, [sp, #4]
    42be:	2b00      	cmp	r3, #0
    42c0:	dd06      	ble.n	42d0 <__multiply+0x72>
    42c2:	2304      	movs	r3, #4
    42c4:	425b      	negs	r3, r3
    42c6:	449c      	add	ip, r3
    42c8:	4663      	mov	r3, ip
    42ca:	681b      	ldr	r3, [r3, #0]
    42cc:	2b00      	cmp	r3, #0
    42ce:	d051      	beq.n	4374 <__multiply+0x116>
    42d0:	9b04      	ldr	r3, [sp, #16]
    42d2:	9a01      	ldr	r2, [sp, #4]
    42d4:	0018      	movs	r0, r3
    42d6:	611a      	str	r2, [r3, #16]
    42d8:	b009      	add	sp, #36	; 0x24
    42da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    42dc:	c304      	stmia	r3!, {r2}
    42de:	e7de      	b.n	429e <__multiply+0x40>
    42e0:	8814      	ldrh	r4, [r2, #0]
    42e2:	2c00      	cmp	r4, #0
    42e4:	d01e      	beq.n	4324 <__multiply+0xc6>
    42e6:	2600      	movs	r6, #0
    42e8:	9d00      	ldr	r5, [sp, #0]
    42ea:	9f02      	ldr	r7, [sp, #8]
    42ec:	cf01      	ldmia	r7!, {r0}
    42ee:	9507      	str	r5, [sp, #28]
    42f0:	cd08      	ldmia	r5!, {r3}
    42f2:	9303      	str	r3, [sp, #12]
    42f4:	b283      	uxth	r3, r0
    42f6:	4363      	muls	r3, r4
    42f8:	0019      	movs	r1, r3
    42fa:	466b      	mov	r3, sp
    42fc:	0c00      	lsrs	r0, r0, #16
    42fe:	899b      	ldrh	r3, [r3, #12]
    4300:	4360      	muls	r0, r4
    4302:	18cb      	adds	r3, r1, r3
    4304:	9903      	ldr	r1, [sp, #12]
    4306:	199b      	adds	r3, r3, r6
    4308:	0c09      	lsrs	r1, r1, #16
    430a:	1841      	adds	r1, r0, r1
    430c:	0c18      	lsrs	r0, r3, #16
    430e:	1809      	adds	r1, r1, r0
    4310:	0c0e      	lsrs	r6, r1, #16
    4312:	b29b      	uxth	r3, r3
    4314:	0409      	lsls	r1, r1, #16
    4316:	430b      	orrs	r3, r1
    4318:	9907      	ldr	r1, [sp, #28]
    431a:	600b      	str	r3, [r1, #0]
    431c:	9b05      	ldr	r3, [sp, #20]
    431e:	42bb      	cmp	r3, r7
    4320:	d8e4      	bhi.n	42ec <__multiply+0x8e>
    4322:	602e      	str	r6, [r5, #0]
    4324:	6813      	ldr	r3, [r2, #0]
    4326:	0c1b      	lsrs	r3, r3, #16
    4328:	9303      	str	r3, [sp, #12]
    432a:	d01e      	beq.n	436a <__multiply+0x10c>
    432c:	2600      	movs	r6, #0
    432e:	9b00      	ldr	r3, [sp, #0]
    4330:	9c02      	ldr	r4, [sp, #8]
    4332:	681b      	ldr	r3, [r3, #0]
    4334:	9800      	ldr	r0, [sp, #0]
    4336:	0007      	movs	r7, r0
    4338:	8821      	ldrh	r1, [r4, #0]
    433a:	9d03      	ldr	r5, [sp, #12]
    433c:	b29b      	uxth	r3, r3
    433e:	4369      	muls	r1, r5
    4340:	c820      	ldmia	r0!, {r5}
    4342:	0c2d      	lsrs	r5, r5, #16
    4344:	1949      	adds	r1, r1, r5
    4346:	198e      	adds	r6, r1, r6
    4348:	0431      	lsls	r1, r6, #16
    434a:	430b      	orrs	r3, r1
    434c:	603b      	str	r3, [r7, #0]
    434e:	cc08      	ldmia	r4!, {r3}
    4350:	9903      	ldr	r1, [sp, #12]
    4352:	0c1b      	lsrs	r3, r3, #16
    4354:	434b      	muls	r3, r1
    4356:	6879      	ldr	r1, [r7, #4]
    4358:	0c36      	lsrs	r6, r6, #16
    435a:	b289      	uxth	r1, r1
    435c:	185b      	adds	r3, r3, r1
    435e:	9905      	ldr	r1, [sp, #20]
    4360:	199b      	adds	r3, r3, r6
    4362:	0c1e      	lsrs	r6, r3, #16
    4364:	42a1      	cmp	r1, r4
    4366:	d8e6      	bhi.n	4336 <__multiply+0xd8>
    4368:	6003      	str	r3, [r0, #0]
    436a:	9b00      	ldr	r3, [sp, #0]
    436c:	3204      	adds	r2, #4
    436e:	3304      	adds	r3, #4
    4370:	9300      	str	r3, [sp, #0]
    4372:	e7a0      	b.n	42b6 <__multiply+0x58>
    4374:	9b01      	ldr	r3, [sp, #4]
    4376:	3b01      	subs	r3, #1
    4378:	9301      	str	r3, [sp, #4]
    437a:	e79f      	b.n	42bc <__multiply+0x5e>

0000437c <__pow5mult>:
    437c:	2303      	movs	r3, #3
    437e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4380:	4013      	ands	r3, r2
    4382:	0005      	movs	r5, r0
    4384:	000e      	movs	r6, r1
    4386:	0014      	movs	r4, r2
    4388:	2b00      	cmp	r3, #0
    438a:	d008      	beq.n	439e <__pow5mult+0x22>
    438c:	4922      	ldr	r1, [pc, #136]	; (4418 <__pow5mult+0x9c>)
    438e:	3b01      	subs	r3, #1
    4390:	009a      	lsls	r2, r3, #2
    4392:	5852      	ldr	r2, [r2, r1]
    4394:	2300      	movs	r3, #0
    4396:	0031      	movs	r1, r6
    4398:	f7ff fed3 	bl	4142 <__multadd>
    439c:	0006      	movs	r6, r0
    439e:	10a3      	asrs	r3, r4, #2
    43a0:	9301      	str	r3, [sp, #4]
    43a2:	d036      	beq.n	4412 <__pow5mult+0x96>
    43a4:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    43a6:	2c00      	cmp	r4, #0
    43a8:	d107      	bne.n	43ba <__pow5mult+0x3e>
    43aa:	2010      	movs	r0, #16
    43ac:	f001 f866 	bl	547c <malloc>
    43b0:	6268      	str	r0, [r5, #36]	; 0x24
    43b2:	6044      	str	r4, [r0, #4]
    43b4:	6084      	str	r4, [r0, #8]
    43b6:	6004      	str	r4, [r0, #0]
    43b8:	60c4      	str	r4, [r0, #12]
    43ba:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    43bc:	68bc      	ldr	r4, [r7, #8]
    43be:	2c00      	cmp	r4, #0
    43c0:	d107      	bne.n	43d2 <__pow5mult+0x56>
    43c2:	4916      	ldr	r1, [pc, #88]	; (441c <__pow5mult+0xa0>)
    43c4:	0028      	movs	r0, r5
    43c6:	f7ff ff41 	bl	424c <__i2b>
    43ca:	2300      	movs	r3, #0
    43cc:	0004      	movs	r4, r0
    43ce:	60b8      	str	r0, [r7, #8]
    43d0:	6003      	str	r3, [r0, #0]
    43d2:	2201      	movs	r2, #1
    43d4:	9b01      	ldr	r3, [sp, #4]
    43d6:	4213      	tst	r3, r2
    43d8:	d00a      	beq.n	43f0 <__pow5mult+0x74>
    43da:	0031      	movs	r1, r6
    43dc:	0022      	movs	r2, r4
    43de:	0028      	movs	r0, r5
    43e0:	f7ff ff3d 	bl	425e <__multiply>
    43e4:	0007      	movs	r7, r0
    43e6:	0031      	movs	r1, r6
    43e8:	0028      	movs	r0, r5
    43ea:	f7ff fe91 	bl	4110 <_Bfree>
    43ee:	003e      	movs	r6, r7
    43f0:	9b01      	ldr	r3, [sp, #4]
    43f2:	105b      	asrs	r3, r3, #1
    43f4:	9301      	str	r3, [sp, #4]
    43f6:	d00c      	beq.n	4412 <__pow5mult+0x96>
    43f8:	6820      	ldr	r0, [r4, #0]
    43fa:	2800      	cmp	r0, #0
    43fc:	d107      	bne.n	440e <__pow5mult+0x92>
    43fe:	0022      	movs	r2, r4
    4400:	0021      	movs	r1, r4
    4402:	0028      	movs	r0, r5
    4404:	f7ff ff2b 	bl	425e <__multiply>
    4408:	2300      	movs	r3, #0
    440a:	6020      	str	r0, [r4, #0]
    440c:	6003      	str	r3, [r0, #0]
    440e:	0004      	movs	r4, r0
    4410:	e7df      	b.n	43d2 <__pow5mult+0x56>
    4412:	0030      	movs	r0, r6
    4414:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    4416:	46c0      	nop			; (mov r8, r8)
    4418:	00005e98 	.word	0x00005e98
    441c:	00000271 	.word	0x00000271

00004420 <__lshift>:
    4420:	b5f0      	push	{r4, r5, r6, r7, lr}
    4422:	000d      	movs	r5, r1
    4424:	0017      	movs	r7, r2
    4426:	692b      	ldr	r3, [r5, #16]
    4428:	1154      	asrs	r4, r2, #5
    442a:	b085      	sub	sp, #20
    442c:	18e3      	adds	r3, r4, r3
    442e:	9302      	str	r3, [sp, #8]
    4430:	3301      	adds	r3, #1
    4432:	9301      	str	r3, [sp, #4]
    4434:	6849      	ldr	r1, [r1, #4]
    4436:	68ab      	ldr	r3, [r5, #8]
    4438:	9003      	str	r0, [sp, #12]
    443a:	9a01      	ldr	r2, [sp, #4]
    443c:	4293      	cmp	r3, r2
    443e:	db34      	blt.n	44aa <__lshift+0x8a>
    4440:	9803      	ldr	r0, [sp, #12]
    4442:	f7ff fe2d 	bl	40a0 <_Balloc>
    4446:	2300      	movs	r3, #0
    4448:	0002      	movs	r2, r0
    444a:	0006      	movs	r6, r0
    444c:	0019      	movs	r1, r3
    444e:	3214      	adds	r2, #20
    4450:	42a3      	cmp	r3, r4
    4452:	db2d      	blt.n	44b0 <__lshift+0x90>
    4454:	43e3      	mvns	r3, r4
    4456:	17db      	asrs	r3, r3, #31
    4458:	401c      	ands	r4, r3
    445a:	002b      	movs	r3, r5
    445c:	211f      	movs	r1, #31
    445e:	00a4      	lsls	r4, r4, #2
    4460:	1914      	adds	r4, r2, r4
    4462:	692a      	ldr	r2, [r5, #16]
    4464:	3314      	adds	r3, #20
    4466:	0092      	lsls	r2, r2, #2
    4468:	189a      	adds	r2, r3, r2
    446a:	400f      	ands	r7, r1
    446c:	d024      	beq.n	44b8 <__lshift+0x98>
    446e:	3101      	adds	r1, #1
    4470:	1bc9      	subs	r1, r1, r7
    4472:	468c      	mov	ip, r1
    4474:	2100      	movs	r1, #0
    4476:	6818      	ldr	r0, [r3, #0]
    4478:	40b8      	lsls	r0, r7
    447a:	4301      	orrs	r1, r0
    447c:	4660      	mov	r0, ip
    447e:	6021      	str	r1, [r4, #0]
    4480:	cb02      	ldmia	r3!, {r1}
    4482:	3404      	adds	r4, #4
    4484:	40c1      	lsrs	r1, r0
    4486:	429a      	cmp	r2, r3
    4488:	d8f5      	bhi.n	4476 <__lshift+0x56>
    448a:	6021      	str	r1, [r4, #0]
    448c:	2900      	cmp	r1, #0
    448e:	d002      	beq.n	4496 <__lshift+0x76>
    4490:	9b02      	ldr	r3, [sp, #8]
    4492:	3302      	adds	r3, #2
    4494:	9301      	str	r3, [sp, #4]
    4496:	9b01      	ldr	r3, [sp, #4]
    4498:	9803      	ldr	r0, [sp, #12]
    449a:	3b01      	subs	r3, #1
    449c:	6133      	str	r3, [r6, #16]
    449e:	0029      	movs	r1, r5
    44a0:	f7ff fe36 	bl	4110 <_Bfree>
    44a4:	0030      	movs	r0, r6
    44a6:	b005      	add	sp, #20
    44a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    44aa:	3101      	adds	r1, #1
    44ac:	005b      	lsls	r3, r3, #1
    44ae:	e7c4      	b.n	443a <__lshift+0x1a>
    44b0:	0098      	lsls	r0, r3, #2
    44b2:	5011      	str	r1, [r2, r0]
    44b4:	3301      	adds	r3, #1
    44b6:	e7cb      	b.n	4450 <__lshift+0x30>
    44b8:	cb02      	ldmia	r3!, {r1}
    44ba:	c402      	stmia	r4!, {r1}
    44bc:	429a      	cmp	r2, r3
    44be:	d8fb      	bhi.n	44b8 <__lshift+0x98>
    44c0:	e7e9      	b.n	4496 <__lshift+0x76>

000044c2 <__mcmp>:
    44c2:	690a      	ldr	r2, [r1, #16]
    44c4:	6903      	ldr	r3, [r0, #16]
    44c6:	b530      	push	{r4, r5, lr}
    44c8:	1a9b      	subs	r3, r3, r2
    44ca:	d10e      	bne.n	44ea <__mcmp+0x28>
    44cc:	0092      	lsls	r2, r2, #2
    44ce:	3014      	adds	r0, #20
    44d0:	3114      	adds	r1, #20
    44d2:	1884      	adds	r4, r0, r2
    44d4:	1889      	adds	r1, r1, r2
    44d6:	3c04      	subs	r4, #4
    44d8:	3904      	subs	r1, #4
    44da:	6822      	ldr	r2, [r4, #0]
    44dc:	680d      	ldr	r5, [r1, #0]
    44de:	42aa      	cmp	r2, r5
    44e0:	d005      	beq.n	44ee <__mcmp+0x2c>
    44e2:	42aa      	cmp	r2, r5
    44e4:	4192      	sbcs	r2, r2
    44e6:	2301      	movs	r3, #1
    44e8:	4313      	orrs	r3, r2
    44ea:	0018      	movs	r0, r3
    44ec:	bd30      	pop	{r4, r5, pc}
    44ee:	42a0      	cmp	r0, r4
    44f0:	d3f1      	bcc.n	44d6 <__mcmp+0x14>
    44f2:	e7fa      	b.n	44ea <__mcmp+0x28>

000044f4 <__mdiff>:
    44f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    44f6:	000d      	movs	r5, r1
    44f8:	b085      	sub	sp, #20
    44fa:	0007      	movs	r7, r0
    44fc:	0011      	movs	r1, r2
    44fe:	0028      	movs	r0, r5
    4500:	0014      	movs	r4, r2
    4502:	f7ff ffde 	bl	44c2 <__mcmp>
    4506:	1e06      	subs	r6, r0, #0
    4508:	d108      	bne.n	451c <__mdiff+0x28>
    450a:	0001      	movs	r1, r0
    450c:	0038      	movs	r0, r7
    450e:	f7ff fdc7 	bl	40a0 <_Balloc>
    4512:	2301      	movs	r3, #1
    4514:	6146      	str	r6, [r0, #20]
    4516:	6103      	str	r3, [r0, #16]
    4518:	b005      	add	sp, #20
    451a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    451c:	2301      	movs	r3, #1
    451e:	9301      	str	r3, [sp, #4]
    4520:	2800      	cmp	r0, #0
    4522:	db04      	blt.n	452e <__mdiff+0x3a>
    4524:	0023      	movs	r3, r4
    4526:	002c      	movs	r4, r5
    4528:	001d      	movs	r5, r3
    452a:	2300      	movs	r3, #0
    452c:	9301      	str	r3, [sp, #4]
    452e:	6861      	ldr	r1, [r4, #4]
    4530:	0038      	movs	r0, r7
    4532:	f7ff fdb5 	bl	40a0 <_Balloc>
    4536:	002f      	movs	r7, r5
    4538:	2200      	movs	r2, #0
    453a:	9b01      	ldr	r3, [sp, #4]
    453c:	6926      	ldr	r6, [r4, #16]
    453e:	60c3      	str	r3, [r0, #12]
    4540:	3414      	adds	r4, #20
    4542:	00b3      	lsls	r3, r6, #2
    4544:	18e3      	adds	r3, r4, r3
    4546:	9302      	str	r3, [sp, #8]
    4548:	692b      	ldr	r3, [r5, #16]
    454a:	3714      	adds	r7, #20
    454c:	009b      	lsls	r3, r3, #2
    454e:	18fb      	adds	r3, r7, r3
    4550:	9303      	str	r3, [sp, #12]
    4552:	0003      	movs	r3, r0
    4554:	4694      	mov	ip, r2
    4556:	3314      	adds	r3, #20
    4558:	cc20      	ldmia	r4!, {r5}
    455a:	cf04      	ldmia	r7!, {r2}
    455c:	9201      	str	r2, [sp, #4]
    455e:	b2aa      	uxth	r2, r5
    4560:	4494      	add	ip, r2
    4562:	466a      	mov	r2, sp
    4564:	4661      	mov	r1, ip
    4566:	8892      	ldrh	r2, [r2, #4]
    4568:	0c2d      	lsrs	r5, r5, #16
    456a:	1a8a      	subs	r2, r1, r2
    456c:	9901      	ldr	r1, [sp, #4]
    456e:	0c09      	lsrs	r1, r1, #16
    4570:	1a69      	subs	r1, r5, r1
    4572:	1415      	asrs	r5, r2, #16
    4574:	1949      	adds	r1, r1, r5
    4576:	140d      	asrs	r5, r1, #16
    4578:	b292      	uxth	r2, r2
    457a:	0409      	lsls	r1, r1, #16
    457c:	430a      	orrs	r2, r1
    457e:	601a      	str	r2, [r3, #0]
    4580:	9a03      	ldr	r2, [sp, #12]
    4582:	46ac      	mov	ip, r5
    4584:	3304      	adds	r3, #4
    4586:	42ba      	cmp	r2, r7
    4588:	d8e6      	bhi.n	4558 <__mdiff+0x64>
    458a:	9902      	ldr	r1, [sp, #8]
    458c:	001a      	movs	r2, r3
    458e:	428c      	cmp	r4, r1
    4590:	d305      	bcc.n	459e <__mdiff+0xaa>
    4592:	3a04      	subs	r2, #4
    4594:	6813      	ldr	r3, [r2, #0]
    4596:	2b00      	cmp	r3, #0
    4598:	d00e      	beq.n	45b8 <__mdiff+0xc4>
    459a:	6106      	str	r6, [r0, #16]
    459c:	e7bc      	b.n	4518 <__mdiff+0x24>
    459e:	cc04      	ldmia	r4!, {r2}
    45a0:	b291      	uxth	r1, r2
    45a2:	4461      	add	r1, ip
    45a4:	140d      	asrs	r5, r1, #16
    45a6:	0c12      	lsrs	r2, r2, #16
    45a8:	1952      	adds	r2, r2, r5
    45aa:	1415      	asrs	r5, r2, #16
    45ac:	b289      	uxth	r1, r1
    45ae:	0412      	lsls	r2, r2, #16
    45b0:	430a      	orrs	r2, r1
    45b2:	46ac      	mov	ip, r5
    45b4:	c304      	stmia	r3!, {r2}
    45b6:	e7e8      	b.n	458a <__mdiff+0x96>
    45b8:	3e01      	subs	r6, #1
    45ba:	e7ea      	b.n	4592 <__mdiff+0x9e>

000045bc <__d2b>:
    45bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    45be:	001d      	movs	r5, r3
    45c0:	2101      	movs	r1, #1
    45c2:	9f08      	ldr	r7, [sp, #32]
    45c4:	0014      	movs	r4, r2
    45c6:	f7ff fd6b 	bl	40a0 <_Balloc>
    45ca:	032b      	lsls	r3, r5, #12
    45cc:	006d      	lsls	r5, r5, #1
    45ce:	0006      	movs	r6, r0
    45d0:	0b1b      	lsrs	r3, r3, #12
    45d2:	0d6d      	lsrs	r5, r5, #21
    45d4:	d124      	bne.n	4620 <__d2b+0x64>
    45d6:	9301      	str	r3, [sp, #4]
    45d8:	2c00      	cmp	r4, #0
    45da:	d027      	beq.n	462c <__d2b+0x70>
    45dc:	4668      	mov	r0, sp
    45de:	9400      	str	r4, [sp, #0]
    45e0:	f7ff fe05 	bl	41ee <__lo0bits>
    45e4:	9c00      	ldr	r4, [sp, #0]
    45e6:	2800      	cmp	r0, #0
    45e8:	d01e      	beq.n	4628 <__d2b+0x6c>
    45ea:	9b01      	ldr	r3, [sp, #4]
    45ec:	2120      	movs	r1, #32
    45ee:	001a      	movs	r2, r3
    45f0:	1a09      	subs	r1, r1, r0
    45f2:	408a      	lsls	r2, r1
    45f4:	40c3      	lsrs	r3, r0
    45f6:	4322      	orrs	r2, r4
    45f8:	6172      	str	r2, [r6, #20]
    45fa:	9301      	str	r3, [sp, #4]
    45fc:	9c01      	ldr	r4, [sp, #4]
    45fe:	61b4      	str	r4, [r6, #24]
    4600:	1e63      	subs	r3, r4, #1
    4602:	419c      	sbcs	r4, r3
    4604:	3401      	adds	r4, #1
    4606:	6134      	str	r4, [r6, #16]
    4608:	2d00      	cmp	r5, #0
    460a:	d018      	beq.n	463e <__d2b+0x82>
    460c:	4b12      	ldr	r3, [pc, #72]	; (4658 <__d2b+0x9c>)
    460e:	18ed      	adds	r5, r5, r3
    4610:	2335      	movs	r3, #53	; 0x35
    4612:	182d      	adds	r5, r5, r0
    4614:	603d      	str	r5, [r7, #0]
    4616:	1a18      	subs	r0, r3, r0
    4618:	9b09      	ldr	r3, [sp, #36]	; 0x24
    461a:	6018      	str	r0, [r3, #0]
    461c:	0030      	movs	r0, r6
    461e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    4620:	2280      	movs	r2, #128	; 0x80
    4622:	0352      	lsls	r2, r2, #13
    4624:	4313      	orrs	r3, r2
    4626:	e7d6      	b.n	45d6 <__d2b+0x1a>
    4628:	6174      	str	r4, [r6, #20]
    462a:	e7e7      	b.n	45fc <__d2b+0x40>
    462c:	a801      	add	r0, sp, #4
    462e:	f7ff fdde 	bl	41ee <__lo0bits>
    4632:	2401      	movs	r4, #1
    4634:	9b01      	ldr	r3, [sp, #4]
    4636:	6134      	str	r4, [r6, #16]
    4638:	6173      	str	r3, [r6, #20]
    463a:	3020      	adds	r0, #32
    463c:	e7e4      	b.n	4608 <__d2b+0x4c>
    463e:	4b07      	ldr	r3, [pc, #28]	; (465c <__d2b+0xa0>)
    4640:	18c0      	adds	r0, r0, r3
    4642:	4b07      	ldr	r3, [pc, #28]	; (4660 <__d2b+0xa4>)
    4644:	6038      	str	r0, [r7, #0]
    4646:	18e3      	adds	r3, r4, r3
    4648:	009b      	lsls	r3, r3, #2
    464a:	18f3      	adds	r3, r6, r3
    464c:	6958      	ldr	r0, [r3, #20]
    464e:	f7ff fdb4 	bl	41ba <__hi0bits>
    4652:	0164      	lsls	r4, r4, #5
    4654:	1a20      	subs	r0, r4, r0
    4656:	e7df      	b.n	4618 <__d2b+0x5c>
    4658:	fffffbcd 	.word	0xfffffbcd
    465c:	fffffbce 	.word	0xfffffbce
    4660:	3fffffff 	.word	0x3fffffff

00004664 <_mprec_log10>:
    4664:	b510      	push	{r4, lr}
    4666:	0004      	movs	r4, r0
    4668:	2817      	cmp	r0, #23
    466a:	dc05      	bgt.n	4678 <_mprec_log10+0x14>
    466c:	4b07      	ldr	r3, [pc, #28]	; (468c <_mprec_log10+0x28>)
    466e:	00c4      	lsls	r4, r0, #3
    4670:	191c      	adds	r4, r3, r4
    4672:	6820      	ldr	r0, [r4, #0]
    4674:	6861      	ldr	r1, [r4, #4]
    4676:	bd10      	pop	{r4, pc}
    4678:	2000      	movs	r0, #0
    467a:	4905      	ldr	r1, [pc, #20]	; (4690 <_mprec_log10+0x2c>)
    467c:	2200      	movs	r2, #0
    467e:	4b05      	ldr	r3, [pc, #20]	; (4694 <_mprec_log10+0x30>)
    4680:	3c01      	subs	r4, #1
    4682:	f7fe fa8f 	bl	2ba4 <__aeabi_dmul>
    4686:	2c00      	cmp	r4, #0
    4688:	d1f8      	bne.n	467c <_mprec_log10+0x18>
    468a:	e7f4      	b.n	4676 <_mprec_log10+0x12>
    468c:	00005dd0 	.word	0x00005dd0
    4690:	3ff00000 	.word	0x3ff00000
    4694:	40240000 	.word	0x40240000

00004698 <_calloc_r>:
    4698:	434a      	muls	r2, r1
    469a:	b570      	push	{r4, r5, r6, lr}
    469c:	0011      	movs	r1, r2
    469e:	0014      	movs	r4, r2
    46a0:	f000 f808 	bl	46b4 <_malloc_r>
    46a4:	1e05      	subs	r5, r0, #0
    46a6:	d003      	beq.n	46b0 <_calloc_r+0x18>
    46a8:	0022      	movs	r2, r4
    46aa:	2100      	movs	r1, #0
    46ac:	f7ff fba1 	bl	3df2 <memset>
    46b0:	0028      	movs	r0, r5
    46b2:	bd70      	pop	{r4, r5, r6, pc}

000046b4 <_malloc_r>:
    46b4:	2303      	movs	r3, #3
    46b6:	b570      	push	{r4, r5, r6, lr}
    46b8:	1ccd      	adds	r5, r1, #3
    46ba:	439d      	bics	r5, r3
    46bc:	3508      	adds	r5, #8
    46be:	0006      	movs	r6, r0
    46c0:	2d0c      	cmp	r5, #12
    46c2:	d21e      	bcs.n	4702 <_malloc_r+0x4e>
    46c4:	250c      	movs	r5, #12
    46c6:	42a9      	cmp	r1, r5
    46c8:	d81d      	bhi.n	4706 <_malloc_r+0x52>
    46ca:	0030      	movs	r0, r6
    46cc:	f000 fee0 	bl	5490 <__malloc_lock>
    46d0:	4a25      	ldr	r2, [pc, #148]	; (4768 <_malloc_r+0xb4>)
    46d2:	6814      	ldr	r4, [r2, #0]
    46d4:	0021      	movs	r1, r4
    46d6:	2900      	cmp	r1, #0
    46d8:	d119      	bne.n	470e <_malloc_r+0x5a>
    46da:	4c24      	ldr	r4, [pc, #144]	; (476c <_malloc_r+0xb8>)
    46dc:	6823      	ldr	r3, [r4, #0]
    46de:	2b00      	cmp	r3, #0
    46e0:	d103      	bne.n	46ea <_malloc_r+0x36>
    46e2:	0030      	movs	r0, r6
    46e4:	f000 f844 	bl	4770 <_sbrk_r>
    46e8:	6020      	str	r0, [r4, #0]
    46ea:	0029      	movs	r1, r5
    46ec:	0030      	movs	r0, r6
    46ee:	f000 f83f 	bl	4770 <_sbrk_r>
    46f2:	1c43      	adds	r3, r0, #1
    46f4:	d12c      	bne.n	4750 <_malloc_r+0x9c>
    46f6:	230c      	movs	r3, #12
    46f8:	0030      	movs	r0, r6
    46fa:	6033      	str	r3, [r6, #0]
    46fc:	f000 fec9 	bl	5492 <__malloc_unlock>
    4700:	e003      	b.n	470a <_malloc_r+0x56>
    4702:	2d00      	cmp	r5, #0
    4704:	dadf      	bge.n	46c6 <_malloc_r+0x12>
    4706:	230c      	movs	r3, #12
    4708:	6033      	str	r3, [r6, #0]
    470a:	2000      	movs	r0, #0
    470c:	bd70      	pop	{r4, r5, r6, pc}
    470e:	680b      	ldr	r3, [r1, #0]
    4710:	1b5b      	subs	r3, r3, r5
    4712:	d41a      	bmi.n	474a <_malloc_r+0x96>
    4714:	2b0b      	cmp	r3, #11
    4716:	d903      	bls.n	4720 <_malloc_r+0x6c>
    4718:	600b      	str	r3, [r1, #0]
    471a:	18cc      	adds	r4, r1, r3
    471c:	6025      	str	r5, [r4, #0]
    471e:	e003      	b.n	4728 <_malloc_r+0x74>
    4720:	428c      	cmp	r4, r1
    4722:	d10e      	bne.n	4742 <_malloc_r+0x8e>
    4724:	6863      	ldr	r3, [r4, #4]
    4726:	6013      	str	r3, [r2, #0]
    4728:	0030      	movs	r0, r6
    472a:	f000 feb2 	bl	5492 <__malloc_unlock>
    472e:	0020      	movs	r0, r4
    4730:	2207      	movs	r2, #7
    4732:	300b      	adds	r0, #11
    4734:	1d23      	adds	r3, r4, #4
    4736:	4390      	bics	r0, r2
    4738:	1ac3      	subs	r3, r0, r3
    473a:	d0e7      	beq.n	470c <_malloc_r+0x58>
    473c:	425a      	negs	r2, r3
    473e:	50e2      	str	r2, [r4, r3]
    4740:	e7e4      	b.n	470c <_malloc_r+0x58>
    4742:	684b      	ldr	r3, [r1, #4]
    4744:	6063      	str	r3, [r4, #4]
    4746:	000c      	movs	r4, r1
    4748:	e7ee      	b.n	4728 <_malloc_r+0x74>
    474a:	000c      	movs	r4, r1
    474c:	6849      	ldr	r1, [r1, #4]
    474e:	e7c2      	b.n	46d6 <_malloc_r+0x22>
    4750:	2303      	movs	r3, #3
    4752:	1cc4      	adds	r4, r0, #3
    4754:	439c      	bics	r4, r3
    4756:	42a0      	cmp	r0, r4
    4758:	d0e0      	beq.n	471c <_malloc_r+0x68>
    475a:	1a21      	subs	r1, r4, r0
    475c:	0030      	movs	r0, r6
    475e:	f000 f807 	bl	4770 <_sbrk_r>
    4762:	1c43      	adds	r3, r0, #1
    4764:	d1da      	bne.n	471c <_malloc_r+0x68>
    4766:	e7c6      	b.n	46f6 <_malloc_r+0x42>
    4768:	200002cc 	.word	0x200002cc
    476c:	200002d0 	.word	0x200002d0

00004770 <_sbrk_r>:
    4770:	2300      	movs	r3, #0
    4772:	b570      	push	{r4, r5, r6, lr}
    4774:	4c06      	ldr	r4, [pc, #24]	; (4790 <_sbrk_r+0x20>)
    4776:	0005      	movs	r5, r0
    4778:	0008      	movs	r0, r1
    477a:	6023      	str	r3, [r4, #0]
    477c:	f7fc fb0c 	bl	d98 <_sbrk>
    4780:	1c43      	adds	r3, r0, #1
    4782:	d103      	bne.n	478c <_sbrk_r+0x1c>
    4784:	6823      	ldr	r3, [r4, #0]
    4786:	2b00      	cmp	r3, #0
    4788:	d000      	beq.n	478c <_sbrk_r+0x1c>
    478a:	602b      	str	r3, [r5, #0]
    478c:	bd70      	pop	{r4, r5, r6, pc}
    478e:	46c0      	nop			; (mov r8, r8)
    4790:	200003ac 	.word	0x200003ac

00004794 <strcpy>:
    4794:	1c03      	adds	r3, r0, #0
    4796:	780a      	ldrb	r2, [r1, #0]
    4798:	3101      	adds	r1, #1
    479a:	701a      	strb	r2, [r3, #0]
    479c:	3301      	adds	r3, #1
    479e:	2a00      	cmp	r2, #0
    47a0:	d1f9      	bne.n	4796 <strcpy+0x2>
    47a2:	4770      	bx	lr

000047a4 <quorem>:
    47a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    47a6:	6903      	ldr	r3, [r0, #16]
    47a8:	690c      	ldr	r4, [r1, #16]
    47aa:	b089      	sub	sp, #36	; 0x24
    47ac:	0007      	movs	r7, r0
    47ae:	9105      	str	r1, [sp, #20]
    47b0:	2600      	movs	r6, #0
    47b2:	429c      	cmp	r4, r3
    47b4:	dc6d      	bgt.n	4892 <quorem+0xee>
    47b6:	000b      	movs	r3, r1
    47b8:	3c01      	subs	r4, #1
    47ba:	3314      	adds	r3, #20
    47bc:	00a5      	lsls	r5, r4, #2
    47be:	9303      	str	r3, [sp, #12]
    47c0:	195b      	adds	r3, r3, r5
    47c2:	9304      	str	r3, [sp, #16]
    47c4:	0003      	movs	r3, r0
    47c6:	3314      	adds	r3, #20
    47c8:	9302      	str	r3, [sp, #8]
    47ca:	195d      	adds	r5, r3, r5
    47cc:	9b04      	ldr	r3, [sp, #16]
    47ce:	6828      	ldr	r0, [r5, #0]
    47d0:	681b      	ldr	r3, [r3, #0]
    47d2:	1c59      	adds	r1, r3, #1
    47d4:	9301      	str	r3, [sp, #4]
    47d6:	f7fc fcf2 	bl	11be <__aeabi_uidiv>
    47da:	9001      	str	r0, [sp, #4]
    47dc:	42b0      	cmp	r0, r6
    47de:	d02d      	beq.n	483c <quorem+0x98>
    47e0:	9b03      	ldr	r3, [sp, #12]
    47e2:	9802      	ldr	r0, [sp, #8]
    47e4:	469c      	mov	ip, r3
    47e6:	9606      	str	r6, [sp, #24]
    47e8:	4662      	mov	r2, ip
    47ea:	ca08      	ldmia	r2!, {r3}
    47ec:	4694      	mov	ip, r2
    47ee:	9a01      	ldr	r2, [sp, #4]
    47f0:	b299      	uxth	r1, r3
    47f2:	4351      	muls	r1, r2
    47f4:	0c1b      	lsrs	r3, r3, #16
    47f6:	4353      	muls	r3, r2
    47f8:	1989      	adds	r1, r1, r6
    47fa:	0c0a      	lsrs	r2, r1, #16
    47fc:	189b      	adds	r3, r3, r2
    47fe:	9307      	str	r3, [sp, #28]
    4800:	8802      	ldrh	r2, [r0, #0]
    4802:	0c1e      	lsrs	r6, r3, #16
    4804:	9b06      	ldr	r3, [sp, #24]
    4806:	b289      	uxth	r1, r1
    4808:	18d2      	adds	r2, r2, r3
    480a:	6803      	ldr	r3, [r0, #0]
    480c:	1a52      	subs	r2, r2, r1
    480e:	0c19      	lsrs	r1, r3, #16
    4810:	466b      	mov	r3, sp
    4812:	8b9b      	ldrh	r3, [r3, #28]
    4814:	1acb      	subs	r3, r1, r3
    4816:	1411      	asrs	r1, r2, #16
    4818:	185b      	adds	r3, r3, r1
    481a:	1419      	asrs	r1, r3, #16
    481c:	b292      	uxth	r2, r2
    481e:	041b      	lsls	r3, r3, #16
    4820:	431a      	orrs	r2, r3
    4822:	9b04      	ldr	r3, [sp, #16]
    4824:	9106      	str	r1, [sp, #24]
    4826:	c004      	stmia	r0!, {r2}
    4828:	4563      	cmp	r3, ip
    482a:	d2dd      	bcs.n	47e8 <quorem+0x44>
    482c:	682b      	ldr	r3, [r5, #0]
    482e:	2b00      	cmp	r3, #0
    4830:	d104      	bne.n	483c <quorem+0x98>
    4832:	9b02      	ldr	r3, [sp, #8]
    4834:	3d04      	subs	r5, #4
    4836:	42ab      	cmp	r3, r5
    4838:	d32e      	bcc.n	4898 <quorem+0xf4>
    483a:	613c      	str	r4, [r7, #16]
    483c:	9905      	ldr	r1, [sp, #20]
    483e:	0038      	movs	r0, r7
    4840:	f7ff fe3f 	bl	44c2 <__mcmp>
    4844:	2800      	cmp	r0, #0
    4846:	db23      	blt.n	4890 <quorem+0xec>
    4848:	2500      	movs	r5, #0
    484a:	9b01      	ldr	r3, [sp, #4]
    484c:	9802      	ldr	r0, [sp, #8]
    484e:	3301      	adds	r3, #1
    4850:	9903      	ldr	r1, [sp, #12]
    4852:	9301      	str	r3, [sp, #4]
    4854:	c908      	ldmia	r1!, {r3}
    4856:	8802      	ldrh	r2, [r0, #0]
    4858:	1955      	adds	r5, r2, r5
    485a:	b29a      	uxth	r2, r3
    485c:	1aaa      	subs	r2, r5, r2
    485e:	6805      	ldr	r5, [r0, #0]
    4860:	0c1b      	lsrs	r3, r3, #16
    4862:	0c2d      	lsrs	r5, r5, #16
    4864:	1aeb      	subs	r3, r5, r3
    4866:	1415      	asrs	r5, r2, #16
    4868:	195b      	adds	r3, r3, r5
    486a:	141d      	asrs	r5, r3, #16
    486c:	b292      	uxth	r2, r2
    486e:	041b      	lsls	r3, r3, #16
    4870:	4313      	orrs	r3, r2
    4872:	c008      	stmia	r0!, {r3}
    4874:	9b04      	ldr	r3, [sp, #16]
    4876:	428b      	cmp	r3, r1
    4878:	d2ec      	bcs.n	4854 <quorem+0xb0>
    487a:	9a02      	ldr	r2, [sp, #8]
    487c:	00a3      	lsls	r3, r4, #2
    487e:	18d3      	adds	r3, r2, r3
    4880:	681a      	ldr	r2, [r3, #0]
    4882:	2a00      	cmp	r2, #0
    4884:	d104      	bne.n	4890 <quorem+0xec>
    4886:	9a02      	ldr	r2, [sp, #8]
    4888:	3b04      	subs	r3, #4
    488a:	429a      	cmp	r2, r3
    488c:	d309      	bcc.n	48a2 <quorem+0xfe>
    488e:	613c      	str	r4, [r7, #16]
    4890:	9e01      	ldr	r6, [sp, #4]
    4892:	0030      	movs	r0, r6
    4894:	b009      	add	sp, #36	; 0x24
    4896:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4898:	682b      	ldr	r3, [r5, #0]
    489a:	2b00      	cmp	r3, #0
    489c:	d1cd      	bne.n	483a <quorem+0x96>
    489e:	3c01      	subs	r4, #1
    48a0:	e7c7      	b.n	4832 <quorem+0x8e>
    48a2:	681a      	ldr	r2, [r3, #0]
    48a4:	2a00      	cmp	r2, #0
    48a6:	d1f2      	bne.n	488e <quorem+0xea>
    48a8:	3c01      	subs	r4, #1
    48aa:	e7ec      	b.n	4886 <quorem+0xe2>

000048ac <_dtoa_r>:
    48ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    48ae:	0016      	movs	r6, r2
    48b0:	001f      	movs	r7, r3
    48b2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    48b4:	b09d      	sub	sp, #116	; 0x74
    48b6:	9004      	str	r0, [sp, #16]
    48b8:	9d25      	ldr	r5, [sp, #148]	; 0x94
    48ba:	9606      	str	r6, [sp, #24]
    48bc:	9707      	str	r7, [sp, #28]
    48be:	2c00      	cmp	r4, #0
    48c0:	d108      	bne.n	48d4 <_dtoa_r+0x28>
    48c2:	2010      	movs	r0, #16
    48c4:	f000 fdda 	bl	547c <malloc>
    48c8:	9b04      	ldr	r3, [sp, #16]
    48ca:	6258      	str	r0, [r3, #36]	; 0x24
    48cc:	6044      	str	r4, [r0, #4]
    48ce:	6084      	str	r4, [r0, #8]
    48d0:	6004      	str	r4, [r0, #0]
    48d2:	60c4      	str	r4, [r0, #12]
    48d4:	9b04      	ldr	r3, [sp, #16]
    48d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    48d8:	6819      	ldr	r1, [r3, #0]
    48da:	2900      	cmp	r1, #0
    48dc:	d00b      	beq.n	48f6 <_dtoa_r+0x4a>
    48de:	685a      	ldr	r2, [r3, #4]
    48e0:	2301      	movs	r3, #1
    48e2:	4093      	lsls	r3, r2
    48e4:	604a      	str	r2, [r1, #4]
    48e6:	608b      	str	r3, [r1, #8]
    48e8:	9804      	ldr	r0, [sp, #16]
    48ea:	f7ff fc11 	bl	4110 <_Bfree>
    48ee:	2200      	movs	r2, #0
    48f0:	9b04      	ldr	r3, [sp, #16]
    48f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    48f4:	601a      	str	r2, [r3, #0]
    48f6:	9b07      	ldr	r3, [sp, #28]
    48f8:	2b00      	cmp	r3, #0
    48fa:	da1f      	bge.n	493c <_dtoa_r+0x90>
    48fc:	2301      	movs	r3, #1
    48fe:	602b      	str	r3, [r5, #0]
    4900:	007b      	lsls	r3, r7, #1
    4902:	085b      	lsrs	r3, r3, #1
    4904:	9307      	str	r3, [sp, #28]
    4906:	9c07      	ldr	r4, [sp, #28]
    4908:	4bb7      	ldr	r3, [pc, #732]	; (4be8 <_dtoa_r+0x33c>)
    490a:	0022      	movs	r2, r4
    490c:	9319      	str	r3, [sp, #100]	; 0x64
    490e:	401a      	ands	r2, r3
    4910:	429a      	cmp	r2, r3
    4912:	d116      	bne.n	4942 <_dtoa_r+0x96>
    4914:	4bb5      	ldr	r3, [pc, #724]	; (4bec <_dtoa_r+0x340>)
    4916:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4918:	6013      	str	r3, [r2, #0]
    491a:	9b06      	ldr	r3, [sp, #24]
    491c:	2b00      	cmp	r3, #0
    491e:	d103      	bne.n	4928 <_dtoa_r+0x7c>
    4920:	0324      	lsls	r4, r4, #12
    4922:	d101      	bne.n	4928 <_dtoa_r+0x7c>
    4924:	f000 fd91 	bl	544a <_dtoa_r+0xb9e>
    4928:	4bb1      	ldr	r3, [pc, #708]	; (4bf0 <_dtoa_r+0x344>)
    492a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    492c:	930a      	str	r3, [sp, #40]	; 0x28
    492e:	4bb1      	ldr	r3, [pc, #708]	; (4bf4 <_dtoa_r+0x348>)
    4930:	2a00      	cmp	r2, #0
    4932:	d001      	beq.n	4938 <_dtoa_r+0x8c>
    4934:	f000 fd8f 	bl	5456 <_dtoa_r+0xbaa>
    4938:	f000 fd8f 	bl	545a <_dtoa_r+0xbae>
    493c:	2300      	movs	r3, #0
    493e:	602b      	str	r3, [r5, #0]
    4940:	e7e1      	b.n	4906 <_dtoa_r+0x5a>
    4942:	9e06      	ldr	r6, [sp, #24]
    4944:	9f07      	ldr	r7, [sp, #28]
    4946:	2200      	movs	r2, #0
    4948:	2300      	movs	r3, #0
    494a:	0030      	movs	r0, r6
    494c:	0039      	movs	r1, r7
    494e:	f7fe ffcf 	bl	38f0 <__aeabi_dcmpeq>
    4952:	1e05      	subs	r5, r0, #0
    4954:	d00e      	beq.n	4974 <_dtoa_r+0xc8>
    4956:	2301      	movs	r3, #1
    4958:	9a24      	ldr	r2, [sp, #144]	; 0x90
    495a:	6013      	str	r3, [r2, #0]
    495c:	4ba6      	ldr	r3, [pc, #664]	; (4bf8 <_dtoa_r+0x34c>)
    495e:	9a26      	ldr	r2, [sp, #152]	; 0x98
    4960:	930a      	str	r3, [sp, #40]	; 0x28
    4962:	2a00      	cmp	r2, #0
    4964:	d101      	bne.n	496a <_dtoa_r+0xbe>
    4966:	f000 fd78 	bl	545a <_dtoa_r+0xbae>
    496a:	4aa4      	ldr	r2, [pc, #656]	; (4bfc <_dtoa_r+0x350>)
    496c:	9926      	ldr	r1, [sp, #152]	; 0x98
    496e:	600a      	str	r2, [r1, #0]
    4970:	f000 fd73 	bl	545a <_dtoa_r+0xbae>
    4974:	ab1a      	add	r3, sp, #104	; 0x68
    4976:	9301      	str	r3, [sp, #4]
    4978:	ab1b      	add	r3, sp, #108	; 0x6c
    497a:	9300      	str	r3, [sp, #0]
    497c:	0032      	movs	r2, r6
    497e:	003b      	movs	r3, r7
    4980:	9804      	ldr	r0, [sp, #16]
    4982:	f7ff fe1b 	bl	45bc <__d2b>
    4986:	0063      	lsls	r3, r4, #1
    4988:	9005      	str	r0, [sp, #20]
    498a:	0d5b      	lsrs	r3, r3, #21
    498c:	d100      	bne.n	4990 <_dtoa_r+0xe4>
    498e:	e07f      	b.n	4a90 <_dtoa_r+0x1e4>
    4990:	033a      	lsls	r2, r7, #12
    4992:	4c9b      	ldr	r4, [pc, #620]	; (4c00 <_dtoa_r+0x354>)
    4994:	0b12      	lsrs	r2, r2, #12
    4996:	4314      	orrs	r4, r2
    4998:	0021      	movs	r1, r4
    499a:	4a9a      	ldr	r2, [pc, #616]	; (4c04 <_dtoa_r+0x358>)
    499c:	0030      	movs	r0, r6
    499e:	9518      	str	r5, [sp, #96]	; 0x60
    49a0:	189e      	adds	r6, r3, r2
    49a2:	2200      	movs	r2, #0
    49a4:	4b98      	ldr	r3, [pc, #608]	; (4c08 <_dtoa_r+0x35c>)
    49a6:	f7fe fb7d 	bl	30a4 <__aeabi_dsub>
    49aa:	4a98      	ldr	r2, [pc, #608]	; (4c0c <_dtoa_r+0x360>)
    49ac:	4b98      	ldr	r3, [pc, #608]	; (4c10 <_dtoa_r+0x364>)
    49ae:	f7fe f8f9 	bl	2ba4 <__aeabi_dmul>
    49b2:	4a98      	ldr	r2, [pc, #608]	; (4c14 <_dtoa_r+0x368>)
    49b4:	4b98      	ldr	r3, [pc, #608]	; (4c18 <_dtoa_r+0x36c>)
    49b6:	f000 fd77 	bl	54a8 <__aeabi_dadd>
    49ba:	0004      	movs	r4, r0
    49bc:	0030      	movs	r0, r6
    49be:	000d      	movs	r5, r1
    49c0:	f7fe feba 	bl	3738 <__aeabi_i2d>
    49c4:	4a95      	ldr	r2, [pc, #596]	; (4c1c <_dtoa_r+0x370>)
    49c6:	4b96      	ldr	r3, [pc, #600]	; (4c20 <_dtoa_r+0x374>)
    49c8:	f7fe f8ec 	bl	2ba4 <__aeabi_dmul>
    49cc:	0002      	movs	r2, r0
    49ce:	000b      	movs	r3, r1
    49d0:	0020      	movs	r0, r4
    49d2:	0029      	movs	r1, r5
    49d4:	f000 fd68 	bl	54a8 <__aeabi_dadd>
    49d8:	0004      	movs	r4, r0
    49da:	000d      	movs	r5, r1
    49dc:	f7fe fe78 	bl	36d0 <__aeabi_d2iz>
    49e0:	2200      	movs	r2, #0
    49e2:	9003      	str	r0, [sp, #12]
    49e4:	2300      	movs	r3, #0
    49e6:	0020      	movs	r0, r4
    49e8:	0029      	movs	r1, r5
    49ea:	f7fe ff87 	bl	38fc <__aeabi_dcmplt>
    49ee:	2800      	cmp	r0, #0
    49f0:	d00e      	beq.n	4a10 <_dtoa_r+0x164>
    49f2:	9803      	ldr	r0, [sp, #12]
    49f4:	f7fe fea0 	bl	3738 <__aeabi_i2d>
    49f8:	000b      	movs	r3, r1
    49fa:	0002      	movs	r2, r0
    49fc:	0029      	movs	r1, r5
    49fe:	0020      	movs	r0, r4
    4a00:	f7fe ff76 	bl	38f0 <__aeabi_dcmpeq>
    4a04:	0003      	movs	r3, r0
    4a06:	4258      	negs	r0, r3
    4a08:	4158      	adcs	r0, r3
    4a0a:	9b03      	ldr	r3, [sp, #12]
    4a0c:	1a1b      	subs	r3, r3, r0
    4a0e:	9303      	str	r3, [sp, #12]
    4a10:	2301      	movs	r3, #1
    4a12:	9316      	str	r3, [sp, #88]	; 0x58
    4a14:	9b03      	ldr	r3, [sp, #12]
    4a16:	2b16      	cmp	r3, #22
    4a18:	d80f      	bhi.n	4a3a <_dtoa_r+0x18e>
    4a1a:	4982      	ldr	r1, [pc, #520]	; (4c24 <_dtoa_r+0x378>)
    4a1c:	00db      	lsls	r3, r3, #3
    4a1e:	18c9      	adds	r1, r1, r3
    4a20:	6808      	ldr	r0, [r1, #0]
    4a22:	6849      	ldr	r1, [r1, #4]
    4a24:	9a06      	ldr	r2, [sp, #24]
    4a26:	9b07      	ldr	r3, [sp, #28]
    4a28:	f7fe ff7c 	bl	3924 <__aeabi_dcmpgt>
    4a2c:	2800      	cmp	r0, #0
    4a2e:	d04b      	beq.n	4ac8 <_dtoa_r+0x21c>
    4a30:	9b03      	ldr	r3, [sp, #12]
    4a32:	3b01      	subs	r3, #1
    4a34:	9303      	str	r3, [sp, #12]
    4a36:	2300      	movs	r3, #0
    4a38:	9316      	str	r3, [sp, #88]	; 0x58
    4a3a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4a3c:	1b9e      	subs	r6, r3, r6
    4a3e:	2300      	movs	r3, #0
    4a40:	930b      	str	r3, [sp, #44]	; 0x2c
    4a42:	0033      	movs	r3, r6
    4a44:	3b01      	subs	r3, #1
    4a46:	930c      	str	r3, [sp, #48]	; 0x30
    4a48:	d504      	bpl.n	4a54 <_dtoa_r+0x1a8>
    4a4a:	2301      	movs	r3, #1
    4a4c:	1b9b      	subs	r3, r3, r6
    4a4e:	930b      	str	r3, [sp, #44]	; 0x2c
    4a50:	2300      	movs	r3, #0
    4a52:	930c      	str	r3, [sp, #48]	; 0x30
    4a54:	9b03      	ldr	r3, [sp, #12]
    4a56:	2b00      	cmp	r3, #0
    4a58:	db38      	blt.n	4acc <_dtoa_r+0x220>
    4a5a:	9a03      	ldr	r2, [sp, #12]
    4a5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4a5e:	4694      	mov	ip, r2
    4a60:	4463      	add	r3, ip
    4a62:	930c      	str	r3, [sp, #48]	; 0x30
    4a64:	2300      	movs	r3, #0
    4a66:	920f      	str	r2, [sp, #60]	; 0x3c
    4a68:	9308      	str	r3, [sp, #32]
    4a6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4a6c:	2501      	movs	r5, #1
    4a6e:	2b09      	cmp	r3, #9
    4a70:	d900      	bls.n	4a74 <_dtoa_r+0x1c8>
    4a72:	e091      	b.n	4b98 <_dtoa_r+0x2ec>
    4a74:	2b05      	cmp	r3, #5
    4a76:	dd02      	ble.n	4a7e <_dtoa_r+0x1d2>
    4a78:	2500      	movs	r5, #0
    4a7a:	3b04      	subs	r3, #4
    4a7c:	9322      	str	r3, [sp, #136]	; 0x88
    4a7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4a80:	1e98      	subs	r0, r3, #2
    4a82:	2803      	cmp	r0, #3
    4a84:	d900      	bls.n	4a88 <_dtoa_r+0x1dc>
    4a86:	e091      	b.n	4bac <_dtoa_r+0x300>
    4a88:	f000 fd04 	bl	5494 <__gnu_thumb1_case_uqi>
    4a8c:	76298482 	.word	0x76298482
    4a90:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4a92:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    4a94:	189e      	adds	r6, r3, r2
    4a96:	4b64      	ldr	r3, [pc, #400]	; (4c28 <_dtoa_r+0x37c>)
    4a98:	18f2      	adds	r2, r6, r3
    4a9a:	2a20      	cmp	r2, #32
    4a9c:	dd0f      	ble.n	4abe <_dtoa_r+0x212>
    4a9e:	4b63      	ldr	r3, [pc, #396]	; (4c2c <_dtoa_r+0x380>)
    4aa0:	9806      	ldr	r0, [sp, #24]
    4aa2:	18f3      	adds	r3, r6, r3
    4aa4:	40d8      	lsrs	r0, r3
    4aa6:	2340      	movs	r3, #64	; 0x40
    4aa8:	1a9b      	subs	r3, r3, r2
    4aaa:	409c      	lsls	r4, r3
    4aac:	4320      	orrs	r0, r4
    4aae:	f7fe fe85 	bl	37bc <__aeabi_ui2d>
    4ab2:	2301      	movs	r3, #1
    4ab4:	4c5e      	ldr	r4, [pc, #376]	; (4c30 <_dtoa_r+0x384>)
    4ab6:	3e01      	subs	r6, #1
    4ab8:	1909      	adds	r1, r1, r4
    4aba:	9318      	str	r3, [sp, #96]	; 0x60
    4abc:	e771      	b.n	49a2 <_dtoa_r+0xf6>
    4abe:	2320      	movs	r3, #32
    4ac0:	9806      	ldr	r0, [sp, #24]
    4ac2:	1a9b      	subs	r3, r3, r2
    4ac4:	4098      	lsls	r0, r3
    4ac6:	e7f2      	b.n	4aae <_dtoa_r+0x202>
    4ac8:	9016      	str	r0, [sp, #88]	; 0x58
    4aca:	e7b6      	b.n	4a3a <_dtoa_r+0x18e>
    4acc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4ace:	9a03      	ldr	r2, [sp, #12]
    4ad0:	1a9b      	subs	r3, r3, r2
    4ad2:	930b      	str	r3, [sp, #44]	; 0x2c
    4ad4:	4253      	negs	r3, r2
    4ad6:	9308      	str	r3, [sp, #32]
    4ad8:	2300      	movs	r3, #0
    4ada:	930f      	str	r3, [sp, #60]	; 0x3c
    4adc:	e7c5      	b.n	4a6a <_dtoa_r+0x1be>
    4ade:	2301      	movs	r3, #1
    4ae0:	930e      	str	r3, [sp, #56]	; 0x38
    4ae2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4ae4:	2b00      	cmp	r3, #0
    4ae6:	dd65      	ble.n	4bb4 <_dtoa_r+0x308>
    4ae8:	001f      	movs	r7, r3
    4aea:	930d      	str	r3, [sp, #52]	; 0x34
    4aec:	9a04      	ldr	r2, [sp, #16]
    4aee:	6a54      	ldr	r4, [r2, #36]	; 0x24
    4af0:	2200      	movs	r2, #0
    4af2:	6062      	str	r2, [r4, #4]
    4af4:	3204      	adds	r2, #4
    4af6:	0011      	movs	r1, r2
    4af8:	3114      	adds	r1, #20
    4afa:	4299      	cmp	r1, r3
    4afc:	d95f      	bls.n	4bbe <_dtoa_r+0x312>
    4afe:	6861      	ldr	r1, [r4, #4]
    4b00:	9804      	ldr	r0, [sp, #16]
    4b02:	f7ff facd 	bl	40a0 <_Balloc>
    4b06:	9b04      	ldr	r3, [sp, #16]
    4b08:	6020      	str	r0, [r4, #0]
    4b0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4b0c:	681b      	ldr	r3, [r3, #0]
    4b0e:	930a      	str	r3, [sp, #40]	; 0x28
    4b10:	2f0e      	cmp	r7, #14
    4b12:	d900      	bls.n	4b16 <_dtoa_r+0x26a>
    4b14:	e105      	b.n	4d22 <_dtoa_r+0x476>
    4b16:	2d00      	cmp	r5, #0
    4b18:	d100      	bne.n	4b1c <_dtoa_r+0x270>
    4b1a:	e102      	b.n	4d22 <_dtoa_r+0x476>
    4b1c:	9b06      	ldr	r3, [sp, #24]
    4b1e:	9c07      	ldr	r4, [sp, #28]
    4b20:	9314      	str	r3, [sp, #80]	; 0x50
    4b22:	9415      	str	r4, [sp, #84]	; 0x54
    4b24:	9b03      	ldr	r3, [sp, #12]
    4b26:	2b00      	cmp	r3, #0
    4b28:	dc00      	bgt.n	4b2c <_dtoa_r+0x280>
    4b2a:	e085      	b.n	4c38 <_dtoa_r+0x38c>
    4b2c:	001a      	movs	r2, r3
    4b2e:	210f      	movs	r1, #15
    4b30:	4b3c      	ldr	r3, [pc, #240]	; (4c24 <_dtoa_r+0x378>)
    4b32:	400a      	ands	r2, r1
    4b34:	00d2      	lsls	r2, r2, #3
    4b36:	189b      	adds	r3, r3, r2
    4b38:	685c      	ldr	r4, [r3, #4]
    4b3a:	681b      	ldr	r3, [r3, #0]
    4b3c:	9310      	str	r3, [sp, #64]	; 0x40
    4b3e:	9411      	str	r4, [sp, #68]	; 0x44
    4b40:	9b03      	ldr	r3, [sp, #12]
    4b42:	2402      	movs	r4, #2
    4b44:	111d      	asrs	r5, r3, #4
    4b46:	06eb      	lsls	r3, r5, #27
    4b48:	d50a      	bpl.n	4b60 <_dtoa_r+0x2b4>
    4b4a:	4b3a      	ldr	r3, [pc, #232]	; (4c34 <_dtoa_r+0x388>)
    4b4c:	400d      	ands	r5, r1
    4b4e:	6a1a      	ldr	r2, [r3, #32]
    4b50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4b52:	9814      	ldr	r0, [sp, #80]	; 0x50
    4b54:	9915      	ldr	r1, [sp, #84]	; 0x54
    4b56:	f7fd fcf1 	bl	253c <__aeabi_ddiv>
    4b5a:	9006      	str	r0, [sp, #24]
    4b5c:	9107      	str	r1, [sp, #28]
    4b5e:	3401      	adds	r4, #1
    4b60:	4e34      	ldr	r6, [pc, #208]	; (4c34 <_dtoa_r+0x388>)
    4b62:	2d00      	cmp	r5, #0
    4b64:	d130      	bne.n	4bc8 <_dtoa_r+0x31c>
    4b66:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4b68:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4b6a:	9806      	ldr	r0, [sp, #24]
    4b6c:	9907      	ldr	r1, [sp, #28]
    4b6e:	f7fd fce5 	bl	253c <__aeabi_ddiv>
    4b72:	9006      	str	r0, [sp, #24]
    4b74:	9107      	str	r1, [sp, #28]
    4b76:	e07a      	b.n	4c6e <_dtoa_r+0x3c2>
    4b78:	2301      	movs	r3, #1
    4b7a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    4b7c:	930e      	str	r3, [sp, #56]	; 0x38
    4b7e:	4694      	mov	ip, r2
    4b80:	9b03      	ldr	r3, [sp, #12]
    4b82:	4463      	add	r3, ip
    4b84:	1c5f      	adds	r7, r3, #1
    4b86:	930d      	str	r3, [sp, #52]	; 0x34
    4b88:	1e3b      	subs	r3, r7, #0
    4b8a:	dcaf      	bgt.n	4aec <_dtoa_r+0x240>
    4b8c:	2301      	movs	r3, #1
    4b8e:	e7ad      	b.n	4aec <_dtoa_r+0x240>
    4b90:	2300      	movs	r3, #0
    4b92:	e7a5      	b.n	4ae0 <_dtoa_r+0x234>
    4b94:	2300      	movs	r3, #0
    4b96:	e7f0      	b.n	4b7a <_dtoa_r+0x2ce>
    4b98:	2300      	movs	r3, #0
    4b9a:	950e      	str	r5, [sp, #56]	; 0x38
    4b9c:	9322      	str	r3, [sp, #136]	; 0x88
    4b9e:	3b01      	subs	r3, #1
    4ba0:	2200      	movs	r2, #0
    4ba2:	930d      	str	r3, [sp, #52]	; 0x34
    4ba4:	001f      	movs	r7, r3
    4ba6:	3313      	adds	r3, #19
    4ba8:	9223      	str	r2, [sp, #140]	; 0x8c
    4baa:	e79f      	b.n	4aec <_dtoa_r+0x240>
    4bac:	2301      	movs	r3, #1
    4bae:	930e      	str	r3, [sp, #56]	; 0x38
    4bb0:	3b02      	subs	r3, #2
    4bb2:	e7f5      	b.n	4ba0 <_dtoa_r+0x2f4>
    4bb4:	2301      	movs	r3, #1
    4bb6:	930d      	str	r3, [sp, #52]	; 0x34
    4bb8:	001f      	movs	r7, r3
    4bba:	001a      	movs	r2, r3
    4bbc:	e7f4      	b.n	4ba8 <_dtoa_r+0x2fc>
    4bbe:	6861      	ldr	r1, [r4, #4]
    4bc0:	0052      	lsls	r2, r2, #1
    4bc2:	3101      	adds	r1, #1
    4bc4:	6061      	str	r1, [r4, #4]
    4bc6:	e796      	b.n	4af6 <_dtoa_r+0x24a>
    4bc8:	2301      	movs	r3, #1
    4bca:	421d      	tst	r5, r3
    4bcc:	d008      	beq.n	4be0 <_dtoa_r+0x334>
    4bce:	9810      	ldr	r0, [sp, #64]	; 0x40
    4bd0:	9911      	ldr	r1, [sp, #68]	; 0x44
    4bd2:	18e4      	adds	r4, r4, r3
    4bd4:	6832      	ldr	r2, [r6, #0]
    4bd6:	6873      	ldr	r3, [r6, #4]
    4bd8:	f7fd ffe4 	bl	2ba4 <__aeabi_dmul>
    4bdc:	9010      	str	r0, [sp, #64]	; 0x40
    4bde:	9111      	str	r1, [sp, #68]	; 0x44
    4be0:	106d      	asrs	r5, r5, #1
    4be2:	3608      	adds	r6, #8
    4be4:	e7bd      	b.n	4b62 <_dtoa_r+0x2b6>
    4be6:	46c0      	nop			; (mov r8, r8)
    4be8:	7ff00000 	.word	0x7ff00000
    4bec:	0000270f 	.word	0x0000270f
    4bf0:	00005ead 	.word	0x00005ead
    4bf4:	00005eb0 	.word	0x00005eb0
    4bf8:	00005eb1 	.word	0x00005eb1
    4bfc:	00005eb2 	.word	0x00005eb2
    4c00:	3ff00000 	.word	0x3ff00000
    4c04:	fffffc01 	.word	0xfffffc01
    4c08:	3ff80000 	.word	0x3ff80000
    4c0c:	636f4361 	.word	0x636f4361
    4c10:	3fd287a7 	.word	0x3fd287a7
    4c14:	8b60c8b3 	.word	0x8b60c8b3
    4c18:	3fc68a28 	.word	0x3fc68a28
    4c1c:	509f79fb 	.word	0x509f79fb
    4c20:	3fd34413 	.word	0x3fd34413
    4c24:	00005dd0 	.word	0x00005dd0
    4c28:	00000432 	.word	0x00000432
    4c2c:	00000412 	.word	0x00000412
    4c30:	fe100000 	.word	0xfe100000
    4c34:	00005da8 	.word	0x00005da8
    4c38:	9b03      	ldr	r3, [sp, #12]
    4c3a:	2402      	movs	r4, #2
    4c3c:	2b00      	cmp	r3, #0
    4c3e:	d016      	beq.n	4c6e <_dtoa_r+0x3c2>
    4c40:	9814      	ldr	r0, [sp, #80]	; 0x50
    4c42:	9915      	ldr	r1, [sp, #84]	; 0x54
    4c44:	425d      	negs	r5, r3
    4c46:	230f      	movs	r3, #15
    4c48:	4aca      	ldr	r2, [pc, #808]	; (4f74 <_dtoa_r+0x6c8>)
    4c4a:	402b      	ands	r3, r5
    4c4c:	00db      	lsls	r3, r3, #3
    4c4e:	18d3      	adds	r3, r2, r3
    4c50:	681a      	ldr	r2, [r3, #0]
    4c52:	685b      	ldr	r3, [r3, #4]
    4c54:	f7fd ffa6 	bl	2ba4 <__aeabi_dmul>
    4c58:	2300      	movs	r3, #0
    4c5a:	9006      	str	r0, [sp, #24]
    4c5c:	9107      	str	r1, [sp, #28]
    4c5e:	4ec6      	ldr	r6, [pc, #792]	; (4f78 <_dtoa_r+0x6cc>)
    4c60:	112d      	asrs	r5, r5, #4
    4c62:	2d00      	cmp	r5, #0
    4c64:	d000      	beq.n	4c68 <_dtoa_r+0x3bc>
    4c66:	e08c      	b.n	4d82 <_dtoa_r+0x4d6>
    4c68:	2b00      	cmp	r3, #0
    4c6a:	d000      	beq.n	4c6e <_dtoa_r+0x3c2>
    4c6c:	e781      	b.n	4b72 <_dtoa_r+0x2c6>
    4c6e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    4c70:	2b00      	cmp	r3, #0
    4c72:	d100      	bne.n	4c76 <_dtoa_r+0x3ca>
    4c74:	e091      	b.n	4d9a <_dtoa_r+0x4ee>
    4c76:	9a06      	ldr	r2, [sp, #24]
    4c78:	9b07      	ldr	r3, [sp, #28]
    4c7a:	9210      	str	r2, [sp, #64]	; 0x40
    4c7c:	9311      	str	r3, [sp, #68]	; 0x44
    4c7e:	9810      	ldr	r0, [sp, #64]	; 0x40
    4c80:	9911      	ldr	r1, [sp, #68]	; 0x44
    4c82:	2200      	movs	r2, #0
    4c84:	4bbd      	ldr	r3, [pc, #756]	; (4f7c <_dtoa_r+0x6d0>)
    4c86:	f7fe fe39 	bl	38fc <__aeabi_dcmplt>
    4c8a:	2800      	cmp	r0, #0
    4c8c:	d100      	bne.n	4c90 <_dtoa_r+0x3e4>
    4c8e:	e084      	b.n	4d9a <_dtoa_r+0x4ee>
    4c90:	2f00      	cmp	r7, #0
    4c92:	d100      	bne.n	4c96 <_dtoa_r+0x3ea>
    4c94:	e081      	b.n	4d9a <_dtoa_r+0x4ee>
    4c96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4c98:	2b00      	cmp	r3, #0
    4c9a:	dd3e      	ble.n	4d1a <_dtoa_r+0x46e>
    4c9c:	9810      	ldr	r0, [sp, #64]	; 0x40
    4c9e:	9911      	ldr	r1, [sp, #68]	; 0x44
    4ca0:	9b03      	ldr	r3, [sp, #12]
    4ca2:	2200      	movs	r2, #0
    4ca4:	1e5e      	subs	r6, r3, #1
    4ca6:	4bb6      	ldr	r3, [pc, #728]	; (4f80 <_dtoa_r+0x6d4>)
    4ca8:	f7fd ff7c 	bl	2ba4 <__aeabi_dmul>
    4cac:	9006      	str	r0, [sp, #24]
    4cae:	9107      	str	r1, [sp, #28]
    4cb0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4cb2:	3401      	adds	r4, #1
    4cb4:	0020      	movs	r0, r4
    4cb6:	f7fe fd3f 	bl	3738 <__aeabi_i2d>
    4cba:	9a06      	ldr	r2, [sp, #24]
    4cbc:	9b07      	ldr	r3, [sp, #28]
    4cbe:	f7fd ff71 	bl	2ba4 <__aeabi_dmul>
    4cc2:	2200      	movs	r2, #0
    4cc4:	4baf      	ldr	r3, [pc, #700]	; (4f84 <_dtoa_r+0x6d8>)
    4cc6:	f000 fbef 	bl	54a8 <__aeabi_dadd>
    4cca:	9012      	str	r0, [sp, #72]	; 0x48
    4ccc:	9113      	str	r1, [sp, #76]	; 0x4c
    4cce:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4cd0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    4cd2:	4aad      	ldr	r2, [pc, #692]	; (4f88 <_dtoa_r+0x6dc>)
    4cd4:	9310      	str	r3, [sp, #64]	; 0x40
    4cd6:	9411      	str	r4, [sp, #68]	; 0x44
    4cd8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4cda:	189c      	adds	r4, r3, r2
    4cdc:	9411      	str	r4, [sp, #68]	; 0x44
    4cde:	2d00      	cmp	r5, #0
    4ce0:	d15e      	bne.n	4da0 <_dtoa_r+0x4f4>
    4ce2:	9806      	ldr	r0, [sp, #24]
    4ce4:	9907      	ldr	r1, [sp, #28]
    4ce6:	2200      	movs	r2, #0
    4ce8:	4ba8      	ldr	r3, [pc, #672]	; (4f8c <_dtoa_r+0x6e0>)
    4cea:	f7fe f9db 	bl	30a4 <__aeabi_dsub>
    4cee:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4cf0:	0023      	movs	r3, r4
    4cf2:	9006      	str	r0, [sp, #24]
    4cf4:	9107      	str	r1, [sp, #28]
    4cf6:	f7fe fe15 	bl	3924 <__aeabi_dcmpgt>
    4cfa:	2800      	cmp	r0, #0
    4cfc:	d000      	beq.n	4d00 <_dtoa_r+0x454>
    4cfe:	e301      	b.n	5304 <_dtoa_r+0xa58>
    4d00:	48a3      	ldr	r0, [pc, #652]	; (4f90 <_dtoa_r+0x6e4>)
    4d02:	9913      	ldr	r1, [sp, #76]	; 0x4c
    4d04:	4684      	mov	ip, r0
    4d06:	4461      	add	r1, ip
    4d08:	000b      	movs	r3, r1
    4d0a:	9806      	ldr	r0, [sp, #24]
    4d0c:	9907      	ldr	r1, [sp, #28]
    4d0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4d10:	f7fe fdf4 	bl	38fc <__aeabi_dcmplt>
    4d14:	2800      	cmp	r0, #0
    4d16:	d000      	beq.n	4d1a <_dtoa_r+0x46e>
    4d18:	e2e8      	b.n	52ec <_dtoa_r+0xa40>
    4d1a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4d1c:	9c15      	ldr	r4, [sp, #84]	; 0x54
    4d1e:	9306      	str	r3, [sp, #24]
    4d20:	9407      	str	r4, [sp, #28]
    4d22:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    4d24:	2b00      	cmp	r3, #0
    4d26:	da00      	bge.n	4d2a <_dtoa_r+0x47e>
    4d28:	e157      	b.n	4fda <_dtoa_r+0x72e>
    4d2a:	9a03      	ldr	r2, [sp, #12]
    4d2c:	2a0e      	cmp	r2, #14
    4d2e:	dd00      	ble.n	4d32 <_dtoa_r+0x486>
    4d30:	e153      	b.n	4fda <_dtoa_r+0x72e>
    4d32:	4b90      	ldr	r3, [pc, #576]	; (4f74 <_dtoa_r+0x6c8>)
    4d34:	00d2      	lsls	r2, r2, #3
    4d36:	189b      	adds	r3, r3, r2
    4d38:	685c      	ldr	r4, [r3, #4]
    4d3a:	681b      	ldr	r3, [r3, #0]
    4d3c:	9308      	str	r3, [sp, #32]
    4d3e:	9409      	str	r4, [sp, #36]	; 0x24
    4d40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4d42:	2b00      	cmp	r3, #0
    4d44:	db00      	blt.n	4d48 <_dtoa_r+0x49c>
    4d46:	e0ce      	b.n	4ee6 <_dtoa_r+0x63a>
    4d48:	2f00      	cmp	r7, #0
    4d4a:	dd00      	ble.n	4d4e <_dtoa_r+0x4a2>
    4d4c:	e0cb      	b.n	4ee6 <_dtoa_r+0x63a>
    4d4e:	d000      	beq.n	4d52 <_dtoa_r+0x4a6>
    4d50:	e2cf      	b.n	52f2 <_dtoa_r+0xa46>
    4d52:	9808      	ldr	r0, [sp, #32]
    4d54:	9909      	ldr	r1, [sp, #36]	; 0x24
    4d56:	2200      	movs	r2, #0
    4d58:	4b8c      	ldr	r3, [pc, #560]	; (4f8c <_dtoa_r+0x6e0>)
    4d5a:	f7fd ff23 	bl	2ba4 <__aeabi_dmul>
    4d5e:	9a06      	ldr	r2, [sp, #24]
    4d60:	9b07      	ldr	r3, [sp, #28]
    4d62:	f7fe fde9 	bl	3938 <__aeabi_dcmpge>
    4d66:	003e      	movs	r6, r7
    4d68:	9708      	str	r7, [sp, #32]
    4d6a:	2800      	cmp	r0, #0
    4d6c:	d000      	beq.n	4d70 <_dtoa_r+0x4c4>
    4d6e:	e2a4      	b.n	52ba <_dtoa_r+0xa0e>
    4d70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4d72:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4d74:	1c5d      	adds	r5, r3, #1
    4d76:	2331      	movs	r3, #49	; 0x31
    4d78:	7013      	strb	r3, [r2, #0]
    4d7a:	9b03      	ldr	r3, [sp, #12]
    4d7c:	3301      	adds	r3, #1
    4d7e:	9303      	str	r3, [sp, #12]
    4d80:	e29f      	b.n	52c2 <_dtoa_r+0xa16>
    4d82:	2201      	movs	r2, #1
    4d84:	4215      	tst	r5, r2
    4d86:	d005      	beq.n	4d94 <_dtoa_r+0x4e8>
    4d88:	18a4      	adds	r4, r4, r2
    4d8a:	6832      	ldr	r2, [r6, #0]
    4d8c:	6873      	ldr	r3, [r6, #4]
    4d8e:	f7fd ff09 	bl	2ba4 <__aeabi_dmul>
    4d92:	2301      	movs	r3, #1
    4d94:	106d      	asrs	r5, r5, #1
    4d96:	3608      	adds	r6, #8
    4d98:	e763      	b.n	4c62 <_dtoa_r+0x3b6>
    4d9a:	9e03      	ldr	r6, [sp, #12]
    4d9c:	003d      	movs	r5, r7
    4d9e:	e789      	b.n	4cb4 <_dtoa_r+0x408>
    4da0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4da2:	1e69      	subs	r1, r5, #1
    4da4:	1952      	adds	r2, r2, r5
    4da6:	9217      	str	r2, [sp, #92]	; 0x5c
    4da8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4daa:	4b72      	ldr	r3, [pc, #456]	; (4f74 <_dtoa_r+0x6c8>)
    4dac:	00c9      	lsls	r1, r1, #3
    4dae:	2a00      	cmp	r2, #0
    4db0:	d04a      	beq.n	4e48 <_dtoa_r+0x59c>
    4db2:	185b      	adds	r3, r3, r1
    4db4:	681a      	ldr	r2, [r3, #0]
    4db6:	685b      	ldr	r3, [r3, #4]
    4db8:	2000      	movs	r0, #0
    4dba:	4976      	ldr	r1, [pc, #472]	; (4f94 <_dtoa_r+0x6e8>)
    4dbc:	f7fd fbbe 	bl	253c <__aeabi_ddiv>
    4dc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4dc2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4dc4:	f7fe f96e 	bl	30a4 <__aeabi_dsub>
    4dc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4dca:	9010      	str	r0, [sp, #64]	; 0x40
    4dcc:	9111      	str	r1, [sp, #68]	; 0x44
    4dce:	9312      	str	r3, [sp, #72]	; 0x48
    4dd0:	9806      	ldr	r0, [sp, #24]
    4dd2:	9907      	ldr	r1, [sp, #28]
    4dd4:	f7fe fc7c 	bl	36d0 <__aeabi_d2iz>
    4dd8:	0004      	movs	r4, r0
    4dda:	f7fe fcad 	bl	3738 <__aeabi_i2d>
    4dde:	0002      	movs	r2, r0
    4de0:	000b      	movs	r3, r1
    4de2:	9806      	ldr	r0, [sp, #24]
    4de4:	9907      	ldr	r1, [sp, #28]
    4de6:	f7fe f95d 	bl	30a4 <__aeabi_dsub>
    4dea:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4dec:	3430      	adds	r4, #48	; 0x30
    4dee:	1c5d      	adds	r5, r3, #1
    4df0:	701c      	strb	r4, [r3, #0]
    4df2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4df4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4df6:	9006      	str	r0, [sp, #24]
    4df8:	9107      	str	r1, [sp, #28]
    4dfa:	f7fe fd7f 	bl	38fc <__aeabi_dcmplt>
    4dfe:	2800      	cmp	r0, #0
    4e00:	d165      	bne.n	4ece <_dtoa_r+0x622>
    4e02:	9a06      	ldr	r2, [sp, #24]
    4e04:	9b07      	ldr	r3, [sp, #28]
    4e06:	2000      	movs	r0, #0
    4e08:	495c      	ldr	r1, [pc, #368]	; (4f7c <_dtoa_r+0x6d0>)
    4e0a:	f7fe f94b 	bl	30a4 <__aeabi_dsub>
    4e0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4e10:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4e12:	f7fe fd73 	bl	38fc <__aeabi_dcmplt>
    4e16:	2800      	cmp	r0, #0
    4e18:	d000      	beq.n	4e1c <_dtoa_r+0x570>
    4e1a:	e0be      	b.n	4f9a <_dtoa_r+0x6ee>
    4e1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    4e1e:	429d      	cmp	r5, r3
    4e20:	d100      	bne.n	4e24 <_dtoa_r+0x578>
    4e22:	e77a      	b.n	4d1a <_dtoa_r+0x46e>
    4e24:	9810      	ldr	r0, [sp, #64]	; 0x40
    4e26:	9911      	ldr	r1, [sp, #68]	; 0x44
    4e28:	2200      	movs	r2, #0
    4e2a:	4b55      	ldr	r3, [pc, #340]	; (4f80 <_dtoa_r+0x6d4>)
    4e2c:	f7fd feba 	bl	2ba4 <__aeabi_dmul>
    4e30:	2200      	movs	r2, #0
    4e32:	9010      	str	r0, [sp, #64]	; 0x40
    4e34:	9111      	str	r1, [sp, #68]	; 0x44
    4e36:	9806      	ldr	r0, [sp, #24]
    4e38:	9907      	ldr	r1, [sp, #28]
    4e3a:	4b51      	ldr	r3, [pc, #324]	; (4f80 <_dtoa_r+0x6d4>)
    4e3c:	f7fd feb2 	bl	2ba4 <__aeabi_dmul>
    4e40:	9512      	str	r5, [sp, #72]	; 0x48
    4e42:	9006      	str	r0, [sp, #24]
    4e44:	9107      	str	r1, [sp, #28]
    4e46:	e7c3      	b.n	4dd0 <_dtoa_r+0x524>
    4e48:	1859      	adds	r1, r3, r1
    4e4a:	6808      	ldr	r0, [r1, #0]
    4e4c:	6849      	ldr	r1, [r1, #4]
    4e4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4e50:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4e52:	f7fd fea7 	bl	2ba4 <__aeabi_dmul>
    4e56:	9010      	str	r0, [sp, #64]	; 0x40
    4e58:	9111      	str	r1, [sp, #68]	; 0x44
    4e5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    4e5c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    4e5e:	9806      	ldr	r0, [sp, #24]
    4e60:	9907      	ldr	r1, [sp, #28]
    4e62:	f7fe fc35 	bl	36d0 <__aeabi_d2iz>
    4e66:	9012      	str	r0, [sp, #72]	; 0x48
    4e68:	f7fe fc66 	bl	3738 <__aeabi_i2d>
    4e6c:	0002      	movs	r2, r0
    4e6e:	000b      	movs	r3, r1
    4e70:	9806      	ldr	r0, [sp, #24]
    4e72:	9907      	ldr	r1, [sp, #28]
    4e74:	f7fe f916 	bl	30a4 <__aeabi_dsub>
    4e78:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4e7a:	9006      	str	r0, [sp, #24]
    4e7c:	9107      	str	r1, [sp, #28]
    4e7e:	3330      	adds	r3, #48	; 0x30
    4e80:	7023      	strb	r3, [r4, #0]
    4e82:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    4e84:	3401      	adds	r4, #1
    4e86:	2200      	movs	r2, #0
    4e88:	42a3      	cmp	r3, r4
    4e8a:	d124      	bne.n	4ed6 <_dtoa_r+0x62a>
    4e8c:	4b41      	ldr	r3, [pc, #260]	; (4f94 <_dtoa_r+0x6e8>)
    4e8e:	9810      	ldr	r0, [sp, #64]	; 0x40
    4e90:	9911      	ldr	r1, [sp, #68]	; 0x44
    4e92:	f000 fb09 	bl	54a8 <__aeabi_dadd>
    4e96:	0002      	movs	r2, r0
    4e98:	000b      	movs	r3, r1
    4e9a:	9806      	ldr	r0, [sp, #24]
    4e9c:	9907      	ldr	r1, [sp, #28]
    4e9e:	f7fe fd41 	bl	3924 <__aeabi_dcmpgt>
    4ea2:	2800      	cmp	r0, #0
    4ea4:	d000      	beq.n	4ea8 <_dtoa_r+0x5fc>
    4ea6:	e078      	b.n	4f9a <_dtoa_r+0x6ee>
    4ea8:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4eaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4eac:	2000      	movs	r0, #0
    4eae:	4939      	ldr	r1, [pc, #228]	; (4f94 <_dtoa_r+0x6e8>)
    4eb0:	f7fe f8f8 	bl	30a4 <__aeabi_dsub>
    4eb4:	0002      	movs	r2, r0
    4eb6:	000b      	movs	r3, r1
    4eb8:	9806      	ldr	r0, [sp, #24]
    4eba:	9907      	ldr	r1, [sp, #28]
    4ebc:	f7fe fd1e 	bl	38fc <__aeabi_dcmplt>
    4ec0:	2800      	cmp	r0, #0
    4ec2:	d100      	bne.n	4ec6 <_dtoa_r+0x61a>
    4ec4:	e729      	b.n	4d1a <_dtoa_r+0x46e>
    4ec6:	1e6b      	subs	r3, r5, #1
    4ec8:	781a      	ldrb	r2, [r3, #0]
    4eca:	2a30      	cmp	r2, #48	; 0x30
    4ecc:	d001      	beq.n	4ed2 <_dtoa_r+0x626>
    4ece:	9603      	str	r6, [sp, #12]
    4ed0:	e03f      	b.n	4f52 <_dtoa_r+0x6a6>
    4ed2:	001d      	movs	r5, r3
    4ed4:	e7f7      	b.n	4ec6 <_dtoa_r+0x61a>
    4ed6:	9806      	ldr	r0, [sp, #24]
    4ed8:	9907      	ldr	r1, [sp, #28]
    4eda:	4b29      	ldr	r3, [pc, #164]	; (4f80 <_dtoa_r+0x6d4>)
    4edc:	f7fd fe62 	bl	2ba4 <__aeabi_dmul>
    4ee0:	9006      	str	r0, [sp, #24]
    4ee2:	9107      	str	r1, [sp, #28]
    4ee4:	e7bb      	b.n	4e5e <_dtoa_r+0x5b2>
    4ee6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    4ee8:	9a08      	ldr	r2, [sp, #32]
    4eea:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4eec:	9806      	ldr	r0, [sp, #24]
    4eee:	9907      	ldr	r1, [sp, #28]
    4ef0:	f7fd fb24 	bl	253c <__aeabi_ddiv>
    4ef4:	f7fe fbec 	bl	36d0 <__aeabi_d2iz>
    4ef8:	0004      	movs	r4, r0
    4efa:	f7fe fc1d 	bl	3738 <__aeabi_i2d>
    4efe:	9a08      	ldr	r2, [sp, #32]
    4f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4f02:	f7fd fe4f 	bl	2ba4 <__aeabi_dmul>
    4f06:	000b      	movs	r3, r1
    4f08:	0002      	movs	r2, r0
    4f0a:	9806      	ldr	r0, [sp, #24]
    4f0c:	9907      	ldr	r1, [sp, #28]
    4f0e:	f7fe f8c9 	bl	30a4 <__aeabi_dsub>
    4f12:	0023      	movs	r3, r4
    4f14:	3330      	adds	r3, #48	; 0x30
    4f16:	7033      	strb	r3, [r6, #0]
    4f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4f1a:	1c75      	adds	r5, r6, #1
    4f1c:	1aeb      	subs	r3, r5, r3
    4f1e:	429f      	cmp	r7, r3
    4f20:	d14c      	bne.n	4fbc <_dtoa_r+0x710>
    4f22:	0002      	movs	r2, r0
    4f24:	000b      	movs	r3, r1
    4f26:	f000 fabf 	bl	54a8 <__aeabi_dadd>
    4f2a:	0006      	movs	r6, r0
    4f2c:	000f      	movs	r7, r1
    4f2e:	0002      	movs	r2, r0
    4f30:	000b      	movs	r3, r1
    4f32:	9808      	ldr	r0, [sp, #32]
    4f34:	9909      	ldr	r1, [sp, #36]	; 0x24
    4f36:	f7fe fce1 	bl	38fc <__aeabi_dcmplt>
    4f3a:	2800      	cmp	r0, #0
    4f3c:	d12c      	bne.n	4f98 <_dtoa_r+0x6ec>
    4f3e:	9808      	ldr	r0, [sp, #32]
    4f40:	9909      	ldr	r1, [sp, #36]	; 0x24
    4f42:	0032      	movs	r2, r6
    4f44:	003b      	movs	r3, r7
    4f46:	f7fe fcd3 	bl	38f0 <__aeabi_dcmpeq>
    4f4a:	2800      	cmp	r0, #0
    4f4c:	d001      	beq.n	4f52 <_dtoa_r+0x6a6>
    4f4e:	07e3      	lsls	r3, r4, #31
    4f50:	d422      	bmi.n	4f98 <_dtoa_r+0x6ec>
    4f52:	9905      	ldr	r1, [sp, #20]
    4f54:	9804      	ldr	r0, [sp, #16]
    4f56:	f7ff f8db 	bl	4110 <_Bfree>
    4f5a:	2300      	movs	r3, #0
    4f5c:	702b      	strb	r3, [r5, #0]
    4f5e:	9b03      	ldr	r3, [sp, #12]
    4f60:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4f62:	3301      	adds	r3, #1
    4f64:	6013      	str	r3, [r2, #0]
    4f66:	9b26      	ldr	r3, [sp, #152]	; 0x98
    4f68:	2b00      	cmp	r3, #0
    4f6a:	d100      	bne.n	4f6e <_dtoa_r+0x6c2>
    4f6c:	e275      	b.n	545a <_dtoa_r+0xbae>
    4f6e:	601d      	str	r5, [r3, #0]
    4f70:	e273      	b.n	545a <_dtoa_r+0xbae>
    4f72:	46c0      	nop			; (mov r8, r8)
    4f74:	00005dd0 	.word	0x00005dd0
    4f78:	00005da8 	.word	0x00005da8
    4f7c:	3ff00000 	.word	0x3ff00000
    4f80:	40240000 	.word	0x40240000
    4f84:	401c0000 	.word	0x401c0000
    4f88:	fcc00000 	.word	0xfcc00000
    4f8c:	40140000 	.word	0x40140000
    4f90:	7cc00000 	.word	0x7cc00000
    4f94:	3fe00000 	.word	0x3fe00000
    4f98:	9e03      	ldr	r6, [sp, #12]
    4f9a:	1e6b      	subs	r3, r5, #1
    4f9c:	781a      	ldrb	r2, [r3, #0]
    4f9e:	2a39      	cmp	r2, #57	; 0x39
    4fa0:	d106      	bne.n	4fb0 <_dtoa_r+0x704>
    4fa2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4fa4:	429a      	cmp	r2, r3
    4fa6:	d107      	bne.n	4fb8 <_dtoa_r+0x70c>
    4fa8:	2330      	movs	r3, #48	; 0x30
    4faa:	7013      	strb	r3, [r2, #0]
    4fac:	0013      	movs	r3, r2
    4fae:	3601      	adds	r6, #1
    4fb0:	781a      	ldrb	r2, [r3, #0]
    4fb2:	3201      	adds	r2, #1
    4fb4:	701a      	strb	r2, [r3, #0]
    4fb6:	e78a      	b.n	4ece <_dtoa_r+0x622>
    4fb8:	001d      	movs	r5, r3
    4fba:	e7ee      	b.n	4f9a <_dtoa_r+0x6ee>
    4fbc:	2200      	movs	r2, #0
    4fbe:	4bcf      	ldr	r3, [pc, #828]	; (52fc <_dtoa_r+0xa50>)
    4fc0:	f7fd fdf0 	bl	2ba4 <__aeabi_dmul>
    4fc4:	2200      	movs	r2, #0
    4fc6:	2300      	movs	r3, #0
    4fc8:	9006      	str	r0, [sp, #24]
    4fca:	9107      	str	r1, [sp, #28]
    4fcc:	002e      	movs	r6, r5
    4fce:	f7fe fc8f 	bl	38f0 <__aeabi_dcmpeq>
    4fd2:	2800      	cmp	r0, #0
    4fd4:	d100      	bne.n	4fd8 <_dtoa_r+0x72c>
    4fd6:	e787      	b.n	4ee8 <_dtoa_r+0x63c>
    4fd8:	e7bb      	b.n	4f52 <_dtoa_r+0x6a6>
    4fda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4fdc:	2a00      	cmp	r2, #0
    4fde:	d100      	bne.n	4fe2 <_dtoa_r+0x736>
    4fe0:	e087      	b.n	50f2 <_dtoa_r+0x846>
    4fe2:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4fe4:	2a01      	cmp	r2, #1
    4fe6:	dc6e      	bgt.n	50c6 <_dtoa_r+0x81a>
    4fe8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4fea:	2a00      	cmp	r2, #0
    4fec:	d067      	beq.n	50be <_dtoa_r+0x812>
    4fee:	4ac4      	ldr	r2, [pc, #784]	; (5300 <_dtoa_r+0xa54>)
    4ff0:	189b      	adds	r3, r3, r2
    4ff2:	9d08      	ldr	r5, [sp, #32]
    4ff4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    4ff6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    4ff8:	2101      	movs	r1, #1
    4ffa:	18d2      	adds	r2, r2, r3
    4ffc:	920b      	str	r2, [sp, #44]	; 0x2c
    4ffe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5000:	9804      	ldr	r0, [sp, #16]
    5002:	18d3      	adds	r3, r2, r3
    5004:	930c      	str	r3, [sp, #48]	; 0x30
    5006:	f7ff f921 	bl	424c <__i2b>
    500a:	0006      	movs	r6, r0
    500c:	2c00      	cmp	r4, #0
    500e:	dd0e      	ble.n	502e <_dtoa_r+0x782>
    5010:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5012:	2b00      	cmp	r3, #0
    5014:	dd0b      	ble.n	502e <_dtoa_r+0x782>
    5016:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5018:	0023      	movs	r3, r4
    501a:	4294      	cmp	r4, r2
    501c:	dd00      	ble.n	5020 <_dtoa_r+0x774>
    501e:	0013      	movs	r3, r2
    5020:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5022:	1ae4      	subs	r4, r4, r3
    5024:	1ad2      	subs	r2, r2, r3
    5026:	920b      	str	r2, [sp, #44]	; 0x2c
    5028:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    502a:	1ad3      	subs	r3, r2, r3
    502c:	930c      	str	r3, [sp, #48]	; 0x30
    502e:	9b08      	ldr	r3, [sp, #32]
    5030:	2b00      	cmp	r3, #0
    5032:	d01e      	beq.n	5072 <_dtoa_r+0x7c6>
    5034:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5036:	2b00      	cmp	r3, #0
    5038:	d05f      	beq.n	50fa <_dtoa_r+0x84e>
    503a:	2d00      	cmp	r5, #0
    503c:	dd11      	ble.n	5062 <_dtoa_r+0x7b6>
    503e:	0031      	movs	r1, r6
    5040:	002a      	movs	r2, r5
    5042:	9804      	ldr	r0, [sp, #16]
    5044:	f7ff f99a 	bl	437c <__pow5mult>
    5048:	9a05      	ldr	r2, [sp, #20]
    504a:	0001      	movs	r1, r0
    504c:	0006      	movs	r6, r0
    504e:	9804      	ldr	r0, [sp, #16]
    5050:	f7ff f905 	bl	425e <__multiply>
    5054:	9905      	ldr	r1, [sp, #20]
    5056:	9010      	str	r0, [sp, #64]	; 0x40
    5058:	9804      	ldr	r0, [sp, #16]
    505a:	f7ff f859 	bl	4110 <_Bfree>
    505e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    5060:	9305      	str	r3, [sp, #20]
    5062:	9b08      	ldr	r3, [sp, #32]
    5064:	1b5a      	subs	r2, r3, r5
    5066:	d004      	beq.n	5072 <_dtoa_r+0x7c6>
    5068:	9905      	ldr	r1, [sp, #20]
    506a:	9804      	ldr	r0, [sp, #16]
    506c:	f7ff f986 	bl	437c <__pow5mult>
    5070:	9005      	str	r0, [sp, #20]
    5072:	2101      	movs	r1, #1
    5074:	9804      	ldr	r0, [sp, #16]
    5076:	f7ff f8e9 	bl	424c <__i2b>
    507a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    507c:	9008      	str	r0, [sp, #32]
    507e:	2b00      	cmp	r3, #0
    5080:	dd3d      	ble.n	50fe <_dtoa_r+0x852>
    5082:	001a      	movs	r2, r3
    5084:	0001      	movs	r1, r0
    5086:	9804      	ldr	r0, [sp, #16]
    5088:	f7ff f978 	bl	437c <__pow5mult>
    508c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    508e:	9008      	str	r0, [sp, #32]
    5090:	2500      	movs	r5, #0
    5092:	2b01      	cmp	r3, #1
    5094:	dc3b      	bgt.n	510e <_dtoa_r+0x862>
    5096:	2500      	movs	r5, #0
    5098:	9b06      	ldr	r3, [sp, #24]
    509a:	42ab      	cmp	r3, r5
    509c:	d133      	bne.n	5106 <_dtoa_r+0x85a>
    509e:	9b07      	ldr	r3, [sp, #28]
    50a0:	031b      	lsls	r3, r3, #12
    50a2:	42ab      	cmp	r3, r5
    50a4:	d12f      	bne.n	5106 <_dtoa_r+0x85a>
    50a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
    50a8:	9a07      	ldr	r2, [sp, #28]
    50aa:	4213      	tst	r3, r2
    50ac:	d02b      	beq.n	5106 <_dtoa_r+0x85a>
    50ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    50b0:	3501      	adds	r5, #1
    50b2:	3301      	adds	r3, #1
    50b4:	930b      	str	r3, [sp, #44]	; 0x2c
    50b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    50b8:	3301      	adds	r3, #1
    50ba:	930c      	str	r3, [sp, #48]	; 0x30
    50bc:	e023      	b.n	5106 <_dtoa_r+0x85a>
    50be:	2336      	movs	r3, #54	; 0x36
    50c0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    50c2:	1a9b      	subs	r3, r3, r2
    50c4:	e795      	b.n	4ff2 <_dtoa_r+0x746>
    50c6:	9b08      	ldr	r3, [sp, #32]
    50c8:	1e7d      	subs	r5, r7, #1
    50ca:	42ab      	cmp	r3, r5
    50cc:	db06      	blt.n	50dc <_dtoa_r+0x830>
    50ce:	1b5d      	subs	r5, r3, r5
    50d0:	2f00      	cmp	r7, #0
    50d2:	da0b      	bge.n	50ec <_dtoa_r+0x840>
    50d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    50d6:	1bdc      	subs	r4, r3, r7
    50d8:	2300      	movs	r3, #0
    50da:	e78c      	b.n	4ff6 <_dtoa_r+0x74a>
    50dc:	9b08      	ldr	r3, [sp, #32]
    50de:	9508      	str	r5, [sp, #32]
    50e0:	1aea      	subs	r2, r5, r3
    50e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    50e4:	2500      	movs	r5, #0
    50e6:	189b      	adds	r3, r3, r2
    50e8:	930f      	str	r3, [sp, #60]	; 0x3c
    50ea:	e7f1      	b.n	50d0 <_dtoa_r+0x824>
    50ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    50ee:	003b      	movs	r3, r7
    50f0:	e781      	b.n	4ff6 <_dtoa_r+0x74a>
    50f2:	9d08      	ldr	r5, [sp, #32]
    50f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    50f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    50f8:	e788      	b.n	500c <_dtoa_r+0x760>
    50fa:	9a08      	ldr	r2, [sp, #32]
    50fc:	e7b4      	b.n	5068 <_dtoa_r+0x7bc>
    50fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5100:	2500      	movs	r5, #0
    5102:	2b01      	cmp	r3, #1
    5104:	ddc7      	ble.n	5096 <_dtoa_r+0x7ea>
    5106:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5108:	2001      	movs	r0, #1
    510a:	2b00      	cmp	r3, #0
    510c:	d00b      	beq.n	5126 <_dtoa_r+0x87a>
    510e:	9b08      	ldr	r3, [sp, #32]
    5110:	9a08      	ldr	r2, [sp, #32]
    5112:	691b      	ldr	r3, [r3, #16]
    5114:	930f      	str	r3, [sp, #60]	; 0x3c
    5116:	3303      	adds	r3, #3
    5118:	009b      	lsls	r3, r3, #2
    511a:	18d3      	adds	r3, r2, r3
    511c:	6858      	ldr	r0, [r3, #4]
    511e:	f7ff f84c 	bl	41ba <__hi0bits>
    5122:	2320      	movs	r3, #32
    5124:	1a18      	subs	r0, r3, r0
    5126:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5128:	18c0      	adds	r0, r0, r3
    512a:	231f      	movs	r3, #31
    512c:	4018      	ands	r0, r3
    512e:	d100      	bne.n	5132 <_dtoa_r+0x886>
    5130:	e0ab      	b.n	528a <_dtoa_r+0x9de>
    5132:	3301      	adds	r3, #1
    5134:	1a1b      	subs	r3, r3, r0
    5136:	2b04      	cmp	r3, #4
    5138:	dc00      	bgt.n	513c <_dtoa_r+0x890>
    513a:	e09b      	b.n	5274 <_dtoa_r+0x9c8>
    513c:	231c      	movs	r3, #28
    513e:	1a18      	subs	r0, r3, r0
    5140:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5142:	1824      	adds	r4, r4, r0
    5144:	181b      	adds	r3, r3, r0
    5146:	930b      	str	r3, [sp, #44]	; 0x2c
    5148:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    514a:	181b      	adds	r3, r3, r0
    514c:	930c      	str	r3, [sp, #48]	; 0x30
    514e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5150:	2b00      	cmp	r3, #0
    5152:	dd05      	ble.n	5160 <_dtoa_r+0x8b4>
    5154:	001a      	movs	r2, r3
    5156:	9905      	ldr	r1, [sp, #20]
    5158:	9804      	ldr	r0, [sp, #16]
    515a:	f7ff f961 	bl	4420 <__lshift>
    515e:	9005      	str	r0, [sp, #20]
    5160:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5162:	2b00      	cmp	r3, #0
    5164:	dd05      	ble.n	5172 <_dtoa_r+0x8c6>
    5166:	001a      	movs	r2, r3
    5168:	9908      	ldr	r1, [sp, #32]
    516a:	9804      	ldr	r0, [sp, #16]
    516c:	f7ff f958 	bl	4420 <__lshift>
    5170:	9008      	str	r0, [sp, #32]
    5172:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5174:	2b00      	cmp	r3, #0
    5176:	d100      	bne.n	517a <_dtoa_r+0x8ce>
    5178:	e089      	b.n	528e <_dtoa_r+0x9e2>
    517a:	9908      	ldr	r1, [sp, #32]
    517c:	9805      	ldr	r0, [sp, #20]
    517e:	f7ff f9a0 	bl	44c2 <__mcmp>
    5182:	2800      	cmp	r0, #0
    5184:	db00      	blt.n	5188 <_dtoa_r+0x8dc>
    5186:	e082      	b.n	528e <_dtoa_r+0x9e2>
    5188:	9b03      	ldr	r3, [sp, #12]
    518a:	220a      	movs	r2, #10
    518c:	3b01      	subs	r3, #1
    518e:	9303      	str	r3, [sp, #12]
    5190:	9905      	ldr	r1, [sp, #20]
    5192:	2300      	movs	r3, #0
    5194:	9804      	ldr	r0, [sp, #16]
    5196:	f7fe ffd4 	bl	4142 <__multadd>
    519a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    519c:	9005      	str	r0, [sp, #20]
    519e:	2b00      	cmp	r3, #0
    51a0:	d100      	bne.n	51a4 <_dtoa_r+0x8f8>
    51a2:	e15d      	b.n	5460 <_dtoa_r+0xbb4>
    51a4:	2300      	movs	r3, #0
    51a6:	0031      	movs	r1, r6
    51a8:	220a      	movs	r2, #10
    51aa:	9804      	ldr	r0, [sp, #16]
    51ac:	f7fe ffc9 	bl	4142 <__multadd>
    51b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    51b2:	0006      	movs	r6, r0
    51b4:	2b00      	cmp	r3, #0
    51b6:	dc02      	bgt.n	51be <_dtoa_r+0x912>
    51b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    51ba:	2b02      	cmp	r3, #2
    51bc:	dc6d      	bgt.n	529a <_dtoa_r+0x9ee>
    51be:	2c00      	cmp	r4, #0
    51c0:	dd05      	ble.n	51ce <_dtoa_r+0x922>
    51c2:	0031      	movs	r1, r6
    51c4:	0022      	movs	r2, r4
    51c6:	9804      	ldr	r0, [sp, #16]
    51c8:	f7ff f92a 	bl	4420 <__lshift>
    51cc:	0006      	movs	r6, r0
    51ce:	0030      	movs	r0, r6
    51d0:	2d00      	cmp	r5, #0
    51d2:	d011      	beq.n	51f8 <_dtoa_r+0x94c>
    51d4:	6871      	ldr	r1, [r6, #4]
    51d6:	9804      	ldr	r0, [sp, #16]
    51d8:	f7fe ff62 	bl	40a0 <_Balloc>
    51dc:	0031      	movs	r1, r6
    51de:	0004      	movs	r4, r0
    51e0:	6933      	ldr	r3, [r6, #16]
    51e2:	310c      	adds	r1, #12
    51e4:	1c9a      	adds	r2, r3, #2
    51e6:	0092      	lsls	r2, r2, #2
    51e8:	300c      	adds	r0, #12
    51ea:	f7fe fdf9 	bl	3de0 <memcpy>
    51ee:	2201      	movs	r2, #1
    51f0:	0021      	movs	r1, r4
    51f2:	9804      	ldr	r0, [sp, #16]
    51f4:	f7ff f914 	bl	4420 <__lshift>
    51f8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    51fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    51fc:	3f01      	subs	r7, #1
    51fe:	930b      	str	r3, [sp, #44]	; 0x2c
    5200:	19db      	adds	r3, r3, r7
    5202:	0037      	movs	r7, r6
    5204:	0006      	movs	r6, r0
    5206:	930f      	str	r3, [sp, #60]	; 0x3c
    5208:	9908      	ldr	r1, [sp, #32]
    520a:	9805      	ldr	r0, [sp, #20]
    520c:	f7ff faca 	bl	47a4 <quorem>
    5210:	0039      	movs	r1, r7
    5212:	900d      	str	r0, [sp, #52]	; 0x34
    5214:	0004      	movs	r4, r0
    5216:	9805      	ldr	r0, [sp, #20]
    5218:	f7ff f953 	bl	44c2 <__mcmp>
    521c:	0032      	movs	r2, r6
    521e:	900e      	str	r0, [sp, #56]	; 0x38
    5220:	9908      	ldr	r1, [sp, #32]
    5222:	9804      	ldr	r0, [sp, #16]
    5224:	f7ff f966 	bl	44f4 <__mdiff>
    5228:	2301      	movs	r3, #1
    522a:	930c      	str	r3, [sp, #48]	; 0x30
    522c:	68c3      	ldr	r3, [r0, #12]
    522e:	3430      	adds	r4, #48	; 0x30
    5230:	0005      	movs	r5, r0
    5232:	2b00      	cmp	r3, #0
    5234:	d104      	bne.n	5240 <_dtoa_r+0x994>
    5236:	0001      	movs	r1, r0
    5238:	9805      	ldr	r0, [sp, #20]
    523a:	f7ff f942 	bl	44c2 <__mcmp>
    523e:	900c      	str	r0, [sp, #48]	; 0x30
    5240:	0029      	movs	r1, r5
    5242:	9804      	ldr	r0, [sp, #16]
    5244:	f7fe ff64 	bl	4110 <_Bfree>
    5248:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    524a:	9a22      	ldr	r2, [sp, #136]	; 0x88
    524c:	4313      	orrs	r3, r2
    524e:	d000      	beq.n	5252 <_dtoa_r+0x9a6>
    5250:	e089      	b.n	5366 <_dtoa_r+0xaba>
    5252:	9a06      	ldr	r2, [sp, #24]
    5254:	3301      	adds	r3, #1
    5256:	4213      	tst	r3, r2
    5258:	d000      	beq.n	525c <_dtoa_r+0x9b0>
    525a:	e084      	b.n	5366 <_dtoa_r+0xaba>
    525c:	2c39      	cmp	r4, #57	; 0x39
    525e:	d100      	bne.n	5262 <_dtoa_r+0x9b6>
    5260:	e0a3      	b.n	53aa <_dtoa_r+0xafe>
    5262:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5264:	2b00      	cmp	r3, #0
    5266:	dd01      	ble.n	526c <_dtoa_r+0x9c0>
    5268:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    526a:	3431      	adds	r4, #49	; 0x31
    526c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    526e:	1c5d      	adds	r5, r3, #1
    5270:	701c      	strb	r4, [r3, #0]
    5272:	e027      	b.n	52c4 <_dtoa_r+0xa18>
    5274:	2b04      	cmp	r3, #4
    5276:	d100      	bne.n	527a <_dtoa_r+0x9ce>
    5278:	e769      	b.n	514e <_dtoa_r+0x8a2>
    527a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    527c:	331c      	adds	r3, #28
    527e:	18d2      	adds	r2, r2, r3
    5280:	920b      	str	r2, [sp, #44]	; 0x2c
    5282:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5284:	18e4      	adds	r4, r4, r3
    5286:	18d3      	adds	r3, r2, r3
    5288:	e760      	b.n	514c <_dtoa_r+0x8a0>
    528a:	0003      	movs	r3, r0
    528c:	e7f5      	b.n	527a <_dtoa_r+0x9ce>
    528e:	2f00      	cmp	r7, #0
    5290:	dc3c      	bgt.n	530c <_dtoa_r+0xa60>
    5292:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5294:	2b02      	cmp	r3, #2
    5296:	dd39      	ble.n	530c <_dtoa_r+0xa60>
    5298:	970d      	str	r7, [sp, #52]	; 0x34
    529a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    529c:	2b00      	cmp	r3, #0
    529e:	d10c      	bne.n	52ba <_dtoa_r+0xa0e>
    52a0:	9908      	ldr	r1, [sp, #32]
    52a2:	2205      	movs	r2, #5
    52a4:	9804      	ldr	r0, [sp, #16]
    52a6:	f7fe ff4c 	bl	4142 <__multadd>
    52aa:	9008      	str	r0, [sp, #32]
    52ac:	0001      	movs	r1, r0
    52ae:	9805      	ldr	r0, [sp, #20]
    52b0:	f7ff f907 	bl	44c2 <__mcmp>
    52b4:	2800      	cmp	r0, #0
    52b6:	dd00      	ble.n	52ba <_dtoa_r+0xa0e>
    52b8:	e55a      	b.n	4d70 <_dtoa_r+0x4c4>
    52ba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    52bc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    52be:	43db      	mvns	r3, r3
    52c0:	9303      	str	r3, [sp, #12]
    52c2:	2700      	movs	r7, #0
    52c4:	9908      	ldr	r1, [sp, #32]
    52c6:	9804      	ldr	r0, [sp, #16]
    52c8:	f7fe ff22 	bl	4110 <_Bfree>
    52cc:	2e00      	cmp	r6, #0
    52ce:	d100      	bne.n	52d2 <_dtoa_r+0xa26>
    52d0:	e63f      	b.n	4f52 <_dtoa_r+0x6a6>
    52d2:	2f00      	cmp	r7, #0
    52d4:	d005      	beq.n	52e2 <_dtoa_r+0xa36>
    52d6:	42b7      	cmp	r7, r6
    52d8:	d003      	beq.n	52e2 <_dtoa_r+0xa36>
    52da:	0039      	movs	r1, r7
    52dc:	9804      	ldr	r0, [sp, #16]
    52de:	f7fe ff17 	bl	4110 <_Bfree>
    52e2:	0031      	movs	r1, r6
    52e4:	9804      	ldr	r0, [sp, #16]
    52e6:	f7fe ff13 	bl	4110 <_Bfree>
    52ea:	e632      	b.n	4f52 <_dtoa_r+0x6a6>
    52ec:	9508      	str	r5, [sp, #32]
    52ee:	002e      	movs	r6, r5
    52f0:	e7e3      	b.n	52ba <_dtoa_r+0xa0e>
    52f2:	2300      	movs	r3, #0
    52f4:	9308      	str	r3, [sp, #32]
    52f6:	001e      	movs	r6, r3
    52f8:	e7df      	b.n	52ba <_dtoa_r+0xa0e>
    52fa:	46c0      	nop			; (mov r8, r8)
    52fc:	40240000 	.word	0x40240000
    5300:	00000433 	.word	0x00000433
    5304:	9603      	str	r6, [sp, #12]
    5306:	9508      	str	r5, [sp, #32]
    5308:	002e      	movs	r6, r5
    530a:	e531      	b.n	4d70 <_dtoa_r+0x4c4>
    530c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    530e:	970d      	str	r7, [sp, #52]	; 0x34
    5310:	2b00      	cmp	r3, #0
    5312:	d000      	beq.n	5316 <_dtoa_r+0xa6a>
    5314:	e753      	b.n	51be <_dtoa_r+0x912>
    5316:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    5318:	9908      	ldr	r1, [sp, #32]
    531a:	9805      	ldr	r0, [sp, #20]
    531c:	f7ff fa42 	bl	47a4 <quorem>
    5320:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5322:	3030      	adds	r0, #48	; 0x30
    5324:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5326:	7028      	strb	r0, [r5, #0]
    5328:	3501      	adds	r5, #1
    532a:	0004      	movs	r4, r0
    532c:	1aeb      	subs	r3, r5, r3
    532e:	429a      	cmp	r2, r3
    5330:	dc78      	bgt.n	5424 <_dtoa_r+0xb78>
    5332:	1e15      	subs	r5, r2, #0
    5334:	dc00      	bgt.n	5338 <_dtoa_r+0xa8c>
    5336:	2501      	movs	r5, #1
    5338:	2700      	movs	r7, #0
    533a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    533c:	195d      	adds	r5, r3, r5
    533e:	9905      	ldr	r1, [sp, #20]
    5340:	2201      	movs	r2, #1
    5342:	9804      	ldr	r0, [sp, #16]
    5344:	f7ff f86c 	bl	4420 <__lshift>
    5348:	9908      	ldr	r1, [sp, #32]
    534a:	9005      	str	r0, [sp, #20]
    534c:	f7ff f8b9 	bl	44c2 <__mcmp>
    5350:	2800      	cmp	r0, #0
    5352:	dc2f      	bgt.n	53b4 <_dtoa_r+0xb08>
    5354:	d101      	bne.n	535a <_dtoa_r+0xaae>
    5356:	07e3      	lsls	r3, r4, #31
    5358:	d42c      	bmi.n	53b4 <_dtoa_r+0xb08>
    535a:	1e6b      	subs	r3, r5, #1
    535c:	781a      	ldrb	r2, [r3, #0]
    535e:	2a30      	cmp	r2, #48	; 0x30
    5360:	d1b0      	bne.n	52c4 <_dtoa_r+0xa18>
    5362:	001d      	movs	r5, r3
    5364:	e7f9      	b.n	535a <_dtoa_r+0xaae>
    5366:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5368:	2b00      	cmp	r3, #0
    536a:	db07      	blt.n	537c <_dtoa_r+0xad0>
    536c:	001d      	movs	r5, r3
    536e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5370:	431d      	orrs	r5, r3
    5372:	d126      	bne.n	53c2 <_dtoa_r+0xb16>
    5374:	2301      	movs	r3, #1
    5376:	9a06      	ldr	r2, [sp, #24]
    5378:	4213      	tst	r3, r2
    537a:	d122      	bne.n	53c2 <_dtoa_r+0xb16>
    537c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    537e:	2b00      	cmp	r3, #0
    5380:	dc00      	bgt.n	5384 <_dtoa_r+0xad8>
    5382:	e773      	b.n	526c <_dtoa_r+0x9c0>
    5384:	9905      	ldr	r1, [sp, #20]
    5386:	2201      	movs	r2, #1
    5388:	9804      	ldr	r0, [sp, #16]
    538a:	f7ff f849 	bl	4420 <__lshift>
    538e:	9908      	ldr	r1, [sp, #32]
    5390:	9005      	str	r0, [sp, #20]
    5392:	f7ff f896 	bl	44c2 <__mcmp>
    5396:	2800      	cmp	r0, #0
    5398:	dc04      	bgt.n	53a4 <_dtoa_r+0xaf8>
    539a:	d000      	beq.n	539e <_dtoa_r+0xaf2>
    539c:	e766      	b.n	526c <_dtoa_r+0x9c0>
    539e:	07e3      	lsls	r3, r4, #31
    53a0:	d400      	bmi.n	53a4 <_dtoa_r+0xaf8>
    53a2:	e763      	b.n	526c <_dtoa_r+0x9c0>
    53a4:	2c39      	cmp	r4, #57	; 0x39
    53a6:	d000      	beq.n	53aa <_dtoa_r+0xafe>
    53a8:	e75e      	b.n	5268 <_dtoa_r+0x9bc>
    53aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    53ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    53ae:	1c5d      	adds	r5, r3, #1
    53b0:	2339      	movs	r3, #57	; 0x39
    53b2:	7013      	strb	r3, [r2, #0]
    53b4:	1e6b      	subs	r3, r5, #1
    53b6:	781a      	ldrb	r2, [r3, #0]
    53b8:	2a39      	cmp	r2, #57	; 0x39
    53ba:	d03b      	beq.n	5434 <_dtoa_r+0xb88>
    53bc:	3201      	adds	r2, #1
    53be:	701a      	strb	r2, [r3, #0]
    53c0:	e780      	b.n	52c4 <_dtoa_r+0xa18>
    53c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    53c4:	3301      	adds	r3, #1
    53c6:	930d      	str	r3, [sp, #52]	; 0x34
    53c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    53ca:	2b00      	cmp	r3, #0
    53cc:	dd05      	ble.n	53da <_dtoa_r+0xb2e>
    53ce:	2c39      	cmp	r4, #57	; 0x39
    53d0:	d0eb      	beq.n	53aa <_dtoa_r+0xafe>
    53d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    53d4:	3401      	adds	r4, #1
    53d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    53d8:	e74a      	b.n	5270 <_dtoa_r+0x9c4>
    53da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    53dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    53de:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    53e0:	701c      	strb	r4, [r3, #0]
    53e2:	4293      	cmp	r3, r2
    53e4:	d0ab      	beq.n	533e <_dtoa_r+0xa92>
    53e6:	2300      	movs	r3, #0
    53e8:	220a      	movs	r2, #10
    53ea:	9905      	ldr	r1, [sp, #20]
    53ec:	9804      	ldr	r0, [sp, #16]
    53ee:	f7fe fea8 	bl	4142 <__multadd>
    53f2:	2300      	movs	r3, #0
    53f4:	9005      	str	r0, [sp, #20]
    53f6:	220a      	movs	r2, #10
    53f8:	0039      	movs	r1, r7
    53fa:	9804      	ldr	r0, [sp, #16]
    53fc:	42b7      	cmp	r7, r6
    53fe:	d106      	bne.n	540e <_dtoa_r+0xb62>
    5400:	f7fe fe9f 	bl	4142 <__multadd>
    5404:	0007      	movs	r7, r0
    5406:	0006      	movs	r6, r0
    5408:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    540a:	930b      	str	r3, [sp, #44]	; 0x2c
    540c:	e6fc      	b.n	5208 <_dtoa_r+0x95c>
    540e:	f7fe fe98 	bl	4142 <__multadd>
    5412:	0031      	movs	r1, r6
    5414:	0007      	movs	r7, r0
    5416:	2300      	movs	r3, #0
    5418:	220a      	movs	r2, #10
    541a:	9804      	ldr	r0, [sp, #16]
    541c:	f7fe fe91 	bl	4142 <__multadd>
    5420:	0006      	movs	r6, r0
    5422:	e7f1      	b.n	5408 <_dtoa_r+0xb5c>
    5424:	2300      	movs	r3, #0
    5426:	220a      	movs	r2, #10
    5428:	9905      	ldr	r1, [sp, #20]
    542a:	9804      	ldr	r0, [sp, #16]
    542c:	f7fe fe89 	bl	4142 <__multadd>
    5430:	9005      	str	r0, [sp, #20]
    5432:	e771      	b.n	5318 <_dtoa_r+0xa6c>
    5434:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5436:	429a      	cmp	r2, r3
    5438:	d105      	bne.n	5446 <_dtoa_r+0xb9a>
    543a:	9b03      	ldr	r3, [sp, #12]
    543c:	3301      	adds	r3, #1
    543e:	9303      	str	r3, [sp, #12]
    5440:	2331      	movs	r3, #49	; 0x31
    5442:	7013      	strb	r3, [r2, #0]
    5444:	e73e      	b.n	52c4 <_dtoa_r+0xa18>
    5446:	001d      	movs	r5, r3
    5448:	e7b4      	b.n	53b4 <_dtoa_r+0xb08>
    544a:	4b0a      	ldr	r3, [pc, #40]	; (5474 <_dtoa_r+0xbc8>)
    544c:	9a26      	ldr	r2, [sp, #152]	; 0x98
    544e:	930a      	str	r3, [sp, #40]	; 0x28
    5450:	4b09      	ldr	r3, [pc, #36]	; (5478 <_dtoa_r+0xbcc>)
    5452:	2a00      	cmp	r2, #0
    5454:	d001      	beq.n	545a <_dtoa_r+0xbae>
    5456:	9a26      	ldr	r2, [sp, #152]	; 0x98
    5458:	6013      	str	r3, [r2, #0]
    545a:	980a      	ldr	r0, [sp, #40]	; 0x28
    545c:	b01d      	add	sp, #116	; 0x74
    545e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5460:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5462:	2b00      	cmp	r3, #0
    5464:	dd00      	ble.n	5468 <_dtoa_r+0xbbc>
    5466:	e756      	b.n	5316 <_dtoa_r+0xa6a>
    5468:	9b22      	ldr	r3, [sp, #136]	; 0x88
    546a:	2b02      	cmp	r3, #2
    546c:	dc00      	bgt.n	5470 <_dtoa_r+0xbc4>
    546e:	e752      	b.n	5316 <_dtoa_r+0xa6a>
    5470:	e713      	b.n	529a <_dtoa_r+0x9ee>
    5472:	46c0      	nop			; (mov r8, r8)
    5474:	00005ea4 	.word	0x00005ea4
    5478:	00005eac 	.word	0x00005eac

0000547c <malloc>:
    547c:	b510      	push	{r4, lr}
    547e:	4b03      	ldr	r3, [pc, #12]	; (548c <malloc+0x10>)
    5480:	0001      	movs	r1, r0
    5482:	6818      	ldr	r0, [r3, #0]
    5484:	f7ff f916 	bl	46b4 <_malloc_r>
    5488:	bd10      	pop	{r4, pc}
    548a:	46c0      	nop			; (mov r8, r8)
    548c:	20000108 	.word	0x20000108

00005490 <__malloc_lock>:
    5490:	4770      	bx	lr

00005492 <__malloc_unlock>:
    5492:	4770      	bx	lr

00005494 <__gnu_thumb1_case_uqi>:
    5494:	b402      	push	{r1}
    5496:	4671      	mov	r1, lr
    5498:	0849      	lsrs	r1, r1, #1
    549a:	0049      	lsls	r1, r1, #1
    549c:	5c09      	ldrb	r1, [r1, r0]
    549e:	0049      	lsls	r1, r1, #1
    54a0:	448e      	add	lr, r1
    54a2:	bc02      	pop	{r1}
    54a4:	4770      	bx	lr
    54a6:	46c0      	nop			; (mov r8, r8)

000054a8 <__aeabi_dadd>:
    54a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    54aa:	4645      	mov	r5, r8
    54ac:	46de      	mov	lr, fp
    54ae:	4657      	mov	r7, sl
    54b0:	464e      	mov	r6, r9
    54b2:	030c      	lsls	r4, r1, #12
    54b4:	b5e0      	push	{r5, r6, r7, lr}
    54b6:	004e      	lsls	r6, r1, #1
    54b8:	0fc9      	lsrs	r1, r1, #31
    54ba:	4688      	mov	r8, r1
    54bc:	000d      	movs	r5, r1
    54be:	0a61      	lsrs	r1, r4, #9
    54c0:	0f44      	lsrs	r4, r0, #29
    54c2:	430c      	orrs	r4, r1
    54c4:	00c7      	lsls	r7, r0, #3
    54c6:	0319      	lsls	r1, r3, #12
    54c8:	0058      	lsls	r0, r3, #1
    54ca:	0fdb      	lsrs	r3, r3, #31
    54cc:	469b      	mov	fp, r3
    54ce:	0a4b      	lsrs	r3, r1, #9
    54d0:	0f51      	lsrs	r1, r2, #29
    54d2:	430b      	orrs	r3, r1
    54d4:	0d76      	lsrs	r6, r6, #21
    54d6:	0d40      	lsrs	r0, r0, #21
    54d8:	0019      	movs	r1, r3
    54da:	00d2      	lsls	r2, r2, #3
    54dc:	45d8      	cmp	r8, fp
    54de:	d100      	bne.n	54e2 <__aeabi_dadd+0x3a>
    54e0:	e0ae      	b.n	5640 <__aeabi_dadd+0x198>
    54e2:	1a35      	subs	r5, r6, r0
    54e4:	2d00      	cmp	r5, #0
    54e6:	dc00      	bgt.n	54ea <__aeabi_dadd+0x42>
    54e8:	e0f6      	b.n	56d8 <__aeabi_dadd+0x230>
    54ea:	2800      	cmp	r0, #0
    54ec:	d10f      	bne.n	550e <__aeabi_dadd+0x66>
    54ee:	4313      	orrs	r3, r2
    54f0:	d100      	bne.n	54f4 <__aeabi_dadd+0x4c>
    54f2:	e0db      	b.n	56ac <__aeabi_dadd+0x204>
    54f4:	1e6b      	subs	r3, r5, #1
    54f6:	2b00      	cmp	r3, #0
    54f8:	d000      	beq.n	54fc <__aeabi_dadd+0x54>
    54fa:	e137      	b.n	576c <__aeabi_dadd+0x2c4>
    54fc:	1aba      	subs	r2, r7, r2
    54fe:	4297      	cmp	r7, r2
    5500:	41bf      	sbcs	r7, r7
    5502:	1a64      	subs	r4, r4, r1
    5504:	427f      	negs	r7, r7
    5506:	1be4      	subs	r4, r4, r7
    5508:	2601      	movs	r6, #1
    550a:	0017      	movs	r7, r2
    550c:	e024      	b.n	5558 <__aeabi_dadd+0xb0>
    550e:	4bc6      	ldr	r3, [pc, #792]	; (5828 <__aeabi_dadd+0x380>)
    5510:	429e      	cmp	r6, r3
    5512:	d04d      	beq.n	55b0 <__aeabi_dadd+0x108>
    5514:	2380      	movs	r3, #128	; 0x80
    5516:	041b      	lsls	r3, r3, #16
    5518:	4319      	orrs	r1, r3
    551a:	2d38      	cmp	r5, #56	; 0x38
    551c:	dd00      	ble.n	5520 <__aeabi_dadd+0x78>
    551e:	e107      	b.n	5730 <__aeabi_dadd+0x288>
    5520:	2d1f      	cmp	r5, #31
    5522:	dd00      	ble.n	5526 <__aeabi_dadd+0x7e>
    5524:	e138      	b.n	5798 <__aeabi_dadd+0x2f0>
    5526:	2020      	movs	r0, #32
    5528:	1b43      	subs	r3, r0, r5
    552a:	469a      	mov	sl, r3
    552c:	000b      	movs	r3, r1
    552e:	4650      	mov	r0, sl
    5530:	4083      	lsls	r3, r0
    5532:	4699      	mov	r9, r3
    5534:	0013      	movs	r3, r2
    5536:	4648      	mov	r0, r9
    5538:	40eb      	lsrs	r3, r5
    553a:	4318      	orrs	r0, r3
    553c:	0003      	movs	r3, r0
    553e:	4650      	mov	r0, sl
    5540:	4082      	lsls	r2, r0
    5542:	1e50      	subs	r0, r2, #1
    5544:	4182      	sbcs	r2, r0
    5546:	40e9      	lsrs	r1, r5
    5548:	431a      	orrs	r2, r3
    554a:	1aba      	subs	r2, r7, r2
    554c:	1a61      	subs	r1, r4, r1
    554e:	4297      	cmp	r7, r2
    5550:	41a4      	sbcs	r4, r4
    5552:	0017      	movs	r7, r2
    5554:	4264      	negs	r4, r4
    5556:	1b0c      	subs	r4, r1, r4
    5558:	0223      	lsls	r3, r4, #8
    555a:	d562      	bpl.n	5622 <__aeabi_dadd+0x17a>
    555c:	0264      	lsls	r4, r4, #9
    555e:	0a65      	lsrs	r5, r4, #9
    5560:	2d00      	cmp	r5, #0
    5562:	d100      	bne.n	5566 <__aeabi_dadd+0xbe>
    5564:	e0df      	b.n	5726 <__aeabi_dadd+0x27e>
    5566:	0028      	movs	r0, r5
    5568:	f7fe fa2a 	bl	39c0 <__clzsi2>
    556c:	0003      	movs	r3, r0
    556e:	3b08      	subs	r3, #8
    5570:	2b1f      	cmp	r3, #31
    5572:	dd00      	ble.n	5576 <__aeabi_dadd+0xce>
    5574:	e0d2      	b.n	571c <__aeabi_dadd+0x274>
    5576:	2220      	movs	r2, #32
    5578:	003c      	movs	r4, r7
    557a:	1ad2      	subs	r2, r2, r3
    557c:	409d      	lsls	r5, r3
    557e:	40d4      	lsrs	r4, r2
    5580:	409f      	lsls	r7, r3
    5582:	4325      	orrs	r5, r4
    5584:	429e      	cmp	r6, r3
    5586:	dd00      	ble.n	558a <__aeabi_dadd+0xe2>
    5588:	e0c4      	b.n	5714 <__aeabi_dadd+0x26c>
    558a:	1b9e      	subs	r6, r3, r6
    558c:	1c73      	adds	r3, r6, #1
    558e:	2b1f      	cmp	r3, #31
    5590:	dd00      	ble.n	5594 <__aeabi_dadd+0xec>
    5592:	e0f1      	b.n	5778 <__aeabi_dadd+0x2d0>
    5594:	2220      	movs	r2, #32
    5596:	0038      	movs	r0, r7
    5598:	0029      	movs	r1, r5
    559a:	1ad2      	subs	r2, r2, r3
    559c:	40d8      	lsrs	r0, r3
    559e:	4091      	lsls	r1, r2
    55a0:	4097      	lsls	r7, r2
    55a2:	002c      	movs	r4, r5
    55a4:	4301      	orrs	r1, r0
    55a6:	1e78      	subs	r0, r7, #1
    55a8:	4187      	sbcs	r7, r0
    55aa:	40dc      	lsrs	r4, r3
    55ac:	2600      	movs	r6, #0
    55ae:	430f      	orrs	r7, r1
    55b0:	077b      	lsls	r3, r7, #29
    55b2:	d009      	beq.n	55c8 <__aeabi_dadd+0x120>
    55b4:	230f      	movs	r3, #15
    55b6:	403b      	ands	r3, r7
    55b8:	2b04      	cmp	r3, #4
    55ba:	d005      	beq.n	55c8 <__aeabi_dadd+0x120>
    55bc:	1d3b      	adds	r3, r7, #4
    55be:	42bb      	cmp	r3, r7
    55c0:	41bf      	sbcs	r7, r7
    55c2:	427f      	negs	r7, r7
    55c4:	19e4      	adds	r4, r4, r7
    55c6:	001f      	movs	r7, r3
    55c8:	0223      	lsls	r3, r4, #8
    55ca:	d52c      	bpl.n	5626 <__aeabi_dadd+0x17e>
    55cc:	4b96      	ldr	r3, [pc, #600]	; (5828 <__aeabi_dadd+0x380>)
    55ce:	3601      	adds	r6, #1
    55d0:	429e      	cmp	r6, r3
    55d2:	d100      	bne.n	55d6 <__aeabi_dadd+0x12e>
    55d4:	e09a      	b.n	570c <__aeabi_dadd+0x264>
    55d6:	4645      	mov	r5, r8
    55d8:	4b94      	ldr	r3, [pc, #592]	; (582c <__aeabi_dadd+0x384>)
    55da:	08ff      	lsrs	r7, r7, #3
    55dc:	401c      	ands	r4, r3
    55de:	0760      	lsls	r0, r4, #29
    55e0:	0576      	lsls	r6, r6, #21
    55e2:	0264      	lsls	r4, r4, #9
    55e4:	4307      	orrs	r7, r0
    55e6:	0b24      	lsrs	r4, r4, #12
    55e8:	0d76      	lsrs	r6, r6, #21
    55ea:	2100      	movs	r1, #0
    55ec:	0324      	lsls	r4, r4, #12
    55ee:	0b23      	lsrs	r3, r4, #12
    55f0:	0d0c      	lsrs	r4, r1, #20
    55f2:	4a8f      	ldr	r2, [pc, #572]	; (5830 <__aeabi_dadd+0x388>)
    55f4:	0524      	lsls	r4, r4, #20
    55f6:	431c      	orrs	r4, r3
    55f8:	4014      	ands	r4, r2
    55fa:	0533      	lsls	r3, r6, #20
    55fc:	4323      	orrs	r3, r4
    55fe:	005b      	lsls	r3, r3, #1
    5600:	07ed      	lsls	r5, r5, #31
    5602:	085b      	lsrs	r3, r3, #1
    5604:	432b      	orrs	r3, r5
    5606:	0038      	movs	r0, r7
    5608:	0019      	movs	r1, r3
    560a:	bc3c      	pop	{r2, r3, r4, r5}
    560c:	4690      	mov	r8, r2
    560e:	4699      	mov	r9, r3
    5610:	46a2      	mov	sl, r4
    5612:	46ab      	mov	fp, r5
    5614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5616:	4664      	mov	r4, ip
    5618:	4304      	orrs	r4, r0
    561a:	d100      	bne.n	561e <__aeabi_dadd+0x176>
    561c:	e211      	b.n	5a42 <__aeabi_dadd+0x59a>
    561e:	0004      	movs	r4, r0
    5620:	4667      	mov	r7, ip
    5622:	077b      	lsls	r3, r7, #29
    5624:	d1c6      	bne.n	55b4 <__aeabi_dadd+0x10c>
    5626:	4645      	mov	r5, r8
    5628:	0760      	lsls	r0, r4, #29
    562a:	08ff      	lsrs	r7, r7, #3
    562c:	4307      	orrs	r7, r0
    562e:	08e4      	lsrs	r4, r4, #3
    5630:	4b7d      	ldr	r3, [pc, #500]	; (5828 <__aeabi_dadd+0x380>)
    5632:	429e      	cmp	r6, r3
    5634:	d030      	beq.n	5698 <__aeabi_dadd+0x1f0>
    5636:	0324      	lsls	r4, r4, #12
    5638:	0576      	lsls	r6, r6, #21
    563a:	0b24      	lsrs	r4, r4, #12
    563c:	0d76      	lsrs	r6, r6, #21
    563e:	e7d4      	b.n	55ea <__aeabi_dadd+0x142>
    5640:	1a33      	subs	r3, r6, r0
    5642:	469a      	mov	sl, r3
    5644:	2b00      	cmp	r3, #0
    5646:	dd78      	ble.n	573a <__aeabi_dadd+0x292>
    5648:	2800      	cmp	r0, #0
    564a:	d031      	beq.n	56b0 <__aeabi_dadd+0x208>
    564c:	4876      	ldr	r0, [pc, #472]	; (5828 <__aeabi_dadd+0x380>)
    564e:	4286      	cmp	r6, r0
    5650:	d0ae      	beq.n	55b0 <__aeabi_dadd+0x108>
    5652:	2080      	movs	r0, #128	; 0x80
    5654:	0400      	lsls	r0, r0, #16
    5656:	4301      	orrs	r1, r0
    5658:	4653      	mov	r3, sl
    565a:	2b38      	cmp	r3, #56	; 0x38
    565c:	dc00      	bgt.n	5660 <__aeabi_dadd+0x1b8>
    565e:	e0e9      	b.n	5834 <__aeabi_dadd+0x38c>
    5660:	430a      	orrs	r2, r1
    5662:	1e51      	subs	r1, r2, #1
    5664:	418a      	sbcs	r2, r1
    5666:	2100      	movs	r1, #0
    5668:	19d2      	adds	r2, r2, r7
    566a:	42ba      	cmp	r2, r7
    566c:	41bf      	sbcs	r7, r7
    566e:	1909      	adds	r1, r1, r4
    5670:	427c      	negs	r4, r7
    5672:	0017      	movs	r7, r2
    5674:	190c      	adds	r4, r1, r4
    5676:	0223      	lsls	r3, r4, #8
    5678:	d5d3      	bpl.n	5622 <__aeabi_dadd+0x17a>
    567a:	4b6b      	ldr	r3, [pc, #428]	; (5828 <__aeabi_dadd+0x380>)
    567c:	3601      	adds	r6, #1
    567e:	429e      	cmp	r6, r3
    5680:	d100      	bne.n	5684 <__aeabi_dadd+0x1dc>
    5682:	e13a      	b.n	58fa <__aeabi_dadd+0x452>
    5684:	2001      	movs	r0, #1
    5686:	4b69      	ldr	r3, [pc, #420]	; (582c <__aeabi_dadd+0x384>)
    5688:	401c      	ands	r4, r3
    568a:	087b      	lsrs	r3, r7, #1
    568c:	4007      	ands	r7, r0
    568e:	431f      	orrs	r7, r3
    5690:	07e0      	lsls	r0, r4, #31
    5692:	4307      	orrs	r7, r0
    5694:	0864      	lsrs	r4, r4, #1
    5696:	e78b      	b.n	55b0 <__aeabi_dadd+0x108>
    5698:	0023      	movs	r3, r4
    569a:	433b      	orrs	r3, r7
    569c:	d100      	bne.n	56a0 <__aeabi_dadd+0x1f8>
    569e:	e1cb      	b.n	5a38 <__aeabi_dadd+0x590>
    56a0:	2280      	movs	r2, #128	; 0x80
    56a2:	0312      	lsls	r2, r2, #12
    56a4:	4314      	orrs	r4, r2
    56a6:	0324      	lsls	r4, r4, #12
    56a8:	0b24      	lsrs	r4, r4, #12
    56aa:	e79e      	b.n	55ea <__aeabi_dadd+0x142>
    56ac:	002e      	movs	r6, r5
    56ae:	e77f      	b.n	55b0 <__aeabi_dadd+0x108>
    56b0:	0008      	movs	r0, r1
    56b2:	4310      	orrs	r0, r2
    56b4:	d100      	bne.n	56b8 <__aeabi_dadd+0x210>
    56b6:	e0b4      	b.n	5822 <__aeabi_dadd+0x37a>
    56b8:	1e58      	subs	r0, r3, #1
    56ba:	2800      	cmp	r0, #0
    56bc:	d000      	beq.n	56c0 <__aeabi_dadd+0x218>
    56be:	e0de      	b.n	587e <__aeabi_dadd+0x3d6>
    56c0:	18ba      	adds	r2, r7, r2
    56c2:	42ba      	cmp	r2, r7
    56c4:	419b      	sbcs	r3, r3
    56c6:	1864      	adds	r4, r4, r1
    56c8:	425b      	negs	r3, r3
    56ca:	18e4      	adds	r4, r4, r3
    56cc:	0017      	movs	r7, r2
    56ce:	2601      	movs	r6, #1
    56d0:	0223      	lsls	r3, r4, #8
    56d2:	d5a6      	bpl.n	5622 <__aeabi_dadd+0x17a>
    56d4:	2602      	movs	r6, #2
    56d6:	e7d5      	b.n	5684 <__aeabi_dadd+0x1dc>
    56d8:	2d00      	cmp	r5, #0
    56da:	d16e      	bne.n	57ba <__aeabi_dadd+0x312>
    56dc:	1c70      	adds	r0, r6, #1
    56de:	0540      	lsls	r0, r0, #21
    56e0:	0d40      	lsrs	r0, r0, #21
    56e2:	2801      	cmp	r0, #1
    56e4:	dc00      	bgt.n	56e8 <__aeabi_dadd+0x240>
    56e6:	e0f9      	b.n	58dc <__aeabi_dadd+0x434>
    56e8:	1ab8      	subs	r0, r7, r2
    56ea:	4684      	mov	ip, r0
    56ec:	4287      	cmp	r7, r0
    56ee:	4180      	sbcs	r0, r0
    56f0:	1ae5      	subs	r5, r4, r3
    56f2:	4240      	negs	r0, r0
    56f4:	1a2d      	subs	r5, r5, r0
    56f6:	0228      	lsls	r0, r5, #8
    56f8:	d400      	bmi.n	56fc <__aeabi_dadd+0x254>
    56fa:	e089      	b.n	5810 <__aeabi_dadd+0x368>
    56fc:	1bd7      	subs	r7, r2, r7
    56fe:	42ba      	cmp	r2, r7
    5700:	4192      	sbcs	r2, r2
    5702:	1b1c      	subs	r4, r3, r4
    5704:	4252      	negs	r2, r2
    5706:	1aa5      	subs	r5, r4, r2
    5708:	46d8      	mov	r8, fp
    570a:	e729      	b.n	5560 <__aeabi_dadd+0xb8>
    570c:	4645      	mov	r5, r8
    570e:	2400      	movs	r4, #0
    5710:	2700      	movs	r7, #0
    5712:	e76a      	b.n	55ea <__aeabi_dadd+0x142>
    5714:	4c45      	ldr	r4, [pc, #276]	; (582c <__aeabi_dadd+0x384>)
    5716:	1af6      	subs	r6, r6, r3
    5718:	402c      	ands	r4, r5
    571a:	e749      	b.n	55b0 <__aeabi_dadd+0x108>
    571c:	003d      	movs	r5, r7
    571e:	3828      	subs	r0, #40	; 0x28
    5720:	4085      	lsls	r5, r0
    5722:	2700      	movs	r7, #0
    5724:	e72e      	b.n	5584 <__aeabi_dadd+0xdc>
    5726:	0038      	movs	r0, r7
    5728:	f7fe f94a 	bl	39c0 <__clzsi2>
    572c:	3020      	adds	r0, #32
    572e:	e71d      	b.n	556c <__aeabi_dadd+0xc4>
    5730:	430a      	orrs	r2, r1
    5732:	1e51      	subs	r1, r2, #1
    5734:	418a      	sbcs	r2, r1
    5736:	2100      	movs	r1, #0
    5738:	e707      	b.n	554a <__aeabi_dadd+0xa2>
    573a:	2b00      	cmp	r3, #0
    573c:	d000      	beq.n	5740 <__aeabi_dadd+0x298>
    573e:	e0f3      	b.n	5928 <__aeabi_dadd+0x480>
    5740:	1c70      	adds	r0, r6, #1
    5742:	0543      	lsls	r3, r0, #21
    5744:	0d5b      	lsrs	r3, r3, #21
    5746:	2b01      	cmp	r3, #1
    5748:	dc00      	bgt.n	574c <__aeabi_dadd+0x2a4>
    574a:	e0ad      	b.n	58a8 <__aeabi_dadd+0x400>
    574c:	4b36      	ldr	r3, [pc, #216]	; (5828 <__aeabi_dadd+0x380>)
    574e:	4298      	cmp	r0, r3
    5750:	d100      	bne.n	5754 <__aeabi_dadd+0x2ac>
    5752:	e0d1      	b.n	58f8 <__aeabi_dadd+0x450>
    5754:	18ba      	adds	r2, r7, r2
    5756:	42ba      	cmp	r2, r7
    5758:	41bf      	sbcs	r7, r7
    575a:	1864      	adds	r4, r4, r1
    575c:	427f      	negs	r7, r7
    575e:	19e4      	adds	r4, r4, r7
    5760:	07e7      	lsls	r7, r4, #31
    5762:	0852      	lsrs	r2, r2, #1
    5764:	4317      	orrs	r7, r2
    5766:	0864      	lsrs	r4, r4, #1
    5768:	0006      	movs	r6, r0
    576a:	e721      	b.n	55b0 <__aeabi_dadd+0x108>
    576c:	482e      	ldr	r0, [pc, #184]	; (5828 <__aeabi_dadd+0x380>)
    576e:	4285      	cmp	r5, r0
    5770:	d100      	bne.n	5774 <__aeabi_dadd+0x2cc>
    5772:	e093      	b.n	589c <__aeabi_dadd+0x3f4>
    5774:	001d      	movs	r5, r3
    5776:	e6d0      	b.n	551a <__aeabi_dadd+0x72>
    5778:	0029      	movs	r1, r5
    577a:	3e1f      	subs	r6, #31
    577c:	40f1      	lsrs	r1, r6
    577e:	2b20      	cmp	r3, #32
    5780:	d100      	bne.n	5784 <__aeabi_dadd+0x2dc>
    5782:	e08d      	b.n	58a0 <__aeabi_dadd+0x3f8>
    5784:	2240      	movs	r2, #64	; 0x40
    5786:	1ad3      	subs	r3, r2, r3
    5788:	409d      	lsls	r5, r3
    578a:	432f      	orrs	r7, r5
    578c:	1e7d      	subs	r5, r7, #1
    578e:	41af      	sbcs	r7, r5
    5790:	2400      	movs	r4, #0
    5792:	430f      	orrs	r7, r1
    5794:	2600      	movs	r6, #0
    5796:	e744      	b.n	5622 <__aeabi_dadd+0x17a>
    5798:	002b      	movs	r3, r5
    579a:	0008      	movs	r0, r1
    579c:	3b20      	subs	r3, #32
    579e:	40d8      	lsrs	r0, r3
    57a0:	0003      	movs	r3, r0
    57a2:	2d20      	cmp	r5, #32
    57a4:	d100      	bne.n	57a8 <__aeabi_dadd+0x300>
    57a6:	e07d      	b.n	58a4 <__aeabi_dadd+0x3fc>
    57a8:	2040      	movs	r0, #64	; 0x40
    57aa:	1b45      	subs	r5, r0, r5
    57ac:	40a9      	lsls	r1, r5
    57ae:	430a      	orrs	r2, r1
    57b0:	1e51      	subs	r1, r2, #1
    57b2:	418a      	sbcs	r2, r1
    57b4:	2100      	movs	r1, #0
    57b6:	431a      	orrs	r2, r3
    57b8:	e6c7      	b.n	554a <__aeabi_dadd+0xa2>
    57ba:	2e00      	cmp	r6, #0
    57bc:	d050      	beq.n	5860 <__aeabi_dadd+0x3b8>
    57be:	4e1a      	ldr	r6, [pc, #104]	; (5828 <__aeabi_dadd+0x380>)
    57c0:	42b0      	cmp	r0, r6
    57c2:	d057      	beq.n	5874 <__aeabi_dadd+0x3cc>
    57c4:	2680      	movs	r6, #128	; 0x80
    57c6:	426b      	negs	r3, r5
    57c8:	4699      	mov	r9, r3
    57ca:	0436      	lsls	r6, r6, #16
    57cc:	4334      	orrs	r4, r6
    57ce:	464b      	mov	r3, r9
    57d0:	2b38      	cmp	r3, #56	; 0x38
    57d2:	dd00      	ble.n	57d6 <__aeabi_dadd+0x32e>
    57d4:	e0d6      	b.n	5984 <__aeabi_dadd+0x4dc>
    57d6:	2b1f      	cmp	r3, #31
    57d8:	dd00      	ble.n	57dc <__aeabi_dadd+0x334>
    57da:	e135      	b.n	5a48 <__aeabi_dadd+0x5a0>
    57dc:	2620      	movs	r6, #32
    57de:	1af5      	subs	r5, r6, r3
    57e0:	0026      	movs	r6, r4
    57e2:	40ae      	lsls	r6, r5
    57e4:	46b2      	mov	sl, r6
    57e6:	003e      	movs	r6, r7
    57e8:	40de      	lsrs	r6, r3
    57ea:	46ac      	mov	ip, r5
    57ec:	0035      	movs	r5, r6
    57ee:	4656      	mov	r6, sl
    57f0:	432e      	orrs	r6, r5
    57f2:	4665      	mov	r5, ip
    57f4:	40af      	lsls	r7, r5
    57f6:	1e7d      	subs	r5, r7, #1
    57f8:	41af      	sbcs	r7, r5
    57fa:	40dc      	lsrs	r4, r3
    57fc:	4337      	orrs	r7, r6
    57fe:	1bd7      	subs	r7, r2, r7
    5800:	42ba      	cmp	r2, r7
    5802:	4192      	sbcs	r2, r2
    5804:	1b0c      	subs	r4, r1, r4
    5806:	4252      	negs	r2, r2
    5808:	1aa4      	subs	r4, r4, r2
    580a:	0006      	movs	r6, r0
    580c:	46d8      	mov	r8, fp
    580e:	e6a3      	b.n	5558 <__aeabi_dadd+0xb0>
    5810:	4664      	mov	r4, ip
    5812:	4667      	mov	r7, ip
    5814:	432c      	orrs	r4, r5
    5816:	d000      	beq.n	581a <__aeabi_dadd+0x372>
    5818:	e6a2      	b.n	5560 <__aeabi_dadd+0xb8>
    581a:	2500      	movs	r5, #0
    581c:	2600      	movs	r6, #0
    581e:	2700      	movs	r7, #0
    5820:	e706      	b.n	5630 <__aeabi_dadd+0x188>
    5822:	001e      	movs	r6, r3
    5824:	e6c4      	b.n	55b0 <__aeabi_dadd+0x108>
    5826:	46c0      	nop			; (mov r8, r8)
    5828:	000007ff 	.word	0x000007ff
    582c:	ff7fffff 	.word	0xff7fffff
    5830:	800fffff 	.word	0x800fffff
    5834:	2b1f      	cmp	r3, #31
    5836:	dc63      	bgt.n	5900 <__aeabi_dadd+0x458>
    5838:	2020      	movs	r0, #32
    583a:	1ac3      	subs	r3, r0, r3
    583c:	0008      	movs	r0, r1
    583e:	4098      	lsls	r0, r3
    5840:	469c      	mov	ip, r3
    5842:	4683      	mov	fp, r0
    5844:	4653      	mov	r3, sl
    5846:	0010      	movs	r0, r2
    5848:	40d8      	lsrs	r0, r3
    584a:	0003      	movs	r3, r0
    584c:	4658      	mov	r0, fp
    584e:	4318      	orrs	r0, r3
    5850:	4663      	mov	r3, ip
    5852:	409a      	lsls	r2, r3
    5854:	1e53      	subs	r3, r2, #1
    5856:	419a      	sbcs	r2, r3
    5858:	4653      	mov	r3, sl
    585a:	4302      	orrs	r2, r0
    585c:	40d9      	lsrs	r1, r3
    585e:	e703      	b.n	5668 <__aeabi_dadd+0x1c0>
    5860:	0026      	movs	r6, r4
    5862:	433e      	orrs	r6, r7
    5864:	d006      	beq.n	5874 <__aeabi_dadd+0x3cc>
    5866:	43eb      	mvns	r3, r5
    5868:	4699      	mov	r9, r3
    586a:	2b00      	cmp	r3, #0
    586c:	d0c7      	beq.n	57fe <__aeabi_dadd+0x356>
    586e:	4e94      	ldr	r6, [pc, #592]	; (5ac0 <__aeabi_dadd+0x618>)
    5870:	42b0      	cmp	r0, r6
    5872:	d1ac      	bne.n	57ce <__aeabi_dadd+0x326>
    5874:	000c      	movs	r4, r1
    5876:	0017      	movs	r7, r2
    5878:	0006      	movs	r6, r0
    587a:	46d8      	mov	r8, fp
    587c:	e698      	b.n	55b0 <__aeabi_dadd+0x108>
    587e:	4b90      	ldr	r3, [pc, #576]	; (5ac0 <__aeabi_dadd+0x618>)
    5880:	459a      	cmp	sl, r3
    5882:	d00b      	beq.n	589c <__aeabi_dadd+0x3f4>
    5884:	4682      	mov	sl, r0
    5886:	e6e7      	b.n	5658 <__aeabi_dadd+0x1b0>
    5888:	2800      	cmp	r0, #0
    588a:	d000      	beq.n	588e <__aeabi_dadd+0x3e6>
    588c:	e09e      	b.n	59cc <__aeabi_dadd+0x524>
    588e:	0018      	movs	r0, r3
    5890:	4310      	orrs	r0, r2
    5892:	d100      	bne.n	5896 <__aeabi_dadd+0x3ee>
    5894:	e0e9      	b.n	5a6a <__aeabi_dadd+0x5c2>
    5896:	001c      	movs	r4, r3
    5898:	0017      	movs	r7, r2
    589a:	46d8      	mov	r8, fp
    589c:	4e88      	ldr	r6, [pc, #544]	; (5ac0 <__aeabi_dadd+0x618>)
    589e:	e687      	b.n	55b0 <__aeabi_dadd+0x108>
    58a0:	2500      	movs	r5, #0
    58a2:	e772      	b.n	578a <__aeabi_dadd+0x2e2>
    58a4:	2100      	movs	r1, #0
    58a6:	e782      	b.n	57ae <__aeabi_dadd+0x306>
    58a8:	0023      	movs	r3, r4
    58aa:	433b      	orrs	r3, r7
    58ac:	2e00      	cmp	r6, #0
    58ae:	d000      	beq.n	58b2 <__aeabi_dadd+0x40a>
    58b0:	e0ab      	b.n	5a0a <__aeabi_dadd+0x562>
    58b2:	2b00      	cmp	r3, #0
    58b4:	d100      	bne.n	58b8 <__aeabi_dadd+0x410>
    58b6:	e0e7      	b.n	5a88 <__aeabi_dadd+0x5e0>
    58b8:	000b      	movs	r3, r1
    58ba:	4313      	orrs	r3, r2
    58bc:	d100      	bne.n	58c0 <__aeabi_dadd+0x418>
    58be:	e677      	b.n	55b0 <__aeabi_dadd+0x108>
    58c0:	18ba      	adds	r2, r7, r2
    58c2:	42ba      	cmp	r2, r7
    58c4:	41bf      	sbcs	r7, r7
    58c6:	1864      	adds	r4, r4, r1
    58c8:	427f      	negs	r7, r7
    58ca:	19e4      	adds	r4, r4, r7
    58cc:	0223      	lsls	r3, r4, #8
    58ce:	d400      	bmi.n	58d2 <__aeabi_dadd+0x42a>
    58d0:	e0f2      	b.n	5ab8 <__aeabi_dadd+0x610>
    58d2:	4b7c      	ldr	r3, [pc, #496]	; (5ac4 <__aeabi_dadd+0x61c>)
    58d4:	0017      	movs	r7, r2
    58d6:	401c      	ands	r4, r3
    58d8:	0006      	movs	r6, r0
    58da:	e669      	b.n	55b0 <__aeabi_dadd+0x108>
    58dc:	0020      	movs	r0, r4
    58de:	4338      	orrs	r0, r7
    58e0:	2e00      	cmp	r6, #0
    58e2:	d1d1      	bne.n	5888 <__aeabi_dadd+0x3e0>
    58e4:	2800      	cmp	r0, #0
    58e6:	d15b      	bne.n	59a0 <__aeabi_dadd+0x4f8>
    58e8:	001c      	movs	r4, r3
    58ea:	4314      	orrs	r4, r2
    58ec:	d100      	bne.n	58f0 <__aeabi_dadd+0x448>
    58ee:	e0a8      	b.n	5a42 <__aeabi_dadd+0x59a>
    58f0:	001c      	movs	r4, r3
    58f2:	0017      	movs	r7, r2
    58f4:	46d8      	mov	r8, fp
    58f6:	e65b      	b.n	55b0 <__aeabi_dadd+0x108>
    58f8:	0006      	movs	r6, r0
    58fa:	2400      	movs	r4, #0
    58fc:	2700      	movs	r7, #0
    58fe:	e697      	b.n	5630 <__aeabi_dadd+0x188>
    5900:	4650      	mov	r0, sl
    5902:	000b      	movs	r3, r1
    5904:	3820      	subs	r0, #32
    5906:	40c3      	lsrs	r3, r0
    5908:	4699      	mov	r9, r3
    590a:	4653      	mov	r3, sl
    590c:	2b20      	cmp	r3, #32
    590e:	d100      	bne.n	5912 <__aeabi_dadd+0x46a>
    5910:	e095      	b.n	5a3e <__aeabi_dadd+0x596>
    5912:	2340      	movs	r3, #64	; 0x40
    5914:	4650      	mov	r0, sl
    5916:	1a1b      	subs	r3, r3, r0
    5918:	4099      	lsls	r1, r3
    591a:	430a      	orrs	r2, r1
    591c:	1e51      	subs	r1, r2, #1
    591e:	418a      	sbcs	r2, r1
    5920:	464b      	mov	r3, r9
    5922:	2100      	movs	r1, #0
    5924:	431a      	orrs	r2, r3
    5926:	e69f      	b.n	5668 <__aeabi_dadd+0x1c0>
    5928:	2e00      	cmp	r6, #0
    592a:	d130      	bne.n	598e <__aeabi_dadd+0x4e6>
    592c:	0026      	movs	r6, r4
    592e:	433e      	orrs	r6, r7
    5930:	d067      	beq.n	5a02 <__aeabi_dadd+0x55a>
    5932:	43db      	mvns	r3, r3
    5934:	469a      	mov	sl, r3
    5936:	2b00      	cmp	r3, #0
    5938:	d01c      	beq.n	5974 <__aeabi_dadd+0x4cc>
    593a:	4e61      	ldr	r6, [pc, #388]	; (5ac0 <__aeabi_dadd+0x618>)
    593c:	42b0      	cmp	r0, r6
    593e:	d060      	beq.n	5a02 <__aeabi_dadd+0x55a>
    5940:	4653      	mov	r3, sl
    5942:	2b38      	cmp	r3, #56	; 0x38
    5944:	dd00      	ble.n	5948 <__aeabi_dadd+0x4a0>
    5946:	e096      	b.n	5a76 <__aeabi_dadd+0x5ce>
    5948:	2b1f      	cmp	r3, #31
    594a:	dd00      	ble.n	594e <__aeabi_dadd+0x4a6>
    594c:	e09f      	b.n	5a8e <__aeabi_dadd+0x5e6>
    594e:	2620      	movs	r6, #32
    5950:	1af3      	subs	r3, r6, r3
    5952:	0026      	movs	r6, r4
    5954:	409e      	lsls	r6, r3
    5956:	469c      	mov	ip, r3
    5958:	46b3      	mov	fp, r6
    595a:	4653      	mov	r3, sl
    595c:	003e      	movs	r6, r7
    595e:	40de      	lsrs	r6, r3
    5960:	0033      	movs	r3, r6
    5962:	465e      	mov	r6, fp
    5964:	431e      	orrs	r6, r3
    5966:	4663      	mov	r3, ip
    5968:	409f      	lsls	r7, r3
    596a:	1e7b      	subs	r3, r7, #1
    596c:	419f      	sbcs	r7, r3
    596e:	4653      	mov	r3, sl
    5970:	40dc      	lsrs	r4, r3
    5972:	4337      	orrs	r7, r6
    5974:	18bf      	adds	r7, r7, r2
    5976:	4297      	cmp	r7, r2
    5978:	4192      	sbcs	r2, r2
    597a:	1864      	adds	r4, r4, r1
    597c:	4252      	negs	r2, r2
    597e:	18a4      	adds	r4, r4, r2
    5980:	0006      	movs	r6, r0
    5982:	e678      	b.n	5676 <__aeabi_dadd+0x1ce>
    5984:	4327      	orrs	r7, r4
    5986:	1e7c      	subs	r4, r7, #1
    5988:	41a7      	sbcs	r7, r4
    598a:	2400      	movs	r4, #0
    598c:	e737      	b.n	57fe <__aeabi_dadd+0x356>
    598e:	4e4c      	ldr	r6, [pc, #304]	; (5ac0 <__aeabi_dadd+0x618>)
    5990:	42b0      	cmp	r0, r6
    5992:	d036      	beq.n	5a02 <__aeabi_dadd+0x55a>
    5994:	2680      	movs	r6, #128	; 0x80
    5996:	425b      	negs	r3, r3
    5998:	0436      	lsls	r6, r6, #16
    599a:	469a      	mov	sl, r3
    599c:	4334      	orrs	r4, r6
    599e:	e7cf      	b.n	5940 <__aeabi_dadd+0x498>
    59a0:	0018      	movs	r0, r3
    59a2:	4310      	orrs	r0, r2
    59a4:	d100      	bne.n	59a8 <__aeabi_dadd+0x500>
    59a6:	e603      	b.n	55b0 <__aeabi_dadd+0x108>
    59a8:	1ab8      	subs	r0, r7, r2
    59aa:	4684      	mov	ip, r0
    59ac:	4567      	cmp	r7, ip
    59ae:	41ad      	sbcs	r5, r5
    59b0:	1ae0      	subs	r0, r4, r3
    59b2:	426d      	negs	r5, r5
    59b4:	1b40      	subs	r0, r0, r5
    59b6:	0205      	lsls	r5, r0, #8
    59b8:	d400      	bmi.n	59bc <__aeabi_dadd+0x514>
    59ba:	e62c      	b.n	5616 <__aeabi_dadd+0x16e>
    59bc:	1bd7      	subs	r7, r2, r7
    59be:	42ba      	cmp	r2, r7
    59c0:	4192      	sbcs	r2, r2
    59c2:	1b1c      	subs	r4, r3, r4
    59c4:	4252      	negs	r2, r2
    59c6:	1aa4      	subs	r4, r4, r2
    59c8:	46d8      	mov	r8, fp
    59ca:	e5f1      	b.n	55b0 <__aeabi_dadd+0x108>
    59cc:	0018      	movs	r0, r3
    59ce:	4310      	orrs	r0, r2
    59d0:	d100      	bne.n	59d4 <__aeabi_dadd+0x52c>
    59d2:	e763      	b.n	589c <__aeabi_dadd+0x3f4>
    59d4:	08f8      	lsrs	r0, r7, #3
    59d6:	0767      	lsls	r7, r4, #29
    59d8:	4307      	orrs	r7, r0
    59da:	2080      	movs	r0, #128	; 0x80
    59dc:	08e4      	lsrs	r4, r4, #3
    59de:	0300      	lsls	r0, r0, #12
    59e0:	4204      	tst	r4, r0
    59e2:	d008      	beq.n	59f6 <__aeabi_dadd+0x54e>
    59e4:	08dd      	lsrs	r5, r3, #3
    59e6:	4205      	tst	r5, r0
    59e8:	d105      	bne.n	59f6 <__aeabi_dadd+0x54e>
    59ea:	08d2      	lsrs	r2, r2, #3
    59ec:	0759      	lsls	r1, r3, #29
    59ee:	4311      	orrs	r1, r2
    59f0:	000f      	movs	r7, r1
    59f2:	002c      	movs	r4, r5
    59f4:	46d8      	mov	r8, fp
    59f6:	0f7b      	lsrs	r3, r7, #29
    59f8:	00e4      	lsls	r4, r4, #3
    59fa:	431c      	orrs	r4, r3
    59fc:	00ff      	lsls	r7, r7, #3
    59fe:	4e30      	ldr	r6, [pc, #192]	; (5ac0 <__aeabi_dadd+0x618>)
    5a00:	e5d6      	b.n	55b0 <__aeabi_dadd+0x108>
    5a02:	000c      	movs	r4, r1
    5a04:	0017      	movs	r7, r2
    5a06:	0006      	movs	r6, r0
    5a08:	e5d2      	b.n	55b0 <__aeabi_dadd+0x108>
    5a0a:	2b00      	cmp	r3, #0
    5a0c:	d038      	beq.n	5a80 <__aeabi_dadd+0x5d8>
    5a0e:	000b      	movs	r3, r1
    5a10:	4313      	orrs	r3, r2
    5a12:	d100      	bne.n	5a16 <__aeabi_dadd+0x56e>
    5a14:	e742      	b.n	589c <__aeabi_dadd+0x3f4>
    5a16:	08f8      	lsrs	r0, r7, #3
    5a18:	0767      	lsls	r7, r4, #29
    5a1a:	4307      	orrs	r7, r0
    5a1c:	2080      	movs	r0, #128	; 0x80
    5a1e:	08e4      	lsrs	r4, r4, #3
    5a20:	0300      	lsls	r0, r0, #12
    5a22:	4204      	tst	r4, r0
    5a24:	d0e7      	beq.n	59f6 <__aeabi_dadd+0x54e>
    5a26:	08cb      	lsrs	r3, r1, #3
    5a28:	4203      	tst	r3, r0
    5a2a:	d1e4      	bne.n	59f6 <__aeabi_dadd+0x54e>
    5a2c:	08d2      	lsrs	r2, r2, #3
    5a2e:	0749      	lsls	r1, r1, #29
    5a30:	4311      	orrs	r1, r2
    5a32:	000f      	movs	r7, r1
    5a34:	001c      	movs	r4, r3
    5a36:	e7de      	b.n	59f6 <__aeabi_dadd+0x54e>
    5a38:	2700      	movs	r7, #0
    5a3a:	2400      	movs	r4, #0
    5a3c:	e5d5      	b.n	55ea <__aeabi_dadd+0x142>
    5a3e:	2100      	movs	r1, #0
    5a40:	e76b      	b.n	591a <__aeabi_dadd+0x472>
    5a42:	2500      	movs	r5, #0
    5a44:	2700      	movs	r7, #0
    5a46:	e5f3      	b.n	5630 <__aeabi_dadd+0x188>
    5a48:	464e      	mov	r6, r9
    5a4a:	0025      	movs	r5, r4
    5a4c:	3e20      	subs	r6, #32
    5a4e:	40f5      	lsrs	r5, r6
    5a50:	464b      	mov	r3, r9
    5a52:	002e      	movs	r6, r5
    5a54:	2b20      	cmp	r3, #32
    5a56:	d02d      	beq.n	5ab4 <__aeabi_dadd+0x60c>
    5a58:	2540      	movs	r5, #64	; 0x40
    5a5a:	1aed      	subs	r5, r5, r3
    5a5c:	40ac      	lsls	r4, r5
    5a5e:	4327      	orrs	r7, r4
    5a60:	1e7c      	subs	r4, r7, #1
    5a62:	41a7      	sbcs	r7, r4
    5a64:	2400      	movs	r4, #0
    5a66:	4337      	orrs	r7, r6
    5a68:	e6c9      	b.n	57fe <__aeabi_dadd+0x356>
    5a6a:	2480      	movs	r4, #128	; 0x80
    5a6c:	2500      	movs	r5, #0
    5a6e:	0324      	lsls	r4, r4, #12
    5a70:	4e13      	ldr	r6, [pc, #76]	; (5ac0 <__aeabi_dadd+0x618>)
    5a72:	2700      	movs	r7, #0
    5a74:	e5dc      	b.n	5630 <__aeabi_dadd+0x188>
    5a76:	4327      	orrs	r7, r4
    5a78:	1e7c      	subs	r4, r7, #1
    5a7a:	41a7      	sbcs	r7, r4
    5a7c:	2400      	movs	r4, #0
    5a7e:	e779      	b.n	5974 <__aeabi_dadd+0x4cc>
    5a80:	000c      	movs	r4, r1
    5a82:	0017      	movs	r7, r2
    5a84:	4e0e      	ldr	r6, [pc, #56]	; (5ac0 <__aeabi_dadd+0x618>)
    5a86:	e593      	b.n	55b0 <__aeabi_dadd+0x108>
    5a88:	000c      	movs	r4, r1
    5a8a:	0017      	movs	r7, r2
    5a8c:	e590      	b.n	55b0 <__aeabi_dadd+0x108>
    5a8e:	4656      	mov	r6, sl
    5a90:	0023      	movs	r3, r4
    5a92:	3e20      	subs	r6, #32
    5a94:	40f3      	lsrs	r3, r6
    5a96:	4699      	mov	r9, r3
    5a98:	4653      	mov	r3, sl
    5a9a:	2b20      	cmp	r3, #32
    5a9c:	d00e      	beq.n	5abc <__aeabi_dadd+0x614>
    5a9e:	2340      	movs	r3, #64	; 0x40
    5aa0:	4656      	mov	r6, sl
    5aa2:	1b9b      	subs	r3, r3, r6
    5aa4:	409c      	lsls	r4, r3
    5aa6:	4327      	orrs	r7, r4
    5aa8:	1e7c      	subs	r4, r7, #1
    5aaa:	41a7      	sbcs	r7, r4
    5aac:	464b      	mov	r3, r9
    5aae:	2400      	movs	r4, #0
    5ab0:	431f      	orrs	r7, r3
    5ab2:	e75f      	b.n	5974 <__aeabi_dadd+0x4cc>
    5ab4:	2400      	movs	r4, #0
    5ab6:	e7d2      	b.n	5a5e <__aeabi_dadd+0x5b6>
    5ab8:	0017      	movs	r7, r2
    5aba:	e5b2      	b.n	5622 <__aeabi_dadd+0x17a>
    5abc:	2400      	movs	r4, #0
    5abe:	e7f2      	b.n	5aa6 <__aeabi_dadd+0x5fe>
    5ac0:	000007ff 	.word	0x000007ff
    5ac4:	ff7fffff 	.word	0xff7fffff
    5ac8:	682f2e2e 	.word	0x682f2e2e
    5acc:	732f6c61 	.word	0x732f6c61
    5ad0:	682f6372 	.word	0x682f6372
    5ad4:	615f6c61 	.word	0x615f6c61
    5ad8:	735f6364 	.word	0x735f6364
    5adc:	2e636e79 	.word	0x2e636e79
    5ae0:	00000063 	.word	0x00000063
    5ae4:	682f2e2e 	.word	0x682f2e2e
    5ae8:	732f6c61 	.word	0x732f6c61
    5aec:	682f6372 	.word	0x682f6372
    5af0:	635f6c61 	.word	0x635f6c61
    5af4:	615f6e61 	.word	0x615f6e61
    5af8:	636e7973 	.word	0x636e7973
    5afc:	0000632e 	.word	0x0000632e
    5b00:	682f2e2e 	.word	0x682f2e2e
    5b04:	732f6c61 	.word	0x732f6c61
    5b08:	682f6372 	.word	0x682f6372
    5b0c:	695f6c61 	.word	0x695f6c61
    5b10:	00632e6f 	.word	0x00632e6f
    5b14:	682f2e2e 	.word	0x682f2e2e
    5b18:	732f6c61 	.word	0x732f6c61
    5b1c:	682f6372 	.word	0x682f6372
    5b20:	735f6c61 	.word	0x735f6c61
    5b24:	6d5f6970 	.word	0x6d5f6970
    5b28:	6e79735f 	.word	0x6e79735f
    5b2c:	00632e63 	.word	0x00632e63
    5b30:	682f2e2e 	.word	0x682f2e2e
    5b34:	732f6c61 	.word	0x732f6c61
    5b38:	682f6372 	.word	0x682f6372
    5b3c:	745f6c61 	.word	0x745f6c61
    5b40:	5f706d65 	.word	0x5f706d65
    5b44:	636e7973 	.word	0x636e7973
    5b48:	0000632e 	.word	0x0000632e
    5b4c:	682f2e2e 	.word	0x682f2e2e
    5b50:	732f6c61 	.word	0x732f6c61
    5b54:	682f6372 	.word	0x682f6372
    5b58:	755f6c61 	.word	0x755f6c61
    5b5c:	74726173 	.word	0x74726173
    5b60:	7973615f 	.word	0x7973615f
    5b64:	632e636e 	.word	0x632e636e
    5b68:	00000000 	.word	0x00000000
    5b6c:	682f2e2e 	.word	0x682f2e2e
    5b70:	752f6c61 	.word	0x752f6c61
    5b74:	736c6974 	.word	0x736c6974
    5b78:	6372732f 	.word	0x6372732f
    5b7c:	6974752f 	.word	0x6974752f
    5b80:	725f736c 	.word	0x725f736c
    5b84:	62676e69 	.word	0x62676e69
    5b88:	65666675 	.word	0x65666675
    5b8c:	00632e72 	.word	0x00632e72

00005b90 <_adcs>:
    5b90:	05000000 18000000 00000000 00000000     ................
	...
    5bac:	682f2e2e 612f6c70 682f6364 615f6c70     ../hpl/adc/hpl_a
    5bbc:	632e6364 00000000 682f2e2e 732f6c70     dc.c....../hpl/s
    5bcc:	6f637265 70682f6d 65735f6c 6d6f6372     ercom/hpl_sercom
    5bdc:	0000632e 616c6552 65742079 00007473     .c..Relay test..
    5bec:	6f727245 4e203a72 7573206f 63206863     Error: No such c
    5bfc:	616d6d6f 0000646e 00001df4 00001dc4     ommand..........
    5c0c:	00001dd6 00001d18 00001dd6 00001dba     ................
    5c1c:	00001dd6 00001d18 00001dc4 00001dc4     ................
    5c2c:	00001dba 00001d18 00001d20 00001d20     ........ ... ...
    5c3c:	00001d20 00001ddc 00001dc4 00001dc4      ...............
    5c4c:	00001d98 00001e7c 00001d98 00001dba     ....|...........
    5c5c:	00001d98 00001e7c 00001dc4 00001dc4     ....|...........
    5c6c:	00001dba 00001e7c 00001d20 00001d20     ....|... ... ...
    5c7c:	00001d20 00001e86 00002024 00001f74      .......$ ..t...
    5c8c:	00001f74 00001f72 00002016 00002016     t...r.... ... ..
    5c9c:	0000200c 00001f72 00002016 0000200c     . ..r.... ... ..
    5cac:	00002016 00001f72 0000201c 0000201c     . ..r.... ... ..
    5cbc:	0000201c 000020ac 00002734 00002716     . ... ..4'...'..
    5ccc:	000026d0 000025ee 000026d0 00002708     .&...%...&...'..
    5cdc:	000026d0 000025ee 00002716 00002716     .&...%...'...'..
    5cec:	00002708 000025ee 000025e6 000025e6     .'...%...%...%..
    5cfc:	000025e6 0000294c 00002d94 00002c54     .%..L)...-..T,..
    5d0c:	00002c54 00002c50 00002d6c 00002d6c     T,..P,..l-..l-..
    5d1c:	00002d5e 00002c50 00002d6c 00002d5e     ^-..P,..l-..^-..
    5d2c:	00002d6c 00002c50 00002d74 00002d74     l-..P,..t-..t-..
    5d3c:	00002d74 00002f78                       t-..x/..

00005d44 <__sf_fake_stderr>:
	...

00005d64 <__sf_fake_stdin>:
	...

00005d84 <__sf_fake_stdout>:
	...

00005da8 <__mprec_bigtens>:
    5da8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    5db8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    5dc8:	7f73bf3c 75154fdd                       <.s..O.u

00005dd0 <__mprec_tens>:
    5dd0:	00000000 3ff00000 00000000 40240000     .......?......$@
    5de0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    5df0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    5e00:	00000000 412e8480 00000000 416312d0     .......A......cA
    5e10:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    5e20:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    5e30:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    5e40:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    5e50:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    5e60:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    5e70:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    5e80:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    5e90:	79d99db4 44ea7843                       ...yCx.D

00005e98 <p05.6047>:
    5e98:	00000005 00000019 0000007d 69666e49     ........}...Infi
    5ea8:	7974696e 4e614e00 00003000              nity.NaN.0..

00005eb4 <_init>:
    5eb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5eb6:	46c0      	nop			; (mov r8, r8)
    5eb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5eba:	bc08      	pop	{r3}
    5ebc:	469e      	mov	lr, r3
    5ebe:	4770      	bx	lr

00005ec0 <__init_array_start>:
    5ec0:	000000e5 	.word	0x000000e5

00005ec4 <_fini>:
    5ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5ec6:	46c0      	nop			; (mov r8, r8)
    5ec8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5eca:	bc08      	pop	{r3}
    5ecc:	469e      	mov	lr, r3
    5ece:	4770      	bx	lr

00005ed0 <__fini_array_start>:
    5ed0:	000000bd 	.word	0x000000bd

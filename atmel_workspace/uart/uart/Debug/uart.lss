
uart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ff4  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000504  20000000  00000ff4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000178  20000504  000014f8  00020504  2**2
                  ALLOC
  3 .stack        00002004  2000067c  00001670  00020504  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020504  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002052c  2**0
                  CONTENTS, READONLY
  6 .debug_info   0001673b  00000000  00000000  00020585  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002285  00000000  00000000  00036cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000aa2a  00000000  00000000  00038f45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000008a0  00000000  00000000  0004396f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000e00  00000000  00000000  0004420f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001c3cc  00000000  00000000  0004500f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000ebe2  00000000  00000000  000613db  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00090586  00000000  00000000  0006ffbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000017b4  00000000  00000000  00100544  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	80 26 00 20 2d 01 00 00 29 01 00 00 29 01 00 00     .&. -...)...)...
	...
  2c:	29 01 00 00 00 00 00 00 00 00 00 00 29 01 00 00     )...........)...
  3c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  4c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  5c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  6c:	29 01 00 00 29 01 00 00 89 0a 00 00 29 01 00 00     )...).......)...
  7c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  8c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  9c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
  ac:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...

000000bc <__do_global_dtors_aux>:
  bc:	b510      	push	{r4, lr}
  be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
  c0:	7823      	ldrb	r3, [r4, #0]
  c2:	2b00      	cmp	r3, #0
  c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
  c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
  c8:	2b00      	cmp	r3, #0
  ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
  cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
  ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
  d0:	bf00      	nop
  d2:	2301      	movs	r3, #1
  d4:	7023      	strb	r3, [r4, #0]
  d6:	bd10      	pop	{r4, pc}
  d8:	20000504 	.word	0x20000504
  dc:	00000000 	.word	0x00000000
  e0:	00000ff4 	.word	0x00000ff4

000000e4 <frame_dummy>:
  e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
  e6:	b510      	push	{r4, lr}
  e8:	2b00      	cmp	r3, #0
  ea:	d003      	beq.n	f4 <frame_dummy+0x10>
  ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
  ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
  f0:	e000      	b.n	f4 <frame_dummy+0x10>
  f2:	bf00      	nop
  f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
  f6:	6803      	ldr	r3, [r0, #0]
  f8:	2b00      	cmp	r3, #0
  fa:	d100      	bne.n	fe <frame_dummy+0x1a>
  fc:	bd10      	pop	{r4, pc}
  fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
 100:	2b00      	cmp	r3, #0
 102:	d0fb      	beq.n	fc <frame_dummy+0x18>
 104:	4798      	blx	r3
 106:	e7f9      	b.n	fc <frame_dummy+0x18>
 108:	00000000 	.word	0x00000000
 10c:	20000508 	.word	0x20000508
 110:	00000ff4 	.word	0x00000ff4
 114:	00000ff4 	.word	0x00000ff4
 118:	00000000 	.word	0x00000000

0000011c <atmel_start_init>:
 11c:	b510      	push	{r4, lr}
 11e:	4b01      	ldr	r3, [pc, #4]	; (124 <atmel_start_init+0x8>)
 120:	4798      	blx	r3
 122:	bd10      	pop	{r4, pc}
 124:	00000265 	.word	0x00000265

00000128 <Dummy_Handler>:
 128:	e7fe      	b.n	128 <Dummy_Handler>
	...

0000012c <Reset_Handler>:
 12c:	b510      	push	{r4, lr}
 12e:	4a17      	ldr	r2, [pc, #92]	; (18c <Reset_Handler+0x60>)
 130:	4b17      	ldr	r3, [pc, #92]	; (190 <Reset_Handler+0x64>)
 132:	429a      	cmp	r2, r3
 134:	d011      	beq.n	15a <Reset_Handler+0x2e>
 136:	001a      	movs	r2, r3
 138:	4b16      	ldr	r3, [pc, #88]	; (194 <Reset_Handler+0x68>)
 13a:	429a      	cmp	r2, r3
 13c:	d20d      	bcs.n	15a <Reset_Handler+0x2e>
 13e:	4a16      	ldr	r2, [pc, #88]	; (198 <Reset_Handler+0x6c>)
 140:	3303      	adds	r3, #3
 142:	1a9b      	subs	r3, r3, r2
 144:	089b      	lsrs	r3, r3, #2
 146:	3301      	adds	r3, #1
 148:	009b      	lsls	r3, r3, #2
 14a:	2200      	movs	r2, #0
 14c:	4810      	ldr	r0, [pc, #64]	; (190 <Reset_Handler+0x64>)
 14e:	490f      	ldr	r1, [pc, #60]	; (18c <Reset_Handler+0x60>)
 150:	588c      	ldr	r4, [r1, r2]
 152:	5084      	str	r4, [r0, r2]
 154:	3204      	adds	r2, #4
 156:	429a      	cmp	r2, r3
 158:	d1fa      	bne.n	150 <Reset_Handler+0x24>
 15a:	4a10      	ldr	r2, [pc, #64]	; (19c <Reset_Handler+0x70>)
 15c:	4b10      	ldr	r3, [pc, #64]	; (1a0 <Reset_Handler+0x74>)
 15e:	429a      	cmp	r2, r3
 160:	d20a      	bcs.n	178 <Reset_Handler+0x4c>
 162:	43d3      	mvns	r3, r2
 164:	490e      	ldr	r1, [pc, #56]	; (1a0 <Reset_Handler+0x74>)
 166:	185b      	adds	r3, r3, r1
 168:	2103      	movs	r1, #3
 16a:	438b      	bics	r3, r1
 16c:	3304      	adds	r3, #4
 16e:	189b      	adds	r3, r3, r2
 170:	2100      	movs	r1, #0
 172:	c202      	stmia	r2!, {r1}
 174:	4293      	cmp	r3, r2
 176:	d1fc      	bne.n	172 <Reset_Handler+0x46>
 178:	4a0a      	ldr	r2, [pc, #40]	; (1a4 <Reset_Handler+0x78>)
 17a:	21ff      	movs	r1, #255	; 0xff
 17c:	4b0a      	ldr	r3, [pc, #40]	; (1a8 <Reset_Handler+0x7c>)
 17e:	438b      	bics	r3, r1
 180:	6093      	str	r3, [r2, #8]
 182:	4b0a      	ldr	r3, [pc, #40]	; (1ac <Reset_Handler+0x80>)
 184:	4798      	blx	r3
 186:	4b0a      	ldr	r3, [pc, #40]	; (1b0 <Reset_Handler+0x84>)
 188:	4798      	blx	r3
 18a:	e7fe      	b.n	18a <Reset_Handler+0x5e>
 18c:	00000ff4 	.word	0x00000ff4
 190:	20000000 	.word	0x20000000
 194:	20000504 	.word	0x20000504
 198:	20000004 	.word	0x20000004
 19c:	20000504 	.word	0x20000504
 1a0:	2000067c 	.word	0x2000067c
 1a4:	e000ed00 	.word	0xe000ed00
 1a8:	00000000 	.word	0x00000000
 1ac:	00000ca1 	.word	0x00000ca1
 1b0:	00000bd9 	.word	0x00000bd9

000001b4 <USART_0_CLOCK_init>:
 1b4:	4b06      	ldr	r3, [pc, #24]	; (1d0 <USART_0_CLOCK_init+0x1c>)
 1b6:	2140      	movs	r1, #64	; 0x40
 1b8:	22dc      	movs	r2, #220	; 0xdc
 1ba:	5099      	str	r1, [r3, r2]
 1bc:	3103      	adds	r1, #3
 1be:	3a14      	subs	r2, #20
 1c0:	5099      	str	r1, [r3, r2]
 1c2:	4a04      	ldr	r2, [pc, #16]	; (1d4 <USART_0_CLOCK_init+0x20>)
 1c4:	69d3      	ldr	r3, [r2, #28]
 1c6:	3923      	subs	r1, #35	; 0x23
 1c8:	430b      	orrs	r3, r1
 1ca:	61d3      	str	r3, [r2, #28]
 1cc:	4770      	bx	lr
 1ce:	46c0      	nop			; (mov r8, r8)
 1d0:	40001c00 	.word	0x40001c00
 1d4:	40000800 	.word	0x40000800

000001d8 <USART_0_PORT_init>:
 1d8:	b530      	push	{r4, r5, lr}
 1da:	2382      	movs	r3, #130	; 0x82
 1dc:	05db      	lsls	r3, r3, #23
 1de:	22c8      	movs	r2, #200	; 0xc8
 1e0:	5c99      	ldrb	r1, [r3, r2]
 1e2:	2501      	movs	r5, #1
 1e4:	43a9      	bics	r1, r5
 1e6:	2401      	movs	r4, #1
 1e8:	4321      	orrs	r1, r4
 1ea:	b2c9      	uxtb	r1, r1
 1ec:	5499      	strb	r1, [r3, r2]
 1ee:	20b4      	movs	r0, #180	; 0xb4
 1f0:	5c19      	ldrb	r1, [r3, r0]
 1f2:	3ab9      	subs	r2, #185	; 0xb9
 1f4:	4391      	bics	r1, r2
 1f6:	3a0c      	subs	r2, #12
 1f8:	4311      	orrs	r1, r2
 1fa:	5419      	strb	r1, [r3, r0]
 1fc:	21c9      	movs	r1, #201	; 0xc9
 1fe:	5c5a      	ldrb	r2, [r3, r1]
 200:	43aa      	bics	r2, r5
 202:	4322      	orrs	r2, r4
 204:	b2d2      	uxtb	r2, r2
 206:	545a      	strb	r2, [r3, r1]
 208:	5c1a      	ldrb	r2, [r3, r0]
 20a:	39ba      	subs	r1, #186	; 0xba
 20c:	400a      	ands	r2, r1
 20e:	3121      	adds	r1, #33	; 0x21
 210:	430a      	orrs	r2, r1
 212:	541a      	strb	r2, [r3, r0]
 214:	bd30      	pop	{r4, r5, pc}
	...

00000218 <USART_0_init>:
 218:	b510      	push	{r4, lr}
 21a:	b082      	sub	sp, #8
 21c:	4b06      	ldr	r3, [pc, #24]	; (238 <USART_0_init+0x20>)
 21e:	4798      	blx	r3
 220:	2300      	movs	r3, #0
 222:	9300      	str	r3, [sp, #0]
 224:	3310      	adds	r3, #16
 226:	4a05      	ldr	r2, [pc, #20]	; (23c <USART_0_init+0x24>)
 228:	4905      	ldr	r1, [pc, #20]	; (240 <USART_0_init+0x28>)
 22a:	4806      	ldr	r0, [pc, #24]	; (244 <USART_0_init+0x2c>)
 22c:	4c06      	ldr	r4, [pc, #24]	; (248 <USART_0_init+0x30>)
 22e:	47a0      	blx	r4
 230:	4b06      	ldr	r3, [pc, #24]	; (24c <USART_0_init+0x34>)
 232:	4798      	blx	r3
 234:	b002      	add	sp, #8
 236:	bd10      	pop	{r4, pc}
 238:	000001b5 	.word	0x000001b5
 23c:	20000520 	.word	0x20000520
 240:	42001400 	.word	0x42001400
 244:	20000608 	.word	0x20000608
 248:	000005b1 	.word	0x000005b1
 24c:	000001d9 	.word	0x000001d9

00000250 <delay_driver_init>:
 250:	b510      	push	{r4, lr}
 252:	4802      	ldr	r0, [pc, #8]	; (25c <delay_driver_init+0xc>)
 254:	4b02      	ldr	r3, [pc, #8]	; (260 <delay_driver_init+0x10>)
 256:	4798      	blx	r3
 258:	bd10      	pop	{r4, pc}
 25a:	46c0      	nop			; (mov r8, r8)
 25c:	e000e010 	.word	0xe000e010
 260:	00000371 	.word	0x00000371

00000264 <system_init>:
 264:	b5f0      	push	{r4, r5, r6, r7, lr}
 266:	46c6      	mov	lr, r8
 268:	b500      	push	{lr}
 26a:	4b30      	ldr	r3, [pc, #192]	; (32c <system_init+0xc8>)
 26c:	4798      	blx	r3
 26e:	22c0      	movs	r2, #192	; 0xc0
 270:	05d2      	lsls	r2, r2, #23
 272:	2380      	movs	r3, #128	; 0x80
 274:	051b      	lsls	r3, r3, #20
 276:	6153      	str	r3, [r2, #20]
 278:	6093      	str	r3, [r2, #8]
 27a:	2382      	movs	r3, #130	; 0x82
 27c:	05db      	lsls	r3, r3, #23
 27e:	2480      	movs	r4, #128	; 0x80
 280:	05e4      	lsls	r4, r4, #23
 282:	629c      	str	r4, [r3, #40]	; 0x28
 284:	492a      	ldr	r1, [pc, #168]	; (330 <system_init+0xcc>)
 286:	6299      	str	r1, [r3, #40]	; 0x28
 288:	255b      	movs	r5, #91	; 0x5b
 28a:	5d59      	ldrb	r1, [r3, r5]
 28c:	2001      	movs	r0, #1
 28e:	4381      	bics	r1, r0
 290:	5559      	strb	r1, [r3, r5]
 292:	2180      	movs	r1, #128	; 0x80
 294:	0549      	lsls	r1, r1, #21
 296:	6151      	str	r1, [r2, #20]
 298:	6091      	str	r1, [r2, #8]
 29a:	629c      	str	r4, [r3, #40]	; 0x28
 29c:	4925      	ldr	r1, [pc, #148]	; (334 <system_init+0xd0>)
 29e:	6299      	str	r1, [r3, #40]	; 0x28
 2a0:	3501      	adds	r5, #1
 2a2:	5d59      	ldrb	r1, [r3, r5]
 2a4:	4381      	bics	r1, r0
 2a6:	5559      	strb	r1, [r3, r5]
 2a8:	2184      	movs	r1, #132	; 0x84
 2aa:	4688      	mov	r8, r1
 2ac:	2704      	movs	r7, #4
 2ae:	5057      	str	r7, [r2, r1]
 2b0:	3124      	adds	r1, #36	; 0x24
 2b2:	4d21      	ldr	r5, [pc, #132]	; (338 <system_init+0xd4>)
 2b4:	505d      	str	r5, [r3, r1]
 2b6:	4d21      	ldr	r5, [pc, #132]	; (33c <system_init+0xd8>)
 2b8:	46ac      	mov	ip, r5
 2ba:	505d      	str	r5, [r3, r1]
 2bc:	25c2      	movs	r5, #194	; 0xc2
 2be:	5d5e      	ldrb	r6, [r3, r5]
 2c0:	43be      	bics	r6, r7
 2c2:	555e      	strb	r6, [r3, r5]
 2c4:	5d5e      	ldrb	r6, [r3, r5]
 2c6:	4386      	bics	r6, r0
 2c8:	555e      	strb	r6, [r3, r5]
 2ca:	3dba      	subs	r5, #186	; 0xba
 2cc:	4646      	mov	r6, r8
 2ce:	5195      	str	r5, [r2, r6]
 2d0:	4d1b      	ldr	r5, [pc, #108]	; (340 <system_init+0xdc>)
 2d2:	505d      	str	r5, [r3, r1]
 2d4:	4665      	mov	r5, ip
 2d6:	505d      	str	r5, [r3, r1]
 2d8:	25c3      	movs	r5, #195	; 0xc3
 2da:	5d5e      	ldrb	r6, [r3, r5]
 2dc:	43be      	bics	r6, r7
 2de:	555e      	strb	r6, [r3, r5]
 2e0:	5d5e      	ldrb	r6, [r3, r5]
 2e2:	4386      	bics	r6, r0
 2e4:	555e      	strb	r6, [r3, r5]
 2e6:	3790      	adds	r7, #144	; 0x90
 2e8:	2580      	movs	r5, #128	; 0x80
 2ea:	03ed      	lsls	r5, r5, #15
 2ec:	51d5      	str	r5, [r2, r7]
 2ee:	2688      	movs	r6, #136	; 0x88
 2f0:	46b0      	mov	r8, r6
 2f2:	5195      	str	r5, [r2, r6]
 2f4:	505c      	str	r4, [r3, r1]
 2f6:	4d13      	ldr	r5, [pc, #76]	; (344 <system_init+0xe0>)
 2f8:	505d      	str	r5, [r3, r1]
 2fa:	25d6      	movs	r5, #214	; 0xd6
 2fc:	46ac      	mov	ip, r5
 2fe:	5d5d      	ldrb	r5, [r3, r5]
 300:	4385      	bics	r5, r0
 302:	4666      	mov	r6, ip
 304:	559d      	strb	r5, [r3, r6]
 306:	2580      	movs	r5, #128	; 0x80
 308:	042d      	lsls	r5, r5, #16
 30a:	51d5      	str	r5, [r2, r7]
 30c:	4646      	mov	r6, r8
 30e:	5195      	str	r5, [r2, r6]
 310:	505c      	str	r4, [r3, r1]
 312:	4a0d      	ldr	r2, [pc, #52]	; (348 <system_init+0xe4>)
 314:	505a      	str	r2, [r3, r1]
 316:	312f      	adds	r1, #47	; 0x2f
 318:	5c5a      	ldrb	r2, [r3, r1]
 31a:	4382      	bics	r2, r0
 31c:	545a      	strb	r2, [r3, r1]
 31e:	4b0b      	ldr	r3, [pc, #44]	; (34c <system_init+0xe8>)
 320:	4798      	blx	r3
 322:	4b0b      	ldr	r3, [pc, #44]	; (350 <system_init+0xec>)
 324:	4798      	blx	r3
 326:	bc04      	pop	{r2}
 328:	4690      	mov	r8, r2
 32a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 32c:	000007f5 	.word	0x000007f5
 330:	c0000800 	.word	0xc0000800
 334:	c0001000 	.word	0xc0001000
 338:	40020004 	.word	0x40020004
 33c:	c0020000 	.word	0xc0020000
 340:	40020008 	.word	0x40020008
 344:	c0000040 	.word	0xc0000040
 348:	c0000080 	.word	0xc0000080
 34c:	00000219 	.word	0x00000219
 350:	00000251 	.word	0x00000251

00000354 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 354:	f3ef 8310 	mrs	r3, PRIMASK
 358:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 35a:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
 35c:	f3bf 8f5f 	dmb	sy
 360:	4770      	bx	lr

00000362 <atomic_leave_critical>:
 362:	f3bf 8f5f 	dmb	sy
 366:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 368:	f383 8810 	msr	PRIMASK, r3
 36c:	4770      	bx	lr
	...

00000370 <delay_init>:
 370:	b510      	push	{r4, lr}
 372:	4b02      	ldr	r3, [pc, #8]	; (37c <delay_init+0xc>)
 374:	6018      	str	r0, [r3, #0]
 376:	4b02      	ldr	r3, [pc, #8]	; (380 <delay_init+0x10>)
 378:	4798      	blx	r3
 37a:	bd10      	pop	{r4, pc}
 37c:	20000530 	.word	0x20000530
 380:	00000af5 	.word	0x00000af5

00000384 <io_write>:
 384:	b570      	push	{r4, r5, r6, lr}
 386:	0006      	movs	r6, r0
 388:	000c      	movs	r4, r1
 38a:	0015      	movs	r5, r2
 38c:	2800      	cmp	r0, #0
 38e:	d00d      	beq.n	3ac <io_write+0x28>
 390:	0008      	movs	r0, r1
 392:	1e43      	subs	r3, r0, #1
 394:	4198      	sbcs	r0, r3
 396:	b2c0      	uxtb	r0, r0
 398:	2234      	movs	r2, #52	; 0x34
 39a:	4905      	ldr	r1, [pc, #20]	; (3b0 <io_write+0x2c>)
 39c:	4b05      	ldr	r3, [pc, #20]	; (3b4 <io_write+0x30>)
 39e:	4798      	blx	r3
 3a0:	6833      	ldr	r3, [r6, #0]
 3a2:	002a      	movs	r2, r5
 3a4:	0021      	movs	r1, r4
 3a6:	0030      	movs	r0, r6
 3a8:	4798      	blx	r3
 3aa:	bd70      	pop	{r4, r5, r6, pc}
 3ac:	2000      	movs	r0, #0
 3ae:	e7f3      	b.n	398 <io_write+0x14>
 3b0:	00000f58 	.word	0x00000f58
 3b4:	000006ed 	.word	0x000006ed

000003b8 <io_read>:
 3b8:	b570      	push	{r4, r5, r6, lr}
 3ba:	0006      	movs	r6, r0
 3bc:	000c      	movs	r4, r1
 3be:	0015      	movs	r5, r2
 3c0:	2800      	cmp	r0, #0
 3c2:	d00d      	beq.n	3e0 <io_read+0x28>
 3c4:	0008      	movs	r0, r1
 3c6:	1e43      	subs	r3, r0, #1
 3c8:	4198      	sbcs	r0, r3
 3ca:	b2c0      	uxtb	r0, r0
 3cc:	223d      	movs	r2, #61	; 0x3d
 3ce:	4905      	ldr	r1, [pc, #20]	; (3e4 <io_read+0x2c>)
 3d0:	4b05      	ldr	r3, [pc, #20]	; (3e8 <io_read+0x30>)
 3d2:	4798      	blx	r3
 3d4:	6873      	ldr	r3, [r6, #4]
 3d6:	002a      	movs	r2, r5
 3d8:	0021      	movs	r1, r4
 3da:	0030      	movs	r0, r6
 3dc:	4798      	blx	r3
 3de:	bd70      	pop	{r4, r5, r6, pc}
 3e0:	2000      	movs	r0, #0
 3e2:	e7f3      	b.n	3cc <io_read+0x14>
 3e4:	00000f58 	.word	0x00000f58
 3e8:	000006ed 	.word	0x000006ed

000003ec <usart_transmission_complete>:
 3ec:	b510      	push	{r4, lr}
 3ee:	3808      	subs	r0, #8
 3f0:	2300      	movs	r3, #0
 3f2:	6303      	str	r3, [r0, #48]	; 0x30
 3f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 3f6:	2b00      	cmp	r3, #0
 3f8:	d000      	beq.n	3fc <usart_transmission_complete+0x10>
 3fa:	4798      	blx	r3
 3fc:	bd10      	pop	{r4, pc}

000003fe <usart_error>:
 3fe:	b510      	push	{r4, lr}
 400:	3808      	subs	r0, #8
 402:	2300      	movs	r3, #0
 404:	6303      	str	r3, [r0, #48]	; 0x30
 406:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 408:	2b00      	cmp	r3, #0
 40a:	d000      	beq.n	40e <usart_error+0x10>
 40c:	4798      	blx	r3
 40e:	bd10      	pop	{r4, pc}

00000410 <usart_fill_rx_buffer>:
 410:	b510      	push	{r4, lr}
 412:	0004      	movs	r4, r0
 414:	302c      	adds	r0, #44	; 0x2c
 416:	4b04      	ldr	r3, [pc, #16]	; (428 <usart_fill_rx_buffer+0x18>)
 418:	4798      	blx	r3
 41a:	6a23      	ldr	r3, [r4, #32]
 41c:	3c08      	subs	r4, #8
 41e:	2b00      	cmp	r3, #0
 420:	d001      	beq.n	426 <usart_fill_rx_buffer+0x16>
 422:	0020      	movs	r0, r4
 424:	4798      	blx	r3
 426:	bd10      	pop	{r4, pc}
 428:	00000791 	.word	0x00000791

0000042c <usart_async_write>:
 42c:	b570      	push	{r4, r5, r6, lr}
 42e:	0004      	movs	r4, r0
 430:	000e      	movs	r6, r1
 432:	0015      	movs	r5, r2
 434:	2800      	cmp	r0, #0
 436:	d01d      	beq.n	474 <usart_async_write+0x48>
 438:	2900      	cmp	r1, #0
 43a:	d01d      	beq.n	478 <usart_async_write+0x4c>
 43c:	0010      	movs	r0, r2
 43e:	1e43      	subs	r3, r0, #1
 440:	4198      	sbcs	r0, r3
 442:	223c      	movs	r2, #60	; 0x3c
 444:	32ff      	adds	r2, #255	; 0xff
 446:	490f      	ldr	r1, [pc, #60]	; (484 <usart_async_write+0x58>)
 448:	4b0f      	ldr	r3, [pc, #60]	; (488 <usart_async_write+0x5c>)
 44a:	4798      	blx	r3
 44c:	2344      	movs	r3, #68	; 0x44
 44e:	5ae2      	ldrh	r2, [r4, r3]
 450:	3308      	adds	r3, #8
 452:	5ae3      	ldrh	r3, [r4, r3]
 454:	429a      	cmp	r2, r3
 456:	d111      	bne.n	47c <usart_async_write+0x50>
 458:	64a6      	str	r6, [r4, #72]	; 0x48
 45a:	234c      	movs	r3, #76	; 0x4c
 45c:	52e5      	strh	r5, [r4, r3]
 45e:	2200      	movs	r2, #0
 460:	3b08      	subs	r3, #8
 462:	52e2      	strh	r2, [r4, r3]
 464:	3b43      	subs	r3, #67	; 0x43
 466:	6323      	str	r3, [r4, #48]	; 0x30
 468:	0020      	movs	r0, r4
 46a:	3008      	adds	r0, #8
 46c:	4b07      	ldr	r3, [pc, #28]	; (48c <usart_async_write+0x60>)
 46e:	4798      	blx	r3
 470:	0028      	movs	r0, r5
 472:	bd70      	pop	{r4, r5, r6, pc}
 474:	2000      	movs	r0, #0
 476:	e7e4      	b.n	442 <usart_async_write+0x16>
 478:	2000      	movs	r0, #0
 47a:	e7e2      	b.n	442 <usart_async_write+0x16>
 47c:	201c      	movs	r0, #28
 47e:	4240      	negs	r0, r0
 480:	e7f7      	b.n	472 <usart_async_write+0x46>
 482:	46c0      	nop			; (mov r8, r8)
 484:	00000f6c 	.word	0x00000f6c
 488:	000006ed 	.word	0x000006ed
 48c:	00000a05 	.word	0x00000a05

00000490 <usart_process_byte_sent>:
 490:	b570      	push	{r4, r5, r6, lr}
 492:	0004      	movs	r4, r0
 494:	0001      	movs	r1, r0
 496:	3908      	subs	r1, #8
 498:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 49a:	224c      	movs	r2, #76	; 0x4c
 49c:	5a8a      	ldrh	r2, [r1, r2]
 49e:	429a      	cmp	r2, r3
 4a0:	d00c      	beq.n	4bc <usart_process_byte_sent+0x2c>
 4a2:	000a      	movs	r2, r1
 4a4:	6c89      	ldr	r1, [r1, #72]	; 0x48
 4a6:	1c5d      	adds	r5, r3, #1
 4a8:	2044      	movs	r0, #68	; 0x44
 4aa:	5215      	strh	r5, [r2, r0]
 4ac:	5cc9      	ldrb	r1, [r1, r3]
 4ae:	0020      	movs	r0, r4
 4b0:	4b04      	ldr	r3, [pc, #16]	; (4c4 <usart_process_byte_sent+0x34>)
 4b2:	4798      	blx	r3
 4b4:	0020      	movs	r0, r4
 4b6:	4b04      	ldr	r3, [pc, #16]	; (4c8 <usart_process_byte_sent+0x38>)
 4b8:	4798      	blx	r3
 4ba:	bd70      	pop	{r4, r5, r6, pc}
 4bc:	4b03      	ldr	r3, [pc, #12]	; (4cc <usart_process_byte_sent+0x3c>)
 4be:	4798      	blx	r3
 4c0:	e7fb      	b.n	4ba <usart_process_byte_sent+0x2a>
 4c2:	46c0      	nop			; (mov r8, r8)
 4c4:	000009fd 	.word	0x000009fd
 4c8:	00000a05 	.word	0x00000a05
 4cc:	00000a0d 	.word	0x00000a0d

000004d0 <usart_async_read>:
 4d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 4d2:	46ce      	mov	lr, r9
 4d4:	4647      	mov	r7, r8
 4d6:	b580      	push	{r7, lr}
 4d8:	b085      	sub	sp, #20
 4da:	0005      	movs	r5, r0
 4dc:	000e      	movs	r6, r1
 4de:	0017      	movs	r7, r2
 4e0:	2800      	cmp	r0, #0
 4e2:	d015      	beq.n	510 <usart_async_read+0x40>
 4e4:	2900      	cmp	r1, #0
 4e6:	d013      	beq.n	510 <usart_async_read+0x40>
 4e8:	2a00      	cmp	r2, #0
 4ea:	d12a      	bne.n	542 <usart_async_read+0x72>
 4ec:	22ac      	movs	r2, #172	; 0xac
 4ee:	0052      	lsls	r2, r2, #1
 4f0:	4929      	ldr	r1, [pc, #164]	; (598 <usart_async_read+0xc8>)
 4f2:	2000      	movs	r0, #0
 4f4:	4b29      	ldr	r3, [pc, #164]	; (59c <usart_async_read+0xcc>)
 4f6:	4798      	blx	r3
 4f8:	a803      	add	r0, sp, #12
 4fa:	4b29      	ldr	r3, [pc, #164]	; (5a0 <usart_async_read+0xd0>)
 4fc:	4798      	blx	r3
 4fe:	0028      	movs	r0, r5
 500:	3034      	adds	r0, #52	; 0x34
 502:	4b28      	ldr	r3, [pc, #160]	; (5a4 <usart_async_read+0xd4>)
 504:	4798      	blx	r3
 506:	a803      	add	r0, sp, #12
 508:	4b27      	ldr	r3, [pc, #156]	; (5a8 <usart_async_read+0xd8>)
 50a:	4798      	blx	r3
 50c:	2500      	movs	r5, #0
 50e:	e03c      	b.n	58a <usart_async_read+0xba>
 510:	22ac      	movs	r2, #172	; 0xac
 512:	0052      	lsls	r2, r2, #1
 514:	4920      	ldr	r1, [pc, #128]	; (598 <usart_async_read+0xc8>)
 516:	2000      	movs	r0, #0
 518:	4b20      	ldr	r3, [pc, #128]	; (59c <usart_async_read+0xcc>)
 51a:	4798      	blx	r3
 51c:	a803      	add	r0, sp, #12
 51e:	4b20      	ldr	r3, [pc, #128]	; (5a0 <usart_async_read+0xd0>)
 520:	4798      	blx	r3
 522:	3534      	adds	r5, #52	; 0x34
 524:	0028      	movs	r0, r5
 526:	9501      	str	r5, [sp, #4]
 528:	4b1e      	ldr	r3, [pc, #120]	; (5a4 <usart_async_read+0xd4>)
 52a:	4798      	blx	r3
 52c:	4680      	mov	r8, r0
 52e:	a803      	add	r0, sp, #12
 530:	4b1d      	ldr	r3, [pc, #116]	; (5a8 <usart_async_read+0xd8>)
 532:	4798      	blx	r3
 534:	2500      	movs	r5, #0
 536:	4643      	mov	r3, r8
 538:	2b00      	cmp	r3, #0
 53a:	d026      	beq.n	58a <usart_async_read+0xba>
 53c:	2f00      	cmp	r7, #0
 53e:	d116      	bne.n	56e <usart_async_read+0x9e>
 540:	e023      	b.n	58a <usart_async_read+0xba>
 542:	22ac      	movs	r2, #172	; 0xac
 544:	0052      	lsls	r2, r2, #1
 546:	4914      	ldr	r1, [pc, #80]	; (598 <usart_async_read+0xc8>)
 548:	2001      	movs	r0, #1
 54a:	4b14      	ldr	r3, [pc, #80]	; (59c <usart_async_read+0xcc>)
 54c:	4798      	blx	r3
 54e:	a803      	add	r0, sp, #12
 550:	4b13      	ldr	r3, [pc, #76]	; (5a0 <usart_async_read+0xd0>)
 552:	4798      	blx	r3
 554:	3534      	adds	r5, #52	; 0x34
 556:	0028      	movs	r0, r5
 558:	9501      	str	r5, [sp, #4]
 55a:	4b12      	ldr	r3, [pc, #72]	; (5a4 <usart_async_read+0xd4>)
 55c:	4798      	blx	r3
 55e:	4680      	mov	r8, r0
 560:	a803      	add	r0, sp, #12
 562:	4b11      	ldr	r3, [pc, #68]	; (5a8 <usart_async_read+0xd8>)
 564:	4798      	blx	r3
 566:	4643      	mov	r3, r8
 568:	2500      	movs	r5, #0
 56a:	2b00      	cmp	r3, #0
 56c:	d00d      	beq.n	58a <usart_async_read+0xba>
 56e:	2400      	movs	r4, #0
 570:	4b0e      	ldr	r3, [pc, #56]	; (5ac <usart_async_read+0xdc>)
 572:	4699      	mov	r9, r3
 574:	1c65      	adds	r5, r4, #1
 576:	b2ad      	uxth	r5, r5
 578:	1931      	adds	r1, r6, r4
 57a:	9801      	ldr	r0, [sp, #4]
 57c:	47c8      	blx	r9
 57e:	3401      	adds	r4, #1
 580:	4544      	cmp	r4, r8
 582:	d202      	bcs.n	58a <usart_async_read+0xba>
 584:	b2a3      	uxth	r3, r4
 586:	429f      	cmp	r7, r3
 588:	d8f4      	bhi.n	574 <usart_async_read+0xa4>
 58a:	0028      	movs	r0, r5
 58c:	b005      	add	sp, #20
 58e:	bc0c      	pop	{r2, r3}
 590:	4690      	mov	r8, r2
 592:	4699      	mov	r9, r3
 594:	bdf0      	pop	{r4, r5, r6, r7, pc}
 596:	46c0      	nop			; (mov r8, r8)
 598:	00000f6c 	.word	0x00000f6c
 59c:	000006ed 	.word	0x000006ed
 5a0:	00000355 	.word	0x00000355
 5a4:	000007d1 	.word	0x000007d1
 5a8:	00000363 	.word	0x00000363
 5ac:	00000749 	.word	0x00000749

000005b0 <usart_async_init>:
 5b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 5b2:	0004      	movs	r4, r0
 5b4:	000d      	movs	r5, r1
 5b6:	0016      	movs	r6, r2
 5b8:	001f      	movs	r7, r3
 5ba:	2800      	cmp	r0, #0
 5bc:	d026      	beq.n	60c <usart_async_init+0x5c>
 5be:	2900      	cmp	r1, #0
 5c0:	d026      	beq.n	610 <usart_async_init+0x60>
 5c2:	2a00      	cmp	r2, #0
 5c4:	d026      	beq.n	614 <usart_async_init+0x64>
 5c6:	0018      	movs	r0, r3
 5c8:	1e43      	subs	r3, r0, #1
 5ca:	4198      	sbcs	r0, r3
 5cc:	223a      	movs	r2, #58	; 0x3a
 5ce:	4914      	ldr	r1, [pc, #80]	; (620 <usart_async_init+0x70>)
 5d0:	4b14      	ldr	r3, [pc, #80]	; (624 <usart_async_init+0x74>)
 5d2:	4798      	blx	r3
 5d4:	0020      	movs	r0, r4
 5d6:	3034      	adds	r0, #52	; 0x34
 5d8:	003a      	movs	r2, r7
 5da:	0031      	movs	r1, r6
 5dc:	4b12      	ldr	r3, [pc, #72]	; (628 <usart_async_init+0x78>)
 5de:	4798      	blx	r3
 5e0:	2800      	cmp	r0, #0
 5e2:	d119      	bne.n	618 <usart_async_init+0x68>
 5e4:	0020      	movs	r0, r4
 5e6:	3008      	adds	r0, #8
 5e8:	0029      	movs	r1, r5
 5ea:	4b10      	ldr	r3, [pc, #64]	; (62c <usart_async_init+0x7c>)
 5ec:	4798      	blx	r3
 5ee:	2800      	cmp	r0, #0
 5f0:	d10b      	bne.n	60a <usart_async_init+0x5a>
 5f2:	4b0f      	ldr	r3, [pc, #60]	; (630 <usart_async_init+0x80>)
 5f4:	6063      	str	r3, [r4, #4]
 5f6:	4b0f      	ldr	r3, [pc, #60]	; (634 <usart_async_init+0x84>)
 5f8:	6023      	str	r3, [r4, #0]
 5fa:	4b0f      	ldr	r3, [pc, #60]	; (638 <usart_async_init+0x88>)
 5fc:	60a3      	str	r3, [r4, #8]
 5fe:	4b0f      	ldr	r3, [pc, #60]	; (63c <usart_async_init+0x8c>)
 600:	60e3      	str	r3, [r4, #12]
 602:	4b0f      	ldr	r3, [pc, #60]	; (640 <usart_async_init+0x90>)
 604:	6123      	str	r3, [r4, #16]
 606:	4b0f      	ldr	r3, [pc, #60]	; (644 <usart_async_init+0x94>)
 608:	6163      	str	r3, [r4, #20]
 60a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 60c:	2000      	movs	r0, #0
 60e:	e7dd      	b.n	5cc <usart_async_init+0x1c>
 610:	2000      	movs	r0, #0
 612:	e7db      	b.n	5cc <usart_async_init+0x1c>
 614:	2000      	movs	r0, #0
 616:	e7d9      	b.n	5cc <usart_async_init+0x1c>
 618:	200d      	movs	r0, #13
 61a:	4240      	negs	r0, r0
 61c:	e7f5      	b.n	60a <usart_async_init+0x5a>
 61e:	46c0      	nop			; (mov r8, r8)
 620:	00000f6c 	.word	0x00000f6c
 624:	000006ed 	.word	0x000006ed
 628:	000006f5 	.word	0x000006f5
 62c:	0000096d 	.word	0x0000096d
 630:	000004d1 	.word	0x000004d1
 634:	0000042d 	.word	0x0000042d
 638:	00000491 	.word	0x00000491
 63c:	00000411 	.word	0x00000411
 640:	000003ed 	.word	0x000003ed
 644:	000003ff 	.word	0x000003ff

00000648 <usart_async_enable>:
 648:	b510      	push	{r4, lr}
 64a:	0004      	movs	r4, r0
 64c:	1e43      	subs	r3, r0, #1
 64e:	4198      	sbcs	r0, r3
 650:	b2c0      	uxtb	r0, r0
 652:	2261      	movs	r2, #97	; 0x61
 654:	4904      	ldr	r1, [pc, #16]	; (668 <usart_async_enable+0x20>)
 656:	4b05      	ldr	r3, [pc, #20]	; (66c <usart_async_enable+0x24>)
 658:	4798      	blx	r3
 65a:	0020      	movs	r0, r4
 65c:	3008      	adds	r0, #8
 65e:	4b04      	ldr	r3, [pc, #16]	; (670 <usart_async_enable+0x28>)
 660:	4798      	blx	r3
 662:	2000      	movs	r0, #0
 664:	bd10      	pop	{r4, pc}
 666:	46c0      	nop			; (mov r8, r8)
 668:	00000f6c 	.word	0x00000f6c
 66c:	000006ed 	.word	0x000006ed
 670:	000009e9 	.word	0x000009e9

00000674 <usart_async_register_callback>:
 674:	b570      	push	{r4, r5, r6, lr}
 676:	0005      	movs	r5, r0
 678:	000e      	movs	r6, r1
 67a:	0014      	movs	r4, r2
 67c:	1e43      	subs	r3, r0, #1
 67e:	4198      	sbcs	r0, r3
 680:	b2c0      	uxtb	r0, r0
 682:	2283      	movs	r2, #131	; 0x83
 684:	4916      	ldr	r1, [pc, #88]	; (6e0 <usart_async_register_callback+0x6c>)
 686:	4b17      	ldr	r3, [pc, #92]	; (6e4 <usart_async_register_callback+0x70>)
 688:	4798      	blx	r3
 68a:	2e01      	cmp	r6, #1
 68c:	d011      	beq.n	6b2 <usart_async_register_callback+0x3e>
 68e:	2e00      	cmp	r6, #0
 690:	d004      	beq.n	69c <usart_async_register_callback+0x28>
 692:	2e02      	cmp	r6, #2
 694:	d018      	beq.n	6c8 <usart_async_register_callback+0x54>
 696:	200d      	movs	r0, #13
 698:	4240      	negs	r0, r0
 69a:	e009      	b.n	6b0 <usart_async_register_callback+0x3c>
 69c:	62ac      	str	r4, [r5, #40]	; 0x28
 69e:	1e62      	subs	r2, r4, #1
 6a0:	4194      	sbcs	r4, r2
 6a2:	b2e2      	uxtb	r2, r4
 6a4:	0028      	movs	r0, r5
 6a6:	3008      	adds	r0, #8
 6a8:	2101      	movs	r1, #1
 6aa:	4b0f      	ldr	r3, [pc, #60]	; (6e8 <usart_async_register_callback+0x74>)
 6ac:	4798      	blx	r3
 6ae:	2000      	movs	r0, #0
 6b0:	bd70      	pop	{r4, r5, r6, pc}
 6b2:	626c      	str	r4, [r5, #36]	; 0x24
 6b4:	1e62      	subs	r2, r4, #1
 6b6:	4194      	sbcs	r4, r2
 6b8:	b2e2      	uxtb	r2, r4
 6ba:	0028      	movs	r0, r5
 6bc:	3008      	adds	r0, #8
 6be:	2102      	movs	r1, #2
 6c0:	4b09      	ldr	r3, [pc, #36]	; (6e8 <usart_async_register_callback+0x74>)
 6c2:	4798      	blx	r3
 6c4:	2000      	movs	r0, #0
 6c6:	e7f3      	b.n	6b0 <usart_async_register_callback+0x3c>
 6c8:	62ec      	str	r4, [r5, #44]	; 0x2c
 6ca:	1e62      	subs	r2, r4, #1
 6cc:	4194      	sbcs	r4, r2
 6ce:	b2e2      	uxtb	r2, r4
 6d0:	0028      	movs	r0, r5
 6d2:	3008      	adds	r0, #8
 6d4:	2103      	movs	r1, #3
 6d6:	4b04      	ldr	r3, [pc, #16]	; (6e8 <usart_async_register_callback+0x74>)
 6d8:	4798      	blx	r3
 6da:	2000      	movs	r0, #0
 6dc:	e7e8      	b.n	6b0 <usart_async_register_callback+0x3c>
 6de:	46c0      	nop			; (mov r8, r8)
 6e0:	00000f6c 	.word	0x00000f6c
 6e4:	000006ed 	.word	0x000006ed
 6e8:	00000a15 	.word	0x00000a15

000006ec <assert>:
 6ec:	2800      	cmp	r0, #0
 6ee:	d100      	bne.n	6f2 <assert+0x6>
 6f0:	be00      	bkpt	0x0000
 6f2:	4770      	bx	lr

000006f4 <ringbuffer_init>:
 6f4:	b570      	push	{r4, r5, r6, lr}
 6f6:	0004      	movs	r4, r0
 6f8:	000e      	movs	r6, r1
 6fa:	0015      	movs	r5, r2
 6fc:	2800      	cmp	r0, #0
 6fe:	d00b      	beq.n	718 <ringbuffer_init+0x24>
 700:	2900      	cmp	r1, #0
 702:	d018      	beq.n	736 <ringbuffer_init+0x42>
 704:	2001      	movs	r0, #1
 706:	2a00      	cmp	r2, #0
 708:	d107      	bne.n	71a <ringbuffer_init+0x26>
 70a:	2228      	movs	r2, #40	; 0x28
 70c:	490c      	ldr	r1, [pc, #48]	; (740 <ringbuffer_init+0x4c>)
 70e:	2000      	movs	r0, #0
 710:	4b0c      	ldr	r3, [pc, #48]	; (744 <ringbuffer_init+0x50>)
 712:	4798      	blx	r3
 714:	1e6b      	subs	r3, r5, #1
 716:	e007      	b.n	728 <ringbuffer_init+0x34>
 718:	2000      	movs	r0, #0
 71a:	2228      	movs	r2, #40	; 0x28
 71c:	4908      	ldr	r1, [pc, #32]	; (740 <ringbuffer_init+0x4c>)
 71e:	4b09      	ldr	r3, [pc, #36]	; (744 <ringbuffer_init+0x50>)
 720:	4798      	blx	r3
 722:	1e6b      	subs	r3, r5, #1
 724:	422b      	tst	r3, r5
 726:	d108      	bne.n	73a <ringbuffer_init+0x46>
 728:	6063      	str	r3, [r4, #4]
 72a:	2300      	movs	r3, #0
 72c:	60a3      	str	r3, [r4, #8]
 72e:	60e3      	str	r3, [r4, #12]
 730:	6026      	str	r6, [r4, #0]
 732:	2000      	movs	r0, #0
 734:	bd70      	pop	{r4, r5, r6, pc}
 736:	2000      	movs	r0, #0
 738:	e7ef      	b.n	71a <ringbuffer_init+0x26>
 73a:	200d      	movs	r0, #13
 73c:	4240      	negs	r0, r0
 73e:	e7f9      	b.n	734 <ringbuffer_init+0x40>
 740:	00000f8c 	.word	0x00000f8c
 744:	000006ed 	.word	0x000006ed

00000748 <ringbuffer_get>:
 748:	b570      	push	{r4, r5, r6, lr}
 74a:	0004      	movs	r4, r0
 74c:	000d      	movs	r5, r1
 74e:	2800      	cmp	r0, #0
 750:	d015      	beq.n	77e <ringbuffer_get+0x36>
 752:	0008      	movs	r0, r1
 754:	1e43      	subs	r3, r0, #1
 756:	4198      	sbcs	r0, r3
 758:	b2c0      	uxtb	r0, r0
 75a:	2240      	movs	r2, #64	; 0x40
 75c:	490a      	ldr	r1, [pc, #40]	; (788 <ringbuffer_get+0x40>)
 75e:	4b0b      	ldr	r3, [pc, #44]	; (78c <ringbuffer_get+0x44>)
 760:	4798      	blx	r3
 762:	68a3      	ldr	r3, [r4, #8]
 764:	68e2      	ldr	r2, [r4, #12]
 766:	429a      	cmp	r2, r3
 768:	d00b      	beq.n	782 <ringbuffer_get+0x3a>
 76a:	6862      	ldr	r2, [r4, #4]
 76c:	4013      	ands	r3, r2
 76e:	6822      	ldr	r2, [r4, #0]
 770:	5cd3      	ldrb	r3, [r2, r3]
 772:	702b      	strb	r3, [r5, #0]
 774:	68a3      	ldr	r3, [r4, #8]
 776:	3301      	adds	r3, #1
 778:	60a3      	str	r3, [r4, #8]
 77a:	2000      	movs	r0, #0
 77c:	bd70      	pop	{r4, r5, r6, pc}
 77e:	2000      	movs	r0, #0
 780:	e7eb      	b.n	75a <ringbuffer_get+0x12>
 782:	200a      	movs	r0, #10
 784:	4240      	negs	r0, r0
 786:	e7f9      	b.n	77c <ringbuffer_get+0x34>
 788:	00000f8c 	.word	0x00000f8c
 78c:	000006ed 	.word	0x000006ed

00000790 <ringbuffer_put>:
 790:	b570      	push	{r4, r5, r6, lr}
 792:	0004      	movs	r4, r0
 794:	000d      	movs	r5, r1
 796:	1e43      	subs	r3, r0, #1
 798:	4198      	sbcs	r0, r3
 79a:	b2c0      	uxtb	r0, r0
 79c:	2251      	movs	r2, #81	; 0x51
 79e:	490a      	ldr	r1, [pc, #40]	; (7c8 <ringbuffer_put+0x38>)
 7a0:	4b0a      	ldr	r3, [pc, #40]	; (7cc <ringbuffer_put+0x3c>)
 7a2:	4798      	blx	r3
 7a4:	6863      	ldr	r3, [r4, #4]
 7a6:	68e2      	ldr	r2, [r4, #12]
 7a8:	4013      	ands	r3, r2
 7aa:	6822      	ldr	r2, [r4, #0]
 7ac:	54d5      	strb	r5, [r2, r3]
 7ae:	68e3      	ldr	r3, [r4, #12]
 7b0:	6861      	ldr	r1, [r4, #4]
 7b2:	68a2      	ldr	r2, [r4, #8]
 7b4:	1a9a      	subs	r2, r3, r2
 7b6:	428a      	cmp	r2, r1
 7b8:	d901      	bls.n	7be <ringbuffer_put+0x2e>
 7ba:	1a59      	subs	r1, r3, r1
 7bc:	60a1      	str	r1, [r4, #8]
 7be:	3301      	adds	r3, #1
 7c0:	60e3      	str	r3, [r4, #12]
 7c2:	2000      	movs	r0, #0
 7c4:	bd70      	pop	{r4, r5, r6, pc}
 7c6:	46c0      	nop			; (mov r8, r8)
 7c8:	00000f8c 	.word	0x00000f8c
 7cc:	000006ed 	.word	0x000006ed

000007d0 <ringbuffer_num>:
 7d0:	b510      	push	{r4, lr}
 7d2:	0004      	movs	r4, r0
 7d4:	1e43      	subs	r3, r0, #1
 7d6:	4198      	sbcs	r0, r3
 7d8:	b2c0      	uxtb	r0, r0
 7da:	2267      	movs	r2, #103	; 0x67
 7dc:	4903      	ldr	r1, [pc, #12]	; (7ec <ringbuffer_num+0x1c>)
 7de:	4b04      	ldr	r3, [pc, #16]	; (7f0 <ringbuffer_num+0x20>)
 7e0:	4798      	blx	r3
 7e2:	68e0      	ldr	r0, [r4, #12]
 7e4:	68a3      	ldr	r3, [r4, #8]
 7e6:	1ac0      	subs	r0, r0, r3
 7e8:	bd10      	pop	{r4, pc}
 7ea:	46c0      	nop			; (mov r8, r8)
 7ec:	00000f8c 	.word	0x00000f8c
 7f0:	000006ed 	.word	0x000006ed

000007f4 <_init_chip>:
 7f4:	b510      	push	{r4, lr}
 7f6:	4b08      	ldr	r3, [pc, #32]	; (818 <_init_chip+0x24>)
 7f8:	685a      	ldr	r2, [r3, #4]
 7fa:	605a      	str	r2, [r3, #4]
 7fc:	4b07      	ldr	r3, [pc, #28]	; (81c <_init_chip+0x28>)
 7fe:	4798      	blx	r3
 800:	4b07      	ldr	r3, [pc, #28]	; (820 <_init_chip+0x2c>)
 802:	4798      	blx	r3
 804:	4b07      	ldr	r3, [pc, #28]	; (824 <_init_chip+0x30>)
 806:	4798      	blx	r3
 808:	4b07      	ldr	r3, [pc, #28]	; (828 <_init_chip+0x34>)
 80a:	4798      	blx	r3
 80c:	20ff      	movs	r0, #255	; 0xff
 80e:	4b07      	ldr	r3, [pc, #28]	; (82c <_init_chip+0x38>)
 810:	4798      	blx	r3
 812:	4b07      	ldr	r3, [pc, #28]	; (830 <_init_chip+0x3c>)
 814:	4798      	blx	r3
 816:	bd10      	pop	{r4, pc}
 818:	41004000 	.word	0x41004000
 81c:	00000875 	.word	0x00000875
 820:	0000088d 	.word	0x0000088d
 824:	00000869 	.word	0x00000869
 828:	000008cd 	.word	0x000008cd
 82c:	00000845 	.word	0x00000845
 830:	00000835 	.word	0x00000835

00000834 <_div_init>:
 834:	2290      	movs	r2, #144	; 0x90
 836:	05d2      	lsls	r2, r2, #23
 838:	7813      	ldrb	r3, [r2, #0]
 83a:	2102      	movs	r1, #2
 83c:	438b      	bics	r3, r1
 83e:	7013      	strb	r3, [r2, #0]
 840:	4770      	bx	lr
	...

00000844 <_gclk_init_generators_by_fref>:
 844:	07c3      	lsls	r3, r0, #31
 846:	d507      	bpl.n	858 <_gclk_init_generators_by_fref+0x14>
 848:	4a04      	ldr	r2, [pc, #16]	; (85c <_gclk_init_generators_by_fref+0x18>)
 84a:	4b05      	ldr	r3, [pc, #20]	; (860 <_gclk_init_generators_by_fref+0x1c>)
 84c:	621a      	str	r2, [r3, #32]
 84e:	0019      	movs	r1, r3
 850:	4a04      	ldr	r2, [pc, #16]	; (864 <_gclk_init_generators_by_fref+0x20>)
 852:	684b      	ldr	r3, [r1, #4]
 854:	4213      	tst	r3, r2
 856:	d1fc      	bne.n	852 <_gclk_init_generators_by_fref+0xe>
 858:	4770      	bx	lr
 85a:	46c0      	nop			; (mov r8, r8)
 85c:	00010106 	.word	0x00010106
 860:	40001c00 	.word	0x40001c00
 864:	000007fd 	.word	0x000007fd

00000868 <_mclk_init>:
 868:	2201      	movs	r2, #1
 86a:	4b01      	ldr	r3, [pc, #4]	; (870 <_mclk_init+0x8>)
 86c:	711a      	strb	r2, [r3, #4]
 86e:	4770      	bx	lr
 870:	40000800 	.word	0x40000800

00000874 <_osc32kctrl_init_sources>:
 874:	4b04      	ldr	r3, [pc, #16]	; (888 <_osc32kctrl_init_sources+0x14>)
 876:	69da      	ldr	r2, [r3, #28]
 878:	21f8      	movs	r1, #248	; 0xf8
 87a:	0149      	lsls	r1, r1, #5
 87c:	400a      	ands	r2, r1
 87e:	61da      	str	r2, [r3, #28]
 880:	2201      	movs	r2, #1
 882:	611a      	str	r2, [r3, #16]
 884:	4770      	bx	lr
 886:	46c0      	nop			; (mov r8, r8)
 888:	40001400 	.word	0x40001400

0000088c <_oscctrl_init_sources>:
 88c:	4b0e      	ldr	r3, [pc, #56]	; (8c8 <_oscctrl_init_sources+0x3c>)
 88e:	2202      	movs	r2, #2
 890:	751a      	strb	r2, [r3, #20]
 892:	3209      	adds	r2, #9
 894:	755a      	strb	r2, [r3, #21]
 896:	0019      	movs	r1, r3
 898:	3a07      	subs	r2, #7
 89a:	698b      	ldr	r3, [r1, #24]
 89c:	421a      	tst	r2, r3
 89e:	d1fc      	bne.n	89a <_oscctrl_init_sources+0xe>
 8a0:	4909      	ldr	r1, [pc, #36]	; (8c8 <_oscctrl_init_sources+0x3c>)
 8a2:	2204      	movs	r2, #4
 8a4:	698b      	ldr	r3, [r1, #24]
 8a6:	421a      	tst	r2, r3
 8a8:	d1fc      	bne.n	8a4 <_oscctrl_init_sources+0x18>
 8aa:	2207      	movs	r2, #7
 8ac:	4b06      	ldr	r3, [pc, #24]	; (8c8 <_oscctrl_init_sources+0x3c>)
 8ae:	759a      	strb	r2, [r3, #22]
 8b0:	0019      	movs	r1, r3
 8b2:	3209      	adds	r2, #9
 8b4:	68cb      	ldr	r3, [r1, #12]
 8b6:	421a      	tst	r2, r3
 8b8:	d0fc      	beq.n	8b4 <_oscctrl_init_sources+0x28>
 8ba:	4a03      	ldr	r2, [pc, #12]	; (8c8 <_oscctrl_init_sources+0x3c>)
 8bc:	7d13      	ldrb	r3, [r2, #20]
 8be:	2180      	movs	r1, #128	; 0x80
 8c0:	430b      	orrs	r3, r1
 8c2:	7513      	strb	r3, [r2, #20]
 8c4:	4770      	bx	lr
 8c6:	46c0      	nop			; (mov r8, r8)
 8c8:	40001000 	.word	0x40001000

000008cc <_oscctrl_init_referenced_generators>:
 8cc:	4770      	bx	lr
	...

000008d0 <_usart_init>:
 8d0:	b510      	push	{r4, lr}
 8d2:	0004      	movs	r4, r0
 8d4:	4b1f      	ldr	r3, [pc, #124]	; (954 <_usart_init+0x84>)
 8d6:	18c3      	adds	r3, r0, r3
 8d8:	0a9b      	lsrs	r3, r3, #10
 8da:	b2db      	uxtb	r3, r3
 8dc:	2b04      	cmp	r3, #4
 8de:	d004      	beq.n	8ea <_usart_init+0x1a>
 8e0:	4a1d      	ldr	r2, [pc, #116]	; (958 <_usart_init+0x88>)
 8e2:	491e      	ldr	r1, [pc, #120]	; (95c <_usart_init+0x8c>)
 8e4:	2000      	movs	r0, #0
 8e6:	4b1e      	ldr	r3, [pc, #120]	; (960 <_usart_init+0x90>)
 8e8:	4798      	blx	r3
 8ea:	69e3      	ldr	r3, [r4, #28]
 8ec:	07db      	lsls	r3, r3, #31
 8ee:	d418      	bmi.n	922 <_usart_init+0x52>
 8f0:	2203      	movs	r2, #3
 8f2:	69e3      	ldr	r3, [r4, #28]
 8f4:	421a      	tst	r2, r3
 8f6:	d1fc      	bne.n	8f2 <_usart_init+0x22>
 8f8:	6823      	ldr	r3, [r4, #0]
 8fa:	079b      	lsls	r3, r3, #30
 8fc:	d50b      	bpl.n	916 <_usart_init+0x46>
 8fe:	6823      	ldr	r3, [r4, #0]
 900:	2202      	movs	r2, #2
 902:	4393      	bics	r3, r2
 904:	6023      	str	r3, [r4, #0]
 906:	3201      	adds	r2, #1
 908:	69e3      	ldr	r3, [r4, #28]
 90a:	421a      	tst	r2, r3
 90c:	d1fc      	bne.n	908 <_usart_init+0x38>
 90e:	2202      	movs	r2, #2
 910:	69e3      	ldr	r3, [r4, #28]
 912:	421a      	tst	r2, r3
 914:	d1fc      	bne.n	910 <_usart_init+0x40>
 916:	2305      	movs	r3, #5
 918:	6023      	str	r3, [r4, #0]
 91a:	2203      	movs	r2, #3
 91c:	69e3      	ldr	r3, [r4, #28]
 91e:	421a      	tst	r2, r3
 920:	d1fc      	bne.n	91c <_usart_init+0x4c>
 922:	2201      	movs	r2, #1
 924:	69e3      	ldr	r3, [r4, #28]
 926:	421a      	tst	r2, r3
 928:	d1fc      	bne.n	924 <_usart_init+0x54>
 92a:	4b0e      	ldr	r3, [pc, #56]	; (964 <_usart_init+0x94>)
 92c:	6023      	str	r3, [r4, #0]
 92e:	2203      	movs	r2, #3
 930:	69e3      	ldr	r3, [r4, #28]
 932:	421a      	tst	r2, r3
 934:	d1fc      	bne.n	930 <_usart_init+0x60>
 936:	23c0      	movs	r3, #192	; 0xc0
 938:	029b      	lsls	r3, r3, #10
 93a:	6063      	str	r3, [r4, #4]
 93c:	2207      	movs	r2, #7
 93e:	69e3      	ldr	r3, [r4, #28]
 940:	421a      	tst	r2, r3
 942:	d1fc      	bne.n	93e <_usart_init+0x6e>
 944:	4b08      	ldr	r3, [pc, #32]	; (968 <_usart_init+0x98>)
 946:	81a3      	strh	r3, [r4, #12]
 948:	2300      	movs	r3, #0
 94a:	73a3      	strb	r3, [r4, #14]
 94c:	2230      	movs	r2, #48	; 0x30
 94e:	54a3      	strb	r3, [r4, r2]
 950:	2000      	movs	r0, #0
 952:	bd10      	pop	{r4, pc}
 954:	bdfffc00 	.word	0xbdfffc00
 958:	0000025e 	.word	0x0000025e
 95c:	00000fb0 	.word	0x00000fb0
 960:	000006ed 	.word	0x000006ed
 964:	40100004 	.word	0x40100004
 968:	fffff62b 	.word	0xfffff62b

0000096c <_usart_async_init>:
 96c:	b570      	push	{r4, r5, r6, lr}
 96e:	0005      	movs	r5, r0
 970:	000c      	movs	r4, r1
 972:	1e43      	subs	r3, r0, #1
 974:	4198      	sbcs	r0, r3
 976:	b2c0      	uxtb	r0, r0
 978:	22c4      	movs	r2, #196	; 0xc4
 97a:	4914      	ldr	r1, [pc, #80]	; (9cc <_usart_async_init+0x60>)
 97c:	4b14      	ldr	r3, [pc, #80]	; (9d0 <_usart_async_init+0x64>)
 97e:	4798      	blx	r3
 980:	0020      	movs	r0, r4
 982:	4b14      	ldr	r3, [pc, #80]	; (9d4 <_usart_async_init+0x68>)
 984:	4798      	blx	r3
 986:	2800      	cmp	r0, #0
 988:	d000      	beq.n	98c <_usart_async_init+0x20>
 98a:	bd70      	pop	{r4, r5, r6, pc}
 98c:	61ac      	str	r4, [r5, #24]
 98e:	4b12      	ldr	r3, [pc, #72]	; (9d8 <_usart_async_init+0x6c>)
 990:	429c      	cmp	r4, r3
 992:	d017      	beq.n	9c4 <_usart_async_init+0x58>
 994:	4b11      	ldr	r3, [pc, #68]	; (9dc <_usart_async_init+0x70>)
 996:	469c      	mov	ip, r3
 998:	4464      	add	r4, ip
 99a:	0aa4      	lsrs	r4, r4, #10
 99c:	3409      	adds	r4, #9
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
 99e:	b2e3      	uxtb	r3, r4
 9a0:	0622      	lsls	r2, r4, #24
 9a2:	d4f2      	bmi.n	98a <_usart_async_init+0x1e>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 9a4:	221f      	movs	r2, #31
 9a6:	401a      	ands	r2, r3
 9a8:	2301      	movs	r3, #1
 9aa:	4093      	lsls	r3, r2
 9ac:	4a0c      	ldr	r2, [pc, #48]	; (9e0 <_usart_async_init+0x74>)
 9ae:	2180      	movs	r1, #128	; 0x80
 9b0:	5053      	str	r3, [r2, r1]
  __ASM volatile ("dsb 0xF":::"memory");
 9b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 9b6:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 9ba:	3101      	adds	r1, #1
 9bc:	31ff      	adds	r1, #255	; 0xff
 9be:	5053      	str	r3, [r2, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 9c0:	6013      	str	r3, [r2, #0]
 9c2:	e7e2      	b.n	98a <_usart_async_init+0x1e>
 9c4:	4b07      	ldr	r3, [pc, #28]	; (9e4 <_usart_async_init+0x78>)
 9c6:	601d      	str	r5, [r3, #0]
 9c8:	230d      	movs	r3, #13
 9ca:	e7eb      	b.n	9a4 <_usart_async_init+0x38>
 9cc:	00000fb0 	.word	0x00000fb0
 9d0:	000006ed 	.word	0x000006ed
 9d4:	000008d1 	.word	0x000008d1
 9d8:	42001400 	.word	0x42001400
 9dc:	bdfffc00 	.word	0xbdfffc00
 9e0:	e000e100 	.word	0xe000e100
 9e4:	20000534 	.word	0x20000534

000009e8 <_usart_async_enable>:
 9e8:	6982      	ldr	r2, [r0, #24]
 9ea:	6813      	ldr	r3, [r2, #0]
 9ec:	2102      	movs	r1, #2
 9ee:	430b      	orrs	r3, r1
 9f0:	6013      	str	r3, [r2, #0]
 9f2:	3101      	adds	r1, #1
 9f4:	69d3      	ldr	r3, [r2, #28]
 9f6:	4219      	tst	r1, r3
 9f8:	d1fc      	bne.n	9f4 <_usart_async_enable+0xc>
 9fa:	4770      	bx	lr

000009fc <_usart_async_write_byte>:
 9fc:	6983      	ldr	r3, [r0, #24]
 9fe:	b289      	uxth	r1, r1
 a00:	8519      	strh	r1, [r3, #40]	; 0x28
 a02:	4770      	bx	lr

00000a04 <_usart_async_enable_byte_sent_irq>:
 a04:	6983      	ldr	r3, [r0, #24]
 a06:	2201      	movs	r2, #1
 a08:	759a      	strb	r2, [r3, #22]
 a0a:	4770      	bx	lr

00000a0c <_usart_async_enable_tx_done_irq>:
 a0c:	6983      	ldr	r3, [r0, #24]
 a0e:	2202      	movs	r2, #2
 a10:	759a      	strb	r2, [r3, #22]
 a12:	4770      	bx	lr

00000a14 <_usart_async_set_irq_state>:
 a14:	b570      	push	{r4, r5, r6, lr}
 a16:	0004      	movs	r4, r0
 a18:	000d      	movs	r5, r1
 a1a:	0016      	movs	r6, r2
 a1c:	1e43      	subs	r3, r0, #1
 a1e:	4198      	sbcs	r0, r3
 a20:	b2c0      	uxtb	r0, r0
 a22:	4a16      	ldr	r2, [pc, #88]	; (a7c <_usart_async_set_irq_state+0x68>)
 a24:	4916      	ldr	r1, [pc, #88]	; (a80 <_usart_async_set_irq_state+0x6c>)
 a26:	4b17      	ldr	r3, [pc, #92]	; (a84 <_usart_async_set_irq_state+0x70>)
 a28:	4798      	blx	r3
 a2a:	2302      	movs	r3, #2
 a2c:	002a      	movs	r2, r5
 a2e:	439a      	bics	r2, r3
 a30:	d10e      	bne.n	a50 <_usart_async_set_irq_state+0x3c>
 a32:	69a3      	ldr	r3, [r4, #24]
 a34:	2e00      	cmp	r6, #0
 a36:	d105      	bne.n	a44 <_usart_async_set_irq_state+0x30>
 a38:	2201      	movs	r2, #1
 a3a:	751a      	strb	r2, [r3, #20]
 a3c:	69a3      	ldr	r3, [r4, #24]
 a3e:	3201      	adds	r2, #1
 a40:	751a      	strb	r2, [r3, #20]
 a42:	bd70      	pop	{r4, r5, r6, pc}
 a44:	2201      	movs	r2, #1
 a46:	759a      	strb	r2, [r3, #22]
 a48:	69a3      	ldr	r3, [r4, #24]
 a4a:	3201      	adds	r2, #1
 a4c:	759a      	strb	r2, [r3, #22]
 a4e:	e7f8      	b.n	a42 <_usart_async_set_irq_state+0x2e>
 a50:	2d01      	cmp	r5, #1
 a52:	d007      	beq.n	a64 <_usart_async_set_irq_state+0x50>
 a54:	2d03      	cmp	r5, #3
 a56:	d1f4      	bne.n	a42 <_usart_async_set_irq_state+0x2e>
 a58:	69a3      	ldr	r3, [r4, #24]
 a5a:	2e00      	cmp	r6, #0
 a5c:	d00b      	beq.n	a76 <_usart_async_set_irq_state+0x62>
 a5e:	2280      	movs	r2, #128	; 0x80
 a60:	759a      	strb	r2, [r3, #22]
 a62:	e7ee      	b.n	a42 <_usart_async_set_irq_state+0x2e>
 a64:	69a3      	ldr	r3, [r4, #24]
 a66:	2e00      	cmp	r6, #0
 a68:	d102      	bne.n	a70 <_usart_async_set_irq_state+0x5c>
 a6a:	2204      	movs	r2, #4
 a6c:	751a      	strb	r2, [r3, #20]
 a6e:	e7e8      	b.n	a42 <_usart_async_set_irq_state+0x2e>
 a70:	2204      	movs	r2, #4
 a72:	759a      	strb	r2, [r3, #22]
 a74:	e7e5      	b.n	a42 <_usart_async_set_irq_state+0x2e>
 a76:	2280      	movs	r2, #128	; 0x80
 a78:	751a      	strb	r2, [r3, #20]
 a7a:	e7e2      	b.n	a42 <_usart_async_set_irq_state+0x2e>
 a7c:	0000021e 	.word	0x0000021e
 a80:	00000fb0 	.word	0x00000fb0
 a84:	000006ed 	.word	0x000006ed

00000a88 <SERCOM4_Handler>:
 a88:	b510      	push	{r4, lr}
 a8a:	4b19      	ldr	r3, [pc, #100]	; (af0 <SERCOM4_Handler+0x68>)
 a8c:	6818      	ldr	r0, [r3, #0]
 a8e:	6984      	ldr	r4, [r0, #24]
 a90:	7e23      	ldrb	r3, [r4, #24]
 a92:	07db      	lsls	r3, r3, #31
 a94:	d502      	bpl.n	a9c <SERCOM4_Handler+0x14>
 a96:	7da3      	ldrb	r3, [r4, #22]
 a98:	07db      	lsls	r3, r3, #31
 a9a:	d40f      	bmi.n	abc <SERCOM4_Handler+0x34>
 a9c:	7e23      	ldrb	r3, [r4, #24]
 a9e:	079b      	lsls	r3, r3, #30
 aa0:	d502      	bpl.n	aa8 <SERCOM4_Handler+0x20>
 aa2:	7da3      	ldrb	r3, [r4, #22]
 aa4:	079b      	lsls	r3, r3, #30
 aa6:	d40e      	bmi.n	ac6 <SERCOM4_Handler+0x3e>
 aa8:	7e23      	ldrb	r3, [r4, #24]
 aaa:	075b      	lsls	r3, r3, #29
 aac:	d515      	bpl.n	ada <SERCOM4_Handler+0x52>
 aae:	8b62      	ldrh	r2, [r4, #26]
 ab0:	2337      	movs	r3, #55	; 0x37
 ab2:	421a      	tst	r2, r3
 ab4:	d00c      	beq.n	ad0 <SERCOM4_Handler+0x48>
 ab6:	3348      	adds	r3, #72	; 0x48
 ab8:	8363      	strh	r3, [r4, #26]
 aba:	bd10      	pop	{r4, pc}
 abc:	2301      	movs	r3, #1
 abe:	7523      	strb	r3, [r4, #20]
 ac0:	6803      	ldr	r3, [r0, #0]
 ac2:	4798      	blx	r3
 ac4:	e7f9      	b.n	aba <SERCOM4_Handler+0x32>
 ac6:	2302      	movs	r3, #2
 ac8:	7523      	strb	r3, [r4, #20]
 aca:	6883      	ldr	r3, [r0, #8]
 acc:	4798      	blx	r3
 ace:	e7f4      	b.n	aba <SERCOM4_Handler+0x32>
 ad0:	8d21      	ldrh	r1, [r4, #40]	; 0x28
 ad2:	b2c9      	uxtb	r1, r1
 ad4:	6843      	ldr	r3, [r0, #4]
 ad6:	4798      	blx	r3
 ad8:	e7ef      	b.n	aba <SERCOM4_Handler+0x32>
 ada:	7e23      	ldrb	r3, [r4, #24]
 adc:	09db      	lsrs	r3, r3, #7
 ade:	d0ec      	beq.n	aba <SERCOM4_Handler+0x32>
 ae0:	2380      	movs	r3, #128	; 0x80
 ae2:	7623      	strb	r3, [r4, #24]
 ae4:	68c3      	ldr	r3, [r0, #12]
 ae6:	4798      	blx	r3
 ae8:	8b63      	ldrh	r3, [r4, #26]
 aea:	b29b      	uxth	r3, r3
 aec:	8363      	strh	r3, [r4, #26]
 aee:	e7e4      	b.n	aba <SERCOM4_Handler+0x32>
 af0:	20000534 	.word	0x20000534

00000af4 <_delay_init>:
 af4:	4b02      	ldr	r3, [pc, #8]	; (b00 <_delay_init+0xc>)
 af6:	4a03      	ldr	r2, [pc, #12]	; (b04 <_delay_init+0x10>)
 af8:	605a      	str	r2, [r3, #4]
 afa:	2205      	movs	r2, #5
 afc:	601a      	str	r2, [r3, #0]
 afe:	4770      	bx	lr
 b00:	e000e010 	.word	0xe000e010
 b04:	00ffffff 	.word	0x00ffffff

00000b08 <serial_tx_cb>:

static void serial_tx_cb(const struct usart_async_descriptor *const io_descr) {
	
	// Do nothing when tx interrupt is called
	
}
 b08:	4770      	bx	lr
	...

00000b0c <serial_rx_cb>:
{
 b0c:	b510      	push	{r4, lr}
 b0e:	b082      	sub	sp, #8
	count = io_read(&USART_0.io, &ch, 1);
 b10:	2201      	movs	r2, #1
 b12:	466b      	mov	r3, sp
 b14:	1dd9      	adds	r1, r3, #7
 b16:	481f      	ldr	r0, [pc, #124]	; (b94 <serial_rx_cb+0x88>)
 b18:	4b1f      	ldr	r3, [pc, #124]	; (b98 <serial_rx_cb+0x8c>)
 b1a:	4798      	blx	r3
 b1c:	b2c1      	uxtb	r1, r0
	if(serial_receiving == 0)
 b1e:	4b1f      	ldr	r3, [pc, #124]	; (b9c <serial_rx_cb+0x90>)
 b20:	781b      	ldrb	r3, [r3, #0]
 b22:	2b00      	cmp	r3, #0
 b24:	d112      	bne.n	b4c <serial_rx_cb+0x40>
		if (ch != '\r' && ch != '\n')
 b26:	466b      	mov	r3, sp
 b28:	79da      	ldrb	r2, [r3, #7]
 b2a:	2a0d      	cmp	r2, #13
 b2c:	d024      	beq.n	b78 <serial_rx_cb+0x6c>
 b2e:	2a0a      	cmp	r2, #10
 b30:	d022      	beq.n	b78 <serial_rx_cb+0x6c>
			serial_receiving =1;
 b32:	4b1a      	ldr	r3, [pc, #104]	; (b9c <serial_rx_cb+0x90>)
 b34:	2001      	movs	r0, #1
 b36:	7018      	strb	r0, [r3, #0]
			serial_received_bytes_counter = 0;
 b38:	2000      	movs	r0, #0
 b3a:	7058      	strb	r0, [r3, #1]
			rx_buffer[serial_received_bytes_counter] = ch;
 b3c:	7858      	ldrb	r0, [r3, #1]
 b3e:	1818      	adds	r0, r3, r0
 b40:	7102      	strb	r2, [r0, #4]
			serial_received_bytes_counter += count;
 b42:	7858      	ldrb	r0, [r3, #1]
 b44:	1840      	adds	r0, r0, r1
 b46:	b2c0      	uxtb	r0, r0
 b48:	7058      	strb	r0, [r3, #1]
 b4a:	e015      	b.n	b78 <serial_rx_cb+0x6c>
		rx_buffer[serial_received_bytes_counter] = ch;
 b4c:	4b13      	ldr	r3, [pc, #76]	; (b9c <serial_rx_cb+0x90>)
 b4e:	785a      	ldrb	r2, [r3, #1]
 b50:	4668      	mov	r0, sp
 b52:	79c4      	ldrb	r4, [r0, #7]
 b54:	189a      	adds	r2, r3, r2
 b56:	7114      	strb	r4, [r2, #4]
		serial_received_bytes_counter += count;
 b58:	7858      	ldrb	r0, [r3, #1]
 b5a:	1840      	adds	r0, r0, r1
 b5c:	b2c0      	uxtb	r0, r0
 b5e:	7058      	strb	r0, [r3, #1]
			if (ch == '\r' || ch == '\n')
 b60:	2c0d      	cmp	r4, #13
 b62:	d00b      	beq.n	b7c <serial_rx_cb+0x70>
 b64:	2c0a      	cmp	r4, #10
 b66:	d009      	beq.n	b7c <serial_rx_cb+0x70>
		if(serial_received_bytes_counter >= SERIAL_BUF_SIZE)
 b68:	4b0c      	ldr	r3, [pc, #48]	; (b9c <serial_rx_cb+0x90>)
 b6a:	785b      	ldrb	r3, [r3, #1]
 b6c:	b2db      	uxtb	r3, r3
 b6e:	2bc7      	cmp	r3, #199	; 0xc7
 b70:	d902      	bls.n	b78 <serial_rx_cb+0x6c>
		serial_received_bytes_counter = 0;
 b72:	2200      	movs	r2, #0
 b74:	4b09      	ldr	r3, [pc, #36]	; (b9c <serial_rx_cb+0x90>)
 b76:	705a      	strb	r2, [r3, #1]
}
 b78:	b002      	add	sp, #8
 b7a:	bd10      	pop	{r4, pc}
				serial_complete = 1;
 b7c:	4a08      	ldr	r2, [pc, #32]	; (ba0 <serial_rx_cb+0x94>)
 b7e:	2101      	movs	r1, #1
 b80:	234c      	movs	r3, #76	; 0x4c
 b82:	54d1      	strb	r1, [r2, r3]
				total_bytes = serial_received_bytes_counter - 2;
 b84:	4b05      	ldr	r3, [pc, #20]	; (b9c <serial_rx_cb+0x90>)
 b86:	785b      	ldrb	r3, [r3, #1]
 b88:	3b02      	subs	r3, #2
 b8a:	b2db      	uxtb	r3, r3
 b8c:	314c      	adds	r1, #76	; 0x4c
 b8e:	5453      	strb	r3, [r2, r1]
 b90:	e7ea      	b.n	b68 <serial_rx_cb+0x5c>
 b92:	46c0      	nop			; (mov r8, r8)
 b94:	20000608 	.word	0x20000608
 b98:	000003b9 	.word	0x000003b9
 b9c:	20000538 	.word	0x20000538
 ba0:	200005b8 	.word	0x200005b8

00000ba4 <uart_init>:

void uart_init(){
 ba4:	b570      	push	{r4, r5, r6, lr}
	
	usart_async_register_callback(&USART_0, USART_ASYNC_TXC_CB, serial_tx_cb);
 ba6:	4c07      	ldr	r4, [pc, #28]	; (bc4 <uart_init+0x20>)
 ba8:	4a07      	ldr	r2, [pc, #28]	; (bc8 <uart_init+0x24>)
 baa:	2101      	movs	r1, #1
 bac:	0020      	movs	r0, r4
 bae:	4d07      	ldr	r5, [pc, #28]	; (bcc <uart_init+0x28>)
 bb0:	47a8      	blx	r5
	usart_async_register_callback(&USART_0, USART_ASYNC_RXC_CB, serial_rx_cb);
 bb2:	4a07      	ldr	r2, [pc, #28]	; (bd0 <uart_init+0x2c>)
 bb4:	2100      	movs	r1, #0
 bb6:	0020      	movs	r0, r4
 bb8:	47a8      	blx	r5
	usart_async_enable(&USART_0);
 bba:	0020      	movs	r0, r4
 bbc:	4b05      	ldr	r3, [pc, #20]	; (bd4 <uart_init+0x30>)
 bbe:	4798      	blx	r3
	
}
 bc0:	bd70      	pop	{r4, r5, r6, pc}
 bc2:	46c0      	nop			; (mov r8, r8)
 bc4:	20000608 	.word	0x20000608
 bc8:	00000b09 	.word	0x00000b09
 bcc:	00000675 	.word	0x00000675
 bd0:	00000b0d 	.word	0x00000b0d
 bd4:	00000649 	.word	0x00000649

00000bd8 <main>:

int main(void)
{
 bd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
 bda:	4b28      	ldr	r3, [pc, #160]	; (c7c <main+0xa4>)
 bdc:	4798      	blx	r3
	uart_init();
 bde:	4b28      	ldr	r3, [pc, #160]	; (c80 <main+0xa8>)
 be0:	4798      	blx	r3
	

	/* Replace with your application code */
	while (1) {
		
		if(serial_receiving == 1)
 be2:	4f28      	ldr	r7, [pc, #160]	; (c84 <main+0xac>)
		{
			if(serial_complete == 1)
 be4:	4d28      	ldr	r5, [pc, #160]	; (c88 <main+0xb0>)
					if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f'){
						gpio_set_pin_level(LED2, false);
					}
		
				//copy message to tx buffer
				memcpy(&tx_buffer[14], &rx_buffer[0], SERIAL_BUF_SIZE);
 be6:	4e29      	ldr	r6, [pc, #164]	; (c8c <main+0xb4>)
 be8:	360e      	adds	r6, #14
 bea:	1d3c      	adds	r4, r7, #4
 bec:	e01c      	b.n	c28 <main+0x50>
					if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
 bee:	4b25      	ldr	r3, [pc, #148]	; (c84 <main+0xac>)
 bf0:	795b      	ldrb	r3, [r3, #5]
 bf2:	2b6e      	cmp	r3, #110	; 0x6e
 bf4:	d12e      	bne.n	c54 <main+0x7c>
	((Port *)hw)->Group[submodule_index].DIRTGL.reg = mask;
}

static inline void hri_port_set_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
 bf6:	2180      	movs	r1, #128	; 0x80
 bf8:	0409      	lsls	r1, r1, #16
 bfa:	332a      	adds	r3, #42	; 0x2a
 bfc:	22c0      	movs	r2, #192	; 0xc0
 bfe:	05d2      	lsls	r2, r2, #23
 c00:	50d1      	str	r1, [r2, r3]
 c02:	e027      	b.n	c54 <main+0x7c>
				memcpy(&tx_buffer[14], &rx_buffer[0], SERIAL_BUF_SIZE);
 c04:	22c8      	movs	r2, #200	; 0xc8
 c06:	0021      	movs	r1, r4
 c08:	0030      	movs	r0, r6
 c0a:	4b21      	ldr	r3, [pc, #132]	; (c90 <main+0xb8>)
 c0c:	4798      	blx	r3
				//print
				io_write(&USART_0.io, tx_buffer, total_bytes + 16);
 c0e:	234d      	movs	r3, #77	; 0x4d
 c10:	4a1d      	ldr	r2, [pc, #116]	; (c88 <main+0xb0>)
 c12:	5cd2      	ldrb	r2, [r2, r3]
 c14:	3210      	adds	r2, #16
 c16:	491d      	ldr	r1, [pc, #116]	; (c8c <main+0xb4>)
 c18:	481e      	ldr	r0, [pc, #120]	; (c94 <main+0xbc>)
 c1a:	4b1f      	ldr	r3, [pc, #124]	; (c98 <main+0xc0>)
 c1c:	4798      	blx	r3
				//clear memory
				memset(&rx_buffer, 0x00, SERIAL_BUF_SIZE);
 c1e:	22c8      	movs	r2, #200	; 0xc8
 c20:	2100      	movs	r1, #0
 c22:	0020      	movs	r0, r4
 c24:	4b1d      	ldr	r3, [pc, #116]	; (c9c <main+0xc4>)
 c26:	4798      	blx	r3
			if(serial_complete == 1)
 c28:	224c      	movs	r2, #76	; 0x4c
		if(serial_receiving == 1)
 c2a:	783b      	ldrb	r3, [r7, #0]
 c2c:	2b01      	cmp	r3, #1
 c2e:	d1fc      	bne.n	c2a <main+0x52>
			if(serial_complete == 1)
 c30:	5cab      	ldrb	r3, [r5, r2]
 c32:	2b01      	cmp	r3, #1
 c34:	d1f9      	bne.n	c2a <main+0x52>
				serial_receiving = 0;
 c36:	4b13      	ldr	r3, [pc, #76]	; (c84 <main+0xac>)
 c38:	2200      	movs	r2, #0
 c3a:	701a      	strb	r2, [r3, #0]
				serial_complete = 0;
 c3c:	214c      	movs	r1, #76	; 0x4c
 c3e:	4812      	ldr	r0, [pc, #72]	; (c88 <main+0xb0>)
 c40:	5442      	strb	r2, [r0, r1]
 c42:	2080      	movs	r0, #128	; 0x80
 c44:	03c0      	lsls	r0, r0, #15
 c46:	3298      	adds	r2, #152	; 0x98
 c48:	21c0      	movs	r1, #192	; 0xc0
 c4a:	05c9      	lsls	r1, r1, #23
 c4c:	5088      	str	r0, [r1, r2]
					if(rx_buffer[0] == 'o' && rx_buffer[1] == 'n'){
 c4e:	791b      	ldrb	r3, [r3, #4]
 c50:	2b6f      	cmp	r3, #111	; 0x6f
 c52:	d0cc      	beq.n	bee <main+0x16>
					if(rx_buffer[0] == 'o' && rx_buffer[1] == 'f' && rx_buffer[2] =='f'){
 c54:	4b0b      	ldr	r3, [pc, #44]	; (c84 <main+0xac>)
 c56:	791b      	ldrb	r3, [r3, #4]
 c58:	2b6f      	cmp	r3, #111	; 0x6f
 c5a:	d1d3      	bne.n	c04 <main+0x2c>
 c5c:	4b09      	ldr	r3, [pc, #36]	; (c84 <main+0xac>)
 c5e:	795b      	ldrb	r3, [r3, #5]
 c60:	2b66      	cmp	r3, #102	; 0x66
 c62:	d1cf      	bne.n	c04 <main+0x2c>
 c64:	4b07      	ldr	r3, [pc, #28]	; (c84 <main+0xac>)
 c66:	799b      	ldrb	r3, [r3, #6]
 c68:	2b66      	cmp	r3, #102	; 0x66
 c6a:	d1cb      	bne.n	c04 <main+0x2c>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
 c6c:	2180      	movs	r1, #128	; 0x80
 c6e:	0409      	lsls	r1, r1, #16
 c70:	332e      	adds	r3, #46	; 0x2e
 c72:	22c0      	movs	r2, #192	; 0xc0
 c74:	05d2      	lsls	r2, r2, #23
 c76:	50d1      	str	r1, [r2, r3]
 c78:	e7c4      	b.n	c04 <main+0x2c>
 c7a:	46c0      	nop			; (mov r8, r8)
 c7c:	0000011d 	.word	0x0000011d
 c80:	00000ba5 	.word	0x00000ba5
 c84:	20000538 	.word	0x20000538
 c88:	200005b8 	.word	0x200005b8
 c8c:	20000000 	.word	0x20000000
 c90:	00000ce9 	.word	0x00000ce9
 c94:	20000608 	.word	0x20000608
 c98:	00000385 	.word	0x00000385
 c9c:	00000d6d 	.word	0x00000d6d

00000ca0 <__libc_init_array>:
 ca0:	b570      	push	{r4, r5, r6, lr}
 ca2:	4e0d      	ldr	r6, [pc, #52]	; (cd8 <__libc_init_array+0x38>)
 ca4:	4d0d      	ldr	r5, [pc, #52]	; (cdc <__libc_init_array+0x3c>)
 ca6:	2400      	movs	r4, #0
 ca8:	1bad      	subs	r5, r5, r6
 caa:	10ad      	asrs	r5, r5, #2
 cac:	d005      	beq.n	cba <__libc_init_array+0x1a>
 cae:	00a3      	lsls	r3, r4, #2
 cb0:	58f3      	ldr	r3, [r6, r3]
 cb2:	3401      	adds	r4, #1
 cb4:	4798      	blx	r3
 cb6:	42a5      	cmp	r5, r4
 cb8:	d1f9      	bne.n	cae <__libc_init_array+0xe>
 cba:	f000 f989 	bl	fd0 <_init>
 cbe:	4e08      	ldr	r6, [pc, #32]	; (ce0 <__libc_init_array+0x40>)
 cc0:	4d08      	ldr	r5, [pc, #32]	; (ce4 <__libc_init_array+0x44>)
 cc2:	2400      	movs	r4, #0
 cc4:	1bad      	subs	r5, r5, r6
 cc6:	10ad      	asrs	r5, r5, #2
 cc8:	d005      	beq.n	cd6 <__libc_init_array+0x36>
 cca:	00a3      	lsls	r3, r4, #2
 ccc:	58f3      	ldr	r3, [r6, r3]
 cce:	3401      	adds	r4, #1
 cd0:	4798      	blx	r3
 cd2:	42a5      	cmp	r5, r4
 cd4:	d1f9      	bne.n	cca <__libc_init_array+0x2a>
 cd6:	bd70      	pop	{r4, r5, r6, pc}
 cd8:	00000fdc 	.word	0x00000fdc
 cdc:	00000fdc 	.word	0x00000fdc
 ce0:	00000fdc 	.word	0x00000fdc
 ce4:	00000fe4 	.word	0x00000fe4

00000ce8 <memcpy>:
 ce8:	b5f0      	push	{r4, r5, r6, r7, lr}
 cea:	0005      	movs	r5, r0
 cec:	2a0f      	cmp	r2, #15
 cee:	d92f      	bls.n	d50 <memcpy+0x68>
 cf0:	000b      	movs	r3, r1
 cf2:	4303      	orrs	r3, r0
 cf4:	079b      	lsls	r3, r3, #30
 cf6:	d134      	bne.n	d62 <memcpy+0x7a>
 cf8:	0016      	movs	r6, r2
 cfa:	000c      	movs	r4, r1
 cfc:	0003      	movs	r3, r0
 cfe:	3e10      	subs	r6, #16
 d00:	0935      	lsrs	r5, r6, #4
 d02:	3501      	adds	r5, #1
 d04:	012d      	lsls	r5, r5, #4
 d06:	1945      	adds	r5, r0, r5
 d08:	6827      	ldr	r7, [r4, #0]
 d0a:	601f      	str	r7, [r3, #0]
 d0c:	6867      	ldr	r7, [r4, #4]
 d0e:	605f      	str	r7, [r3, #4]
 d10:	68a7      	ldr	r7, [r4, #8]
 d12:	609f      	str	r7, [r3, #8]
 d14:	68e7      	ldr	r7, [r4, #12]
 d16:	3410      	adds	r4, #16
 d18:	60df      	str	r7, [r3, #12]
 d1a:	3310      	adds	r3, #16
 d1c:	429d      	cmp	r5, r3
 d1e:	d1f3      	bne.n	d08 <memcpy+0x20>
 d20:	230f      	movs	r3, #15
 d22:	439e      	bics	r6, r3
 d24:	3610      	adds	r6, #16
 d26:	1985      	adds	r5, r0, r6
 d28:	1989      	adds	r1, r1, r6
 d2a:	4013      	ands	r3, r2
 d2c:	2b03      	cmp	r3, #3
 d2e:	d91a      	bls.n	d66 <memcpy+0x7e>
 d30:	1f1e      	subs	r6, r3, #4
 d32:	2300      	movs	r3, #0
 d34:	08b4      	lsrs	r4, r6, #2
 d36:	3401      	adds	r4, #1
 d38:	00a4      	lsls	r4, r4, #2
 d3a:	58cf      	ldr	r7, [r1, r3]
 d3c:	50ef      	str	r7, [r5, r3]
 d3e:	3304      	adds	r3, #4
 d40:	42a3      	cmp	r3, r4
 d42:	d1fa      	bne.n	d3a <memcpy+0x52>
 d44:	2403      	movs	r4, #3
 d46:	43a6      	bics	r6, r4
 d48:	1d33      	adds	r3, r6, #4
 d4a:	4022      	ands	r2, r4
 d4c:	18c9      	adds	r1, r1, r3
 d4e:	18ed      	adds	r5, r5, r3
 d50:	2a00      	cmp	r2, #0
 d52:	d005      	beq.n	d60 <memcpy+0x78>
 d54:	2300      	movs	r3, #0
 d56:	5ccc      	ldrb	r4, [r1, r3]
 d58:	54ec      	strb	r4, [r5, r3]
 d5a:	3301      	adds	r3, #1
 d5c:	4293      	cmp	r3, r2
 d5e:	d1fa      	bne.n	d56 <memcpy+0x6e>
 d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 d62:	0005      	movs	r5, r0
 d64:	e7f6      	b.n	d54 <memcpy+0x6c>
 d66:	001a      	movs	r2, r3
 d68:	e7f2      	b.n	d50 <memcpy+0x68>
 d6a:	46c0      	nop			; (mov r8, r8)

00000d6c <memset>:
 d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 d6e:	0783      	lsls	r3, r0, #30
 d70:	d043      	beq.n	dfa <memset+0x8e>
 d72:	1e54      	subs	r4, r2, #1
 d74:	2a00      	cmp	r2, #0
 d76:	d03f      	beq.n	df8 <memset+0x8c>
 d78:	b2ce      	uxtb	r6, r1
 d7a:	0002      	movs	r2, r0
 d7c:	2503      	movs	r5, #3
 d7e:	e002      	b.n	d86 <memset+0x1a>
 d80:	001a      	movs	r2, r3
 d82:	3c01      	subs	r4, #1
 d84:	d338      	bcc.n	df8 <memset+0x8c>
 d86:	1c53      	adds	r3, r2, #1
 d88:	7016      	strb	r6, [r2, #0]
 d8a:	422b      	tst	r3, r5
 d8c:	d1f8      	bne.n	d80 <memset+0x14>
 d8e:	2c03      	cmp	r4, #3
 d90:	d92a      	bls.n	de8 <memset+0x7c>
 d92:	22ff      	movs	r2, #255	; 0xff
 d94:	400a      	ands	r2, r1
 d96:	0215      	lsls	r5, r2, #8
 d98:	4315      	orrs	r5, r2
 d9a:	042a      	lsls	r2, r5, #16
 d9c:	4315      	orrs	r5, r2
 d9e:	2c0f      	cmp	r4, #15
 da0:	d914      	bls.n	dcc <memset+0x60>
 da2:	0027      	movs	r7, r4
 da4:	001a      	movs	r2, r3
 da6:	3f10      	subs	r7, #16
 da8:	093e      	lsrs	r6, r7, #4
 daa:	3601      	adds	r6, #1
 dac:	0136      	lsls	r6, r6, #4
 dae:	199e      	adds	r6, r3, r6
 db0:	6015      	str	r5, [r2, #0]
 db2:	6055      	str	r5, [r2, #4]
 db4:	6095      	str	r5, [r2, #8]
 db6:	60d5      	str	r5, [r2, #12]
 db8:	3210      	adds	r2, #16
 dba:	4296      	cmp	r6, r2
 dbc:	d1f8      	bne.n	db0 <memset+0x44>
 dbe:	220f      	movs	r2, #15
 dc0:	4397      	bics	r7, r2
 dc2:	3710      	adds	r7, #16
 dc4:	19db      	adds	r3, r3, r7
 dc6:	4014      	ands	r4, r2
 dc8:	2c03      	cmp	r4, #3
 dca:	d90d      	bls.n	de8 <memset+0x7c>
 dcc:	001a      	movs	r2, r3
 dce:	1f27      	subs	r7, r4, #4
 dd0:	08be      	lsrs	r6, r7, #2
 dd2:	3601      	adds	r6, #1
 dd4:	00b6      	lsls	r6, r6, #2
 dd6:	199e      	adds	r6, r3, r6
 dd8:	c220      	stmia	r2!, {r5}
 dda:	42b2      	cmp	r2, r6
 ddc:	d1fc      	bne.n	dd8 <memset+0x6c>
 dde:	2203      	movs	r2, #3
 de0:	4397      	bics	r7, r2
 de2:	3704      	adds	r7, #4
 de4:	19db      	adds	r3, r3, r7
 de6:	4014      	ands	r4, r2
 de8:	2c00      	cmp	r4, #0
 dea:	d005      	beq.n	df8 <memset+0x8c>
 dec:	b2c9      	uxtb	r1, r1
 dee:	191c      	adds	r4, r3, r4
 df0:	7019      	strb	r1, [r3, #0]
 df2:	3301      	adds	r3, #1
 df4:	429c      	cmp	r4, r3
 df6:	d1fb      	bne.n	df0 <memset+0x84>
 df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 dfa:	0014      	movs	r4, r2
 dfc:	0003      	movs	r3, r0
 dfe:	e7c6      	b.n	d8e <memset+0x22>

00000e00 <register_fini>:
 e00:	4b03      	ldr	r3, [pc, #12]	; (e10 <register_fini+0x10>)
 e02:	b510      	push	{r4, lr}
 e04:	2b00      	cmp	r3, #0
 e06:	d002      	beq.n	e0e <register_fini+0xe>
 e08:	4802      	ldr	r0, [pc, #8]	; (e14 <register_fini+0x14>)
 e0a:	f000 f805 	bl	e18 <atexit>
 e0e:	bd10      	pop	{r4, pc}
 e10:	00000000 	.word	0x00000000
 e14:	00000e29 	.word	0x00000e29

00000e18 <atexit>:
 e18:	b510      	push	{r4, lr}
 e1a:	0001      	movs	r1, r0
 e1c:	2300      	movs	r3, #0
 e1e:	2200      	movs	r2, #0
 e20:	2000      	movs	r0, #0
 e22:	f000 f81f 	bl	e64 <__register_exitproc>
 e26:	bd10      	pop	{r4, pc}

00000e28 <__libc_fini_array>:
 e28:	b570      	push	{r4, r5, r6, lr}
 e2a:	4b09      	ldr	r3, [pc, #36]	; (e50 <__libc_fini_array+0x28>)
 e2c:	4c09      	ldr	r4, [pc, #36]	; (e54 <__libc_fini_array+0x2c>)
 e2e:	1ae4      	subs	r4, r4, r3
 e30:	10a4      	asrs	r4, r4, #2
 e32:	d009      	beq.n	e48 <__libc_fini_array+0x20>
 e34:	4a08      	ldr	r2, [pc, #32]	; (e58 <__libc_fini_array+0x30>)
 e36:	18a5      	adds	r5, r4, r2
 e38:	00ad      	lsls	r5, r5, #2
 e3a:	18ed      	adds	r5, r5, r3
 e3c:	682b      	ldr	r3, [r5, #0]
 e3e:	3c01      	subs	r4, #1
 e40:	4798      	blx	r3
 e42:	3d04      	subs	r5, #4
 e44:	2c00      	cmp	r4, #0
 e46:	d1f9      	bne.n	e3c <__libc_fini_array+0x14>
 e48:	f000 f8cc 	bl	fe4 <_fini>
 e4c:	bd70      	pop	{r4, r5, r6, pc}
 e4e:	46c0      	nop			; (mov r8, r8)
 e50:	00000ff0 	.word	0x00000ff0
 e54:	00000ff4 	.word	0x00000ff4
 e58:	3fffffff 	.word	0x3fffffff

00000e5c <__retarget_lock_acquire_recursive>:
 e5c:	4770      	bx	lr
 e5e:	46c0      	nop			; (mov r8, r8)

00000e60 <__retarget_lock_release_recursive>:
 e60:	4770      	bx	lr
 e62:	46c0      	nop			; (mov r8, r8)

00000e64 <__register_exitproc>:
 e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 e66:	464e      	mov	r6, r9
 e68:	4645      	mov	r5, r8
 e6a:	46de      	mov	lr, fp
 e6c:	4657      	mov	r7, sl
 e6e:	b5e0      	push	{r5, r6, r7, lr}
 e70:	4d36      	ldr	r5, [pc, #216]	; (f4c <__register_exitproc+0xe8>)
 e72:	b083      	sub	sp, #12
 e74:	0006      	movs	r6, r0
 e76:	6828      	ldr	r0, [r5, #0]
 e78:	4698      	mov	r8, r3
 e7a:	000f      	movs	r7, r1
 e7c:	4691      	mov	r9, r2
 e7e:	f7ff ffed 	bl	e5c <__retarget_lock_acquire_recursive>
 e82:	4b33      	ldr	r3, [pc, #204]	; (f50 <__register_exitproc+0xec>)
 e84:	681c      	ldr	r4, [r3, #0]
 e86:	23a4      	movs	r3, #164	; 0xa4
 e88:	005b      	lsls	r3, r3, #1
 e8a:	58e0      	ldr	r0, [r4, r3]
 e8c:	2800      	cmp	r0, #0
 e8e:	d052      	beq.n	f36 <__register_exitproc+0xd2>
 e90:	6843      	ldr	r3, [r0, #4]
 e92:	2b1f      	cmp	r3, #31
 e94:	dc13      	bgt.n	ebe <__register_exitproc+0x5a>
 e96:	1c5a      	adds	r2, r3, #1
 e98:	9201      	str	r2, [sp, #4]
 e9a:	2e00      	cmp	r6, #0
 e9c:	d128      	bne.n	ef0 <__register_exitproc+0x8c>
 e9e:	9a01      	ldr	r2, [sp, #4]
 ea0:	3302      	adds	r3, #2
 ea2:	009b      	lsls	r3, r3, #2
 ea4:	6042      	str	r2, [r0, #4]
 ea6:	501f      	str	r7, [r3, r0]
 ea8:	6828      	ldr	r0, [r5, #0]
 eaa:	f7ff ffd9 	bl	e60 <__retarget_lock_release_recursive>
 eae:	2000      	movs	r0, #0
 eb0:	b003      	add	sp, #12
 eb2:	bc3c      	pop	{r2, r3, r4, r5}
 eb4:	4690      	mov	r8, r2
 eb6:	4699      	mov	r9, r3
 eb8:	46a2      	mov	sl, r4
 eba:	46ab      	mov	fp, r5
 ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 ebe:	4b25      	ldr	r3, [pc, #148]	; (f54 <__register_exitproc+0xf0>)
 ec0:	2b00      	cmp	r3, #0
 ec2:	d03d      	beq.n	f40 <__register_exitproc+0xdc>
 ec4:	20c8      	movs	r0, #200	; 0xc8
 ec6:	0040      	lsls	r0, r0, #1
 ec8:	e000      	b.n	ecc <__register_exitproc+0x68>
 eca:	bf00      	nop
 ecc:	2800      	cmp	r0, #0
 ece:	d037      	beq.n	f40 <__register_exitproc+0xdc>
 ed0:	22a4      	movs	r2, #164	; 0xa4
 ed2:	2300      	movs	r3, #0
 ed4:	0052      	lsls	r2, r2, #1
 ed6:	58a1      	ldr	r1, [r4, r2]
 ed8:	6043      	str	r3, [r0, #4]
 eda:	6001      	str	r1, [r0, #0]
 edc:	50a0      	str	r0, [r4, r2]
 ede:	3240      	adds	r2, #64	; 0x40
 ee0:	5083      	str	r3, [r0, r2]
 ee2:	3204      	adds	r2, #4
 ee4:	5083      	str	r3, [r0, r2]
 ee6:	3301      	adds	r3, #1
 ee8:	9301      	str	r3, [sp, #4]
 eea:	2300      	movs	r3, #0
 eec:	2e00      	cmp	r6, #0
 eee:	d0d6      	beq.n	e9e <__register_exitproc+0x3a>
 ef0:	009a      	lsls	r2, r3, #2
 ef2:	4692      	mov	sl, r2
 ef4:	4482      	add	sl, r0
 ef6:	464a      	mov	r2, r9
 ef8:	2188      	movs	r1, #136	; 0x88
 efa:	4654      	mov	r4, sl
 efc:	5062      	str	r2, [r4, r1]
 efe:	22c4      	movs	r2, #196	; 0xc4
 f00:	0052      	lsls	r2, r2, #1
 f02:	4691      	mov	r9, r2
 f04:	4481      	add	r9, r0
 f06:	464a      	mov	r2, r9
 f08:	3987      	subs	r1, #135	; 0x87
 f0a:	4099      	lsls	r1, r3
 f0c:	6812      	ldr	r2, [r2, #0]
 f0e:	468b      	mov	fp, r1
 f10:	430a      	orrs	r2, r1
 f12:	4694      	mov	ip, r2
 f14:	464a      	mov	r2, r9
 f16:	4661      	mov	r1, ip
 f18:	6011      	str	r1, [r2, #0]
 f1a:	2284      	movs	r2, #132	; 0x84
 f1c:	4641      	mov	r1, r8
 f1e:	0052      	lsls	r2, r2, #1
 f20:	50a1      	str	r1, [r4, r2]
 f22:	2e02      	cmp	r6, #2
 f24:	d1bb      	bne.n	e9e <__register_exitproc+0x3a>
 f26:	0002      	movs	r2, r0
 f28:	465c      	mov	r4, fp
 f2a:	328d      	adds	r2, #141	; 0x8d
 f2c:	32ff      	adds	r2, #255	; 0xff
 f2e:	6811      	ldr	r1, [r2, #0]
 f30:	430c      	orrs	r4, r1
 f32:	6014      	str	r4, [r2, #0]
 f34:	e7b3      	b.n	e9e <__register_exitproc+0x3a>
 f36:	0020      	movs	r0, r4
 f38:	304d      	adds	r0, #77	; 0x4d
 f3a:	30ff      	adds	r0, #255	; 0xff
 f3c:	50e0      	str	r0, [r4, r3]
 f3e:	e7a7      	b.n	e90 <__register_exitproc+0x2c>
 f40:	6828      	ldr	r0, [r5, #0]
 f42:	f7ff ff8d 	bl	e60 <__retarget_lock_release_recursive>
 f46:	2001      	movs	r0, #1
 f48:	4240      	negs	r0, r0
 f4a:	e7b1      	b.n	eb0 <__register_exitproc+0x4c>
 f4c:	20000500 	.word	0x20000500
 f50:	00000fcc 	.word	0x00000fcc
 f54:	00000000 	.word	0x00000000
 f58:	682f2e2e 	.word	0x682f2e2e
 f5c:	732f6c61 	.word	0x732f6c61
 f60:	682f6372 	.word	0x682f6372
 f64:	695f6c61 	.word	0x695f6c61
 f68:	00632e6f 	.word	0x00632e6f
 f6c:	682f2e2e 	.word	0x682f2e2e
 f70:	732f6c61 	.word	0x732f6c61
 f74:	682f6372 	.word	0x682f6372
 f78:	755f6c61 	.word	0x755f6c61
 f7c:	74726173 	.word	0x74726173
 f80:	7973615f 	.word	0x7973615f
 f84:	632e636e 	.word	0x632e636e
 f88:	00000000 	.word	0x00000000
 f8c:	682f2e2e 	.word	0x682f2e2e
 f90:	752f6c61 	.word	0x752f6c61
 f94:	736c6974 	.word	0x736c6974
 f98:	6372732f 	.word	0x6372732f
 f9c:	6974752f 	.word	0x6974752f
 fa0:	725f736c 	.word	0x725f736c
 fa4:	62676e69 	.word	0x62676e69
 fa8:	65666675 	.word	0x65666675
 fac:	00632e72 	.word	0x00632e72
 fb0:	682f2e2e 	.word	0x682f2e2e
 fb4:	732f6c70 	.word	0x732f6c70
 fb8:	6f637265 	.word	0x6f637265
 fbc:	70682f6d 	.word	0x70682f6d
 fc0:	65735f6c 	.word	0x65735f6c
 fc4:	6d6f6372 	.word	0x6d6f6372
 fc8:	0000632e 	.word	0x0000632e

00000fcc <_global_impure_ptr>:
 fcc:	200000d8                                ... 

00000fd0 <_init>:
 fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 fd2:	46c0      	nop			; (mov r8, r8)
 fd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 fd6:	bc08      	pop	{r3}
 fd8:	469e      	mov	lr, r3
 fda:	4770      	bx	lr

00000fdc <__init_array_start>:
 fdc:	00000e01 	.word	0x00000e01

00000fe0 <__frame_dummy_init_array_entry>:
 fe0:	000000e5                                ....

00000fe4 <_fini>:
 fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 fe6:	46c0      	nop			; (mov r8, r8)
 fe8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 fea:	bc08      	pop	{r3}
 fec:	469e      	mov	lr, r3
 fee:	4770      	bx	lr

00000ff0 <__fini_array_start>:
 ff0:	000000bd 	.word	0x000000bd
